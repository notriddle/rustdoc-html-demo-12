(function() {
    var type_impls = Object.fromEntries([["rustc_resolve",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3CT%3E-for-RefOrMut%3C'a,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_resolve/lib.rs.html#2517-2521\">Source</a><a href=\"#impl-AsRef%3CT%3E-for-RefOrMut%3C'a,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;T&gt; for <a class=\"struct\" href=\"rustc_resolve/ref_mut/struct.RefOrMut.html\" title=\"struct rustc_resolve::ref_mut::RefOrMut\">RefOrMut</a>&lt;'a, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_resolve/lib.rs.html#2518-2520\">Source</a><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a></h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<T>","rustc_resolve::CmResolver"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deref-for-RefOrMut%3C'a,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_resolve/lib.rs.html#2509-2515\">Source</a><a href=\"#impl-Deref-for-RefOrMut%3C'a,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a> for <a class=\"struct\" href=\"rustc_resolve/ref_mut/struct.RefOrMut.html\" title=\"struct rustc_resolve::ref_mut::RefOrMut\">RefOrMut</a>&lt;'a, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Target\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/rustc_resolve/lib.rs.html#2510\">Source</a><a href=\"#associatedtype.Target\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html#associatedtype.Target\" class=\"associatedtype\">Target</a> = T</h4></section></summary><div class='docblock'>The resulting type after dereferencing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/rustc_resolve/lib.rs.html#2512-2514\">Source</a><a href=\"#method.deref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html#tymethod.deref\" class=\"fn\">deref</a>(&amp;self) -&gt; &amp;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html#associatedtype.Target\" title=\"type core::ops::deref::Deref::Target\">Target</a></h4></section></summary><div class='docblock'>Dereferences the value.</div></details></div></details>","Deref","rustc_resolve::CmResolver"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RefOrMut%3C'a,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/rustc_resolve/lib.rs.html#2523-2550\">Source</a><a href=\"#impl-RefOrMut%3C'a,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; <a class=\"struct\" href=\"rustc_resolve/ref_mut/struct.RefOrMut.html\" title=\"struct rustc_resolve::ref_mut::RefOrMut\">RefOrMut</a>&lt;'a, T&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_resolve/lib.rs.html#2524-2526\">Source</a><h4 class=\"code-header\">pub(crate) fn <a href=\"rustc_resolve/ref_mut/struct.RefOrMut.html#tymethod.new\" class=\"fn\">new</a>(p: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'a mut T</a>, mutable: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>) -&gt; Self</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.reborrow\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_resolve/lib.rs.html#2529-2531\">Source</a><h4 class=\"code-header\">pub(crate) fn <a href=\"rustc_resolve/ref_mut/struct.RefOrMut.html#tymethod.reborrow\" class=\"fn\">reborrow</a>(&amp;mut self) -&gt; <a class=\"struct\" href=\"rustc_resolve/ref_mut/struct.RefOrMut.html\" title=\"struct rustc_resolve::ref_mut::RefOrMut\">RefOrMut</a>&lt;'_, T&gt;</h4></section></summary><div class=\"docblock\"><p>This is needed because this wraps a <code>&amp;mut T</code> and is therefore not <code>Copy</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_resolve/lib.rs.html#2538-2543\">Source</a><h4 class=\"code-header\">pub(crate) fn <a href=\"rustc_resolve/ref_mut/struct.RefOrMut.html#tymethod.get_mut\" class=\"fn\">get_mut</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut T</a></h4></section></summary><div class=\"docblock\"><p>Returns a mutable reference to the inner value if allowed.</p>\n<h5 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">§</a>Panics</h5>\n<p>Panics if the <code>mutable</code> flag is false.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_mut_unchecked\" class=\"method\"><a class=\"src rightside\" href=\"src/rustc_resolve/lib.rs.html#2547-2549\">Source</a><h4 class=\"code-header\">pub(crate) fn <a href=\"rustc_resolve/ref_mut/struct.RefOrMut.html#tymethod.get_mut_unchecked\" class=\"fn\">get_mut_unchecked</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut T</a></h4></section></summary><div class=\"docblock\"><p>Returns a mutable reference to the inner value without checking if\nit’s in a mutable state.</p>\n</div></details></div></details>",0,"rustc_resolve::CmResolver"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[6481]}
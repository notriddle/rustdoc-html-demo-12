(function() {
    var type_impls = Object.fromEntries([["rustc_borrowck",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-SparseBitMatrix%3CR,+C%3E\" class=\"impl\"><a href=\"#impl-Clone-for-SparseBitMatrix%3CR,+C%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;R, C&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for SparseBitMatrix&lt;R, C&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + Idx,\n    C: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + Idx,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; SparseBitMatrix&lt;R, C&gt;</h4></section></summary><div class='docblock'>Returns a duplicate of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#246-248\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","rustc_borrowck::polonius::LiveLoans"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-SparseBitMatrix%3CR,+C%3E\" class=\"impl\"><a href=\"#impl-Debug-for-SparseBitMatrix%3CR,+C%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;R, C&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for SparseBitMatrix&lt;R, C&gt;<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + Idx,\n    C: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + Idx,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","rustc_borrowck::polonius::LiveLoans"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SparseBitMatrix%3CR,+C%3E\" class=\"impl\"><a href=\"#impl-SparseBitMatrix%3CR,+C%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;R, C&gt; SparseBitMatrix&lt;R, C&gt;<div class=\"where\">where\n    R: Idx,\n    C: Idx,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">new</a>(num_columns: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; SparseBitMatrix&lt;R, C&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a new empty sparse bit matrix with no rows or columns.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">insert</a>(&amp;mut self, row: R, column: C) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Sets the cell at <code>(row, column)</code> to true. Put another way, insert\n<code>column</code> to the bitset for <code>row</code>.</p>\n<p>Returns <code>true</code> if this changed the matrix.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">remove</a>(&amp;mut self, row: R, column: C) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Sets the cell at <code>(row, column)</code> to false. Put another way, delete\n<code>column</code> from the bitset for <code>row</code>. Has no effect if <code>row</code> does not\nexist.</p>\n<p>Returns <code>true</code> if this changed the matrix.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clear</a>(&amp;mut self, row: R)</h4></section></summary><div class=\"docblock\"><p>Sets all columns at <code>row</code> to false. Has no effect if <code>row</code> does\nnot exist.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">contains</a>(&amp;self, row: R, column: C) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Do the bits from <code>row</code> contain <code>column</code>? Put another way, is\nthe matrix cell at <code>(row, column)</code> true?  Put yet another way,\nif the matrix represents (transitive) reachability, can\n<code>row</code> reach <code>column</code>?</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.union_rows\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">union_rows</a>(&amp;mut self, read: R, write: R) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Adds the bits from row <code>read</code> to the bits from row <code>write</code>, and\nreturns <code>true</code> if anything changed.</p>\n<p>This is used when computing transitive reachability because if\nyou have an edge <code>write -&gt; read</code>, because in that case\n<code>write</code> can reach everything that <code>read</code> can (and\npotentially more).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert_all_into_row\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">insert_all_into_row</a>(&amp;mut self, row: R)</h4></section></summary><div class=\"docblock\"><p>Insert all bits in the given row.</p>\n</div></details><section id=\"method.rows\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">rows</a>(&amp;self) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = R&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter</a>(&amp;self, row: R) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = C&gt;</h4></section></summary><div class=\"docblock\"><p>Iterates through all the columns set to true in a given row of\nthe matrix.</p>\n</div></details><section id=\"method.row\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">row</a>(&amp;self, row: R) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;DenseBitSet&lt;C&gt;&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.intersect_row\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">intersect_row</a>&lt;Set&gt;(&amp;mut self, row: R, set: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Set</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    DenseBitSet&lt;C&gt;: BitRelations&lt;Set&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Intersects <code>row</code> with <code>set</code>. <code>set</code> can be either <code>DenseBitSet</code> or\n<code>ChunkedBitSet</code>. Has no effect if <code>row</code> does not exist.</p>\n<p>Returns true if the row was changed.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.subtract_row\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">subtract_row</a>&lt;Set&gt;(&amp;mut self, row: R, set: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Set</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    DenseBitSet&lt;C&gt;: BitRelations&lt;Set&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Subtracts <code>set</code> from <code>row</code>. <code>set</code> can be either <code>DenseBitSet</code> or\n<code>ChunkedBitSet</code>. Has no effect if <code>row</code> does not exist.</p>\n<p>Returns true if the row was changed.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.union_row\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">union_row</a>&lt;Set&gt;(&amp;mut self, row: R, set: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Set</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    DenseBitSet&lt;C&gt;: BitRelations&lt;Set&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Unions <code>row</code> with <code>set</code>. <code>set</code> can be either <code>DenseBitSet</code> or\n<code>ChunkedBitSet</code>.</p>\n<p>Returns true if the row was changed.</p>\n</div></details></div></details>",0,"rustc_borrowck::polonius::LiveLoans"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[11794]}
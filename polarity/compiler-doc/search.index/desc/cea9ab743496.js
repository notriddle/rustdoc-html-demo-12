rd_("DdDepending on the kind of <code>InstanceKind</code>, the MIR body \xe2\x80\xa6CmFor each arm, a set of indices of arms above it that have \xe2\x80\xa60DcTargets the ARMv5TE, with code as <code>a32</code> code by default.CcCreates a static <code>JobRef</code> from this job.Df<code>match &lt;cond&gt; { true =&gt; {} _ =&gt; &lt;then&gt; }</code>EfReturns the <code>DefId</code> of the <code>AsyncGenPending</code> lang item if it \xe2\x80\xa6CdLoad the internal atomic memory cells if they exist.DoUsed to generate new <code>AttrId</code>s. Every <code>AttrId</code> is unique.CjAdd a new set of predicates to the caller_bounds of an \xe2\x80\xa6CmEmit an error when encountering two or more variants in a \xe2\x80\xa6CcCalled before a basic block terminator is executed.0BbDEPRECATED LINT: BLACKLISTED_NAME.0CmA list of thread ids blocked because the buffer was full. \xe2\x80\xa6BoA list of thread ids blocked on eventfd::write.CaThe liveness data computed during MIR typeck: \xe2\x80\xa6CeThe regions that outlive free regions are used to \xe2\x80\xa6ChAdds the flags/depth from a set of types that appear \xe2\x80\xa6DkReturns true if the set of borrowers of <code>borrowed</code> living at \xe2\x80\xa6CmTrack information about the usefulness of branch patterns \xe2\x80\xa6CnThe destination of the loop/block expression itself (i.e., \xe2\x80\xa6DiBuilds drops for <code>pop_scope</code> and <code>leave_top_scope</code>.CbpsABI-mandated alignment for a vector type, if anyChCheck if the source is call expression and the first \xe2\x80\xa6CoReturns <code>true</code> if this pass can be overridden by \xe2\x80\xa6DgReturns <code>true</code> if the token can appear at the start of a \xe2\x80\xa6CmIf false, warning-level lints are suppressed. (rustc: see \xe2\x80\xa6CnCanonicalizes the goal remembering the original values for \xe2\x80\xa6CgThe span of the use resulting in capture kind Check \xe2\x80\xa6CcReturns <code>false</code> if an error was emitted.CjReturns CLI inconsistencies to emit errors: individual \xe2\x80\xa6CkCheck some basic consistency of the current target. For \xe2\x80\xa6EfType check assignment expression <code>expr</code> of form <code>lhs = rhs</code>. \xe2\x80\xa6DiThis ensures that items can only be <code>unsafe</code> (or unmarked) \xe2\x80\xa6Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6000000ClChecks that parameters don\xe2\x80\x99t use patterns. Mirrors the \xe2\x80\xa6DhChecks <code>rhs</code> as part of the RHS of a macro definition and \xe2\x80\xa6ClChecks if the referenced source text satisfies the given \xe2\x80\xa6DdValidate that <code>ProjectionCandidate</code>s created for this \xe2\x80\xa64444444DfAll the chunks have a chunk_domain_size of <code>CHUNK_BITS</code> \xe2\x80\xa6CjGiven an floating-point operation and a floating-point \xe2\x80\xa6BdClear excess bits in the final word.DjWe don\xe2\x80\x99t want to directly use <code>ty_to_string</code> for closures \xe2\x80\xa6CjContains the data for evaluating the effect of feature \xe2\x80\xa60BjObtain the actual discriminant of a value.CnSets the discriminant for a new value of the given case of \xe2\x80\xa6ClCalculates the value that needs to be stored to mark the \xe2\x80\xa6DdTransmutes the <code>src</code> value to the destination type by \xe2\x80\xa6CkFor defaulted traits, we use a co-inductive strategy to \xe2\x80\xa6DhEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</codebProduce a result of type <code>Self::Output</code> from <code>iter</code>. The \xe2\x80\xa611111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111101111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111101111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111CbCollect all monomorphized items reachable from \xe2\x80\xa6BaCollects additional data of link.BdCollects all necessary data of link.DeCall the query <code>tcx.compare_impl_item()</code> directly instead.CnThis takes the def-id of an associated item from a impl of \xe2\x80\xa6000000ClFinds out if there\xe2\x80\x99s a path to the compiler root (aka. \xe2\x80\xa6CfChecking that constant values used in types can be \xe2\x80\xa6CmConvenience helper to make a literal-like constant from a \xe2\x80\xa6CeReturns the number of chars that match from the startDjUsed solely by the <code>count</code> meta-variable expression, counts \xe2\x80\xa6CmScans through a function\xe2\x80\x99s MIR after MIR optimizations, \xe2\x80\xa6000000ChQuery implementation for <code>coverage_ids_info</code>.CjWhat kind of goal we\xe2\x80\x99re currently computing, see the \xe2\x80\xa60BoGet the query information from the TLS context.CkThe current self item if inside an ADT (used for better \xe2\x80\xa6ClThe current self type if inside an impl (used for better \xe2\x80\xa6C`The trait that the current context can refer to.ChCreate an error that corresponds to the term kind in \xe2\x80\xa6CiConvert a place into the offset it starts at, for the \xe2\x80\xa6EgDeclares a type named <code>$name</code> which implements <code>LintPass</code>. To \xe2\x80\xa60BcDeclare a function with a SimpleCx.CoGets an English article for the <code>TyCtxt::def_descr</code>.CnThis function is very slow, as it iterates over the entire \xe2\x80\xa6DiFor every definition in this crate, maps its <code>DefPathHash</code> \xe2\x80\xa6CmInternal state: the ref-mutability of the default binding \xe2\x80\xa6CmConsider expressions containing potential side effects as \xe2\x80\xa6BeResolution of mixing rlibs and dylibsCnType definitions for learning about the dependency formats \xe2\x80\xa6FcThe <code>Span</code> of the <code>Target</code> associated type in the <code>Deref</code> impl \xe2\x80\xa60CgDestructures array, ADT or tuple constants into the \xe2\x80\xa60000000CmThe list of disallowed macros, written as fully qualified \xe2\x80\xa60EhReturns the <code>DefId</code> of the <code>discriminant_type</code> lang item if it \xe2\x80\xa6DjName of the crate to which <code>$crate</code> with this context would \xe2\x80\xa6ClType to use for outputs that are discarded. It doesn\xe2\x80\x99t \xe2\x80\xa6De<code>-Zdump-mir=polonius</code> dumps MIR annotated with NLL and \xe2\x80\xa6Cm\xe2\x80\x9cDyn-compatibility\xe2\x80\x9d refers to the ability for a trait \xe2\x80\xa6DgThis takes a valid <code>self</code> receiver type and extracts the \xe2\x80\xa6DdTranslate <code>message</code> eagerly with <code>args</code> to \xe2\x80\xa60CkFluent variables are not namespaced from each other, so \xe2\x80\xa6Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6000000CjFor each DepNode, stores the list of edges originating \xe2\x80\xa60ClStarting at the given edition, default to the given lint \xe2\x80\xa60EhReturns the <code>DefId</code> of the <code>eh_catch_typeinfo</code> lang item if it \xe2\x80\xa6CkEmit polonius facts for variable defs, uses, drops, and \xe2\x80\xa6CkProduces the actual NLL + Polonius MIR sections to emit \xe2\x80\xa6DhEmit the diagnostic unless <code>delay</code> is true, in which case \xe2\x80\xa6CgWe use a temp directory here to avoid races between \xe2\x80\xa6CbCollect empty block spans that might have been \xe2\x80\xa6DaEmulates calling the internal _<em>rust</em>* allocator functionsCmWhether to create an index page in the root of the output \xe2\x80\xa6ChThis encodes a diagnostic by creating a node with an \xe2\x80\xa6ClEncodes predicates using the Itanium C++ ABI with vendor \xe2\x80\xa6DoIf <code>sp</code> ends with a semicolon, returns it as a <code>Span</code> \xe2\x80\xa6CdWhether memory accesses should be alignment-checked.0CnIn the case of closure types and fn pointers, we currently \xe2\x80\xa6ClError on outer attributes in this context. Also error if \xe2\x80\xa6ChPanics if the value cannot be evaluated or doesn\xe2\x80\x99t \xe2\x80\xa6BoTry to evaluate to a target <code>usize</code>.0BdEvaluate constant as a target usize.0FbTests if <code>test</code> is true when applied to <code>lower_bound</code> at <code>point</code>.DjRecursively evaluates <code>goal</code>, returning the nested goals in \xe2\x80\xa6AnIs well known values activated0DkExpands the rules based macro defined by <code>rules</code> for a given \xe2\x80\xa6ClThe vtable that was expected at the point in MIR that it \xe2\x80\xa6000Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6DfItem with a given <code>LocalDefId</code> was defined during macro \xe2\x80\xa61111110DfCalled on <code>ptr as usize</code> casts. (Actually computing the \xe2\x80\xa6CmMarks a pointer as exposed, allowing its provenance to be \xe2\x80\xa60ClChecks if the specified expression needs parentheses for \xe2\x80\xa6CjAdds the nested goals of a nested goal, given that the \xe2\x80\xa6CiUsed to ban explicit safety on foreign items when the \xe2\x80\xa6CjLazily populated cache of modules loaded from external \xe2\x80\xa6DfTakes a 128-bit vector, transmutes it to <code>[u64; 2]</code> and \xe2\x80\xa6CkIf any of the branches had a guard, we collect here the \xe2\x80\xa6C`Construct a diagnostic for a feature gate error.DgBuilds and pushes <code>MatchPairTree</code> subtrees, one for each \xe2\x80\xa6CiFinds the initializer expression for a local binding. \xe2\x80\xa6DhFinds a cfg-ed out item inside <code>module</code> with the matching \xe2\x80\xa6CjWhether the query key can be recovered from the hashed \xe2\x80\xa60BdSee <code>first_extern_index</code>.DfThe goal of this function is to return the first <code>Path</code> \xe2\x80\xa6AcFor the intrinsics:CjScope of temporaries that should be deduplicated using \xe2\x80\xa6BoReturn placeholder code for the given function.CjData and hash information from external crates. We may \xe2\x80\xa6BiReturns the kind of a given foreign item.0CiFormat the given code block. Mainly targeted for code \xe2\x80\xa6EhReturns the <code>DefId</code> of the <code>format_unsafe_arg</code> lang item if it \xe2\x80\xa6EaTemplate will insert fragments between <code>before</code> and <code>after</code>DhInverse of <code>Ty::to_opt_closure_kind</code>. See docs on that methodCnUse the already known layout if given (but sanity check in \xe2\x80\xa6oUsed in testingBjMaps a string and a span to an identifier.BcCreates an interned usize constant.De<code>true</code> if the type results from a dereference of a raw \xe2\x80\xa6000ChEmit each function in its own section. Defaults to true.ClWe use the following trait as an example throughout this \xe2\x80\xa6DkGives raw mutable access to the <code>Allocation</code>, without bounds \xe2\x80\xa6CnPeels away all the compiler generated code surrounding the \xe2\x80\xa6CkGets defined or externally defined (AvailableExternally \xe2\x80\xa6BaGets the type of a field by name.CgTry to get the span of a type being awaited on that \xe2\x80\xa6BmReturns the host CPU name, according to LLVM.DiChecks whether the <code>trimmed</code> line includes an item marker. \xe2\x80\xa6CjReturns a mutable reference to the inner value without \xe2\x80\xa6DiGiven a non-null scalar (or transparent) type <code>ty</code>, return \xe2\x80\xa6D`Bounds-checked <em>but not align-checked</em> allocation access.ChGet the dynamic type of the given vtable pointer. If \xe2\x80\xa6CkWe want to ensure that we use spans for both decls that \xe2\x80\xa6ClReturns the hir-id of the root variable for the captured \xe2\x80\xa6CaReturns a reference to the current spawn handler.DkChecks if the given expression is an initialization of <code>Vec</code> \xe2\x80\xa6CmGiven a potentially unclosed inline code, attempt to find \xe2\x80\xa6EhHelper used for <code>fn_abi_of_*</code>, to adapt <code>tcx.fn_abi_of_*(...)</code> \xe2\x80\xa6EdHelper used for <code>layout_of</code>, to adapt <code>tcx.layout_of(...)</code> \xe2\x80\xa6CnThe effect of a successful function call return should not \xe2\x80\xa6BhTrue if there are any late-bound regions0000DiWhether <code>query get_codegen_attrs</code> should be used with this \xe2\x80\xa6BeDoes this represent an implicit self?DeSignals whether this <code>PathSegment</code> has lifetime arguments.Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6000000DfReturns <code>true</code> if any of the primary spans are displayable.0EdOption for <code>cfg(target_has_reliable_f128)</code>, true if <code>f128</code> \xe2\x80\xa6CjChecks whether this type is an ADT that has unsafe fields.0BoReturns whether this variant has unsafe fields.111CmCalc converted u64 decimal into hex and return its length \xe2\x80\xa6DnIf enabled, when we see the selected region, use \xe2\x80\x9c<code>&#39;N</code>\xe2\x80\x9d \xe2\x80\xa60DiGiven a body owner\xe2\x80\x99s id, returns the <code>BodyId</code> associated \xe2\x80\xa6DhHorizontally performs <code>which</code> operation on adjacent values ofDjCreates a <code>GenericArgs</code> that maps each generic parameter to \xe2\x80\xa60CgWhether the local should be ignored for trait bound \xe2\x80\xa60DgSimplified analogue of module <code>resolutions</code> but in trait \xe2\x80\xa6DjTable synthetic type parameter for <code>impl Trait</code> in argument \xe2\x80\xa6DgGiven an <code>impl_id</code>, return the trait it implements along \xe2\x80\xa6000000CmReturns whether this span originates in a foreign crate\xe2\x80\x99\xe2\x80\xa6CmReturns whether this context originates in a foreign crate\xe2\x80\xa6BgPath to crate-info for external crates.CiInitiate a tail call to this function \xe2\x80\x93 popping the \xe2\x80\xa6CjThis always-inlined version should only be used on hot \xe2\x80\xa6C`Return whether the instance as a body available.E`Instantiate the values from <code>var_values</code> into <code>value</code>. \xe2\x80\xa6DgConvert the <code>JobResult</code> for a job that has finished (and \xe2\x80\xa6DjConvert <code>self</code> directly into a <code>TokenStream</code> object.0BmQuery backing <code>Ty::is_async_drop</code>.000000EbReturns <code>true</code> if a closure is inferred to be an <code>FnMut</code> \xe2\x80\xa6Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6000000CmReturns the pre-expansion span if the span directly comes \xe2\x80\xa6ChWhether the first argument was a string literal or a \xe2\x80\xa6CgCheck if this type is a subtype of another type for \xe2\x80\xa63333333BdWhether the trait is dyn compatible.CiReturns true if the object file is an EC (that is, an \xe2\x80\xa6CiUser cannot make signature of a trait mutable without \xe2\x80\xa6D`Returns <code>true</code> if this type is a floating point type.C`Indicates if the named argument is used as a \xe2\x80\xa6ClNeed to duplicate the field so that fluent also provides \xe2\x80\xa6DfReturns <code>true</code> if the given span is a part of generated \xe2\x80\xa6Bd<code>::{</code> or <code>::*</code>CgChecks whether a type is visibly uninhabited from a \xe2\x80\xa6FdReturn <code>true</code> if the passed <code>typ</code> is <code>isize</code> or <code>usize</code>.CfDetects late-bound lifetimes and inserts them into \xe2\x80\xa6>>>>>>>CiReturns whether the legacy version of polonius is enabledCkReturns whether the self-contained linker component was \xe2\x80\xa6DgReturns whether <code>LinkSelfContainedComponents::LINKER</code> is \xe2\x80\xa6CnSome locals are part of the function\xe2\x80\x99s interface and can \xe2\x80\xa6EhReturns <code>true</code> if the node pointed to by <code>def_id</code> is a mutable \xe2\x80\xa6EdReturns <code>true</code> if local is definitely not a <code>ref ident</code> or \xe2\x80\xa6DhIf <code>maybe_path</code> is a path node which resolves to an item, \xe2\x80\xa6EhReturns <code>true</code> if <code>other</code> is earlier in the control flow graph \xe2\x80\xa6CcDetermines whether we need to add this const to \xe2\x80\xa6DiReturns <code>true</code> if the token is either a special identifier \xe2\x80\xa6CiReturns true if rvalue can be safely removed when the \xe2\x80\xa6DkReturns <code>true</code> if this is semantically a float literal. This \xe2\x80\xa6BmWas the format literal written in the source?CnWhether this formatting string was written directly in the \xe2\x80\xa6DhReturns <code>true</code> if this place context represents a storage \xe2\x80\xa6CmDetermine whether an error associated with the given span \xe2\x80\xa6BkChecks if the type is equal to a lang item.DdReturns <code>true</code> if the token is a keyword reserved for \xe2\x80\xa60ClTrait selection queries. These are best used by invoking \xe2\x80\xa6000000Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6000000CnOnly returns the opaque types from the lookup table. These \xe2\x80\xa60CkTraverses the chain of nodes to yield each op in the chain.CgA lint that checks for known panics like overflows, \xe2\x80\xa6ClAn item is \xe2\x80\x98leaked\xe2\x80\x99 from a private dependency if all \xe2\x80\xa6CiFor each fn, records the \xe2\x80\x9cliberated\xe2\x80\x9d types of its \xe2\x80\xa60AjResolutions for lifetimes.0DeUse <code>thorin</code> (rust implementation of a dwarf packaging \xe2\x80\xa6ClThis functions tries to determine the appropriate linker \xe2\x80\xa68888888CjGet a basic block (creating it if necessary), possibly \xe2\x80\xa6C`Fix up an output value to work around LLVM bugs.EdReturns a vector of <code>mir::Location</code> where <code>local</code> is assigned.DiReturn all <code>impl</code> blocks of the given trait in the current \xe2\x80\xa6000000EnReturns the <code>LineRange</code> that corresponds to <code>span</code> in <code>self</code>.ChLower a const parameter from the HIR to our internal \xe2\x80\xa6CmDestructure the LHS of complex assignments. For instance, \xe2\x80\xa6CkComputes the least-upper-bound of two free regions. In someBbReturn place of the main function.0DkThis is very similar to <code>handle_lifetimes</code>. However, instead \xe2\x80\xa6DjChecks if the given <code>DefId</code> matches the <code>libc</code> item.CdIf this is a merged doctest, it will be put into \xe2\x80\xa6EcCall <code>maybe_paren</code> on <code>self</code> if it doesn\xe2\x80\x99t start with a \xe2\x80\xa6FeIf <code>self</code> and <code>other</code> can be merged, mutates <code>self.span</code> to also \xe2\x80\xa6FdReturns the <code>MetaItem</code> if <code>self</code> is a <code>MetaItemInner::MetaItem</code> \xe2\x80\xa60DkMatches an <code>Expr</code> against a chain of methods, and return the \xe2\x80\xa6CmModern kernels on modern hardware can have dynamic signal \xe2\x80\xa6CjMust we produce a diagnostic to justify the use of the \xe2\x80\xa6BkExtract the mutated place from a statement.DhReturns a set of mutated local variable IDs, or <code>None</code> if \xe2\x80\xa6CkTo ensure an initialized mutex that was moved somewhere \xe2\x80\xa6CgAvoid duplicated errors for \xe2\x80\x9cname already defined\xe2\x80\x9d.ClWhether a cpu needs to be explicitly set. Set to true if \xe2\x80\xa6BkSpan of the last visited negated expressionDfSignals that <code>num_jobs</code> new jobs were injected into the \xe2\x80\xa6DkSignals that <code>num_jobs</code> new jobs were pushed onto a thread\xe2\x80\x99\xe2\x80\xa6CkWhether we should use the new trait solver in the local \xe2\x80\xa6CmWhether the new trait solver is enabled. This only exists \xe2\x80\xa60000CjUsed to conditionally output the TokenStream for tests \xe2\x80\xa6AcImpls of the trait.CiImpls indexed by their simplified self type, for fast \xe2\x80\xa6111CiAnalysis outside of a body does not define any opaque \xe2\x80\xa6CgCreate a typing environment for use during analysis \xe2\x80\xa611CnFor simplicity, we serve small allocations in multiples of \xe2\x80\xa6Dk1 more than the highest-numbered <code>CoverageKind::BlockMarker</code> \xe2\x80\xa6CmThe number of external regions defined on the closure. In \xe2\x80\xa6DgReturns <strong>exclusive</strong> upper bound on object size in bytes.DiThe <code>ObligationForest</code> is a utility data structure used in \xe2\x80\xa6CaCalled when inlining failed or was not performed.AnCalled when inlining succeeds.ClIf unstable values are not permitted, exits with a fatal \xe2\x80\xa6CjChecks whether all impls in the crate pass the overlap \xe2\x80\xa6000000CkUsed by meta-variable expressions when an user input is \xe2\x80\xa6DiIf there are types that satisfy both impls, returns <code>Some</code> \xe2\x80\xa60AjClosures and inline constsClThe trait predicate of the parent obligation that led to \xe2\x80\xa600B`Parses inline const expressions.CkParses defaultness (i.e., <code>default</code> or nothing).FeParse <code>&quot;become&quot; expr</code>, with <code>&quot;become&quot;</code> token already eaten.FbParse <code>&amp; mut? &lt;expr&gt;</code> or <code>&amp; raw [ const | mut ] &lt;expr&gt;</code>.ClAt the bottom (top?) of the precedence hierarchy, Parses \xe2\x80\xa6BdParses a prefix-unary-operator expr.BlParse <code>&quot;return&quot; expr?</code>.BiPrecondition: already parsed the \xe2\x80\x98{\xe2\x80\x99.CnGenerates an appropriate parsing failure message. For EOF, \xe2\x80\xa6CeParses a field identifier. Specialized version of \xe2\x80\xa6CmParse a generic argument in a path segment. This does not \xe2\x80\xa6DkParses the RHS of a local variable declaration (e.g., <code>= 14;</code>\xe2\x80\xa6BgParses <code>struct Foo { ... }</code>.CnParses the block of a <code>match expr { ... }</code> or a \xe2\x80\xa6AiParses a structure field.BcParses all <code>-l</code> options.EeParse a non-terminal (e.g. MBE <code>:pat</code> or <code>:ident</code>). Inlined \xe2\x80\xa6DgParses <code>pin</code> and <code>mut</code> annotations on references.EhParse a static item with the prefix <code>&quot;static&quot; &quot;mut&quot;?</code> \xe2\x80\xa6AdParse a trait bound.Clattribute, and return the feature name and its stability \xe2\x80\xa6EeReturns the <code>DefId</code> of the <code>partial_ord</code> lang item if it is \xe2\x80\xa6CgStores the actual binding mode for all instances of \xe2\x80\xa60EdLike <code>Self::pat_ty_adjusted</code>, but ignores implicit <code>&amp;</code> \xe2\x80\xa6ChPeels off all references on the pattern. Returns the \xe2\x80\xa6EeGiven a <code>DefId</code> checks if it satisfies <code>f</code> if it does check \xe2\x80\xa6CnThis is used because we don\xe2\x80\x99t automatically generate the \xe2\x80\xa6CbGet the pointer index in a specific address space.DjWhen using <code>-Zpolonius=next</code>, the liveness helper data used \xe2\x80\xa6DaThe block before the <code>bindings</code> have been established.BdSignal handler installed for SIGSEGVDgPrints a <code>WitnessPat</code> to an owned string, for diagnostic \xe2\x80\xa6BoSome(candidate) if there is a private candidateCaThe local binding that shadows the glob reexport.DhParse and expand all <code>cfg_attr</code> attributes into a list of \xe2\x80\xa6CkDetermines if this transition would disable the permission.ChPropagates <code>#[doc(cfg(...))]</code> to child items.CfThe provisional cache contains entries for already \xe2\x80\xa6EcReturns the <code>DefId</code> of the <code>RangeCopy</code> lang item if it is \xe2\x80\xa6EcReturns the <code>DefId</code> of the <code>RangeFrom</code> lang item if it is \xe2\x80\xa6EcReturns the <code>DefId</code> of the <code>RangeFull</code> lang item if it is \xe2\x80\xa6CiRead discriminant, return the variant index. Can also \xe2\x80\xa6Dg<code>read_discriminant</code> can be hooked for better error messages.0BkRead a uint value from the specified range.C`Should we append to existing cci in the doc rootCaRead a pointer-sized signed integer from a place.CcRead a pointer-sized unsigned integer from a place.DhReturns whether <code>receiver_ty</code> would be considered a valid \xe2\x80\xa6ChThis encodes a diagnostic by creating a node with an \xe2\x80\xa6CbRecord an external fully qualified name in the \xe2\x80\xa6DiWhen using <code>-Zpolonius=next</code>, records the given live loans \xe2\x80\xa60CcRecords a new access, so that future access can \xe2\x80\xa6CgTry to recover from possible generic const argument \xe2\x80\xa6DhRecover on <code>const mut</code> with <code>const</code> already eaten.EdRecovers from an <code>else</code> clause after a loop (<code>for...else</code>, \xe2\x80\xa6CgOverride the default ABI to return small structs in \xe2\x80\xa6BlGet the region definition of <code>r</code>.EgPer-body <code>region::ScopeTree</code>. The <code>DefId</code> should be the owner \xe2\x80\xa60000000DjTell the <code>LintStore</code> about all the built-in lints (the ones \xe2\x80\xa6ChTree Borrows needs to be told when a tag stops being \xe2\x80\xa6AnA tag just lost its protector.CnRemap source path prefixes in all output (messages, object \xe2\x80\xa600AnWhat sources are being mapped.CiRenders the configuration for long display, as a long \xe2\x80\xa6ClRender a sequence of macro arms in a format suitable for \xe2\x80\xa6CkRenders the configuration for human display, as a short \xe2\x80\xa6BkReports a diagnostic for an intra-doc link.CmCheck if this enum can be safely exported based on the \xe2\x80\x9c\xe2\x80\xa6CjReturns <code>DefId</code> of corresponding language item.0EcReturns the <code>DefId</code> for a given <code>LangItem</code>. If not found, \xe2\x80\xa6111CnClear the value of fields that are \xe2\x80\x9cper local variable\xe2\x80\x9d\xe2\x80\xa6CiWhether name resolver should resolve documentation links.00CkResolve inside function parameters and parameter types. \xe2\x80\xa6BbResolve a primitive type or value.EaReturns the <code>DefId</code> of the <code>Ok</code> lang item if it is defined.CkFirst span of a return site that we find. Used in error \xe2\x80\xa6DfStores the ready list of the <code>epfd</code> epoll instance into \xe2\x80\xa6ClReturns the hidden type corresponding to this key if the \xe2\x80\xa6BlReturns basic blocks in a reverse postorder.BgReverse postorder traversal of a graph.DhGets equivalent <code>rustc_apfloat::Round</code> from rounding mode \xe2\x80\xa6ChThis crate contains codegen code that is used by all \xe2\x80\xa6AbThe Rust compiler.CkThis library is used to gather all error codes into one \xe2\x80\xa6CgSupport for serializing the dep-graph and reloading it.C`Rayon-core houses the core stable APIs of Rayon.DjReturns the version string for <code>rustc</code> itself (which may be \xe2\x80\xa6AgA path to rustfmt.toml.CdIdentifies expressions which, if captured into a \xe2\x80\xa6ClAdd points depending on the result of the given dataflow \xe2\x80\xa6ClResets the cursor to hold the state after the terminator \xe2\x80\xa6BmSet whether the text is strikethrough or not.AiCertainty passed into \xe2\x80\xa6CkGenerate a short description of this work item suitable \xe2\x80\xa6CjWhether a method call\xe2\x80\x99s receiver needs parenthesis, likeCjWhether we should encode MIR. Return a pair, resp. for \xe2\x80\xa6CfTransform boolean comparisons into logical operations.BnExtract size and alignment from a TyAndLayout.BgSkips a line comment (<code>//</code>).DeChecks if the given span contains a <code>#[cfg(..)]</code> attributeDhExtends the given <code>Span</code> while the next character matches \xe2\x80\xa6Ako/w tests have closure@path00CgReturns a span encompassing all the document fragments.DfGiven a <code>Span</code>, tries to get a shorter span ending just \xe2\x80\xa6DgComputes the layout of a type, at <code>span</code>. Note that this \xe2\x80\xa6CfRecursion entry point to find threading opportunities.DeIndicates that <code>state</code> has been modified with a custom \xe2\x80\xa600CjUpdates the use counts to reflect the removal of given \xe2\x80\xa6CiCollects near misses when the candidate functions are \xe2\x80\xa6BgError Reporting for static impl Traits.CiWhich saved locals are storage-live at the same time. \xe2\x80\xa60CmFor every saved local, the set of other saved locals that \xe2\x80\xa6DdStores a <code>QuerySideEffect</code> emitted during the current \xe2\x80\xa6CnRegister a side effect for the given node, for use in next \xe2\x80\xa6CfCode which is used by built-in goals that match \xe2\x80\x9c\xe2\x80\xa6AoTrue if <code>a &lt;= b</code>.CmGiven a user-provided value that couldn\xe2\x80\x99t be matched to \xe2\x80\xa6CgTry to emit a span suggestion and fall back to help \xe2\x80\xa6DgReturns <code>true</code> if this backend can be safely called from \xe2\x80\xa60DkReturns <code>true</code> if errors have been reported since this infcx \xe2\x80\xa6CnWhen an error occurs, we want to avoid reporting \xe2\x80\x9cderived\xe2\x80\xa6CnIf any errors occurred while type-checking this body, this \xe2\x80\xa602DbReturns a current thread exit callback, leaving <code>None</code>.DnIf true, then there may exist <code>break &#39;a</code> values that aim to \xe2\x80\xa6DhWhether the block itself has a label. Used by <code>label: {}</code> \xe2\x80\xa6CkGets the path where a compilation artifact of the given \xe2\x80\xa6B`Arguments to pass to the runtoolCmOn thread termination, the vector clock may be re-used in \xe2\x80\xa6GjReturns <code>-1</code> if <code>lhs &lt; rhs</code>, <code>0</code> if <code>lhs == rhs</code>, and <code>1</code> if \xe2\x80\xa60CjExtracts the bits from the scalar without checking the \xe2\x80\xa6C`Track where errors are created. Enabled with \xe2\x80\xa6CnThe allocation IDs to report when they are being allocated \xe2\x80\xa6BcThe allocation ids to report about.01BjClauses that we lowered as part of the \xe2\x80\xa6CkWhen we are in a trait impl, link to the trait-item\xe2\x80\x99s id.CmIf this is an item in an impl of a trait then this is the \xe2\x80\xa60000CjReturns the obligations that make this trait reference \xe2\x80\xa6DjConvert a <code>DiagMessage</code> to a string, performing translation \xe2\x80\xa6ClCollects the \xe2\x80\x9ctrimmed\xe2\x80\x9d, shortest accessible paths to \xe2\x80\xa6CmThe purpose of this function is to collect public symbols \xe2\x80\xa60111111AfControl path trimming.00ChReturns the truncated result, and whether truncation \xe2\x80\xa6BaCreate a new zero-sized constant.CdFundamental scalar-to-int (cast) operation. Many \xe2\x80\xa6ClTrait method used to load a function while testing if it \xe2\x80\xa60BdReturns true if a type has metadata.CdThe maximum length of types during monomorphization.000DlAdds constraints to inference such that <code>T: &#39;a</code> holds (or \xe2\x80\xa60CkWhen we add a R1 == R2 constraint, we currently add (a) \xe2\x80\xa6CnA cache of \xe2\x80\x9cdata range\xe2\x80\x9d computations for unions (i.e., \xe2\x80\xa6000CfCode to extract the universally quantified regions \xe2\x80\xa6CdAll of the universal regions, in grouped so that \xe2\x80\xa6AhCached unreachable blockCl<code>true</code> means diagnostics is for unresolved importCjIndicates how the compiler should treat unstable features.00DjNote: this field is duplicated in <code>RenderOptions</code> because it\xe2\x80\xa6DiNote: this field is duplicated in <code>Options</code> because it\xe2\x80\x99s \xe2\x80\xa6CkIn case the snippet needed to be wrapped in a function, \xe2\x80\xa6ClWhether to use legacy .ctors initialization hooks rather \xe2\x80\xa6Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6000000CjConvenience wrapper around <code>visit_local_usage</code>.CmCheck conditions on inputs and outputs that the cmse ABIs \xe2\x80\xa6AaDon\xe2\x80\x99t override!CfInvoked to visit the body of a function, method or \xe2\x80\xa6CnBecause we want to track parent items and so forth, enable \xe2\x80\xa6CkInvoked when a nested item is encountered. By default, when6666666BfRetrieve the id for the virtual table.ClRetrieve the allocation id for a global allocation if it \xe2\x80\xa61CkWaits for the worker threads to get up and running. This isDbComputes the list of goals required for <code>arg</code> to be \xe2\x80\xa6CjDetermines if <code>pointee_ty</code> is slice-like or \xe2\x80\xa6EbHelper function to get the <code>TyAndLayout</code> of a <code>windows</code> typeCmIf there are multiple ways to prove a trait goal, we make \xe2\x80\xa6D`Adds the <code>crate::</code> prefix to paths where appropriate.0DkFreshen the <code>LoweringContext</code> and ready it to lower a nested \xe2\x80\xa6DkFor flavors with an <code>Lld</code> component, ensure it\xe2\x80\x99s disabled. \xe2\x80\xa6DjFind all <code>AllocId</code>s mentioned (recursively) in the MIR body \xe2\x80\xa6CmWrite out a human-readable textual representation for the \xe2\x80\xa6ClWrite the graphviz DOT label for the overall graph. This \xe2\x80\xa60CgDetect races for non-atomic write operations at the \xe2\x80\xa6CaMark the entire referenced range as uninitializedCmMiscellaneous bits of metadata for better ambiguity error \xe2\x80\xa6CmUtility type used in a few places where it\xe2\x80\x99s convenient \xe2\x80\xa6BnA path like <code>Foo&lt;&#39;a, T&gt;</code>.CkInformation about the anonymous region we are searching \xe2\x80\xa6CgAppend a message for <code>[const] Trait</code> errors.EeVarious cases where expressions must be <code>Sized</code> / <code>Copy</code> / etc.00EfThe <code>bare_trait_objects</code> lint suggests using <code>dyn Trait</code> for \xe2\x80\xa60CkAttributes that have a special meaning to rustc or rustdoc.0AiRaw \xe2\x80\x98\\r\xe2\x80\x99 encountered.DkDuring the <code>InstrumentCoverage</code> MIR pass, a BCB is a node in \xe2\x80\xa60DkTrait alias for the complex return type of <code>build_subscriber</code>\xe2\x80\xa6DkDerived obligation (i.e. <code>where</code> clause) on an user-provided \xe2\x80\xa600CkHow many bytes of memory each bit in the bitset represents.BkAccumulator for recursive ffi type checkingCkRust actually has more than one category of type variables;0000000ClA set of values corresponding to the canonical variables \xe2\x80\xa60000C`Helper struct for <code>explain_captures</code>.CcExtra per-CGU context/state needed for coverage \xe2\x80\xa6CaRequires drop elaboration to have been performed.C`extremely constrained barely-C ABI for TrustZone0ClEnum indicating if the code block contains rust based on \xe2\x80\xa6CgExtra machine state for CTFE, and the Machine instance.0ChOutlives-constraints can be categorized to determine \xe2\x80\xa60BlDenotes a call to the intrinsic function \xe2\x80\xa60DbImplementation of a <code>Coroutine</code> trait by one of the \xe2\x80\xa600CmHolds the coverage-relevant successors of a basic block\xe2\x80\x99\xe2\x80\xa6CnA map for the local crate mapping each type to a vector of \xe2\x80\xa6ChThe crate outlives map is computed during typeck and \xe2\x80\xa6CgExtra things to check for during validation of CTFE \xe2\x80\xa60CjThe <code>default_hash_type</code> lint detects use of \xe2\x80\xa6BoUsing an integer as a pointer in the wrong way.0AjLLVMRustDebugNameTableKindDhShould lowering a <code>let</code> expression also declare its bindings?EfWe can\xe2\x80\x99t implement <code>LintDiagnostic</code> for <code>BuiltinLintDiag</code>, \xe2\x80\xa60BdTrying to access the actual type id.0CbTrying to access the data behind a vtable pointer.0CjSingle-segment custom attribute registered by a derive \xe2\x80\xa6CgType alias for boxed machine callbacks with generic \xe2\x80\xa60ClType alias for unblock callbacks, i.e. machine callbacks \xe2\x80\xa60ChDescription of the lifetimes appearing in a function \xe2\x80\xa6BbThe link has empty angle brackets.j\xe2\x80\x98\\u{}\xe2\x80\x99BnInformation about an enabled language feature.0BjEnd of a multiline string inside a commentChEpollEventInstance contains information that will be \xe2\x80\xa6CeEpollEventInterest registers the file description \xe2\x80\xa6ClThe table of all EpollEventInterest. The BTreeMap key is \xe2\x80\xa6DjA borrow of a type that contains an <code>UnsafeCell</code> somewhere. \xe2\x80\xa6Bk<code>-Zunpretty=expanded,identified</code>CoExtern prelude names introduced by <code>--extern</code> flags.DcExtern prelude names introduced by <code>extern crate</code> items.CnThe state of the lazy external source loading mechanism of \xe2\x80\xa6CnCreates a raw pointer to a place that will only be used to \xe2\x80\xa60CjThis trait is implemented for every folding traversal. \xe2\x80\xa60000CeA helper trait to indirectly allow downcasting on \xe2\x80\xa6CmA refcounted pointer to a file description, also tracking \xe2\x80\xa6CdRepresents a value inside an <code>on</code> filter.DhImplementation of a <code>Fn</code>-family trait by one of the anonymous00DdUsed to forbid <code>let</code> expressions in certain syntactic \xe2\x80\xa6CiVisits free regions in the type that are relevant for \xe2\x80\xa60CnThe fulfillment context is used to drive trait resolution. \xe2\x80\xa60CnProxy shim for async drop of future (def_id, proxy_cor_ty, \xe2\x80\xa60000000CjThis will be an error in a future release for all editionsCeDenotes the \xe2\x80\x9cposition\xe2\x80\x9d of a generic argument, \xe2\x80\xa6D`A context which can lower HIR\xe2\x80\x99s <code>GenericArg</code> to \xe2\x80\xa6CjIf in the parser we detect a field expr with turbofish \xe2\x80\xa6CdRecords where the generic parameter originated from.CgA path segment that is semantically allowed to have \xe2\x80\xa6CfThe requirement imposed on the generics of a lang itemCcDoes this have <code>ConstKind::Placeholder</code>?000BjDoes this have <code>RePlaceholder</code>?000BhDoes this have <code>Placeholder</code>?000CcTry Horizontal layout, if that fails then vertical.EeThe <code>incomplete_include</code> lint detects the use of the <code>include!</code>0DhThe <code>inline_no_sanitize</code> lint detects incompatible use of \xe2\x80\xa60DgWhether this <code>Qualif</code> is cleared when a local is moved from.CiAn associated constant in an inherent impl or trait impl.CmHolds information about a rustc_span::SourceFile imported \xe2\x80\xa6BmThis crate was a dependency of another crate.ChRepresents whether some type is inhabited in a given \xe2\x80\xa6DgInserts <code>StatementKind::Coverage</code> statements that either \xe2\x80\xa6DgThe different settings that the <code>-C instrument-coverage</code> \xe2\x80\xa6DaInvalid glob pattern in <code>ignore</code> configuration option.C`Trying to convert a literal with the wrong type.CmError information for when the program we executed turned \xe2\x80\xa60CaUsing uninitialized data where it is not allowed.000BcUsing a vtable for the wrong trait.0CkEnum discriminants are not allowed to reference generic \xe2\x80\xa6ClDetects cases where an ADT/LTA is trivially cyclical \xe2\x80\x93 \xe2\x80\xa6BcTrait method <code>DepNode</code>s.Dk<code>LanguageIdentifier</code> is a core struct representing a Unicode \xe2\x80\xa60DeImplements the AST traversal for late lint passes. <code>T</code> \xe2\x80\xa6DhType alias for the result of <code>fallback_fluent_bundle</code> - a \xe2\x80\xa600CkThe <code>match</code> part of a <code>#[loop_match]</code>CkA set of outlives constraints after rewriting to remove \xe2\x80\xa6ElThe <code>mutable_transmutes</code> lint catches transmuting from <code>&amp;T</code> to \xe2\x80\xa6DkThe tokens <code>macro_rules!</code> followed by a name were processed. \xe2\x80\xa6De<code>macro_rules!</code> scopes are always kept by reference and \xe2\x80\xa6CeComputing common supertype in the arms of a match \xe2\x80\xa600CgA sub-branch in the output of match lowering. Match \xe2\x80\xa6CfType used to display times (compilation and total) \xe2\x80\xa6BaFile a.rs and a/mod.rs both existCdNormalizes integers for compatibility with Clang \xe2\x80\xa6CdName privacy visitor, checks privacy and reports \xe2\x80\xa6CmNon-ascii character in byte literal, byte string literal, \xe2\x80\xa6CnConst arguments are only allowed to use generic parameters \xe2\x80\xa6DgThe <code>Local</code> can only be propagated into and from its own \xe2\x80\xa6DhA dummy type used to force <code>List</code> to be unsized while not \xe2\x80\xa6EjThis came from something such as <code>a &gt; b</code> or <code>a + b</code>. In THIR, \xe2\x80\xa60CaResponsible for safely creating and disposing \xe2\x80\xa6DgThe <code>private_interfaces</code> lint detects types in a primary \xe2\x80\xa60ChThe <code>panic_const_gen_fn_none_drop</code> lang item.DhMaps from <code>ty::PlaceholderRegion</code> values that are used in \xe2\x80\xa6CbUsed a pointer outside the bounds it is valid for.0CkThe recommended option. Retrieves the maximal amount of \xe2\x80\xa6CnFake extra constructor that indicates and empty field that \xe2\x80\xa60BoRepresents <code>#[proc_macro_attribute]</code>0CmTrack a \xe2\x80\x98side effect\xe2\x80\x99 for a particular query. This is \xe2\x80\xa6BnThe <code>RangeInclusiveCopy</code> lang item.CnAttempting to read or copy parts of a pointer to somewhere \xe2\x80\xa6AlPartially copying a pointer.10CiHow relaxed bounds <code>?Trait</code> should be treated.CoRearranges the basic blocks into a <em>reverse post-order</em>.CkA required method in a trait declaration meaning it\xe2\x80\x99s \xe2\x80\xa6FaTracks the <code>T: &#39;a</code> or <code>&#39;a: &#39;a</code> predicates that we have inferredCgThe program exhausted the interpreter\xe2\x80\x99s resources \xe2\x80\xa60CkWhere and how to continue when returning/unwinding from \xe2\x80\xa60Bf<code>return</code> with no expression00BeAllow RTN, don\xe2\x80\x99t allow paren sugar.CoBounds for <code>feature(return_type_notation)</code>, like \xe2\x80\xa6D`Paths that end with <code>(..)</code>, for return type notation.Aa<code>(..)</code>Aj<code>T::method(..)</code>CkThe default case, only collect RPITs and AsyncFn return \xe2\x80\xa6DgA safe function annotated with <code>#[target_features]</code>. The \xe2\x80\xa6BbInformation about a size mismatch.BfData size is not equal to target size.AlA scalar had the wrong size.210ClA trait error with most of its information removed. This \xe2\x80\xa600CjThe selection process begins by considering all impls, \xe2\x80\xa600DaData for use when recompiling the <strong>current crate</strong>.00CkLooking for param-env candidates that satisfy the trait \xe2\x80\xa600000000BcConstant expressions must be sized.00CjRepresents which item categories are enabled for ordering.CnCallback that is called when two expressions are not equal \xe2\x80\xa6CmThis is a SourceFile identifier that is used to correlate \xe2\x80\xa6BiA summary of the possible sets of fields.DhThe <code>test_unstable_lint</code> lint tests unstable lints and is \xe2\x80\xa60CeRAII wrapper for starting and ending section timings.CkA folder to map the regions in the hidden type to their \xe2\x80\xa6AhLine ends in whitespace.BfA set of modifiers applied to a trait.BcHow we\xe2\x80\x99ve proven this trait goal.CiError E0201: multiple impl items for the same trait item.DnCollect al types that have an implicit <code>&#39;static</code> obligation \xe2\x80\xa6CkCollect all the trait objects in a type that could have \xe2\x80\xa60AiOptions for transform_ty.CmLint for trait and lifetime bounds that don\xe2\x80\x99t depend on \xe2\x80\xa6Bntry { ..; x } calls type_of(x)::from_output(x)BgThe <code>from_output</code> lang item.CkControls whether the arguments are tupled. This is used \xe2\x80\xa6CkLocation where a two-phase borrow is activated, if a borrow0EdThe location of a where clause on a <code>TyAlias</code> (<code>Span</code>) and \xe2\x80\xa6CnType privacy visitor, checks types for privacy and reports \xe2\x80\xa6DeThe <code>uninhabited_static</code> lint detects uninhabited statics.0DjThe <code>unused_assignments</code> lint detects assignments that will \xe2\x80\xa60DeThe <code>unused_comparisons</code> lint detects comparisons made \xe2\x80\xa6DjThe <code>unused_macro_rules</code> lint detects macro rules that were \xe2\x80\xa60CnThe <code>usage_of_ty_tykind</code> lint detects usages of \xe2\x80\xa6DkThe <code>useless_deprecated</code> lint detects deprecation attributes \xe2\x80\xa60CkThe selected impl has unconstrained generic parameters. \xe2\x80\xa600Dj<code>Ok</code> is returned when the conversion to a string literal is \xe2\x80\xa6AaError code: E0565Ba<code>unwrap_binder!(expr)</code>CiA transmute from an unsafe binder to the type that it \xe2\x80\xa600000CkIntermediate format to store the hir_id pointing to the \xe2\x80\xa6ClEncodes the effect of a user-supplied type annotation on \xe2\x80\xa6ClHolds a mapping from \xe2\x80\x9clocal\xe2\x80\x9d (per-function) file IDs \xe2\x80\xa6ClDuplicates will be a warning, with a note that this will \xe2\x80\xa6AoPredicate kind in where-clause.CaThe kind of a single predicate in a where-clause.CjA helper type that you can wrap round your own type in \xe2\x80\xa60000BbThe length of an SIMD type is zero0Cjadapts Item of array mut reference iterator to Item of \xe2\x80\xa6Cnadapts Item of array reference iterator to Item of hashmap \xe2\x80\xa6CmUpdate the type of a single local, which should represent \xe2\x80\xa6ClAdd arbitrary \xe2\x80\x9clate link\xe2\x80\x9d args defined by the target \xe2\x80\xa6CnAdd arguments for the given flavor and also for its \xe2\x80\x9ctwin\xe2\x80\xa6ClAdd arbitrary \xe2\x80\x9cpost-link\xe2\x80\x9d args defined by the target \xe2\x80\xa6CmReturns the base address of an allocation, or an error if \xe2\x80\xa6AnProbability for address reuse.0CfAddress space information of all known address spaces.ClA list of types where the ADT requires async drop if and \xe2\x80\xa6000000CeAllocates a string in the interpreter\xe2\x80\x99s memory, \xe2\x80\xa6DdWhether <code>dbg!</code> should be allowed in test functions or \xe2\x80\xa60CiApply non-determinism to float operations that do not \xe2\x80\xa60BjA place is either an mplace or some local.DjCompile <code>expr</code>, yielding a place that we can move from etc. \xe2\x80\xa6CmAssert that this immediate is a valid value for the given \xe2\x80\xa6CbAssert that we are in speculative resolution mode.EfReturns the <code>DefId</code> of the <code>async_fn_mut</code> lang item if it is \xe2\x80\xa6EgReturns the <code>DefId</code> of the <code>AsyncGenFinished</code> lang item if it \xe2\x80\xa6CjAre we allowed to use features from the Rust 2018 edition?000CjAre we allowed to use features from the Rust 2021 edition?000CjAre we allowed to use features from the Rust 2024 edition?000CfDetect data-races with an atomic read, caused by a \xe2\x80\xa6DaEmit a friendly error for extra <code>..</code> patterns in a \xe2\x80\xa6CmTuple containing the types of closure captures before the \xe2\x80\xa6CmHook for performing extra checks on a memory read access. \xe2\x80\xa60EfReturns the <code>DefId</code> of the <code>bitor_assign</code> lang item if it is \xe2\x80\xa6CnGives the index of an upcoming BasicBlock, with an offset. \xe2\x80\xa6CbExpects a body and returns its codegen attributes.CmDetects query cycles by using depth first search over all \xe2\x80\xa60CiAn approximation to proc-macro-style single-character \xe2\x80\xa6CiDetermines whether two byte positions are in the same \xe2\x80\xa6DoReturns <code>&amp;&#39;static core::panic::Location&lt;&#39;static&gt;</code>.BdCalling convention for the function.DcGet the indexes of camel case components of a string <code>s</code>AcCandidate assembly.DmWhen canonicalizing query inputs, we keep <code>&#39;static</code> in the \xe2\x80\xa6DfCanonicalizes a query value <code>V</code>. When we canonicalize a \xe2\x80\xa60CjLow-level cast helper function. This works directly on \xe2\x80\xa6CiRuns a closure and catches unwinds triggered by fatal \xe2\x80\xa60CeUtility function for a codegen backend to compute \xe2\x80\xa6DeCheck that the <code>#![doc(cfg_hide(...))]</code> attribute only \xe2\x80\xa6CgThis query checks the fulfillment of collected lint \xe2\x80\xa6000000ChCheck if the type is array and emit an unsafe type lint.CnChecks that the ABI of a given instance of a function does \xe2\x80\xa6ClChecks the body of nested macro, returns where the check \xe2\x80\xa6CnHelper function used inside the shims of foreign functions \xe2\x80\xa6BfCheck a reference or <code>Box</code>.CiProvide actionable suggestions when trying to add two \xe2\x80\xa6EcChecks if the <code>#[thread_local]</code> attribute on <code>item</code> is valid.DbChecks if a <code>#[track_caller]</code> is applied to a function.CmChecks if the given type is \xe2\x80\x9cffi-safe\xe2\x80\x9d (has a stable, \xe2\x80\xa6DeCheck that the fields of the <code>union</code> do not need dropping.DiSimilar to <code>hash_kind</code>, however this algorithm is used for \xe2\x80\xa6Cithe pass mode used for aggregates in arg and ret positionDcReturns the requirements for <code>clause</code> to be well-formed.CeGiven an expression, check if it is a method call \xe2\x80\xa6ChTracks the fake reads required for a closure and the \xe2\x80\xa60CkTake an inline assembly expression and splat it out via \xe2\x80\xa60ClIndicates that one of the inputs is a \xe2\x80\x9cforced unit\xe2\x80\x9d. \xe2\x80\xa6CfShould debuginfo for the macro be collapsed to the \xe2\x80\xa60DjAdd the outlives constraint <code>fr: outlived_fr</code> to the set of \xe2\x80\xa6C`Extract binding names if available for diagnosisChGo over the variables that were declared to be error \xe2\x80\xa6BlDefine the interface with the Rust compiler.ChCompute the replacement of flattened places into locals.CfProduces DIScope DIEs for each MIR Scope which has \xe2\x80\xa6BbResolves and evaluates a constant.EcWalks the graph of constraints (where <code>&#39;a: &#39;b</code> is considered \xe2\x80\xa6CkThe list of outlives constraints that need to be added. \xe2\x80\xa6DmInitially, the value for all variables is set to <code>&#39;empty</code>, \xe2\x80\xa6EaReturns <code>true</code> if this attribute list contains <code>macro_use</code>.E`Returns <code>true</code> if the node pointed to by <code>def_id</code> is a \xe2\x80\xa6ChCheck if we should generate C++ like names and debug \xe2\x80\xa6ChGets the paths where the crate came from in the file \xe2\x80\xa6000000Cl[query description - consider adding a doc-comment!] the \xe2\x80\xa6000000C`<code>feature</code> must be a language feature.DiCreates a type context. To use the context call <code>fn enter</code> \xe2\x80\xa6CgWhether or not the CRT is statically linked by default.ChThe given user css file which allow to customize the \xe2\x80\xa6BiThe current impl items (used to suggest).CcDetermine if data race detection should be enabled.0CnThe order of items in the HIR is unrelated to the order of \xe2\x80\xa6CdDeduces supplementary parameter attributes from MIR.BfReturns the default symbol visibility.CbThe default visibility for symbols in this target.CnReturns the lang items defined in another crate by loading \xe2\x80\xa6000000CiInformation about functions signatures for delegation \xe2\x80\xa6EbChecks that the type of <code>expr</code> can be coerced to <code>expected</code>.CmWhether a trait is fully built-in, and any implementation \xe2\x80\xa6Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6000000CfBuild suggestion gradually by handling closure arg \xe2\x80\xa6DkEnd-user visible description of <code>place</code> if one can be found. \xe2\x80\xa6DgUsed to set on_unimplemented\xe2\x80\x99s <code>ItemContext</code> to be the \xe2\x80\xa6CkConvert the LHS of a destructuring assignment to a pattern.BeAll imports known to succeed or fail.BnReturns the diagnostic message for this error.0BeThe diagnostic message for this error0CnFormat the diagnostic message for use in a lint (e.g. when \xe2\x80\xa6CnThe list of disallowed methods, written as fully qualified \xe2\x80\xa60AlThe identifier of this node.ClDumps the size and metadata and content of an allocation \xe2\x80\xa6BmArguments to be used when compiling doctests.BlAdd extra information about an item such as:CiReturns the Span of where the value with the provided \xe2\x80\xa6CiMost use-cases of dumping MIR should use the dump_mir \xe2\x80\xa6CiEats the float exponent. Returns true if at least one \xe2\x80\xa6BjRemove a given argument from considerationBgRemove a given input from considerationAnThe polonius dump consists of:CiThe components that are enabled on the CLI, using the \xe2\x80\xa6CjWhether this builtin attribute is encoded cross crate. \xe2\x80\xa6BmWhether this attribute is encode cross crate.10CkWhether this attribute should be encoded in metadata files.DgFurther evaluates <code>candidate</code> to decide whether all type \xe2\x80\xa6DcEvaluates a goal from <strong>outside</strong> of the trait solver.00EfReturns the <code>DefId</code> of the <code>exchange_malloc</code> lang item if it \xe2\x80\xa6ClMap for finding the index of an existing node, given its \xe2\x80\xa6ChExpand Drop terminator for async drops into mainline \xe2\x80\xa6Dj<code>include_str!</code>: read the given file, insert it as a literal \xe2\x80\xa6AfThis expands to eitherEbReturns <code>ty::VariantDef</code> if <code>res</code> refers to a struct, or \xe2\x80\xa6EcReturns a string of the form \xe2\x80\x9cexpected <code>{}</code>, found <code>{}</code>\xe2\x80\x9d.CgConstruct a future incompatibility diagnostic for a \xe2\x80\xa6CeThe seed to be used for randomizing a type\xe2\x80\x99s layoutEcReturns <code>true</code> if <code>self</code> includes all lines in all files. \xe2\x80\xa6CnPopulates the mapping region tables in the current function\xe2\x80\xa6CeReturns data based on the keys and values in the map.0ClInvoked all the way at the end to finish off diagnostics \xe2\x80\xa6ClWe create region variables such that they are ordered by \xe2\x80\xa6ClReturns a new Span that extends the original Span to the \xe2\x80\xa6CmThis inherent method takes priority over the trait method \xe2\x80\xa6EcCompute a <code>FnAbi</code> suitable for declaring/defining an <code>fn</code> \xe2\x80\xa60000000BiFormat <code>lazy_static!</code> from \xe2\x80\xa6EfReturns the <code>DefId</code> of the <code>format_placeholder</code> lang item if \xe2\x80\xa6CnEnvironment variables that should always be forwarded from \xe2\x80\xa60CfConvert from a bits value, unsetting any unknown bits.00000000000000000000000000000CbConstruct a DepNode from the given DepKind and \xe2\x80\xa60DgCreate a Scalar from a pointer with an <code>Option&lt;_&gt;</code> \xe2\x80\xa6CbCreates a new index from a given <code>u32</code>.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000FcReturns <code>true</code> if the lint is <code>#[allow]</code>ed or <code>#[expect]</code>ed at \xe2\x80\xa6Df<code>SsaLocals</code> computed equivalence classes between locals \xe2\x80\xa6DbPrints <code>&lt;...&gt;</code> around what <code>f</code> prints.0AlGets declared value by name.DiExtracts comma-separated expressions from <code>tts</code>. On error, \xe2\x80\xa6ClReturns the parameters of a function, with their generic \xe2\x80\xa6BmGets the parent node if it\xe2\x80\x99s an impl block.ChProduce a path from some local caller to the callee. \xe2\x80\xa6DmThe shard is selected by hashing <code>val</code> with <code>FxHasher</code>.CmMaps from an internal MIR region vid to something that we \xe2\x80\xa6ChThe glob reexport that is shadowed by the local binding.CnAccumulates an enabled or disabled feature as specified on \xe2\x80\xa6DfRetrieves the <code>hir::Node</code> corresponding to <code>id</code>.CmReturns an iterator for the nodes in the ancestor tree of \xe2\x80\xa6DiLike <code>hir_span()</code>, but includes the body of items (instead \xe2\x80\xa6BiThis macro requires the following crates:CiFinds the method with the appropriate name (or return \xe2\x80\xa6DfDo <em>NOT</em> call this directly. You probably want to construct \xe2\x80\xa60EdReturns <code>true</code> if <em>any</em> value of the given type could possibly \xe2\x80\xa6EhStart a breakable scope, which tracks where <code>continue</code>, <code>break</code>\xe2\x80\xa6ClStart profiling how long it takes to load a query result \xe2\x80\xa6CfInsert a hidden type into the opaque type storage, \xe2\x80\xa60CkInsert a provisional result into the cache. The result cameCeAre the current module and all of its parents public?CgInstantiates and normalizes the bounds for a given itemClThe idea is that we should ensure that the type variable \xe2\x80\xa60DiConverts this <code>Client</code> into a helper thread to deal with a \xe2\x80\xa6Dc<code>item_binding</code> is non-redundant, happens either when \xe2\x80\xa6CmWhen collecting definitions from an AST fragment produced \xe2\x80\xa6ClThis function tries to produce the most similar OS error \xe2\x80\xa6DkReturns <code>true</code> if an item with this visibility is accessible \xe2\x80\xa6EnCheck if the given <code>DefId</code> is <code>#\\[automatically_derived\\]</code>, <em>and</em>C`Checks if a method is in a diagnostic item traitDjCheck whether the diagnostic item with the given <code>name</code> has \xe2\x80\xa6AoSee <code>Level::Direct</code>.FjThis can happen for <code>async fn</code>, e.g. <code>async fn f&lt;&#39;_&gt;(&amp;&#39;_ self)</code>\xe2\x80\xa60BhCheck if this is an empty DropGlue shim.0CaChecks if the item likely came from a proc-macro.0DeChecks if the given expression is a part of <code>let else</code> \xe2\x80\xa6CmChecks whether the given expression is a constant literal \xe2\x80\xa6CgCheck if given type has interior mutability such as \xe2\x80\xa6CkReturns whether the self-contained linker component was \xe2\x80\xa6BeChecks if we\xe2\x80\x99re in a nightly build.CmWhen parsing a statement, would the start of a path be an \xe2\x80\xa6DdChecks if the given <code>def_id</code> is a stable const fn, in \xe2\x80\xa6DjWhether <code>def_id</code> is a stable const fn (i.e., doesn\xe2\x80\x99t need \xe2\x80\xa6EbCheck if this is an <code>ItemKind::Struct</code> or <code>ItemKind::Union</code>.EhReturns the <code>DefId</code> and the <code>BoundRegionKind</code> corresponding to \xe2\x80\xa6CkCheck if parent of a hir node is a trait implementation \xe2\x80\xa6CmFast path helper for testing if a type is <code>Unpin</code>.DkReturns <code>true</code> if this item is visible anywhere in the local \xe2\x80\xa6CiAre we sure this could not possibly be the start of a \xe2\x80\xa6CkThis is unique in that we construct them per-module, so \xe2\x80\xa60Ed<code>Span</code> to use for <code>tcx.at(span)</code>, from <code>layout_of</code>.DeHelper for lazily initialized <code>alloc_extra.sync</code> data: \xe2\x80\xa6EbLook for <code>&amp;&lt;path_to_local_in_same_body&gt;</code> pattern and emit \xe2\x80\xa6CnFetch and return the user-visible lint level for the given \xe2\x80\xa6CjA diagnostic function for dumping crate metadata to an \xe2\x80\xa6CfReturn whether the cached query result can be decoded.DgReturns the lowest statement in <code>start..=end</code>, where the \xe2\x80\xa6DaEnables the macro helper hack (<code>ident!(...)</code> -&gt; \xe2\x80\xa60DiGiven a <code>tree</code>, make sure that all sequences have the same \xe2\x80\xa6DkFor a global <code>BytePos</code>, computes the local offset within the \xe2\x80\xa6DgLookup the meta-var named <code>ident</code> and return the matched \xe2\x80\xa6DbReturn the SourceFile that contains the given <code>BytePos</code>BoLower generic arguments from the HIR to the \xe2\x80\xa6DiLowers an inline const block (e.g. <code>const { 1 + 1 }</code>) to a \xe2\x80\xa6CnOn macOS, each thread holds a list of destructor functions \xe2\x80\xa60Dm<code>macro_rules</code> scopes produced by <code>macro_rules</code> item \xe2\x80\xa6ClAttaches a local file ID to these coordinates to produce \xe2\x80\xa6CmCreates zero or more items in an <code>extern {}</code> blockCmTakes an expr that has already been lowered and generates \xe2\x80\xa6DgUses the graph information in <code>node_flow_data</code>, together \xe2\x80\xa6DfTries to copy <code>__local_bindN</code> into <code>__captureN</code>.DgReturns a <code>NamedMatch</code> item declared on the LHS given an \xe2\x80\xa6ChMaterializes this mask\xe2\x80\x99s blocks when the mask is lazy.DhObtain the greatest factor of <code>size</code> that is an alignment \xe2\x80\xa6BlThe highest universe nameable by the caller.CbThe highest universe index nameable by the caller.0CjA fast conservative estimate on whether the string can \xe2\x80\xa6DgTries to resolve the target of a <code>pub use</code> statement and \xe2\x80\xa6DgReturns an expression with (when possible) <em>one</em> outer brace \xe2\x80\xa6AfMinimal SpecializationCh[query description - consider adding a doc-comment!] \xe2\x80\xa6000000CnIf this is a \xe2\x80\x9cmodule\xe2\x80\x9d in name resolution sense, return \xe2\x80\xa6DdReturns a <code>Folder</code> that deeply expands all macros and \xe2\x80\xa6ChWhether the intrinsic has no meaningful body and all \xe2\x80\xa60ClReturns whether the intrinsic has no meaningful body and \xe2\x80\xa6ChWhether to ignore any output by the program. This is \xe2\x80\xa605555555CkWhen a \xe2\x80\x9cunknown start of token: \\u{a0}\xe2\x80\x9d has already \xe2\x80\xa6EfThe <code>DefId</code> of the nearest <code>mod</code> item ancestor (which may be \xe2\x80\xa6ChReturns variants that are necessary to exist for the \xe2\x80\xa6BlChecks if the drop order for a type matters.CkWhether the number of opaques has changed in a way that \xe2\x80\xa6000DnIf this tree ends in <code>::self</code>, rewrite it to <code>::{self}</code>.CfThis function attempts to bypass the auto_da_alloc \xe2\x80\xa6DkGet the <code>NonLazyBind</code> LLVM attribute, if the codegen options \xe2\x80\xa6DmReplaces <code>\\r\\n</code> with <code>\\n</code> in-place in <code>src</code>.EnIf we are projecting <code>&lt;T as Trait&gt;::Item</code>, but <code>T: Trait</code> does \xe2\x80\xa6CbGets the number of definitions in a foreign crate.000000CnThis function returns the number of type and const generic \xe2\x80\xa6CcHow many open snapshots this undo log currently hasChIdentifier of the obligation tree to which this node \xe2\x80\xa6CnOpaque types don\xe2\x80\x99t inherit bounds from their parent: for \xe2\x80\xa6ClThis SourceFile\xe2\x80\x99s byte-offset within the source_map of \xe2\x80\xa6CgObtain the output type if the generic arguments are \xe2\x80\xa6CnParses a block. Inner attributes are allowed, block labels \xe2\x80\xa6DdPossibly parses mutability (<code>const</code> or <code>mut</code>).BlParses the <code>--error-format</code> flag.BkParse <code>builtin # ident(args,*)</code>.DbParses a closure expression (e.g., <code>move |args| expr</code>).CiParse a function call expression, <code>expr(...)</code>.DbParse <code>&#39;label: $expr</code>. The label is already parsed.DdParses a foreign item (one in an <code>extern { ... }</code> block).BoMatches <code>COMMASEP(meta_item_inner)</code>.FcParse a range-to pattern, <code>..X</code> or <code>..=X</code> where <code>X</code> remains to \xe2\x80\xa6ChParse a block which takes no attributes and has no labelClParse a type suitable for a function or function pointer \xe2\x80\xa6mBulleted listB`Parses an optional where-clause.DfFind and consume an end pattern, return <code>(match, residual)</code>DdWhether the pattern has a <code>PatKind::Error</code> nested within.CmUsed to determines whether we can infer the expected type \xe2\x80\xa6Eh<code>path_moved_at_base(path, point)</code> when the <code>path</code> was moved at \xe2\x80\xa60CkPeels off all references on the expression. Returns the \xe2\x80\xa6CnPeels expressions from <code>expr</code> that can map a place.FgRemoves <code>AddrOf</code> operators (<code>&amp;</code>) or deref operators (<code>*</code>), but \xe2\x80\xa6EhCreates a <code>Region</code> for a given <code>PlaceholderRegion</code>, or returns \xe2\x80\xa6CkRenders the first paragraph of the provided markdown as \xe2\x80\xa6EdReturns the <code>DefId</code> of the <code>Ready</code> lang item if it is defined.CnTrue if this is a module from other crate that needs to be \xe2\x80\xa6ClEvaluates whether the predicate can be satisfied (by any \xe2\x80\xa60EhPrepare two spans to a combine operation like <code>to</code> or <code>between</code>\xe2\x80\xa6CmPrepare sets of definitions that are relevant to deciding \xe2\x80\xa6ChPrints an expr using syntax that\xe2\x80\x99s acceptable in a \xe2\x80\xa60CmThe Generics from which to emit a where-clause.The number \xe2\x80\xa6ClList of potential private candidates. Will be trimmed to \xe2\x80\xa6CdProcesses a predicate obligation and returns either:Df<code>place_ty.projection_ty_core(tcx, elem, |...| { ... })</code> \xe2\x80\xa6DgThis function takes <code>ProvidedValue</code> and coverts it to an \xe2\x80\xa600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000DiStarts out as <code>None</code> and gets set when rerunning this goal \xe2\x80\xa6ClGet the name of the specified thread. If the thread name \xe2\x80\xa6CeSet the name of the specified thread. If the name \xe2\x80\xa6BjCalled on <code>usize as ptr</code> casts.Ai\xe2\x80\x9cInt-to-pointer cast\xe2\x80\x9d0CnThe randomization seed based on this type\xe2\x80\x99s own repr and \xe2\x80\xa6CmTry returning an immediate for the operand. If the layout \xe2\x80\xa6ChPerform an atomic read operation at the memory location.ChRecords the current parent (if any) as the parent of \xe2\x80\xa6DiRecover on <code>const impl</code> with <code>const</code> already eaten.CmRecover on <code>~expr</code> in favor of <code>!expr</code>.CfThe outlives bounds that we assume must hold about \xe2\x80\xa6DhEach RBP <code>GK: &#39;a</code> is assumed to be true. These encode \xe2\x80\xa6ChFIXME: Your first reaction may be that this is a bit \xe2\x80\xa6AkSee <code>README.md</code>.0CiDetermines if the region variable definitions contain \xe2\x80\xa6DeReturns <code>Some(n)</code> with the number to use for the given \xe2\x80\xa6CaA set of constraints that regionck must validate.CkReturns a name for the region if it is suggestable. See \xe2\x80\xa6ClReindent a multiline string with possibility of ignoring \xe2\x80\xa6CkTreat parameters in both the lhs and the rhs as infer vars.000CmTreat parameters in the lhs as rigid, and in rhs as infer \xe2\x80\xa6000CfTreat parameters in both the lhs and the rhs as rigid.000E`Returns <code>Some</code> if we <em>were</em> able to replace bound vars. If \xe2\x80\xa60DhReport a specialized error when <code>FnMut</code> closures return a \xe2\x80\xa6CeClears all unifications that have been performed, \xe2\x80\xa6BfReports a link that failed to resolve.BlResolution of early vs late bound lifetimes.DiComputes the <code>ResolveBoundVars</code> map that contains data for \xe2\x80\xa6CnDoes lifetime resolution on items. Importantly, we can\xe2\x80\x99t \xe2\x80\xa6CiName resolution for lifetimes and late-bound type and \xe2\x80\xa6111111CmGo through the crate metadata and load any crates that it \xe2\x80\xa6BhResolve instance for a function pointer.CaResolve an instance for a given function pointer.1EbReturns the <code>DefId</code> of the <code>Err</code> lang item if it is defined.CfRewrite macro name without using pretty-printer if \xe2\x80\xa6CnRenders and writes cross-crate info files, like the search \xe2\x80\xa6AjLowers the AST to the HIR.BmCentralized logic for parsing and attributes.AbThe Rust compiler.ftypeckB`Macro support for format stringsBaRustdoc\xe2\x80\x99s JSON output interfaceDdRead-lock the lock by adding the <code>reader</code> the list of \xe2\x80\xa6BnLock by setting the writer that owns the lock.ChRetags an individual pointer, returning the retagged \xe2\x80\xa6CmTest if this value might be null. If the machine does not \xe2\x80\xa6DjReturns the representative <code>RegionVid</code> for a given SCC. See \xe2\x80\xa6ClTurns all components on or off and records that this was \xe2\x80\xa6CjSet the latch, then tickle the specific worker thread, \xe2\x80\xa6DiShifts each element of <code>left</code> by the corresponding element \xe2\x80\xa6ClFor large structs, enums, unions, etc, determine whether \xe2\x80\xa6BmAutomatically generated items marked with \xe2\x80\xa6DjReturns true if we should ignore <code>path_str</code> due to it being \xe2\x80\xa6ChIf we\xe2\x80\x99re actually rustdoc then avoid giving a name \xe2\x80\xa6ChDetermine if a module should be skipped. True if the \xe2\x80\xa6CiWhether or not we should visit a Place with PlaceContext.CiRepresents all of the relevant parts of the coroutine \xe2\x80\xa60000CgTransform <code>&amp;(*a)</code> ==&gt; <code>a</code>.DiIf it\xe2\x80\x99s a singleton list of the form <code>foo(lit)</code>, returns \xe2\x80\xa60BeTree traversal optimizations. See \xe2\x80\xa6CnWhether to skip adding the current trait as a bound to the \xe2\x80\xa6DkSame as <code>span_lint</code> but with an extra <code>help</code> message.FcLike <code>span_lint</code> but with a <code>note</code> section instead of a <code>help</code> \xe2\x80\xa6CcAdd a span lint with a suggestion on how to fix it.DaLike <code>span_lint</code> but allows to add notes, help and \xe2\x80\xa6DcExecute <code>op</code> on every thread in the pool. It will be \xe2\x80\xa6CkThis analyzes a column of constructors corresponding to \xe2\x80\xa6ClLocation of the statement at the given index for a given \xe2\x80\xa6AiCreate a global variable.CmType size assertion. The first argument is a type and the \xe2\x80\xa60DgGenerates <code>let _: Type;</code>, which is usually used for type \xe2\x80\xa6ClStrips all private import statements (use, extern crate) \xe2\x80\xa6DgGet all item paths that were stripped by a <code>#[cfg]</code> in a \xe2\x80\xa6000000ClNames of items that were stripped out via cfg with their \xe2\x80\xa6CkCheck if the trait bound is implemented for a different \xe2\x80\xa6DjIf all conditions are met to identify a returned <code>dyn Trait</code>\xe2\x80\xa6CnThe ranges where we\xe2\x80\x99re allowed to put backticks. This is \xe2\x80\xa6CiComputes the def-ids of the transitive supertraits of \xe2\x80\xa6000000CnFor each allocation, an offset inside that allocation that \xe2\x80\xa60BlReturns a copy of the current panic handler.DcTakes the current thread start callback, leaving <code>None</code>.ClThis set contains the code of all emitted diagnostics to \xe2\x80\xa6DjRetag a pointer. References are passed to <code>from_ref_ty</code> and \xe2\x80\xa6ChRetags an individual pointer, returning the retagged \xe2\x80\xa6BlThe working directory in which to run tests.DbTargets the ARMv4T, with code as <code>t32</code> code by default.DkThe lowest bit indicates read type, the rest is the time. <code>1</code>\xe2\x80\xa6ClReturns the modern CLI flavor that is the counterpart of \xe2\x80\xa6CnReturns the scalar from the first component and optionally \xe2\x80\xa6DaCreate a <code>TokenTree::Token</code> with joint-hidden spacing.CnTokenizes the input while keeping the text associated with \xe2\x80\xa6CkFind the matched nonterminal from the macro invocation, \xe2\x80\xa6CjTransforms an instance for LLVM CFI and cross-language \xe2\x80\xa6DiConvert <code>DiagMessage</code>s to a string, performing translation \xe2\x80\xa6DhA depth-first traversal of the <code>Candidate</code> and all of its \xe2\x80\xa6ChReturns the truncated result, and whether truncation \xe2\x80\xa6CmEvaluates a type system constant making sure to not allow \xe2\x80\xa6CjTry to get information about variables captured by the \xe2\x80\xa6CfCreate a new constant that represents the given value.CfCreate a constant that represents a new zero-sized \xe2\x80\xa6BnPrint out the type for use in value namespace.DcReturns whether the type alias given by <code>DefId</code> is lazy.000000EfGiven the <code>DefId</code>, returns the <code>DefId</code> of the innermost item \xe2\x80\xa6Dkan error that should be emitted when a <code>MetaItemOrLitParser</code> \xe2\x80\xa6CnFind the wrapped inner type of a transparent wrapper. Must \xe2\x80\xa6DjReturn the universe that the region <code>r</code> was created in. For \xe2\x80\xa60EmIf the type is <code>Option&lt;T&gt;</code>, it will return <code>T</code>, otherwise the \xe2\x80\xa6EgReturns the <code>DefId</code> of the <code>unsafe_pinned</code> lang item if it is \xe2\x80\xa6EfReturns the <code>DefId</code> of the <code>unsafe_unpin</code> lang item if it is \xe2\x80\xa6DcUnstable (<code>-Z</code>) options strings to pass to the compiler.ChA map from the macro to all its potentially unused arms.CkLazily update the stack entry for the parent goal. This \xe2\x80\xa6CmThe snapshot in which this context was created. Using the \xe2\x80\xa6000EhUse <code>core::ops::Receiver</code> and <code>core::ops::Receiver::Target</code> as \xe2\x80\xa6Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6CdSet of trait imports actually used in the method \xe2\x80\xa60111111ClStores the canonicalized types provided by the user. See \xe2\x80\xa60CmActive(Only) is valid in reverse-mode AD for scalar float \xe2\x80\xa6BgGeneric atomic operation implementationD`When generalizing <code>&lt;?0 as Trait&gt;::Assoc</code> or \xe2\x80\xa6DgCheck that <code>value</code> is within the limit. Ensures that the \xe2\x80\xa6ChThe visible parent map is a map from every item to a \xe2\x80\xa6000000CmThis method will go through the given module items in two \xe2\x80\xa6AgVisit modules from AST.CjWaits for the worker threads to stop. This is used for \xe2\x80\xa6CnReturns the base type for references and raw pointers, and \xe2\x80\xa6CiWalks up the HIR tree from the given expression in an \xe2\x80\xa6ClIf this binder comes from a where clause, specify how it \xe2\x80\xa6DfEquivalent of <code>Span::def_site</code> from the proc macro API, \xe2\x80\xa60DiCreates an <code>Interner</code> with the predefined symbols from the \xe2\x80\xa6ChCreates a pointer to the given address, with invalid \xe2\x80\xa6BmWrites the discriminant of the given variant.BmWrite a graphviz DOT graph of a list of MIRs.BcShould we write cci to the doc rootCiinfo from this crate and the \xe2\x80\x93include-info-json\xe2\x80\x99d \xe2\x80\xa6CiWrites the static files, the style files, and the css \xe2\x80\xa6DkWrite the name of the variant represented by <code>pat</code>. Used for \xe2\x80\xa6DhThe <code>arithmetic_overflow</code> lint detects that an arithmetic \xe2\x80\xa60B`ABI-incompatible argument types.0CgA pass that runs which is targeted at ensuring that \xe2\x80\xa6DkSimilar to <code>CodegenDone</code>, but for reusing a pre-LTO artifact \xe2\x80\xa6CgRepresents <code>#[rustc_allow_incoherent_impl]</code>.0CaRepresents <code>#[allow_internal_unsafe]</code>.0BlThe region corresponding to a closure upvar.CbChecks for use of anonymous parameters (RFC 1685).DgAllows us to get common arguments from the <code>user_regs_t</code> \xe2\x80\xa6BcA constraint on an associated item.00CiDescribes a bound applied to an associated type/constant.Bbwhen projecting an associated type0CkHow to handle multiple duplicate attributes on the same \xe2\x80\xa60CnStatus when the \xe2\x80\x98*\xe2\x80\x99 has been consumed, but not yet the \xe2\x80\xa6CnStatus when the \xe2\x80\x98/\xe2\x80\x99 has been consumed, but not yet the \xe2\x80\xa6AeBlock implicit return00CkThe shared context used by both the root as well as all \xe2\x80\xa6BcWhich borrow tracking method to use0ClA pattern is a \xe2\x80\x9cbranch\xe2\x80\x9d if it is the immediate child \xe2\x80\xa6BmBuilder type for <code>DocTestBuilder</code>.CmThe size of the temporary stack we use for callbacks that \xe2\x80\xa6DjThe <code>const_item_mutation</code> lint detects attempts to mutate a \xe2\x80\xa60CkA candidate that is registered only during coherence to \xe2\x80\xa600000000BgNon-generic helper for implementing \xe2\x80\xa6CnAll the opaque types that are restricted to concrete types \xe2\x80\xa60CiOutput current config (as if formatting to a file) to \xe2\x80\xa6CbOutput default config to a file, or stdout if NoneB`May this constant have generics?ClThe direction a constraint can flow into. Used to create \xe2\x80\xa6ClControl whether the closing delimiter should be consumed \xe2\x80\xa6BdThe <code>Continue</code> lang item.CeErrors returned when trying to retrieve a literal \xe2\x80\xa6CnCollects coverage-related information during MIR building, \xe2\x80\xa6ClNumber of bits we need to store the number of used bytes \xe2\x80\xa6DaThe <code>dropping_copy_types</code> lint checks for calls to \xe2\x80\xa6DaThe <code>dropping_references</code> lint checks for calls to \xe2\x80\xa6DkDefined by LLVM in <code>llvm/include/llvm/BinaryFormat/Dwarf.h</code>. \xe2\x80\xa6CjInert attributes registered by derive macros, but used \xe2\x80\xa6CeFormats a string as a doc comment using the given \xe2\x80\xa6CgWhich format to use for <code>-Z dump-mono-stats</code>DfImplements the AST traversal for early lint passes. <code>T</code> \xe2\x80\xa6BgA lint pass boxed up as a trait object.CmInformation about the various region constraints involved \xe2\x80\xa6DkAn existential reference to a trait, where <code>Self</code> is erased. \xe2\x80\xa6DfAn existential reference to a trait where <code>Self</code> is not \xe2\x80\xa6111BkHIR visitor which retrieves expanded macro.ClHow many fixpoint iterations we should attempt inside of \xe2\x80\xa6CnThis is currently used to track the CandidateHeadUsages of \xe2\x80\xa6CiThe projection cannot be normalized due to ambiguity. \xe2\x80\xa6DeRepresents a subscope of <code>block</code> for a binding that is \xe2\x80\xa6EbInstantiates a <code>for&lt;&#39;env&gt; ...</code> binder with a specific region.Be<code>fn</code>s from an extern blockCmError E0735: generic parameters with a default cannot use \xe2\x80\xa6CnComputes the variances of regions that appear in the type, \xe2\x80\xa6CcDuplicates after the first attribute will be an \xe2\x80\xa60CkDuplicates preceding the last instance of the attribute \xe2\x80\xa60CeGeneralizes pointers for compatibility with Clang \xe2\x80\xa6DhThe <code>GatherLocalsVisitor</code> is responsible for initializing \xe2\x80\xa6Bj<code>GenericBoundFailure(p, s, a)</code>:00BkThe kind of a <code>GenericParamDef</code>.ChIn GenMC mode, an execution can get stuck in certain \xe2\x80\xa60CeThe constant being evaluated was either a generic \xe2\x80\xa6DgThe <code>incomplete_features</code> lint detects unstable features \xe2\x80\xa6ClThe type this constant evaluated to is not valid for use \xe2\x80\xa6DfThe <code>keyword_idents_2018</code> lint detects edition keywords \xe2\x80\xa6DfThe <code>keyword_idents_2024</code> lint detects edition keywords \xe2\x80\xa6DiThe <code>let_underscore_drop</code> lint checks for statements which \xe2\x80\xa6DiThe <code>let_underscore_lock</code> lint checks for statements which \xe2\x80\xa6DhWhen liberating bound regions, we map their <code>BoundRegionKind</code>0DiA lazy version of <code>AttrTokenStream</code>, which defers creation \xe2\x80\xa6BbAn intermediate resolution result.DiA tuple struct like <code>Markdown</code> that renders only the first \xe2\x80\xa6ChA dataflow analysis that tracks whether a pointer or \xe2\x80\xa60CjInside lists, values could be either literals, or more \xe2\x80\xa6Bodestructor of this type (used in vtable header)BmReasons a method might not be dyn-compatible.00AaResult of the \xe2\x80\xa6000BiA given constant couldn\xe2\x80\x99t be evaluated.00DkA callback that can be provided to <code>inspect_typeck</code>. Invoked \xe2\x80\xa60ChFor the <code>#[rustc_on_unimplemented]</code> attributeDjEach of these variants starts out as <code>Either::Right</code> when it\xe2\x80\xa6ClWhen we canonicalize a value to form a query, we wind up \xe2\x80\xa600CnCharacter code in numeric escape is non-ascii (e.g. \xe2\x80\x98\\xFF\xe2\x80\xa6DhThe <code>OutlivesEnvironment</code> collects information about what \xe2\x80\xa60C`Should the machine panic on allocation failures?0ChThe <code>panic_const_async_fn_resumed</code> lang item.CiThe <code>panic_const_gen_fn_none_panic</code> lang item.CjAn iterator that walks up the ancestor tree of a given \xe2\x80\xa6Bj<code>(..)</code> in return type notation.AkLLVMRustPassBuilderOptLevelAmA type ascription on a place.DgThe inverse of <code>BoundVarReplacer</code>: replaces placeholders \xe2\x80\xa60BcUsing a pointer after it got freed.0DkImplies <code>PoloniusInputFacts</code>, and additionally runs Polonius \xe2\x80\xa6BoResult of <code>PossibleBorrowerVisitor</code>.0DfAn arg in a <code>use&lt;&#39;a, N&gt;</code> precise-capturing bound.CgOne precise capturing argument. See the rust reference.DhThis is a trait matching with a projected type as <code>Self</code>, \xe2\x80\xa600DfThis kind of predicate has no <em>direct</em> correspondent in the \xe2\x80\xa6000ClThis is implemented per query. It allows restoring query \xe2\x80\xa6DiThe <code>redundant_lifetimes</code> lint detects lifetime parameters \xe2\x80\xa60BbCannot read directory entry of \xe2\x80\xa6Bme.g., <code>fn foo(&amp;self, x: Self)</code>00CjThe \xe2\x80\x9cregion highlights\xe2\x80\x9d are used to control region \xe2\x80\xa60CmDescribes what to highlight to explain to the user that we\xe2\x80\xa6CcA simplified version of <code>ast::ItemKind</code>.CkResolutions that should only be used for lowering. This \xe2\x80\xa6CjA universally quantified region from the root universe \xe2\x80\xa6DgA list of <code>format!</code>-like macros, that take a long format \xe2\x80\xa6DiThe <code>special_module_name</code> lint detects module declarations \xe2\x80\xa6CeThis type is never constructed. We only use it to \xe2\x80\xa6CnReturn type for the <code>shallow_lint_levels_on</code> query.ClReturn type of a call expression must be <code>Sized</code>.00CaCaptured closure type must be <code>Sized</code>.00CmAn indexed multi-map that preserves insertion order while \xe2\x80\xa60CfRepresents <code>#[rustc_specialization_trait]</code>.0CkDescribes the result of analyzing the constructors in a \xe2\x80\xa6ClDetect if a goal is stalled on a coroutine that is owned \xe2\x80\xa60BgHelper struct for deserializing the \xe2\x80\xa6CeDefines the default value for the given style editionBfThe different things we could suggest.AhA syntax extension kind.EhModifiers on a trait bound like <code>[const]</code>, <code>?</code> and <code>!</code>.AoThe modifiers on a trait bound.Cg\xe2\x80\xa6an error occurred matching <code>T : TraitRef</code>DkThe span information for the two where clauses on a <code>TyAlias</code>\xe2\x80\xa6EeThis trait makes <code>ExprUseVisitor</code> usable with both <code>FnCtxt</code> \xe2\x80\xa6DfThe <code>uncommon_codepoints</code> lint detects uncommon Unicode \xe2\x80\xa6DgThe <code>unconditional_panic</code> lint detects an operation that \xe2\x80\xa60DkThe <code>unescaped_backticks</code> lint detects unescaped backticks (`\xe2\x80\xa6CnThe version of Unicode that this version of unicode-xid is \xe2\x80\xa6DkThe <code>unknown_crate_types</code> lint detects an unknown crate type \xe2\x80\xa60DkThe <code>unused_doc_comments</code> lint detects doc comments that aren\xe2\x80\xa60BdUnicode escape code in byte literal.BkRepresents unix-specific file descriptions.CbThe <code>unsized_const_param_ty</code> lang item.DiOnly reachable if the <code>unsized_fn_params</code> feature is used. \xe2\x80\xa600CkReading a C string that does not end within its allocation.0BlA collection of projections into user types.CmThe version placeholder that recently stabilized features \xe2\x80\xa60DkUsed in <code>check_validity_requirement</code> to indicate the kind of \xe2\x80\xa6DjA type ascription on a value, e.g. <code>type_ascribe!(42, i32)</code> \xe2\x80\xa6CeWhen <code>--document-private-items</code> is passed.mA type bound.DoA type bound (e.g., <code>for&lt;&#39;c&gt; Foo: Send + Clone + &#39;c</code>).BgLocation where the borrow is activated.0ChReturn the current thread, should be the same as the \xe2\x80\xa6BfBorrow the stack of the active thread.ClLoad the current vector clock in use and the current set \xe2\x80\xa6CgWe need to communicate five things to the linker on \xe2\x80\xa6BjAdds an inactive thread. This cannot fail.EgRegisters the <code>OutlivesBound</code> items from <code>outlives_bounds</code> in \xe2\x80\xa6DhAllocates an <code>environ</code> block with the given list of pointers.BoAllocate enough memory to store a Path as a \xe2\x80\xa6CbWhether this projection can be soundly normalized.CkWhen probing for names, include names that are close to theCjThe MinGW toolchain has a known issue that prevents it \xe2\x80\xa6CmFinds all newlines, multi-byte characters, and non-narrow \xe2\x80\xa6ChApply the effects of an acquire fence to this set of \xe2\x80\xa6ChApplies <code>f</code> to the cursor\xe2\x80\x99s internal state.FdSame as <code>apply</code>, but <code>NotInModule(_)</code> predicates yield <code>false</code>. \xe2\x80\xa6ClApply this newline style to the formatted text. When the \xe2\x80\xa6CnApply the effects of a release fence to this set of thread \xe2\x80\xa6CnComputes the set of target features used in a function for \xe2\x80\xa6Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6000000EcEmits an <code>assume</code> call that <code>imm</code>\xe2\x80\x99s value is within the \xe2\x80\xa6EgReturns the <code>DefId</code> of the <code>async_fn_once</code> lang item if it is \xe2\x80\xa6CiChecks that an atomic access is legal at the given place.CiDetect data-races with an atomic write, either with a \xe2\x80\xa6DgError on <code>mut $pat</code> where <code>$pat</code> is not an ident.CiMakes a doc string more presentable to users. Used by \xe2\x80\xa6CkHook for performing extra checks on any memory read access,0CnHook for performing extra checks on a memory write access. \xe2\x80\xa60DoUses a sorted slice <code>data: &amp;[E]</code> as a kind of \xe2\x80\x9cmulti-map\xe2\x80\x9d\xe2\x80\xa6EgReturns the <code>DefId</code> of the <code>bitand_assign</code> lang item if it is \xe2\x80\xa6EgReturns the <code>DefId</code> of the <code>bitxor_assign</code> lang item if it is \xe2\x80\xa6BfConstant to use in switch target valueBjSets up the drops for explicit tail calls.CkUsed for storing lints generated during expansion, like \xe2\x80\xa6DiCreates a <code>DW_TAG_member</code> entry inside the DIE represented \xe2\x80\xa6CnAfter we obtain a fresh AST fragment from a macro, code in \xe2\x80\xa6CfConstruct a map of items shown in the sidebar to a \xe2\x80\xa6CnThe drop index that will drop everything in and below this \xe2\x80\xa6CjChecks whether we can add a return type to a function. \xe2\x80\xa6DkReturns <code>true</code> only if local is a binding that can itself be \xe2\x80\xa6DgReturns <code>true</code> if the token can appear at the start of a \xe2\x80\xa6ChDetermines whether can we safely cache the result of \xe2\x80\xa6BnTrue if a (potentially higher-ranked) outlivesCeChecks if two expressions can be mutably borrowed \xe2\x80\xa6DhGiven a type variable <code>ty_var</code> of the given kind, first checkClFor each Place that is captured by the closure, we track \xe2\x80\xa6CnGiven an expression referencing a local, determines how it \xe2\x80\xa6EbReturns the <code>DefId</code> of the <code>Continue</code> lang item if it is \xe2\x80\xa6DcReturns character direction of the <code>LanguageIdentifier</code>.0ClLow-level helper function to check if a ptr is in-bounds \xe2\x80\xa6BjType check the length of an array pattern.ChChecks that a call expression does not try to pass a \xe2\x80\xa6CkEmits fatal error if function declaration has more than \xe2\x80\xa6Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6000000CkCheck that never patterns are only used on inhabited types.C`Checks that a meta-variable occurrence is valid.CfWhether to also run the listed lints on private items.0ChGiven a map from target_features to whether they are \xe2\x80\xa64444444ClChecks where-clauses and inline bounds that are declared \xe2\x80\xa6BgCleanup all async drops (reset to sync)DbCaches <code>CoerceUnsized</code> kinds for impls on custom types.000000EhCoerces <code>src</code>, which is a reference to a value of type <code>src_ty</code>\xe2\x80\xa6CfCollapse a goto chain starting from <code>start</code>CjReturns a query map representing active query jobs. It \xe2\x80\xa6CnPreprocess all the annotations so that they are grouped by \xe2\x80\xa6ClCollects all macro invocations reachable at this time in \xe2\x80\xa6CnCollect types that require specific explanations when they \xe2\x80\xa6ChCollects trait impls for each item in the crate. For \xe2\x80\xa6CeChecks that a method from an impl conforms to the \xe2\x80\xa6CaThe maximum pattern complexity limit was reached.DdFor each local, save the place corresponding to <code>*local</code>.CiComputes the symbol name for the given instance. This \xe2\x80\xa6CkWhether this inference context should care about region \xe2\x80\xa60EdReturns the <em>default</em> of the const pararameter given by <code>DefId</code>\xe2\x80\xa6000000DkCopies the data from an operand to a place. <code>allow_transmute</code>\xe2\x80\xa6DnType returned by <code>await</code>ing the output i.e. <code>f().await</code>.DaCount how many metavars declarations are in <code>matcher</code>.CbReturns the section name to use when embedding \xe2\x80\xa6DkGiven that we are deriving a trait <code>DerivedTrait</code> for a type \xe2\x80\xa6CnFor rlibs we \xe2\x80\x9cpack\xe2\x80\x9d rustc metadata into a dummy object \xe2\x80\xa6EgOnly used for better errors on <code>let &lt;pat&gt;: &lt;expr, not type&gt;;</code>\xe2\x80\xa6CmReturns the number of threads in the current registry. If \xe2\x80\xa6CkReturns the number of threads in the current registry. ThisCkReturns the (current) number of threads in the thread pool.CnReturn the <code>SourceInfo</code> of the current instruction.CnA constant propagation optimization pass based on dataflow \xe2\x80\xa6CkThe number of goals currently in the search graph. This \xe2\x80\xa6000DeDetecting usage of the <code>#[debugger_visualizer]</code> attribute.Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6000000ChReturns the deduced parameter attributes for a function.BbCheck if definition matches a pathCkLabels for where incompatibility-causing by-ref default \xe2\x80\xa60AkReturns a path to a module.CeDetermine the submodule path for the given module \xe2\x80\xa6CnError Reporting for Anonymous Region Lifetime Errors where \xe2\x80\xa6CjDisallow attaching suggestions to this diagnostic. Any \xe2\x80\xa6CjThe components that are disabled on the CLI, using the \xe2\x80\xa6BjReport an error in the link disambiguator.DgWhenever we introduce an adjustment from <code>!</code> into a type \xe2\x80\xa6CeIf there is a doctest offset, applies it to the line.CnUsed for better error messages when operand types are used \xe2\x80\xa6DgEmit a lint at <code>span</code> from a lint struct (some type that \xe2\x80\xa6DkEmit facts about the outlives constraints: the <code>subset</code> base \xe2\x80\xa6DjEmit a lint at <code>span</code> from a lazily-constructed lint struct \xe2\x80\xa60ChEmit a timestamp with start/end of a timing section. \xe2\x80\xa6CmEmit list of unused externs. Currently only supported for \xe2\x80\xa6CnThis set contains a hash of every diagnostic that has been \xe2\x80\xa6CmReturns the physical counter for the given node, creating \xe2\x80\xa6EaDetermines the result of <code>min</code>/<code>max</code> on floats when the \xe2\x80\xa60oProduce &quot;.nProduce &#39;.BkDo not call this query directly: invoke \xe2\x80\xa6000000CfEvaluate a given predicate, capturing overflow and \xe2\x80\xa60CkThe core logic responsible for computing the bounds for \xe2\x80\xa6DdExecutes <code>func</code> as a job in scope. Adjusts the \xe2\x80\x9cjob \xe2\x80\xa6Chemit an error that a <code>name</code> was expected hereDgemit an error that a <code>name = value</code> pair was expected at \xe2\x80\xa6ClAn associated type was expected and a different type was \xe2\x80\xa6DdIf an expression ends with <code>}</code>, returns the innermost \xe2\x80\xa6EdDetermine the type certainty of <code>expr</code>. <code>in_arg</code> indicates \xe2\x80\xa6CkReturns attributes that are within <code>outer_span</code>.EfFinds the arguments of an <code>assert_eq!</code> or <code>debug_assert_eq!</code> \xe2\x80\xa6BbEntry point to all function calls.0DfIf <code>node</code> is the \xe2\x80\x9cfirst node\xe2\x80\x9d in a macro expansion, \xe2\x80\xa6BiSpan where the name is first re-exported.CeFlattens nested <code>format_args!()</code> into one.BfEnsure that the ABI makes basic sense.DhReplaces all free regions in <code>value</code> with region vids, as \xe2\x80\xa6DhDebugging aid: Invokes the <code>with_msg</code> callback repeatedly \xe2\x80\xa6CnLooks at the item bounds of the projection or opaque type. \xe2\x80\xa6CfThe red/green evaluation system will try to mark a \xe2\x80\xa60CnTurn the given error into a human-readable string. Expects \xe2\x80\xa60CnGiven a set of generics defined on a type or impl, returns \xe2\x80\xa60DgReturns a set of generic parameters for the method <em>receiver</em>\xe2\x80\xa6ClThe caller must guarantee that the given provenance list \xe2\x80\xa6CdThis function can be used to manually fulfill an \xe2\x80\xa60DhAttempt to fulfill all obligations of <code>target_impl</code> after \xe2\x80\xa6CnCreate a typing environment with no where-clauses in scope \xe2\x80\xa6ClAn occurs check failure inside of an alias does not mean \xe2\x80\xa6CdThe innermost definition that introduces generic \xe2\x80\xa6ClReturn the <code>extra</code> field of the given allocation.E`Returns the associated type <code>name</code> for <code>self_ty</code> as an \xe2\x80\xa6BjReturns attributes on the given statement.CjThis is the entirely abstraction-violating way to just \xe2\x80\xa6CkGet the codegen backend based on the name and specified \xe2\x80\xa6ChGet an attribute from the diagnostic attribute namespaceD`Obtain the given diagnostic item\xe2\x80\x99s <code>DefId</code>. Use \xe2\x80\xa6BcObtain the diagnostic item\xe2\x80\x99s nameBaGets the enclosing block, if any.CcConcatenate colons and idents as one when possible.CiIterates over all named children of the given module, \xe2\x80\xa6CmUsed to update the current dataflow state with the effect \xe2\x80\xa60CnCall this to turn untagged \xe2\x80\x9cglobal\xe2\x80\x9d pointers (obtained \xe2\x80\xa6DkReturns the index in <code>fields</code> up to which a field belongs to \xe2\x80\xa6CmGiven a potentially unclosed inline code, attempt to find \xe2\x80\xa6C`Handles the <code>catch_unwind</code> intrinsic.CiLogic for lowering higher-kinded outlives constraints \xe2\x80\xa6CbDetermines whether an item is annotated with a \xe2\x80\xa6FnReturns <code>true</code> if <code>attrs</code> contains a <code>cfg</code> or <code>cfg_attr</code> attributeDjReturns <code>true</code> if <code>sugg</code> is enclosed in parenthesis.ClIndicates whether this diagnostic should show up in cargo\xe2\x80\xa6CkIndicates whether this lint should show up in cargo\xe2\x80\x99s \xe2\x80\xa6CaTest if some adjustment has some implicit borrow.CmWhether any fields have been removed from the result, due \xe2\x80\xa60CkWhether any variants have been removed from the result, \xe2\x80\xa6AlHave all threads terminated?EaHighlights the region inference variable <code>vid</code> as <code>&#39;N</code>.CcAdd a hint to add a missing borrow or remove an \xe2\x80\xa6DgReturns the <code>BodyOwnerKind</code> of this <code>LocalDefId</code>.FeRetrieves the <code>OwnerId</code> for <code>id</code>\xe2\x80\x99s parent item, or <code>id</code> itself \xe2\x80\xa6B`Walks the attributes in a crate.DhConvert back to a <code>thir::PatRangeBoundary</code> for diagnostic \xe2\x80\xa6CnBoth paths should only be modules. This is because modules \xe2\x80\xa6CkIf true, then statement discards result from evaluating \xe2\x80\xa6C`Returns the immediate dominator of node, if any.DkGet a <code>hir::Impl</code> if the node is an impl block for the given \xe2\x80\xa6CfThis exists as an optimization to compute only the \xe2\x80\xa6CkThis is equivalent to computing the super-predicates of \xe2\x80\xa60Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6000000111DfImports all <code>SourceFile</code>s from the given crate into the \xe2\x80\xa6CjReturns an iterator over associated items in the order \xe2\x80\xa6EcReturns <code>true</code> if <code>span</code> originates in a derive-macro\xe2\x80\x99s \xe2\x80\xa6DgCreates a \xe2\x80\x9cfork-join\xe2\x80\x9d scope <code>s</code> with FIFO order, and \xe2\x80\xa60CmCreates a scope that spawns work into this thread-pool in \xe2\x80\xa65555555CkStart profiling how long it takes to hash query results \xe2\x80\xa6DkCalculates the forest of <code>DefId</code>s from which this variant is \xe2\x80\xa6CbSets up the \xe2\x80\x9cextern statics\xe2\x80\x9d for this machine.EeReturns <code>true</code> if we were succssful, <code>false</code> if we would block.EbReturns <code>true</code> if the path <code>mpi</code> (or some part of it) is \xe2\x80\xa6BlSets every cell in <code>row</code> to true.BaInsert all bits in the given row.CnWhen encountering a cycle, both inductive and coinductive, \xe2\x80\xa6ChWhether inserting extra indent spaces in code block, \xe2\x80\xa6CjInsert a file description, giving it a file descriptor \xe2\x80\xa6CcA utility module to inspect currently ambiguous \xe2\x80\xa6DkEmits a call to <code>llvm.instrprof.increment</code>. Used by coverage \xe2\x80\xa6CbHandles \xe2\x80\x98IntToInt\xe2\x80\x99 and \xe2\x80\x98IntToFloat\xe2\x80\x99 casts.CmTracks some rows above this one that have an intersection \xe2\x80\xa6DoCreates a <code>ResultsCursor</code> that takes ownership of <code>self</code>.CcCreates a static <code>JobRef</code> from this job.CjReturns true if the character is within a commented stringCiWhether the trait impl is marked const. This does not \xe2\x80\xa6ClChecks if a method is defined in an impl of a diagnostic \xe2\x80\xa6EjReturn whether <code>span</code> is generated by <code>async</code> or <code>await</code>.CgChecks if we are currently in a const context (e.g. \xe2\x80\xa6DeReturns <code>true</code> if the expression is in the program\xe2\x80\x99s \xe2\x80\xa6DgChecks if the function containing the given <code>HirId</code> is a \xe2\x80\xa6DiIs this a possibly malformed start of a <code>macro_rules! foo</code> \xe2\x80\xa6CkReturns whether there is a parser for an attribute with \xe2\x80\xa6DaReturns <code>true</code> if this place context represents an \xe2\x80\xa6CbWhether this is the header for a proc-macro crate.Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6000000CnFast path helper for testing if a type is <code>Freeze</code>.EdReturns <code>true</code> if <code>r</code> is a member of this set of universal \xe2\x80\xa6EhReturn <code>true</code> if the supplied <code>CrateNum</code> is \xe2\x80\x9cuser-visible,\xe2\x80\x9d\xe2\x80\xa6CmIf the item has doc comments from a reexport, returns the \xe2\x80\xa6BmFinds the fixpoint for this dataflow problem.0Ailatch to track job countsDk<code>true</code> if we\xe2\x80\x99re emitting a JSON blob containing the unused \xe2\x80\xa600BkWhether doctests should emit unused externsDeReturns <code>true</code> if the last line of pat_str has leading \xe2\x80\xa69999999BiEnforce some basic invariants on layouts.CnBehavior for the self-contained linking mode: inferred for \xe2\x80\xa6EeWhether collapsible <code>if</code> and <code>else if</code> chains are linted if \xe2\x80\xa60CiParses a <code>LitKind</code> to a <code>Constant</code>.Ef<code>loan_invalidated_at(point, loan)</code> indicates that the <code>loan</code> \xe2\x80\xa60CiConstruct a temporary lifetime restricted to just the \xe2\x80\xa6DmThe shard is selected by hashing <code>val</code> with <code>FxHasher</code>.CmTry to fetch a previously computed result from the global \xe2\x80\xa6CjLookup an array of immediates from any linker sections \xe2\x80\xa6DgHelper for <code>make_canonicalized_query_response</code> that does \xe2\x80\xa6CmCreates a counter whose value is <code>lhs - SUM(rhs)</code>.CiThe maximum number of bool parameters a function can have0CkCheck if a constant may contain provenance information. \xe2\x80\xa6BkMaybe convert a attribute from hir to json.F`Prints <code>(...)</code> around what <code>f</code> prints if <code>parenthesized</code> is \xe2\x80\xa60FePerforms <code>num_copies</code> many copies of <code>size</code> many bytes from <code>src</code>\xe2\x80\xa6CoHandle the <code>${concat(...)}</code> metavariable expression.ChBare MIPS32r2, little endian, softfloat, O32 calling \xe2\x80\xa6BoObtain all the calls into other local functions000000ClGet the name of the symbol that\xe2\x80\x99s linked against for a \xe2\x80\xa6CnError Reporting for Anonymous Region Lifetime Errors where \xe2\x80\xa6CjQueues the addition of a new temporary with additional \xe2\x80\xa6CgCompute SCCs and annotate them with a user-supplied \xe2\x80\xa6DgJust a convenient wrapper of <code>next_region_var</code> for using \xe2\x80\xa60CfWhether <code>#[no_implicit_prelude]</code> is active.CjNodeIds that are lowered inside the current HIR owner. \xe2\x80\xa6ClCalculates a normalized byte position from a byte offset \xe2\x80\xa6ClAdd note if <code>impl Trait</code> is explicitly specified.CcThe number of terminators that have been evaluated.0BaCaches for opaque type inference.DiGives access to the HIR nodes and bodies inside <code>key</code> if it\xe2\x80\xa6000000EcReturns the <code>DefId</code> of the <code>None</code> lang item if it is defined.EcReturns the <code>DefId</code> of the <code>Some</code> lang item if it is defined.CnContains utilities for generating suggestions for borrowck \xe2\x80\xa6CkType returned by calling the closure i.e. <code>f()</code>.EgReturns the <code>DefId</code> of the <code>panic_cannot_unwind</code> lang item if \xe2\x80\xa6CiReturns the set of parameters constrained by the impl \xe2\x80\xa6BoParse <code>&quot;continue&quot; label?</code>.CgParses the <code>|arg, arg|</code> header of a closure.nParse a bound.EeMatches <code>lit = true | false | token_lit</code>. Returns <code>None</code> if \xe2\x80\xa6BcParses a single function parameter.DiParse a pattern and (maybe) a <code>Colon</code> in positions where a \xe2\x80\xa6DfParse a mutable binding with the <code>mut</code> token already eaten.AfParse macro invocationAoParse a range pattern end boundBcParses a type starting with a path.DhReturns a CSS property name. Ends when encountering a <code>:</code> \xe2\x80\xa6CnParses a sequence, including both delimiters. The function \xe2\x80\xa6C`Parses a <code>UseTreeKind::Nested(list)</code>.EnConstruct a <code>Pat</code> with the <code>HirId</code> of <code>p.id</code> already lowered.ChReturn a \xe2\x80\x9cerror message-able\xe2\x80\x9d ident for the last \xe2\x80\xa6CnCheck paths by their resolution instead of exact equality. \xe2\x80\xa60CkPeels off all unary operators of an expression. Returns \xe2\x80\xa6DgPeels of expressions while the given closure returns <code>Some</code>.EkPeel <code>Option&lt;\xe2\x80\xa6&gt;</code> from <code>hir_ty</code> as long as the HIR name is \xe2\x80\xa6CePeels off all references on the type. Returns the \xe2\x80\xa6CiWhen we encounter a 2-phase borrow statement, it will \xe2\x80\xa6CiBuffered indentation to avoid writing trailing whitespaceDaMaps from a <code>ty::Placeholder</code> to the corresponding \xe2\x80\xa6DfConverts a <code>Location</code> into a <code>PointIndex</code>. O(1).EgReturns the <code>DefId</code> of the <code>pointee_sized</code> lang item if it is \xe2\x80\xa6CkLow-level helper that pops a stack frame from the stack \xe2\x80\xa6ClSpan where the named argument is used by position and is \xe2\x80\xa6CkGiven two universal regions, returns the postdominating \xe2\x80\xa6ClPicks what I am referring to as the \xe2\x80\x9cpostdominating\xe2\x80\x9d \xe2\x80\xa6E`Returns <code>true</code> if the trait predicate may apply for <em>some</em> \xe2\x80\xa6DkBuilds <code>MatchPairTree</code> subtrees for the prefix/middle/suffix \xe2\x80\xa6CnConvert the function\xe2\x80\x99s coverage-counter expressions into \xe2\x80\xa6CfPrepend <code>self.attrs</code> to <code>attrs</code>.CnFor debugging purposes, returns a pretty-printed string of \xe2\x80\xa6DiReturns the DefId of the module with <code>rustc_doc_primitive</code> \xe2\x80\xa6CiCache of where documentation for primitives can be found.CnWhether the place is a private uninhabited field. If so we \xe2\x80\xa6CiPerforms a fixpoint computation over the obligation list.DeProject to the given <em>named</em> field (which must be a struct \xe2\x80\xa6DhFor each SCC S, iterate over each successor S1 where <code>S: S1</code>:BdPropagates stability to child items.CmOffsets a pointer by some multiple of its type, returning \xe2\x80\xa6EfPush a <code>tag</code>-prefixed base 62 integer, when larger than <code>0</code>, \xe2\x80\xa6Ca<code>pm.range_ptrs_is_empty(r, cx)</code> == \xe2\x80\xa6DbReturns a <code>DenseBitSet</code> containing all basic blocks \xe2\x80\xa6CmWe will generate CandidateSteps which are reachable via a \xe2\x80\xa6000CgMake an association between a sub-expression and an \xe2\x80\xa6DfRecords the lifetime of a local variable as <code>cx.var_parent</code>F`Recover on <code>...</code> or <code>_</code> as if it were <code>..</code> to avoid further \xe2\x80\xa6DhIf the pattern is an <code>or</code> pattern, call the function once \xe2\x80\xa6EcGet the region outlived by <code>longer_fr</code> and live at <code>element</code>.EdReturns a vector of free regions <code>x</code> such that <code>fr1: x</code> is \xe2\x80\xa6AhRegisters an obligation.ChRegister predicates that must hold in order for this \xe2\x80\xa600000000CjInstruct the supervisor process to return a particular \xe2\x80\xa60EaThe various <code>impl&lt;T: FnPtr&gt; Trait for T</code> in libcore are more \xe2\x80\xa6CnHelper function used inside the shims of foreign functions \xe2\x80\xa6ClFor the given node, yields the subset of its predecessor \xe2\x80\xa6CnProperly removes a node. The node to be removed should not \xe2\x80\xa6DdReport an error because the universal region <code>fr</code> was \xe2\x80\xa6CkThe visitor checks that each component type is at least \xe2\x80\xa6CnArising from <code>source</code>, resolve a top level pattern.DkWhen evaluating a <code>trait</code> use its associated types\xe2\x80\x99 idents \xe2\x80\xa6BmUsed to reset current module\xe2\x80\x99s information.ChReduces Align to an aligned factor of <code>size</code>.CjFrom an initial level and source, verify the effect of \xe2\x80\xa6BjUndo <code>glob_adjust</code> if possible:BeUsed by the Rust 2024 migration lint.ClCrate that implements what will become the rustc side of \xe2\x80\xa6CiResets the cursor to hold the entry set for the given \xe2\x80\xa6CjResets the cursor to hold the state prior to the first \xe2\x80\xa6Cdkeep this in sync with the event filter names in \xe2\x80\xa600EgFreezes an <code>AllocId</code> created with <code>reserve</code> by pointing it at \xe2\x80\xa6CfStarts the worker threads (if that has not already \xe2\x80\xa6BmCandidates that were shadowed by supertraits.ChChecks if should show explanations about \xe2\x80\x9crustc \xe2\x80\x93\xe2\x80\xa6BnSpecial case for enums with no fields. Builds:CcAdds trait implementations into the blocks of linksCgGiven a closure signature, returns an equivalent fn \xe2\x80\xa6ClWhether or not SIMD types are passed by reference in the \xe2\x80\xa6CnBuilds the set of functions that should be skipped for the \xe2\x80\xa6000000DhExtends the given <code>Span</code> to contain the entire line it is on.EdReturns the source snippet as <code>String</code> after the given <code>Span</code>.EeReturns the source snippet as <code>String</code> before the given <code>Span</code>.CmUsed to determine whether the standard library is allowed \xe2\x80\xa6ClStashed diagnostics emitted in one stage of the compiler \xe2\x80\xa6AiCreate a global constant.CnThis statement requires a semicolon after it. note that in \xe2\x80\xa6CmTable for mapping struct IDs into struct constructor IDs, \xe2\x80\xa6DkCollects the bindings for a <code>MatchTreeSubBranch</code>, preserving \xe2\x80\xa6CiSubtracts an inactive thread. This cannot fail. It is \xe2\x80\xa6CmMacro namespace is separated into two sub-namespaces, one \xe2\x80\xa6ClSubtracts a sleeping thread. This cannot fail, but it is \xe2\x80\xa6CmConvenience function for internal use, clients should use \xe2\x80\xa6CdSuggests to add missing argument(s) when current \xe2\x80\xa6CnAdds a suggestion to call the given method to the provided \xe2\x80\xa6BeSuggest to completely remove an item.DhType parameter needs more bounds. The trivial case is <code>T</code> \xe2\x80\xa6CnReturns true if and only if the underlying writer supports \xe2\x80\xa6CnWhether the given expression should be changed to evaluate \xe2\x80\xa6DiSome contexts create <code>DiagCtxtHandle</code> with this field set, \xe2\x80\xa6CkTakes (and clears) the current set of constraints. Note \xe2\x80\xa60DiUsed as the temp scope for lowering <code>expr</code>. If absent (for \xe2\x80\xa6CgLocation of the terminator for a given basic block. \xe2\x80\xa6ChTry to build an abstract representation of the given \xe2\x80\xa6000000CkBuilds an abstract const, do not use this directly, but \xe2\x80\xa6CnStores which thread is eligible to run on which CPUs. This \xe2\x80\xa60ClGet the name of the current thread for display purposes; \xe2\x80\xa6CfA mapping from a thread-local static to the thread \xe2\x80\xa60CmReturns the type a reference to the thread local takes in \xe2\x80\xa6DcTargets the ARMv5TE, with code as <code>t32</code> code by default.DkReturns the <code>RegionVid</code> corresponding to the region returned \xe2\x80\xa6ClWhen we create a closure, we record its kind (i.e., what \xe2\x80\xa6CgThe maximum size of objects (in bytes) that will be \xe2\x80\xa60CjMacro for generating OptionsTargetsModifiers top-level \xe2\x80\xa6DjIf the given <code>DefId</code> is an associated item of a trait impl, \xe2\x80\xa6DhGets the <code>hir::TraitRef</code> of the trait the given method is \xe2\x80\xa6C`Turn <code>$(...)*</code> sequences into tokens.DkStores the types involved in calls to <code>transmute</code> intrinsic. \xe2\x80\xa60Dh<code>true</code> if we traversed a back edge while walking from the \xe2\x80\xa6CkThis exists purely for testing the interactions between \xe2\x80\xa6DkA query to trigger a delayed bug. Clearly, if one has a <code>tcx</code>\xe2\x80\xa6111111CmAllocates the elements of this iterator into a contiguous \xe2\x80\xa6DjThis runs <code>for_each</code> in parallel for each iterator item. If \xe2\x80\xa60CmProvides a default fold for a recursive type of interest. \xe2\x80\xa60000CfConvenience method to extract the value of a usize \xe2\x80\xa6CjCheck if this is a value of primitive type, and if yes \xe2\x80\xa6AmIs type known to be non-null?EfGiven a <code>ty</code>, return whether it\xe2\x80\x99s an <code>impl Future&lt;...&gt;</code>.DhGiven a known <code>param_env</code> and a set of well formed types, \xe2\x80\xa6DkResolved definitions for <code>&lt;T&gt;::X</code> associated paths and \xe2\x80\xa60CeReturn an LLVM type that has at most the required \xe2\x80\xa6ChReturns a type metadata identifier for the specified \xe2\x80\xa60CmReturns a KCFI type metadata identifier for the specified \xe2\x80\xa6CmExtract the <code>LintStore</code> from <code>Session</code>.0C`Detects unescaped backticks (`) in doc comments.CbReturns a dummy layout for an uninhabited variant.EhReturns <code>true</code> if all the elements in the value of <code>scc_b</code> are \xe2\x80\xa6BnUnstable candidates alongside the stable ones.0BfList of unused externs by their names.0CkTrack how an extern crate has been loaded. Called after \xe2\x80\xa6DhUses <code>fn source_cost</code> to determine whether this inference \xe2\x80\xa6CnThis will either store the canonicalized types provided by \xe2\x80\xa60BoUpdate the data-race detector for an atomic \xe2\x80\xa6AnValidate the given crate name.CeThe source that led to each variant being created \xe2\x80\xa60CkReturns an iterator over all user-defined variables and \xe2\x80\xa6CgReturns the keys of all variables created since the \xe2\x80\xa6ClReturns a range of the type variables created during the \xe2\x80\xa6DkReturns the <code>DIFlags</code> corresponding to the visibility of the \xe2\x80\xa6CiThis is called for every constant in the MIR body and \xe2\x80\xa60CmThis does not walk the MIR of the constant as that is not \xe2\x80\xa6C`Walks a node that has never been visited before.ClProduces warning on the given node, if the current point \xe2\x80\xa6Ef<code>#[rustc_on_unimplemented]</code> and <code>#[diagnostic::...]</code> don\xe2\x80\x99t \xe2\x80\xa6DgEquivalent of <code>Span::call_site</code> from the proc macro API, \xe2\x80\xa60CjCreate an empty buffer with capacity for the specified \xe2\x80\xa6DgAs an optimization, you can create a <code>CoerceMany</code> with a \xe2\x80\xa6DkProduces a span with the same location as <code>self</code> and context \xe2\x80\xa6ChOne \xe2\x80\x9csleep state\xe2\x80\x9d per worker. Used to track if a \xe2\x80\xa6ClWrite a Path to the machine memory (as a null-terminated \xe2\x80\xa6ChWrite all the pending elements sharing a same (or at \xe2\x80\xa6CiPerform an atomic write operation at the memory location.BlWrite formatted output to a termcolor bufferDhInvoke <code>xcrun --sdk $sdk_name --show-sdk-path</code> to get the \xe2\x80\xa6CjA flag that indicates that we should change the active \xe2\x80\xa6C`Change the active thread to some enabled thread.1DkThe <code>anonymous_parameters</code> lint detects anonymous parameters \xe2\x80\xa6CgMIR visitor extracting point-wise facts about accesses.ClThe type for a closure that gets invoked before starting \xe2\x80\xa6BbUsed a pointer with bad alignment.0CiRepresents <code>#[rustc_allow_const_fn_unstable]</code>.0DhObligations to prove that a <code>Drop</code> or negative auto trait \xe2\x80\xa600CiThe region corresponding to the return type of a closure.EoGive a hard error when either <code>&amp;</code> or <code>&#39;_</code> is written. Used to \xe2\x80\xa6CaThe argument is implied to be located at an indexC`Represents <code>#[automatically_derived]</code>0Be<code>#[automatically_derived]</code>CmCaptures are represented using fields inside a structure. \xe2\x80\xa60DbThe <code>coherence_leak_check</code> lint detects conflicting \xe2\x80\xa60CkError returned when a conversion from ScalarInt to char \xe2\x80\xa6CjThis access is not allowed because some parent tag has \xe2\x80\xa6CnCandidate rejection reasons collected during crate search. \xe2\x80\xa6CjDetermine if a work from the worklist is coming from a \xe2\x80\xa6BmError for a <code>ConstArgHasType</code> goal00De<code>Ok(Err(ty))</code> indicates the constant was fine, but the \xe2\x80\xa60CbThe <code>contract_check_ensures</code> lang item.CmCopy the post-LTO artifacts from the incremental cache to \xe2\x80\xa6DfThe set of <code>Local</code>s that must be saved across yield points.CiDefault column width, used in tests and when terminal \xe2\x80\xa6DgThe <code>deprecated_in_future</code> lint is internal to rustc and \xe2\x80\xa60DgThe <code>deprecated_safe_2024</code> lint detects unsafe functions \xe2\x80\xa60BiWe use this to create a side effect node.0CfImplements <code>fmt::Debug</code> by deferring to \xe2\x80\xa60DeRepresents the <code>#[rustc_default_body_unstable]</code> attribute.0BkThe definitive formatting tactic for lists.CdTrying to access the data behind a function pointer.0CjThe constituent parts of a mir constant of kind ADT or \xe2\x80\xa60BlFormatting of the permissions on each range.ClCalling convention for a function defined in an external \xe2\x80\xa6DcLint for bounds of the form <code>T: Drop</code>, which usually \xe2\x80\xa6CjThe layout of the destination type is bit-incompatible \xe2\x80\xa6ChThe layout of the destination type is not yet supported.BbThis pass optimizes something likeCdThis expression will be cast to the <code>Ty</code>.CjStores per-function coverage information attached to a \xe2\x80\xa6Dj<code>true</code> if there are \xe2\x80\x9cnames\xe2\x80\x9d of types and regions and so \xe2\x80\xa6000Ee<code>HashStable</code> implementation that has no <code>HashStableContext</code> \xe2\x80\xa6DgReturn value from the <code>homogeneous_aggregate</code> test function.0CmAdditional information used to assist in decoding hygiene \xe2\x80\xa6CeUseful source information about where a desugared \xe2\x80\xa6CmThe actual materialized blocks of the bitmask, when we can\xe2\x80\xa6BhStruct returned by <code>split()</code>.0ClTreat parameters as infer vars. This is the correct mode \xe2\x80\xa6000BgThe <code>into_future</code> lang item.BgThe link has an invalid path separator.CbUsing a pointer-not-to-a-vtable as vtable pointer.0AkConstant/Typedef in an implBgData layout. See Module::getDataLayout.CkReturns a string describing the last error caused by an \xe2\x80\xa6CjVisitor looking for regions that should be live within \xe2\x80\xa6CoThe <code>meta_variable_misuse</code> lint detects possible \xe2\x80\xa60DmThe anonymous region corresponds to a <code>&#39;_</code> in the generics \xe2\x80\xa6ChDataflow analysis that determines whether each local \xe2\x80\xa60CiAttempt to generate a minimal config from standard input.CmCache entry of <code>drop</code> at a <code>BasicBlock</code>DgThe <code>non_camel_case_types</code> lint detects types, variants, \xe2\x80\xa6DaA free region that the user has a name (<code>&#39;a</code>) for.DjThe <code>--merge=finalize</code> step does not need an input crate to \xe2\x80\xa6AiMiri specific diagnostics0CcAn element type of an SIMD type isn\xe2\x80\x99t a primitive0AmAn alias failed to normalize.DgThe expected term of a <code>NormalizesTo</code> goal gets replaced \xe2\x80\xa6DfThe <code>overflowing_literals</code> lint detects literals out of \xe2\x80\xa6DjLike <code>mir::VarDebugInfo</code>, but within a <code>mir::Local</code>.CnThe access perfectly overlaps (same offset and range) with \xe2\x80\xa6BhOverflowing inbounds pointer arithmetic.0CjAny analysis after borrowck for a given body should be \xe2\x80\xa600000CiOne of a list of \xe2\x80\x9coperations\xe2\x80\x9d that can be used to \xe2\x80\xa6EeSimilar to <code>CanonicalInput</code>, this carries the <code>typing_mode</code> \xe2\x80\xa6Bdx? calls type_of(x)::from_residual()DkThe <code>redundant_semicolons</code> lint detects unnecessary trailing \xe2\x80\xa6BjThe <code>RangeInclusive</code> lang item.BhPropagate references using SSA analysis.Boe.g., <code>fn foo(&amp;self) -&gt; Self</code>00CiThe full set of region constraints gathered up by the \xe2\x80\xa60BnReasons to create a region inference variable.0ClThe type for a closure that gets invoked before blocking \xe2\x80\xa6DiThe <code>single_use_lifetimes</code> lint detects lifetimes that are \xe2\x80\xa60CkSymbols for crates that are part of the stable standard \xe2\x80\xa6DbOnly traits that reference <code>Self: ..</code> and define an \xe2\x80\xa6CmA packed representation of all the fixed-size fields in a \xe2\x80\xa6CeUtility struct used to apply a single label while \xe2\x80\xa60ClThis data structure optimizes for cases where the stored \xe2\x80\xa6CcThe layout of the source type is not yet supported.CjThis is the context state available during incr. comp. \xe2\x80\xa60BlStart of a multiline string inside a commentCgCharacter inside a block-commented string, with the \xe2\x80\xa6DeThe <code>tail_expr_drop_order</code> lint looks for those values \xe2\x80\xa60BfError when initializing a thread pool.CjManages emission of start/end section timings, enabled \xe2\x80\xa6BeThe link has too many angle brackets.ClThe trait pointed by <code>DefId</code> is dyn-incompatible.00DfWrapper type for <code>ty::TraitRef</code> which opts-in to pretty \xe2\x80\xa60BiThe <code>from_residual</code> lang item.CgExplains the source of a type err in a short, human \xe2\x80\xa6BkError E0437: type is not a member of trait.DhThe <code>unreachable_patterns</code> lint detects unreachable patterns.0EgThe <code>unused_extern_crates</code> lint guards against <code>extern crate</code> \xe2\x80\xa60DiThe <code>unused_import_braces</code> lint catches unnecessary braces \xe2\x80\xa6EdThe <code>uses_power_alignment</code> lint detects specific <code>repr(C)</code> \xe2\x80\xa6CkLargely internal trait implemented by the unification tableCgWhether we\xe2\x80\x99re unwrapping or wrapping an unsafe binderCbRepresents <code>#[unstable_feature_bound]</code>.0DkWhile <code>SearchGraph::update_parent_goal</code> can be mostly shared \xe2\x80\xa6DiAn error type for the <code>const_to_valtree</code> query. Some error \xe2\x80\xa60AeA lifetime predicate.DbA lifetime predicate (e.g., <code>&#39;a: &#39;b + &#39;c</code>).DkUsed while populating <code>external_traits</code> to ensure we don\xe2\x80\x99t \xe2\x80\xa6CnAdd the entire given place to the \xe2\x80\x9cdata\xe2\x80\x9d range of this \xe2\x80\xa6E`indicates that <code>self</code> refers to something <em>inside</em> binding \xe2\x80\xa6BiAdd extra drop facts needed for Polonius.CeAdd pre-link object files defined by the target spec.CmAdds sizedness bounds to a trait, trait alias, parameter, \xe2\x80\xa6Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6000000CmThis function provides the chance to reorder the order in \xe2\x80\xa60CcReturns all diagnostic items defined in all crates.000000ChTraverse and collect all the diagnostic items in all \xe2\x80\xa6CkUsed for decoding interpret::AllocIds in a cached &amp; \xe2\x80\xa6ChAllocates a sequence of bytes in the interpreter\xe2\x80\x99s \xe2\x80\xa6CdAllocates a read-only byte or string literal for \xe2\x80\xa6DhSame as <code>allow_data_races_ref</code>, this temporarily disables \xe2\x80\xa6CnTemporarily allow data-races to occur. This should only be \xe2\x80\xa6DeWhether <code>panic</code> should be allowed in test functions or \xe2\x80\xa60DiWhether print macros (ex. <code>println!</code>) should be allowed in \xe2\x80\xa60DgAnonymize all bound variables in <code>value</code>, this is mostly \xe2\x80\xa6BdApply attributes to a function call.C`The maximum allowed size for arrays on the stack0CaInterpret these generic args as the args of a \xe2\x80\xa60CkGet mutable access to basic blocks without invalidating \xe2\x80\xa6CmConvert the custom type into a string value, for instance \xe2\x80\xa6FcEmits an <code>assume</code> that the integer value <code>imm</code> of type <code>ty</code> is \xe2\x80\xa60EhReturns the <code>DefId</code> of the <code>async_fn_kind_helper</code> lang item if \xe2\x80\xa6EhReturns the <code>DefId</code> of the <code>async_fn_kind_upvars</code> lang item if \xe2\x80\xa6EhReturns the <code>DefId</code> of the <code>async_fn_once_output</code> lang item if \xe2\x80\xa6EhReturns the <code>DefId</code> of the <code>async_iterator</code> lang item if it is \xe2\x80\xa6DgUsed to ban the <code>..</code> pattern in places it shouldn\xe2\x80\x99t be \xe2\x80\xa6DiCalled before a global allocation is accessed. <code>def_id</code> is \xe2\x80\xa60CnCheck that an access on the entire range is permitted, and \xe2\x80\xa6DgThe <code>#[target_feature]</code> attributes of the body. Used for \xe2\x80\xa6CmDetermines if a given borrow is borrowing local data This \xe2\x80\xa6BmAny generics from a <code>for</code> binding.EcThe <code>&#39;a</code> in <code>for&lt;&#39;a&gt; Foo&lt;&amp;&#39;a T&gt;</code>.10ChThis field keeps track of move errors that are to be \xe2\x80\xa6DcReturns <code>rhs</code> sufficiently masked, truncated, and/or \xe2\x80\xa6DiGiven a canonical value <code>C</code> as a starting point, create an \xe2\x80\xa60BoCalculate the async destructor of a given type.DkFor a <code>Location</code> in this scope, determine what the \xe2\x80\x9ccaller \xe2\x80\xa6DhReturns whether inserting a backtick at <code>dox[index]</code> will \xe2\x80\xa6ChReturns <code>true</code> if this is accepted inside \xe2\x80\xa6BnExtract the events from the given instruction.DiAdd the memory events from <code>op</code> being executed while there \xe2\x80\xa6CjExpr Id pointing to use that resulted in selecting the \xe2\x80\xa60DgFor internal testing only, ignores the current <code>publish</code> \xe2\x80\xa60EeVariant of <code>catch_fatal_errors</code> for the <code>interface::Result</code> \xe2\x80\xa60CgGeneric function that factors out common logic from \xe2\x80\xa6BeChecks a <code>a &lt;op&gt;= b</code>ClCheck an expr with an expectation type. Don\xe2\x80\x99t actually \xe2\x80\xa6BkRemember to add all intrinsics here, in \xe2\x80\xa6CmChecks that meta-variables are used correctly in one rule \xe2\x80\xa6EeChecks if the <code>#[non_exhaustive]</code> attribute on an <code>item</code> is \xe2\x80\xa6CfChecks whether an impl overlaps with the automatic \xe2\x80\xa6EeChecks if the <code>#[target_feature]</code> attribute on <code>item</code> is valid.CgRecords the reasons that we picked the kind of each \xe2\x80\xa60CkTracks the minimum captures required for a closure; see \xe2\x80\xa60C`Codegen options strings to hand to the compiler.CkAttempts to coerce from the type of a non-capturing closureEhReturns the <code>DefId</code> of the <code>coerce_unsized</code> lang item if it is \xe2\x80\xa6EeLike <code>only_has_type</code>, but instead of returning <code>None</code> if no \xe2\x80\xa6CmDetermine the set of places that have to be stable across \xe2\x80\xa6CnThe first dimension (rows) are the remaining user provided \xe2\x80\xa6CmThis generates the codegen unit and returns it along with \xe2\x80\xa60DhA lot of the flexibility above is just needed for <code>Miri</code>, \xe2\x80\xa60CkRecords unwind edges which are known to be unreachable, \xe2\x80\xa6DiAnalyzes the information collected by <code>InferBorrowKind</code> to \xe2\x80\xa6DiRuns the \xe2\x80\x9cearly phases\xe2\x80\x9d of the compiler: initial <code>cfg</code> \xe2\x80\xa6CeDrops that happen on a <code>#[const_continue]</code>CaEvaluate a constant to a <code>ConstValue</code>.EhReturns the <code>DefId</code> of the <code>const_param_ty</code> lang item if it is \xe2\x80\xa6DhSpan used for retrieving the crate name to which <code>$crate</code> \xe2\x80\xa6DjConverts each element of <code>op</code> from floating point to signed \xe2\x80\xa6AjCoroutine async drop glue.DjPrefer going through <code>TyCtxt::coroutine_layout</code> rather than \xe2\x80\xa6DfReturns the movability of the coroutine of <code>def_id</code>, or \xe2\x80\xa6CmOn-demand query: yields a map containing all types mapped \xe2\x80\xa6CkGets a complete map from all types to their inherent impls.000000ClUnlike NLLs, in polonius we traverse the cfg to look for \xe2\x80\xa6ChCreates and return a fresh universe that extends all \xe2\x80\xa60DcCreate a termcolor buffer with the <code>Always</code> color choiceDjReturns a <code>StringFormat</code> used for formatting the content of \xe2\x80\xa6CnWhether or not crt-static is respected by the compiler (or \xe2\x80\xa6CnIf called from a Rayon worker thread, returns the index of \xe2\x80\xa60CmIf called from a Rayon worker thread in this thread-pool, \xe2\x80\xa6CmIf we are currently in a trait object definition. Used to \xe2\x80\xa6ClReturns the debugger visualizers defined for this crate. \xe2\x80\xa6000000CiTraverses and collects the debugger visualizers for a \xe2\x80\xa6DkDetermines how bindings should be handled when lowering <code>let</code>\xe2\x80\xa6EkEither <code>Reserved</code>,  <code>Frozen</code>, or <code>Disabled</code>, it is the \xe2\x80\xa6EhReturns the <code>DefId</code> of the <code>default_trait1</code> lang item if it is \xe2\x80\xa6EhReturns the <code>DefId</code> of the <code>default_trait2</code> lang item if it is \xe2\x80\xa6EhReturns the <code>DefId</code> of the <code>default_trait3</code> lang item if it is \xe2\x80\xa6EhReturns the <code>DefId</code> of the <code>default_trait4</code> lang item if it is \xe2\x80\xa6GbDefines <code>name</code> in namespace <code>ns</code> of module <code>parent</code> to be <code>def</code> if \xe2\x80\xa6CeDereferences a single level of immutable referencing.CnDestructure a sequence of expressions occurring on the LHS \xe2\x80\xa6DeDesugar doc comments like <code>/// foo</code> in the stream into \xe2\x80\xa6CkGiven a def id this checks if the parent def id (modulo \xe2\x80\xa6CnDisables non-English messages from localized linkers. Such \xe2\x80\xa6Andisable minification of CSS/JSCh[query description - consider adding a doc-comment!] \xe2\x80\xa6000000CjReturns outer or inner if this is a doc attribute or a \xe2\x80\xa6CmAllows nodes to be compared in some total order such that \xe2\x80\xa6CkEats double-quoted string and returns true if string is \xe2\x80\xa6CjReturns the block to jump to in order to test the drop \xe2\x80\xa6CkExecute all cache promotions and release the serialized \xe2\x80\xa6CkRuns dropck for locals whose liveness isn\xe2\x80\x99t relevant. \xe2\x80\xa6CnFor a given closure, writes out the data for the profiling \xe2\x80\xa6CgIf the next token is the given keyword, eats it and \xe2\x80\xa6CjThis pass transforms derefs of Box into a deref of the \xe2\x80\xa6CkEmulates calling a foreign item, failing if the item is \xe2\x80\xa6Dc<code>#![feature]</code> attrs for non-language (library) features.0CmEncodes a node that was promoted from the previous graph. \xe2\x80\xa6CmWhether evaluating the goal encountered overflow. This is \xe2\x80\xa6CmWhether evaluating this goal encountered overflow. Lazily \xe2\x80\xa6ClWhether we\xe2\x80\x99ve encountered an error region. If we have, \xe2\x80\xa6CkGrows the index vector so that it contains an entry for \xe2\x80\xa60CkConverts the types that the user supplied, in case that \xe2\x80\xa6EaShared part of <code>Call</code> and <code>TailCall</code> implementation \xe2\x80\x94 \xe2\x80\xa6CiWhether to ensure the non-exhaustiveness witnesses we \xe2\x80\xa6DgGenerate an implementation of the <code>From</code> trait, provided \xe2\x80\xa6CmReturn the trait and projection predicates that come from \xe2\x80\xa60CkWhen we \xe2\x80\x98expand\xe2\x80\x99 an inert attribute, we leave it in \xe2\x80\xa6DiChecks if the next token is contained within <code>closes</code>, and \xe2\x80\xa6ChEmits an error with suggestions if an identifier was \xe2\x80\xa6CnReturns the explicitly user-written <em>bounds</em> on the \xe2\x80\xa6000000DgCreates an \xe2\x80\x9cextension\xe2\x80\x9d of an existing <code>DIScope</code> into \xe2\x80\xa6BlReturn the crate imported by given use item.BnAdditional constraints returned by this query.00000000CkGets a list of extra command-line flags provided by the \xe2\x80\xa6DiReturns the computed binding mode for a <code>PatKind::Binding</code> \xe2\x80\xa6CjExtracts the number of seconds and nanoseconds elapsed \xe2\x80\xa6BjGiven a \xe2\x80\x9cverify-if-eq\xe2\x80\x9d type test like:0DiIn order to break cycles involving <code>AnonConst</code>, we need to \xe2\x80\xa6CaLookup a possibly constant expression from an \xe2\x80\xa6EgFor all candidates <code>(p, q)</code> or <code>(q, p)</code> removes the candidate \xe2\x80\xa6CjFind the first ancestor span that\xe2\x80\x99s contained within \xe2\x80\xa6CkFind a file path in the filesystem which corresponds to \xe2\x80\xa6DhAttempt to find the <code>rustc_hir::Expr</code> that corresponds to \xe2\x80\xa6CkThe name of the directory rustc expects libraries to be \xe2\x80\xa6ChThis method helps to extract all the type parameters \xe2\x80\xa6C`Whether floating-point operations can have a \xe2\x80\xa6000EfConverts <code>src</code> from floating point to integer type <code>dest_ty</code> \xe2\x80\xa6DgThis method is the most general version of the <code>flood_*</code> \xe2\x80\xa6CmReturns the list of labels for the edges to the successor \xe2\x80\xa6EbInvoke <code>callback</code> on every region appearing free in <code>value</code>.EhReturns the <code>DefId</code> of the <code>fused_iterator</code> lang item if it is \xe2\x80\xa6CmWhether the feature gate was already checked (because the \xe2\x80\xa6EbWhen differentiating <code>fn_to_diff</code>, take a <code>outer_fn</code> and \xe2\x80\xa6CdAuto-trait or blanket impls processed so far, as \xe2\x80\xa6DaReturn the <code>mutability</code> field of the given allocation.CfIterates over the diagnostic items in the given crate.EnResolves <code>&lt;T as Iterator&gt;::Item</code> for <code>T</code> Do not invoke without \xe2\x80\xa6CkGet a mutable slice to the internal vector with minimum \xe2\x80\xa6BaGets the parent trait chain startDjClassifies into identifier class; returns <code>None</code> if this is \xe2\x80\xa6CiClone the list of variable regions. This is used only \xe2\x80\xa60CcIf the basic block terminates by switching on a \xe2\x80\xa6CfThe list of LLVM features computed from CLI flags (\xe2\x80\xa6DjReturns <code>expr</code> as a <em>single</em> byte literal if applicable.CnIncorporates an enabled or disabled component as specified \xe2\x80\xa6BmTrue if there are any un-erased free regions.0000Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6000000CgThis crate has a <code>#[global_allocator]</code> item.1111111CaChecks if <code>ty</code> has a significant drop.DfReturns <code>true</code> if this type has any regions that escape \xe2\x80\xa60000CmThis is a callback to hash otherwise untracked state used \xe2\x80\xa6CjHandle the fallback arm of a desugared if(-let) like a \xe2\x80\xa6EnThe <code>DefId</code> of the <code>impl</code> that gave rise to the <code>derived</code> \xe2\x80\xa600DjWhether to add a builtin <code>dyn Trait: Trait</code> implementation. \xe2\x80\xa6CjImports the source_map from an external crate into the \xe2\x80\xa6Cmalso dereference through raw pointer types e.g., assuming \xe2\x80\xa6DgReturns the <em>inferred outlives-predicates</em> of the item given \xe2\x80\xa6000000CfStarts the worker threads (if that has not already \xe2\x80\xa6CdApplies a previously prepared copy of the init mask.DhReturns <code>true</code> if this rvalue is deeply initialized (most \xe2\x80\xa6ChWraps an expression with a call to the ensures check \xe2\x80\xa6CgNearest (transitive) parent scope (if any) which is \xe2\x80\xa6DnMakes the identity replacement <code>T0 =&gt; T0, ..., TN =&gt; TN</code>. \xe2\x80\xa600DgCreates a new <code>DefId</code> and feeds all the right queries to \xe2\x80\xa6CnReturns an iterator over the items in the map in insertion \xe2\x80\xa6DeConvert this pointer that <em>might</em> have a provenance into a \xe2\x80\xa6BmInvalidates cached information about the CFG.Di<code>true</code> if the overlap might\xe2\x80\x99ve been permitted before the \xe2\x80\xa60Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6000000BmChecks if the given expression is a constant.BkCheck if a given constant can be evaluated.C`Determines whether an item is annotated with \xe2\x80\xa60000000ChDoes the block have no statements and an unreachable \xe2\x80\xa6CaChecks if <code>{ctor_call_id}(...)</code> is \xe2\x80\xa6CfIs a <code>dyn B0 + ... + Bn</code> type allowed here?Dh<code>true</code> if this lint is being loaded by another tool (e.g. \xe2\x80\xa60EhReturns <code>true</code> if the node pointed to by <code>def_id</code> is a general \xe2\x80\xa6CjWhether this cast is a coercion that was automatically \xe2\x80\xa60EfChecks if the <code>DefId</code> matches the given <code>LangItem</code> or it\xe2\x80\x99s \xe2\x80\xa6DlReturns <code>true</code> if <code>r</code> is classified as a local region.CnChecks whether the <code>range</code> is entirely initialized.0DnGiven the name of a lifetime without the first quote (<code>&#39;</code>), \xe2\x80\xa6ClChecks whether a block contains at most one statement or \xe2\x80\xa6DkCheck whether a path is a <code>use</code> item that has been marked as \xe2\x80\xa6CjReturns whether the inputs will fit into the available \xe2\x80\xa6CjReturns whether the output will fit into the available \xe2\x80\xa6DjIf true, this option should not be printed by <code>rustc --help</code>\xe2\x80\xa6CkThis exists as an optimization to compute only the item \xe2\x80\xa6Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6000000DgSimilar to <code>instantiate_identity</code>, but on an iterator of \xe2\x80\xa600Da<code>true</code> if we\xe2\x80\x99re emitting a JSON job containing a \xe2\x80\xa600BfThe total used width of the last line.CnReturns whether the leftmost token of the given expression \xe2\x80\xa6DdHelper function to get <code>TyAndLayout</code> of an array that \xe2\x80\xa6CiPass a list of symbol which should be exported in the \xe2\x80\xa6CkThe liveness constraints added to each region. For most \xe2\x80\xa60CgIn general, the type-checker is not responsible for \xe2\x80\xa6CfHelper function to get the LLVM type for a Scalar. \xe2\x80\xa6CgRead from a local of a given frame. Will not access \xe2\x80\xa6CkChecks if the given local has an initializer or is from \xe2\x80\xa6FaFinds the innermost <code>Local</code> from this <code>Place</code>, <em>if</em> it is either \xe2\x80\xa60CmLower a captured upvar. Note we might not know the actual \xe2\x80\xa6DaDesugar <code>try { &lt;stmts&gt;; &lt;expr&gt; }</code> into \xe2\x80\xa6CmLower a trait reference as found in an impl header as the \xe2\x80\xa6CiLower a monomorphic trait reference given a self type \xe2\x80\xa6CnLower a polymorphic trait reference given a self type into \xe2\x80\xa6EaReturns the least-upper-bound of <code>a</code> and <code>b</code>; i.e., the \xe2\x80\xa6DcWhether the runtime startup code requires the <code>main</code> \xe2\x80\xa6ClUsed by proof trees to be able to recompute intermediate \xe2\x80\xa6ChThis is a callback from the driver that is called to \xe2\x80\xa6CdAdds suggestions for a path that cannot be resolved.DgReturns a path to the target\xe2\x80\x99s <code>bin</code> folder within its \xe2\x80\xa6EfReturns <code>Ok</code> if <code>poly_trait_ref</code> being true implies that the \xe2\x80\xa6CiDetermine if the associated item with the given DefId \xe2\x80\xa6CmWhether the matches should be considered by the lint, and \xe2\x80\xa60ClCollect the spans of braces (Open, Close). Used only for \xe2\x80\xa6DjIf the given <code>HirId</code> corresponds to a block with a trailing \xe2\x80\xa6CnExamine the given definition and record it in the worklist \xe2\x80\xa6CkGets the type-checking results for the current body, or \xe2\x80\xa6CcReturns the set of bounds <code>X</code> such that:CmReturn the set of (transitive) callees that may result in \xe2\x80\xa6000000CkCurrently MoveData does not store entries for all places inCmShow a suggestion that has multiple parts to it. In other \xe2\x80\xa6C`Query backing <code>Ty::needs_async_drop</code>.000000FbReturns <code>true</code> if <code>local</code> is <code>NeedsNonConstDrop</code> at the given \xe2\x80\xa6Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6000000DhCreates new empty <code>Allocation</code> from given <code>Align</code>.CiCreates a new parser from a filename. On failure, the \xe2\x80\xa6ChWhether to disable linking to the default libraries, \xe2\x80\xa6CmChecks whether this range is considered non-wrapping when \xe2\x80\xa6CnUse this when the error that led to this is <em>not</em> a \xe2\x80\xa6EjPut the expression in the form  <code>lhs &lt; rhs</code>, <code>lhs &lt;= rhs</code>, \xe2\x80\xa6CcAs <code>normalize</code>, but with a custom depth.DiGiven an object type like <code>SomeTrait + Send</code>, computes the \xe2\x80\xa6CmThe expressions corresponding to references to this field \xe2\x80\xa6CfReturns an iterator over all the outlives constraints.EeReturns <code>true</code> if <code>self</code> touches or adjoins <code>other</code>.ClReturns the args corresponding to the generic parameters \xe2\x80\xa6Em<code>1 as (i32) &lt; 2</code> parses to ExprKind::Lt <code>1 as i32 &lt; 2</code> parses \xe2\x80\xa6AkParse a list of attributes.EeParses an optional <code>move</code> or <code>use</code> prefix to a closure-like \xe2\x80\xa6C`Parses asyncness: <code>async</code> or nothing.CgBuilt-in macro for <code>offset_of!</code> expressions.CjParses a sequence of expressions delimited by parentheses.DgParses a parameter in a closure header (e.g., <code>|arg, arg|</code>).CmParse a (possibly empty) list of generic (lifetime, type, \xe2\x80\xa6BjParse a lifetime-bound aka outlives-bound.AaParses a pattern.DdTry to get the value of a CSS property (the <code>#fff</code> in \xe2\x80\xa6AgParse a single integer.CkPass this argument indirectly, by placing it at a fixed \xe2\x80\xa6CiPeels off up to the given number of references on the \xe2\x80\xa6DjFor each type <code>T</code> in the step list, this attempts to find a \xe2\x80\xa6EaReturns the <code>DefId</code> of the <code>Pending</code> lang item if it is \xe2\x80\xa6DeWhen using <code>-Zpolonius=next</code>: the data used to compute \xe2\x80\xa60DjThis computes <code>specialize(ctor, self)</code>. See top of the file \xe2\x80\xa60CdConstructor functions for each variety of lint pass.0CfTemporarily store prepared memory space for global \xe2\x80\xa6C`Convert a PrimitiveType to a Ty, where possible.DiSimilar to <code>print_path_with_simple</code>, but the final segment \xe2\x80\xa6ChPerform a deep probe in the HIR tree looking for the \xe2\x80\xa6BnIf true, show backtraces for proc-macro panicsCbProcess an <code>extern crate foo</code> AST node.CnMark all bytes in the given range as initialised and reset \xe2\x80\xa6CmIterates over all fields of an array. Much more efficient \xe2\x80\xa6D`Finds things to add to <code>reachable_symbols</code> within \xe2\x80\xa6CgWhat kind of access to perform before releasing the \xe2\x80\xa6ChCaches the sanity-checks for various pthread primitives.0ClTurning a \xe2\x80\x9cmaybe pointer\xe2\x80\x9d into a proper pointer (and \xe2\x80\xa6CkVery low-level helper that pushes a stack frame without \xe2\x80\xa6CmReturns an iterator, yielding a range of byte indexes for \xe2\x80\xa6DcSame as <code>range_bytes_get(range).is_empty()</code>, but faster.CkPlaces where raw identifiers were used. This is used to \xe2\x80\xa6ChReads from the last store in modification order, if any.CnRead a null-terminated sequence of bytes, and perform path \xe2\x80\xa6CkPerforms a type instantiation to produce the version of \xe2\x80\xa6ClRecords the following event arguments within the current \xe2\x80\xa6DnSwitch variance for the purpose of relating <code>a</code> and <code>b</code>.000000000DgThis pass removes <code>PlaceMention</code> statement, which has no \xe2\x80\xa6Di<code>derefs</code> is the set of all deref targets that have already \xe2\x80\xa6CnRender a macro matcher in a format suitable for displaying \xe2\x80\xa6CnReports a region inference error for the general case with \xe2\x80\xa6ChProduces nice borrowck error diagnostics for all the \xe2\x80\xa6CnPerform resolution of a function signature, accounting for \xe2\x80\xa6EhAttempt to resolve the given <code>DefId</code> to an <code>Instance</code>, for the \xe2\x80\xa6000000CdRustdoc uses this to resolve doc link paths in a \xe2\x80\xa6CgExecutes a retagging operation on a compound value. \xe2\x80\xa60DnReturns <code>None</code> if there is no <code>GenericParam</code> in the listDfRewrite <code>extern crate foo;</code>. The given shape is used to \xe2\x80\xa6CfExecute a timeout callback on the callback\xe2\x80\x99s thread.ClReturns the Rust target features for the current target. \xe2\x80\xa6000000CjThis crate contains pre-baked ICU4X data, generated by \xe2\x80\xa6CnThis crate contains implementations of built-in macros and \xe2\x80\xa6CjUsed to conditionally output the TokenStream for tests \xe2\x80\xa6ChTry read-unlock the lock for the current threads and \xe2\x80\xa6CnTry to unlock an rwlock held by the current thread. Return \xe2\x80\xa6CjWhether the function was declared safe, but has target \xe2\x80\xa6EdGiven a <code>fn</code> type, returns an equivalent <code>unsafe fn</code> type; \xe2\x80\xa6FcReturns <code>true</code> if types <code>a</code> and <code>b</code> are same types having same \xe2\x80\xa6CmSet an active thread and return the id of the thread that \xe2\x80\xa6DjShifts each element of <code>left</code> by a scalar amount. The shift \xe2\x80\xa6BdFIXME: compute this field on demand.DlOnly create a <code>&lt;section&gt;</code> if there are any blocks which \xe2\x80\xa6AoWhether or not to show methods.EaRepresent the <em>value</em> which would be read from <code>place</code>, and \xe2\x80\xa6CfSimplify <code>[x; 1]</code> to just <code>[x]</code>.CeIf this ADT is a struct, returns a type such that \xe2\x80\xa6CmSkips the subtree corresponding to the last type returned \xe2\x80\xa6000DhSame as <code>snippet_with_applicability</code>, but first walks the \xe2\x80\xa6ChWhich kind of elements should be ordered internally, \xe2\x80\xa60DaReturns <code>true</code> if a function call or a method call \xe2\x80\xa6BnReturns all the comments a given span containsC`Return the span that encompasses the attributes.BhSpan to use to suggest complete removal.CeThe maximum allowed stack size for functions in bytes0CkStart a non-unwinding panic in the interpreter with the \xe2\x80\xa6BbStart a regular (non-main) thread.CiChecks if <code>self</code> starts with a unary operator.DgAttempt to statically pick the <code>BasicBlock</code> that a value \xe2\x80\xa6DiComputes the <code>PathKind</code> for the step from the current goal \xe2\x80\xa6DjEmits a <code>StatementKind::StorageLive</code> for the given var, and \xe2\x80\xa6EhReturns the <code>DefId</code> of the <code>structural_peq</code> lang item if it is \xe2\x80\xa6DiTrue if <code>a &lt;= b</code>, but not defined over inference variables.DhLike <code>SwitchTargets::target_for_value</code>, but returning the \xe2\x80\xa6CmThis function is used to determine potential \xe2\x80\x9csimple\xe2\x80\x9d \xe2\x80\xa6CnProvide a suggestion to dereference arguments to functions \xe2\x80\xa6BfSuggest to add an item before another.CkFlag to ensure that we only suggest wrapping the entire \xe2\x80\xa6CjReturn placeholder code for the given associated item. \xe2\x80\xa6CmReturns all the late-bound vars that come into scope from \xe2\x80\xa6BgThe sanitizers supported by this targetCnWhether the given expression should be changed to evaluate \xe2\x80\xa6DfThe bitwise exclusive-or (<code>^</code>) of the bits in two flags \xe2\x80\xa600000000000000000000000000000CnReturns the first group of attributes that fills the given \xe2\x80\xa6CjReturns the items of this set in stable sort order (as \xe2\x80\xa6ClReturns the entries of this map in stable sort order (as \xe2\x80\xa6DjPrint the token kind precisely, without converting <code>$crate</code> \xe2\x80\xa60CkFor the tracked alloc ids, also report read/write accesses.000CbTrack when an outdated (weak memory) load happens.00C`The stacked borrows pointer ids to report about.AhThe pointer ids to trace1Ce<code>true</code> if a trailing separator is allowed.Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6000000DjReturns <code>true</code> if this is coinductive, either because it is \xe2\x80\xa6DiLike <code>traverse_this_parents_children_other</code>, but skips the \xe2\x80\xa6DhReturns <code>InvalidErrorCode</code> if the code requested does not \xe2\x80\xa6DnReturns <code>None</code> in case the <code>AllocId</code> is dangling. An \xe2\x80\xa6CkTry expanding the macro attribute. Returns the index of \xe2\x80\xa6CkTry to merge multiple possible ways to prove a goal, if \xe2\x80\xa6DnHelper function that consumes an <code>std::io::Result&lt;T&gt;</code> and \xe2\x80\xa6DbReturns the type of this <code>Place</code> immediately before \xe2\x80\xa60CiChecks whether there is a local type somewhere in the \xe2\x80\xa6DgDo not call this query directly: part of the <code>Normalize</code> \xe2\x80\xa6000000DkThe alignment the type would have, ignoring any <code>repr(align)</code>\xe2\x80\xa6CjGiven two sets of values for the same set of canonical \xe2\x80\xa6EhThe byte size a <code>T</code> in <code>Box&lt;T&gt;</code> can have, below which it \xe2\x80\xa60CeReturns indices of all variables that are not yet \xe2\x80\xa6DhSet by the <code>Config::hash_untracked_state</code> callback for custom00DeUpdates the <code>disambiguator</code> field of the corresponding \xe2\x80\xa6CjIndicates that attempting to evaluate this stack entry \xe2\x80\xa6DeSee the comment in <code>collect_items_of_instance</code> for the \xe2\x80\xa6CnUpdate the data-race detector for an atomic read occurring \xe2\x80\xa6ClConverts a type-level constant value into a MIR constant \xe2\x80\xa6000000EcReturns the span of <code>self</code>, in the case of a <code>ClosureUse</code> \xe2\x80\xa6ChReturn a <code>VariantDef</code> given a constructor id.kSee the \xe2\x80\xa6DnTracks the default binding mode when we\xe2\x80\x99re lowering a <code>&amp;</code> \xe2\x80\xa6C`<code>item</code> must be already monomorphized.CmIn order to have good line stepping behavior in debugger, \xe2\x80\xa6ClWalks a pat that occurs in isolation (i.e., top-level of \xe2\x80\xa6CnWalks the span up to the target context, thereby returning \xe2\x80\xa6CkExecutes something within an \xe2\x80\x9canonymous\xe2\x80\x9d task, that \xe2\x80\xa6DcTrue if the function is marked as <code>#[track_caller]</code> (\xe2\x80\xa6DhEquivalent of <code>Span::mixed_site</code> from the proc macro API, \xe2\x80\xa60D`Add a primary message. See <code>Diag::primary_message()</code>.CnAvoids running select queries during any prints that occur \xe2\x80\xa60DjAllows access to the current <code>ImplicitCtxt</code> whose tcx field \xe2\x80\xa60CgPrints out a message with a suggested edit of the code.ClCreate an empty map of regions to locations where they\xe2\x80\x99\xe2\x80\xa6DoInvokes the callback with a <code>&amp;[&amp;str]</code> consisting of each \xe2\x80\xa6DgApply <code>f()</code> to the set of test item names. The names are \xe2\x80\xa6DoWhen comparing types for equality, it can help to ignore <code>&amp;</code> \xe2\x80\xa6CnEach anonymous global (constant, vtable, function pointer, \xe2\x80\xa6BgFinal serialized form of the alias implCcRepresents <code>#[allow_internal_unstable]</code>.0BeAn anonymous region from an async fn.BnThe region from a type yielded by a coroutine.DhImplementation of an <code>AsyncFn</code>-family trait by one of the \xe2\x80\xa600Dn<code>core::future::async_drop::async_drop_in_place::&lt;&#39;_, T&gt;</code>.0000000CdThe <code>async_iterator_poll_next</code> lang item.EfThe <code>boxed_slice_into_iter</code> lint detects calling <code>into_iter</code> \xe2\x80\xa60AnA never pattern has a binding.DhA <code>Body</code> with information computed by the borrow checker. \xe2\x80\xa6CjReplaces the bound vars in a canonical binder with var \xe2\x80\xa6ChEmitter of a builtin lint from <code>cfg_matches</code>.0BlError E0438: const is not a member of trait.CcThe <code>contract_check_requires</code> lang item.DkDefault implementation of ObjectReader that uses the <code>object</code>\xe2\x80\xa6ClThe default metadata loader. This is used by cg_llvm and \xe2\x80\xa6ClDeprecation annotation is useless, reject it. (Stability \xe2\x80\xa6CmThis item is known to rustdoc, but from a crate that does \xe2\x80\xa6CkHolds a map of effective visibilities for reachable HIR \xe2\x80\xa6CnWrapper struct which will emit the HTML-escaped version of \xe2\x80\xa6Dh<code>EverInitializedPlaces</code> tracks all places that might have \xe2\x80\xa60DkA <code>ProjectionPredicate</code> for an <code>ExistentialTraitRef</code>.000EhThe <code>forbidden_lint_groups</code> lint detects violations of <code>forbid</code>\xe2\x80\xa60DcThe <code>forgetting_copy_types</code> lint checks for calls to \xe2\x80\xa6DcThe <code>forgetting_references</code> lint checks for calls to \xe2\x80\xa6CfThe dataflow analysis used to propagate qualifs on \xe2\x80\xa6CkFormats the warnings/errors in a <code>FormatReport</code>.0CjTracked in https://github.com/rust-lang/rust/issues/36887.CmMIR visitor for collecting used mutable variables. The \xe2\x80\x99\xe2\x80\xa6CmDecorates the result of a generic argument count mismatch \xe2\x80\xa6BdUsed for generics args error extend.BiChange this if the header format changes.DhThe <code>hidden_glob_reexports</code> lint detects cases where glob \xe2\x80\xa60EoCollect all <code>hir::Ty&lt;&#39;_&gt;</code> <code>Span</code>s for trait objects with an \xe2\x80\xa60ClSome features are not allowed to be used together at the \xe2\x80\xa60CkFor impl trait in assoc types we only permit collecting \xe2\x80\xa6ClLint for opaque types that will begin capturing in-scope \xe2\x80\xa6CcFull type of functions/methods in the search index.ChVariations on RFC 3627\xe2\x80\x99s Rule 4: when do reference \xe2\x80\xa6EhRuns <code>infcx.instantiate_opaque_types</code>. Unlike other <code>TypeOp</code>s, \xe2\x80\xa6CeThe <code>into_async_iter_into_iter</code> lang item.CcDetermines whether an item was invalidated by a \xe2\x80\xa6AlTrait-Const/Typedef DepNodesDeThe <code>legacy_derive_helpers</code> lint detects derive helper \xe2\x80\xa60ClWhen hitting this many interpreted terminators we emit a \xe2\x80\xa6CiCreates a legacy pass manager \xe2\x80\x93 only used for final \xe2\x80\xa6CjThis is the maximum size (in bytes) for which a buffer \xe2\x80\xa6mA call to \xe2\x80\xa600000000DcA type \xe2\x80\x9cA\xe2\x80\x9d <em>matches</em> \xe2\x80\x9cB\xe2\x80\x9d if the fresh types in B \xe2\x80\xa6DdIndicates what is placed in a <code>concat</code> parameter. For \xe2\x80\xa6AoError during module resolution.CbRepresents errors while trying to resolve modules.EgThe <code>non_local_definitions</code> lint checks for <code>impl</code> blocks and \xe2\x80\xa6EdThe <code>no_mangle_const_items</code> lint detects any <code>const</code> items \xe2\x80\xa6CnA bound (not free) region that was instantiated at the def \xe2\x80\xa6DfAn even simpler version of <code>SingleAttributeParser</code>: now \xe2\x80\xa6DkUse a specific lifetime (if <code>Some</code>) or leave it unset (to be \xe2\x80\xa6DkA trait object\xe2\x80\x99s lifetime when it is elided, e.g. <code>dyn Any</code>\xe2\x80\xa6CmA set of NLL region constraints. These include \xe2\x80\x9coutlives\xe2\x80\xa6CcMore than 6 characters in \xe2\x80\x98\\u{..}\xe2\x80\x99, e.g. \xe2\x80\x98\xe2\x80\xa6CiThe <code>panic_const_coroutine_resumed</code> lang item.CmERROR E0770: the type of const parameters must not depend \xe2\x80\xa6DjExcludes <code>const_stable_indirect</code>. This is necessary because \xe2\x80\xa60CmDescribe the relationship between the paths of two places \xe2\x80\xa6CnMaps between a MIR Location, which identifies a particular \xe2\x80\xa60DhCollect possible borrowed for every <code>&amp;mut</code> local. For \xe2\x80\xa6CnOpaques that are defined in the inference context before a \xe2\x80\xa600000000CjCosmetic options for pretty-printing the MIR contents, \xe2\x80\xa6DhStates returned from <code>poly_project_and_unify_type</code>. Takes \xe2\x80\xa6CkA provisional result of an already computed goals which \xe2\x80\xa6CiA cache value for the provisional cache: contains the \xe2\x80\xa6CfFormerly unstable features that have now been removed.0DjError cases which may be returned from <code>receiver_is_valid</code>. \xe2\x80\xa6CfIndicates why a given pattern is considered redundant.ClA pass that removes noop landing pads and replaces jumps \xe2\x80\xa6CnEagerly replace aliases with inference variables, emitting \xe2\x80\xa6CbA required associated type in a trait declaration.CgOverlap eligibility and variant assignment for each \xe2\x80\xa6DjAlternative to <code>AttributeParser</code> that automatically handles \xe2\x80\xa6DjUsed to translate between <code>Span</code>s and byte positions within \xe2\x80\xa6DgThe <code>trivial_numeric_casts</code> lint detects trivial numeric \xe2\x80\xa60Ce<code>(x1, .., xn)</code> must be <code>Sized</code>.00EfThe <code>unnameable_test_items</code> lint detects <code>#[test]</code> functions \xe2\x80\xa60DeThe <code>unused_qualifications</code> lint detects unnecessarily \xe2\x80\xa60EhThe <code>usage_of_qualified_ty</code> lint detects usages of <code>ty::TyKind</code>\xe2\x80\xa6CcNo closing brace in \xe2\x80\x98\\u{..}\xe2\x80\x99, e.g. \xe2\x80\x98\\u{12\xe2\x80\x99.CkError information for when the program caused Undefined \xe2\x80\xa60DgThe test is marked <code>compile_fail</code> but compiled successfully.CmAn unknown prefix in a lifetime, like <code>&#39;foo#</code>.CmAn error that may be transformed into a diagnostic later. \xe2\x80\xa6CkThe reason we are terminating the process during unwinding.0DdSame as <code>WarnFollowing</code>, but only issues warnings for \xe2\x80\xa60ChWhen <code>--document-hidden-items</code> is not passed.CjReturns two lists of features: the first list contains \xe2\x80\xa6CmGiven a list of how to link upstream dependencies so far, \xe2\x80\xa6CgAdd a thread local storage destructor for the given \xe2\x80\xa6CfAdd post-link object files defined by the target spec.CnThis method is used by unit tests to not have to provide a \xe2\x80\xa6DjPushes all the predicates needed to validate that <code>term</code> is \xe2\x80\xa6CaDiscriminant for a given variant index of AdtDef.0Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6000000BlCalculates the dtorck constraint for a type.EdReturns <code>true</code> if <code>callback</code> returns true for every region \xe2\x80\xa6CiReturn all <code>impl</code> blocks in the current crate.000000DiAllocate a <code>const core::panic::Location</code> with the provided \xe2\x80\xa6DeAllocate enough memory to store the given <code>OsStr</code> as a \xe2\x80\xa6CmReturns the full set of allocatable registers for a given \xe2\x80\xa6DfWhether <code>expect</code> should be allowed in test functions or \xe2\x80\xa60DjSuppresses the <code>unsafe_code</code> lint for code produced by this \xe2\x80\xa60DfWhether <code>unwrap</code> should be allowed in test functions or \xe2\x80\xa60CnWhether this error is allowed to show up even in otherwise \xe2\x80\xa6DeUse this when the error that led to this <em>is</em> a const-eval \xe2\x80\xa61DgCalled when <code>ty</code> is found to always require drop. If the \xe2\x80\xa6EcReturns <code>true</code> if <code>callback</code> returns true for some region \xe2\x80\xa6ClReturns an operand suitable for use until the end of the \xe2\x80\xa6CdThis pass is only used for UNIT TESTS related to \xe2\x80\xa6CnPerform an conditional atomic exchange with a memory place \xe2\x80\xa6DhThe user has written <code>#[attr] expr</code> which is unsupported. \xe2\x80\xa6CkTries to find the best constraint to blame for the fact \xe2\x80\xa6EdPerforms <code>which</code> operation on each component of <code>left</code> and \xe2\x80\xa6CbPrecondition: pat is a <code>Ref(_)</code> patternBgBorrow tracker method currently in use.CmAdd the given write to the store buffer. (Does not change \xe2\x80\xa6BfInitial <strong>trait</strong> importsDgPrecompute the list of values inside <code>root</code> and store it \xe2\x80\xa6ClType-checking results for the current body. Access using \xe2\x80\xa60CiCall native host function and return the output as an \xe2\x80\xa6CgPattern matching on consts with references would be \xe2\x80\xa60DhCheck if the generic argument <code>actual</code> coincides with the \xe2\x80\xa6BmChecks whether a type can be partially moved.CkReturns <code>true</code> if the global caches can be used.EbCanonicalizes a query <em>response</em> <code>V</code>. When we canonicalize a \xe2\x80\xa60DdReturns a <code>bool</code> saying whether the two arguments are \xe2\x80\xa6B`Reject invalid C-variadic types.CnReturns inlining decision that is based on the examination \xe2\x80\xa6DkThis function is analogous to <code>check_optional_stability</code> but \xe2\x80\xa6DiCheck an expr with no expectations, but with <code>Needs</code> which \xe2\x80\xa6DfIs the current token the start of an <code>FnHeader</code> / not a \xe2\x80\xa6ClOutputs an error for attributes that can only be applied \xe2\x80\xa6CfChecks that the recursion limit has not been exceeded.CjChecks if there are any remaining tokens (for example, \xe2\x80\xa6DfChecks if the given <code>VariantDef</code>\xe2\x80\x99s field types are \xe2\x80\x9c\xe2\x80\xa6CdCheck that the given vtable trait is valid for a \xe2\x80\xa6CnThis module provides a pass that removes parts of MIR that \xe2\x80\xa6CnData race clock for readers. This is temporary storage for \xe2\x80\xa6DeClone this <code>MultiSpan</code> without keeping any of the span \xe2\x80\xa60CiStores a value into the atomic integer if the current \xe2\x80\xa6CiStatics that will be placed in the llvm.compiler.used \xe2\x80\xa6DhItem macro invocations or <code>macro_rules!</code> definitions need \xe2\x80\xa6ChComputes live loans using the set of loans model for \xe2\x80\xa6CiCompute loan reachability to approximately trace loan \xe2\x80\xa6DkComputes the total size of this access, <code>count * elem_size</code>, \xe2\x80\xa6CkAll the opaque types that have hidden types set by this \xe2\x80\xa60CiGetting a &amp;core::panic::Location referring to a span.DhThis is true iff the <code>const_stable_indirect</code> attribute is \xe2\x80\xa60CgChecks if the given expression contains an unsafe blockCn[query description - consider adding a doc-comment!] Given \xe2\x80\xa6000000CjReturns a graph whose nodes are (unresolved) inference \xe2\x80\xa6CmCreates a map of disallowed items to the reason they were \xe2\x80\xa6B`Creates a DLL Import Library \xe2\x80\xa6ClCreates debug information for the given vtable, which is \xe2\x80\xa6Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6000000DkApply debuginfo and/or name, after creating the <code>alloca</code> for \xe2\x80\xa6CnThe default address space for this target. When using LLVM \xe2\x80\xa6CmWhether to use default binding modes. At present, this is \xe2\x80\xa6CdDefault number of codegen units to use in debug modeC`Generate the default configs for a given sessionChDefault supported version of DWARF on this platform. \xe2\x80\xa6AhDeclare a private globalDgNote that this is <em>untracked</em> and should only be used within \xe2\x80\xa6CnDelete all TLS entries for the given thread. This function \xe2\x80\xa6CkHow should a deref pattern find the place for its inner \xe2\x80\xa6ChWhether the original and suggested code are visually \xe2\x80\xa6CcWhether this is a trait implementation that has \xe2\x80\xa6DfCreates a block that resets the drop flag. If <code>mode</code> is \xe2\x80\xa6CbIf the session is properly configured, dumps a \xe2\x80\xa6CjOutputs stats about instantiation counts and estimated \xe2\x80\xa6EgCall <code>f</code> on every \xe2\x80\x9cbinding\xe2\x80\x9d in a pattern, e.g., on <code>a</code> in \xe2\x80\xa6ClReturns all the elements contained in a given region\xe2\x80\x99s \xe2\x80\xa6CbChecks if LLVM lifetime markers should be emitted.CnEmits a mermaid flowchart of the NLL SCCs and the outlives \xe2\x80\xa6DkReturns <code>true</code> if internal lints should be added to the lint \xe2\x80\xa6Dc<code>#![feature]</code> attrs for language features, for error \xe2\x80\xa6DbReturns a list of <code>EnabledLangFeature</code> with info about:1CfFor each node, the loop header node of its nearest \xe2\x80\xa6ChEncode the given value or a previously cached shorthand.BiEvaluate the arguments of a function callCkWhen we encounter a coinductive cycle, we have to fetch theCnThis method loads all on-disk cacheable query results into \xe2\x80\xa6CjExpand any free alias types contained within the given \xe2\x80\xa6CnA map of crate names to the URL to use instead of querying \xe2\x80\xa6DiReturn the <code>AllocId</code> for the given <code>extern static</code>.0CjObtain the list of lifetimes parameters to add to an item.CbExtracts information about a callable type for \xe2\x80\xa60CnReturns the list of types with a \xe2\x80\x9cpotentially significant\xe2\x80\xa6CgWindows FILETIME is measured in 100-nanosecs since 1601C`HACK: in order to not mistakenly assume that \xe2\x80\xa6CmFinds the most recent published session directory that is \xe2\x80\xa6CfHandles \xe2\x80\x98FloatToFloat\xe2\x80\x99 and \xe2\x80\x98FloatToInt\xe2\x80\x99 casts.DjThis fields keeps track of the <code>Span</code>s that we have used to \xe2\x80\xa6CnInvoke a function on each value in the given place and all \xe2\x80\xa6CmRuns the given function for each sub-expression producing \xe2\x80\xa6CkThis forces a diagnostic node green by running its side \xe2\x80\xa60CiForks the inference context, creating a new inference \xe2\x80\xa60CkProvides the original input contents from the span of a \xe2\x80\xa6CkThis rather funky routine is used while processing expected0ChRecursively expand all macro invocations in this AST \xe2\x80\xa6DcThe maximum byte size a <code>Future</code> can have, before it \xe2\x80\xa60DjIf <code>true</code>, generate a JSON file in the crate folder instead \xe2\x80\xa6CjCrawl over the crate, inserting test reexports and the \xe2\x80\xa6CjReturns the segments of a path that might have generic \xe2\x80\xa6CjReturns an iterator over the items in the map that are \xe2\x80\xa6CnReturn span pointing to use that resulted in selecting the \xe2\x80\xa6CkGiven some node representing a fn-like thing in the HIR \xe2\x80\xa6CiReturns the salt to be used for a deduplicated global \xe2\x80\xa60CkGet the total of threads that are currently live, i.e., \xe2\x80\xa6ClSynthesize a new lifetime name that doesn\xe2\x80\x99t clash with \xe2\x80\xa6CmReturns an integer type that is twice wide as <code>ty</code>ClHas a deref pattern been lowered? This is initialized to \xe2\x80\xa6EgOption for <code>cfg(target_has_reliable_f16_math)</code>, true if <code>f16</code> \xe2\x80\xa6CkWhether any variants have been removed from the result, \xe2\x80\xa6DcFast path helper for testing if a type is <code>Sized</code> or \xe2\x80\xa6CiAdd a help message attached to this diagnostic with a \xe2\x80\xa6CmReturns an iterator for the nodes in the ancestor tree of \xe2\x80\xa6DcReturns <code>Homogeneous</code> if this layout is an aggregate \xe2\x80\xa6Cn\xe2\x80\x9cIntercept\xe2\x80\x9d a function call, because we have something \xe2\x80\xa60CiDuring borrowck, if there are no outlives bounds on a \xe2\x80\xa6ClCheck if it\xe2\x80\x99s even possible to satisfy the \xe2\x80\x98where\xe2\x80\x99 \xe2\x80\xa6CmNormalizes the predicates and checks whether they hold in \xe2\x80\xa6CdReturns the path for a given filename within the \xe2\x80\xa60CmIf we are setting an associated type in trait impl, is it \xe2\x80\xa6DjEnable/Disable tuple fields. For example <code>x</code> tuple. if it\xe2\x80\x99\xe2\x80\xa6CmThe incremental compilation session directory, or None if \xe2\x80\xa6AkAll non-determined imports.CmInitialize the extra state of an allocation local to this \xe2\x80\xa60CnThis allows tools to enable rust logging without having to \xe2\x80\xa60ClInstall our usual <code>ctrlc</code> handler, which sets \xe2\x80\xa60AnGet the instance mangled name.0CkCreates an instantiation S for the canonical value with \xe2\x80\xa60DjInstantiates the const variable <code>target_vid</code> with the given \xe2\x80\xa6CjInstantiate the args of an impl if this candidate came \xe2\x80\xa6CiAllows one to apply a instantiation to some subset of \xe2\x80\xa60000Dk<code>-Z instrument-xray=instruction-threshold=N</code>, explicitly set \xe2\x80\xa6CgCheck if given type has interior mutability such as \xe2\x80\xa6CmReturns true if the object file is 64-bit. Note that this \xe2\x80\xa6Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6000000DkReturns true if the expr is equal to <code>Default::default()</code> of \xe2\x80\xa6DkThe binding introduced by <code>#[macro_export] macro_rules</code> is a \xe2\x80\xa6DjReturns <code>Some(iterator.next())</code> if it has exactly one item, \xe2\x80\xa6CfReturns true if the last line of the passed string \xe2\x80\xa6CnReturns <code>true</code> if the line n did not get formatted.DeWhether the value is a <code>usize</code> or <code>isize</code> type.0A`Returns true if:DeWe say a method is <em>vtable safe</em> if it can be invoked on a \xe2\x80\xa60DaCheck if <code>expr</code> evaluates to an integer constant of 0.CjAre we sure this could not possibly be a macro invocation?CfImplement common methods for item template structs \xe2\x80\xa6BmCall <code>f</code> for each exported symbol.EcJoin two <code>Certainty</code>s after clearing their <code>DefId</code>s. This \xe2\x80\xa6CmMark that the active thread tries to exclusively join the \xe2\x80\xa6CgKill any borrows that conflict with <code>place</code>.CkWhether the data at the scrutinee is known to be valid. \xe2\x80\xa6EfThe maximum size of the <code>Err</code>-variant in a <code>Result</code> returned \xe2\x80\xa60DkLinker arguments used in addition to <code>late_link_args</code> if all \xe2\x80\xa6EfReturns the <code>DefId</code> of the <code>legacy_receiver</code> lang item if it \xe2\x80\xa6CnGiven a place that\xe2\x80\x99s either an array or a slice, returns \xe2\x80\xa6CmTrims whitespace and aligns to indent, but otherwise does \xe2\x80\xa6CnFetch and return the user-visible lint level for the given \xe2\x80\xa6ClThe expected edge direction per live region: the kind of \xe2\x80\xa6BkUse LLVM intrinsic for mcount function nameCian alignment resembling the one LLVM would pick for a \xe2\x80\xa6ChA counter that is used for generating local symbol namesDeReturns the locations contained within a given region <code>r</code>.ChLower a path to an associated item (of a trait) to a \xe2\x80\xa6kMatches \xe2\x80\xa6DfLowers a lifetime binder that defines <code>generic_params</code>, \xe2\x80\xa6CjLower a trait object type from the HIR to our internal \xe2\x80\xa6B`Creates zero or more impl items.CmReuses the span but adds information like the kind of the \xe2\x80\xa6ClWe\xe2\x80\x99ve found an enum/struct/union type with the generic \xe2\x80\xa6DiThe maximum size of a file included via <code>include_bytes!()</code> \xe2\x80\xa60CjThe largest universe of any region nameable from this SCC.CkThe largest universe this SCC can name. It\xe2\x80\x99s the smallestCjThe largest universe nameable from this SCC. It is the \xe2\x80\xa6ClReturns the maximum number of graphemes that is possible \xe2\x80\xa6CkDetermine whether this type may contain a reference (or \xe2\x80\xa6CmIn case special-case style is required, returns an offset \xe2\x80\xa6ClEnsure the filename is not too long, as some filesystems \xe2\x80\xa6CjMake a property uniform on a copy equivalence class by \xe2\x80\xa6BhCalled if a closing brace was not found.ClNamed module children from all kinds of items, including \xe2\x80\xa6DkReturns the place and move path for each field of <code>variant</code>, \xe2\x80\xa6EhThe SSA analysis done by <code>SsaLocals</code> treats <code>Operand::Move</code> as \xe2\x80\xa6CmPrints out a message with multiple suggested edits of the \xe2\x80\xa6DfList of functions from <code>#[rustc_must_implement_one_of]</code> \xe2\x80\xa6CjReturns a list of types such that the given type needs \xe2\x80\xa6AjCreate a new closure type.ClCreate a new type variable in the universe of the target \xe2\x80\xa6CaReturns generic arguments that are not lifetimes.0DgFinds a \xe2\x80\x9clower bound\xe2\x80\x9d for <code>fr</code> that is not local. In \xe2\x80\xa6ClDetermines whether this FD non-deterministically has its \xe2\x80\xa6EaIf the <code>Self</code> type of the unsatisfied trait <code>trait_ref</code> \xe2\x80\xa6CmOnly public-facing way to traverse all the definitions in \xe2\x80\xa6CnThis context, but with all transparent expansions filtered \xe2\x80\xa6CnThis is the OriginalQueryValues for the steps queries that \xe2\x80\xa6EkUsed to ban nested <code>impl Trait</code>, e.g., <code>impl Into&lt;impl Debug&gt;</code>.ClRequirements between the various free regions defined in \xe2\x80\xa6EfReturns the <code>DefId</code> of the <code>panic_bounds_check</code> lang item if \xe2\x80\xa6EaReverse map to the <code>index</code> field of each <code>GenericParamDef</code>.CjLooks through the generics and all parents to find the \xe2\x80\xa61CeParses a comma-separated sequence, including both \xe2\x80\xa6CiParses an associative expression with operators of at \xe2\x80\xa6CkParses all the \xe2\x80\x9cfront matter\xe2\x80\x9d (or \xe2\x80\x9cqualifiers\xe2\x80\x9d) \xe2\x80\xa6DeParses a declarative macro 2.0 definition. The <code>macro</code> \xe2\x80\xa6ChParse a comma-separated list of enabled and disabled \xe2\x80\xa6DkParses bounds of a lifetime parameter <code>BOUND + BOUND + BOUND</code>\xe2\x80\xa6BfParse an inner meta item per RFC 1559.CnParses a comma-separated sequence delimited by parentheses \xe2\x80\xa6Eb<code>path_accessed_at_base(path, point)</code> when the <code>path</code> was \xe2\x80\xa60Eb<code>path_assigned_at_base(path, point)</code> when the <code>path</code> was \xe2\x80\xa60CmGiven a path, this checks if the if the parent resolution \xe2\x80\xa6CjRemoves blocks around an expression, only if the block \xe2\x80\xa6CjAssociates function instances with an LLVM global that \xe2\x80\xa6CmList of places where a counter-increment statement should \xe2\x80\xa6FeIf <code>self_ty</code> is <code>*mut T</code> then this picks <code>*const T</code> methods. The \xe2\x80\xa6DhChecks whether a previous work product exists for <code>v</code> and, ifBiAppends a representation of a list of \xe2\x80\xa6EbPrints <code>expr</code> or <code>(expr)</code> when <code>needs_par</code> holds.0CjRender the stability, deprecation and portability tags \xe2\x80\xa6CkInternal utility to identify a thread stored internally \xe2\x80\xa6CjProbe bounds in scope where the bounded type coincides \xe2\x80\xa6DhProcess the builtin attrs (<code>hir::Attribute</code>) on the item. \xe2\x80\xa6CdComputes the sets of blocks of this MIR that are \xe2\x80\xa6CjFor backwards compatibility, we are promoting function \xe2\x80\xa6CkPropagate the region constraints: this will grow the valuesCfApplies a previously prepared provenance copy. The \xe2\x80\xa6DjIndicates that the \xe2\x80\x9clocal operand\xe2\x80\x9d stored in <code>local</code> is \xe2\x80\xa6ClRecover if we parsed attributes and expected an item but \xe2\x80\xa6EhRecover if <code>|</code> or <code>||</code> is the current token and we have one of \xe2\x80\xa6CnEmit an error when a char is parsed as a lifetime or label \xe2\x80\xa6CaDetermines whether this item is recursive for \xe2\x80\xa6EhClassifies <code>r</code> as a universal region, returning <code>None</code> if this \xe2\x80\xa6ClWhether or not RelaxElfRelocation flag will be passed to \xe2\x80\xa6CjThis pass replaces a drop of a type that does not need \xe2\x80\xa6CkGenerates the HTML for example call locations generated \xe2\x80\xa6DjA flag, which when <code>true</code>, will render pages which redirect \xe2\x80\xa6ClReport an error for a struct field expression when there \xe2\x80\xa6CcReports that an overflow has occurred and halts \xe2\x80\xa61CmThe set of predicates on which errors have been reported, \xe2\x80\xa60CnReserves a new ID <em>if</em> this allocation has not been \xe2\x80\xa6CiResolve an instance for drop_in_place for the given type.BkResolve the drop in place for a given type.1CfResolve bindings in a pattern. This is a helper to \xe2\x80\xa6CgCrate resolved and loaded via the given extern name \xe2\x80\xa6CgHelper to retrieve span(s) of given borrow from the \xe2\x80\xa6CaRewrite <code>where</code> and comment around it.CnRuns all analyses that we guarantee to run, even if errors \xe2\x80\xa6CjVarious data structures used by the Rust compiler. The \xe2\x80\xa6BgThe Rust Linkage Model and Symbol NamesBoThis crate defines the trait resolution method.ClRemembers whether we already warned about an extern type \xe2\x80\xa60CkIgnore orphan check failures and exclusively search for \xe2\x80\xa6CjWe often create nested obligations without setting the \xe2\x80\xa60CmUsed when trimmed_def_paths is called and we must produce \xe2\x80\xa6CnSet the \xe2\x80\x9ctainted by errors\xe2\x80\x9d flag to true. We call this \xe2\x80\xa60DjAdjusts any De Bruijn indices so as to make <code>to_binder</code> the \xe2\x80\xa6000BnImplementations can provide a fast-path to \xe2\x80\xa6DjCompared to <code>needs_process_obligation</code> this and its callees \xe2\x80\xa6ClGiven a source file, produces a sequence of token trees. \xe2\x80\xa6DgNote that this is <em>untracked</em> and should only be used within \xe2\x80\xa6CjChecks whether a given span has any comment token This \xe2\x80\xa6BoReturns all the comments a given span contains.CnPrints out a message with a suggested edit of the code. If \xe2\x80\xa6EdGiven a <code>Span</code>, gets a new <code>Span</code> covering the first token \xe2\x80\xa6CiEnforce the named macros always use the braces specified.0C`Whether proving this goal is a coinductive step.Dgmacro to help implement <code>StyleEditionDefault</code> for config \xe2\x80\xa6ChIn case of an ambiguity or mismatched disambiguator, \xe2\x80\xa6DdIf <code>true</code>, we can give a simpler suggestion solely by \xe2\x80\xa60ChIf true, our suggestion is to elide explicit binding \xe2\x80\xa6CnIf we are suggesting a replacement, this will contain text \xe2\x80\xa6CoTakes the current deadlock callback, leaving <code>None</code>.D`Like <code>temp_path</code>, but specifically for dwarf objects.DkLike <code>temp_path</code>, but also supports things where there is no \xe2\x80\xa6BkRun these wrapper instead of rustc directlyAhCalculates two booleans.DkRecovers the \xe2\x80\x9cimpl X for Y\xe2\x80\x9d signature from <code>impl_def_id</code> \xe2\x80\xa6CmReturns the total number of fields in a tuple used within \xe2\x80\xa6DeError Reporting for <code>impl</code> items that do not match the \xe2\x80\xa6CfReturns whether all impls which would apply to the \xe2\x80\xa60DbTransforms the <code>body</code> of the coroutine applying the \xe2\x80\xa6ChGiven some expressions, their known unified type and \xe2\x80\xa6BcCreates an interned usize constant.ClReturns the cached query result if there is something in \xe2\x80\xa6DnInvoked when we have some type-test (e.g., <code>T: &#39;X</code>) that we \xe2\x80\xa6DhCheck whether a <code>ty</code> implements given trait(trait_def_id) \xe2\x80\xa60DjReturns the predicates defined on <code>item_def_id</code> of the form \xe2\x80\xa6CmTo avoid cycles within the predicates of a single item we \xe2\x80\xa6000000EkWe instantiate <code>UnificationTable</code> with <code>bounds&lt;Ty&gt;</code> because \xe2\x80\xa6CgIf this target feature is unstable, the name of the \xe2\x80\xa6CmUser type annotations are shared between the main MIR and \xe2\x80\xa6AfUser type annotations.CkFor indirections (ptr/ref) we can\xe2\x80\x99t use Active, since \xe2\x80\xa6CeUpdate the data-race detector for an atomic write \xe2\x80\xa6ClAdd a span label to the use of the captured variable, if \xe2\x80\xa6CmReturns the variant index for an ADT used within a Struct \xe2\x80\xa6CoReturn the index of <code>VariantDef</code> given a variant id.DkJust <code>Vec::retain</code>, but the condition is inverted and we add \xe2\x80\xa6CnThe target triple depends on the deployment target, and is \xe2\x80\xa6CjTracks when we\xe2\x80\x99re lowering a pattern that implicitly \xe2\x80\xa6ClVisit invocation in context in which it can emit a named \xe2\x80\xa6BiVisit modules defined inside macro calls.CnVisit all nested goals of this candidate, rolling back all \xe2\x80\xa6ClVisit all nested goals of this candidate without rolling \xe2\x80\xa6DhThe <code>wasm32-wasip1-threads</code> target is an extension of the \xe2\x80\xa6CiDetermine if weak memory emulation should be enabled. \xe2\x80\xa60CkPrevent path trimming if it is turned on. Path trimming \xe2\x80\xa60DjPrevent selection of visible paths. <code>Display</code> impl of DefId \xe2\x80\xa60CmPrints out a message with multiple suggested edits of the \xe2\x80\xa6DfReplaces the universe of this canonical variable with <code>ui</code>.000BfWrite a graphviz DOT graph of the MIR.CjHelper function to write an OsStr as a null-terminated \xe2\x80\xa6DjRotates edges in the spantree so that <code>this</code> is the root of \xe2\x80\xa6DaThe <code>aarch64_softfloat_neon</code> lint detects usage of \xe2\x80\xa60CjFormerly unstable features that have now been accepted \xe2\x80\xa60DjThe <code>ambiguous_glob_imports</code> lint detects glob imports that \xe2\x80\xa60CjThis pass moves values being dropped that are within a \xe2\x80\xa6BlGenerates diagnostics using annotate-snippetBhThe region corresponding to an argument.DfAllows callers of <code>assemble_and_evaluate_candidates</code> to \xe2\x80\xa6DgImplementation of an <code>AsyncIterator</code> trait by one of the \xe2\x80\xa600CmExternally stored memory cell clocks explicitly to reduce \xe2\x80\xa6CdWhen adjusting a receiver we often want to do one ofDdThe <code>broken_intra_doc_links</code> lint detects failures in \xe2\x80\xa6Dc<code>BasicCoverageBlockData</code> holds the data indexed by a \xe2\x80\xa6EeThe <code>conflicting_repr_hints</code> lint detects <code>repr</code> attributes \xe2\x80\xa60DiThe subject of a <code>ClosureOutlivesRequirement</code> \xe2\x80\x93 that is, \xe2\x80\xa6DdThese are the error cases for <code>codegen_select_candidate</code>.00CdThe <code>coerce_pointee_validated</code> lang item.CiHow to perform collapse macros debug info if-ext - if \xe2\x80\xa6DjAlternative to <code>AttributeParser</code> that automatically handles \xe2\x80\xa6CiA call to a function that is in a trait, or has trait \xe2\x80\xa6CgRepresents <code>#[rustc_const_stable_indirect]</code>.0BbA single debugger visualizer file.CiCode that changes meaning in some way in the provided \xe2\x80\xa6AkExecute a timeout callback.CjLifetime on a trait object that is spelled explicitly, \xe2\x80\xa6EhThe <code>fuzzy_provenance_casts</code> lint detects an <code>as</code> cast between \xe2\x80\xa60CnA visitor which searches for the \xe2\x80\x9cbest\xe2\x80\x9d spot to use in \xe2\x80\xa6CnAll bindings in this rib are generic parameters that can\xe2\x80\x99\xe2\x80\xa6CdExtra information for a future incompatibility lint.0Dk<code>true</code> if there are \xe2\x80\x9cnames\xe2\x80\x9d of regions and so forth that \xe2\x80\xa6000ClAn \xe2\x80\x9cescaping var\xe2\x80\x9d is a bound var whose binder is not \xe2\x80\xa6DkDescribes the way the content of the <code>rendered</code> field of the \xe2\x80\xa6DaThe <code>invalid_doc_attributes</code> lint detects when the \xe2\x80\xa60DiThe <code>invalid_null_arguments</code> lint checks for invalid usage \xe2\x80\xa6CjComputing common supertype of an if expression with no \xe2\x80\xa600CiThe access overlaps with one or more existing allocationsCkWalk through a function type, gathering all RPITITs and \xe2\x80\xa6GbReplace <code>{integer}</code> with <code>i32</code> and <code>{float}</code> with <code>f64</code>. Used only \xe2\x80\xa6CiInline assembly operand explicit register or register \xe2\x80\xa6CnRepresents the bounds declared on a particular set of type \xe2\x80\xa6CiIllegal move due to attempt to move out of a slice or \xe2\x80\xa6CdThis is an error state that is reached when some \xe2\x80\xa6CdInvalid character in numeric escape (e.g. \xe2\x80\x98\\xz\xe2\x80\x99)CfUsing a pointer-not-to-a-function as function pointer.0CgWrites a module to the specified path. Returns 0 on \xe2\x80\xa6EhThe <code>lossy_provenance_casts</code> lint detects an <code>as</code> cast between \xe2\x80\xa60DkA <code>List</code> that additionally stores type information inline to \xe2\x80\xa60CnWhen checking permissions for a place access, this flag is \xe2\x80\xa6DgThe <code>macro_use_extern_crate</code> lint detects the use of the \xe2\x80\xa60Dg<code>MaybeInitializedPlaces</code> tracks all places that might be \xe2\x80\xa60CnA type was found which is a method type parameter, and that\xe2\x80\xa6BmError E0407: method is not a member of trait.C`Reasons that we might issue a migration warning.CkA module, then extern prelude (used for mixed 2015-2018 \xe2\x80\xa6CkVirtual module that denotes resolution in a module with \xe2\x80\xa6DjThe <code>non_upper_case_globals</code> lint detects static items that \xe2\x80\xa6Ba\xe2\x80\x98\\u\xe2\x80\x99 not followed by \xe2\x80\x98{\xe2\x80\x99.CeMaps MIR pass names to a snake case form to match \xe2\x80\xa6ClThe <code>panic_const_async_gen_fn_resumed</code> lang item.Dk<code>-Z patchable-function-entry</code> representation - how many nops \xe2\x80\xa6CfAn associated constant in a trait declaration with \xe2\x80\xa6CkStore aggregated counts of cache hits per query invocation.DlRetrieve the <code>Body</code> along with the <code>BorrowSet</code> and \xe2\x80\xa6CmThe given region parameter was instantiated with a region \xe2\x80\xa60DnReorder format parameter: <code>format!(&quot;{foo:?#}&quot;)</code> -&gt; \xe2\x80\xa6CfA required associated constant in a trait declaration.ChError information for when the program exhausted the \xe2\x80\xa60CkAdditional special case macros for version 2; these are \xe2\x80\xa6CnTypes live across coroutine yields must be <code>Sized</code>.00AgThe stack grew too big.0Cb<code>S { ... }</code> must be <code>Sized</code>.00CkThe definition of a synthetic coroutine body created by \xe2\x80\xa6CbA synthetic body for a coroutine\xe2\x80\x99s by-move body.11EeThe <code>tail_call_track_caller</code> lint detects usage of <code>become</code> \xe2\x80\xa60DcSee the <code>region_obligations</code> field for more information.0DgThe <code>unnecessary_transmutes</code> lint detects transmutations \xe2\x80\xa6DjThe <code>unsafe_op_in_unsafe_fn</code> lint detects unsafe operations \xe2\x80\xa60ClUnstable language features that are being implemented or \xe2\x80\xa60Dcthe method\xe2\x80\x99s receiver (<code>self</code> argument) can\xe2\x80\x99t be \xe2\x80\xa600CfHolds a weak reference to the actual file description.CiWhen <code>--document-private-items</code> is not passed.CnSet a callback to be invoked when starting computations in \xe2\x80\xa6CgClosure invoked when starting computations in a thread.CjReturns the slice of actions that were taken since the \xe2\x80\xa6EeConverts a parsed <code>Stmt</code> to a <code>Stmt</code> with a trailing semicolon.CiThis adds the usages which occurred while computing a \xe2\x80\xa6DiStores the result that all regions in <code>value</code> are live for \xe2\x80\xa6CnCall this when we are using up a lot of the address space: \xe2\x80\xa6B`Truncate deref of any reference.CoGets the struct or enum variant from the given <code>Res</code>BoAllocate enough memory to store a Path as a \xe2\x80\xa6DjWhether <code>expect</code> should be allowed in code always evaluated \xe2\x80\xa60DjWhether <code>unwrap</code> should be allowed in code always evaluated \xe2\x80\xa60DkAppends end-user visible description of the <code>local</code> place to \xe2\x80\xa6DfCalled by <code>iterate_to_fixpoint</code> during initial analysis \xe2\x80\xa60DjCalled by <code>ResultsCursor</code> to recompute the domain value for \xe2\x80\xa60CmApply the bindings from a pattern to the innermost rib of \xe2\x80\xa6CnReturns true if the corresponding type is inhabited in the \xe2\x80\xa6DgReturns <code>true</code> if the given vector of arguments has more \xe2\x80\xa6CnFor associated types we include both bounds written on the \xe2\x80\xa6EgReturns the <code>DefId</code> of the <code>async_drop_in_place</code> lang item if \xe2\x80\xa6ClPerform an atomic exchange with a memory place and a new \xe2\x80\xa6DkIf <code>Some(lt)</code>, indicates that the lifetime of this temporary \xe2\x80\xa6CkClassify whether an operator is \xe2\x80\x9cleft-homogeneous\xe2\x80\x9d, \xe2\x80\xa6DcUtility function for <em>non</em>-scope code to build their own \xe2\x80\xa6DjCreate debuginfo for <code>dyn SomeTrait</code> types. Currently these \xe2\x80\xa6CjCalculates information used for the \xe2\x80\x93show-coverage flag.AkCan remove Eq/Ne assignmentDiGiven a type variable <code>const_var</code> of the given kind, first \xe2\x80\xa6ChChecks that an attribute is used at the crate level. \xe2\x80\xa6CjCheck the const stability of the given item (fn or trait).DjChecks if <code>#[diagnostic::do_not_recommend]</code> is applied on a \xe2\x80\xa6CkCheck that parameters of the derived impl don\xe2\x80\x99t occur \xe2\x80\xa6CnIf there is any previous entry on the stack that precisely \xe2\x80\xa6AeChecks a method call.ClReports an error if this is a borrow of local data. This \xe2\x80\xa6CmCheck if the expression that could not be assigned to was \xe2\x80\xa6DkCheck the scrutinee of an <code>if let</code> to see if it promotes any \xe2\x80\xa6CjChecks that the lhs contains no repetition which could \xe2\x80\xa6ClCheck that the number of varargs is at least the minimum \xe2\x80\xa6DfChecks if <code>#[must_not_suspend]</code> is applied to a struct, \xe2\x80\xa6CbDoes this expression refer to a place that either:BnCheck that a <code>static</code> is inhabited.DkCheck that <code>&#39;static</code> lifetimes are not introduced by the \xe2\x80\xa6DkChecks the final value for the free region <code>fr</code> to see if it \xe2\x80\xa6DeIn the <code>Err</code> case, returns the instance that should be \xe2\x80\xa6CfHigher-level interface to emitting calls to intrinsics0CgExtract all symbols defined in raw-dylib libraries, \xe2\x80\xa6CnReturns a list of all paths used in the type. This is used \xe2\x80\xa6DhIf <code>true</code>, an inherited reference will be considered when \xe2\x80\xa6EhThis function checks the data at <code>val</code> to be const-valid. <code>val</code>\xe2\x80\xa6DcReturns <code>true</code> if user specified a name and not just \xe2\x80\xa6DfWhether this contains a <code>!</code> pattern. This in particular \xe2\x80\xa6CiSets up a path that performs all required cleanup for \xe2\x80\xa6Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6000000CmReturn the set of types that should be taken into account \xe2\x80\xa6E`Returns <code>true</code> if the node pointed to by <code>def_id</code> is a \xe2\x80\xa6CnWhether this could be a never pattern, taking into account \xe2\x80\xa6DkBe helpful when the user wrote <code>{... expr; }</code> and taking the \xe2\x80\xa6CkCollects all incoherent impls for the given crate and type.000000CiThis module implements a dead store elimination (DSE) \xe2\x80\xa6CjUsed by incremental compilation tests to assert that a \xe2\x80\xa6CiDeclare bindings in a guard. This has to be done when \xe2\x80\xa6BfTrait for types providing lint checks.BmThe error count shown to the user at the end.CiUsed to detect when ADT def ids are used as keys in a \xe2\x80\xa60D`A def-id that is extracted from a <code>Ty</code> in a query keyDdGets an English article for the <code>TyCtxt::def_kind_descr</code>.CkFor this one we determine the appropriate namespace for \xe2\x80\xa6DiEnd-user visible description of the <code>field_index</code>nth field \xe2\x80\xa6CmReturns the set of types that are required to be alive in \xe2\x80\xa6CgHelper function to determine if we need to escalate \xe2\x80\xa6CkThis is similar to diverge_cleanup except its target is \xe2\x80\xa6DdThis drops the <code>Acquired</code> token without releasing the \xe2\x80\xa6BnItems accessible from the crate being checked.0CmPerforms part of the privacy check and computes effective \xe2\x80\xa6000000BkEffective visibilities for reachable nodes.CmWhether a .debug_gdb_scripts section will be added to the \xe2\x80\xa6DfMost <code>emit_producing_guarantee</code> functions use this as a \xe2\x80\xa6EfCalls the simd intrinsic <code>intrinsic</code>; the <code>simd_</code> prefix has \xe2\x80\xa6ClPrecise capture is enabled if user is using Rust Edition \xe2\x80\xa60DiReturning <code>Some</code> disables the global cache for the current \xe2\x80\xa6000CnChecks whether two constraints designate the same equality \xe2\x80\xa6DkCheck for <code>=</code>. This means the source incorrectly attempts to \xe2\x80\xa6BaEvaluate an assignment statement.CiEvaluates a constant and returns the computed allocation.000000CiExpand the function signature to include the contract \xe2\x80\xa6DbReturns the explicitly user-written <em>predicates</em> of the \xe2\x80\xa6000000EeCache of <code>Instance</code> exported under the given <code>Symbol</code> name. \xe2\x80\xa60DfReturns true if the specified <code>expr</code> requires coercion, \xe2\x80\xa6CmExtracts a string literal from the macro expanded version \xe2\x80\xa6DfPrint an <code>f64</code> with precision 1 (one decimal place) and \xe2\x80\xa6DjReturn the default <code>FluentBundle</code> with standard \xe2\x80\x9cen-US\xe2\x80\x9d \xe2\x80\xa60DgReturn <code>FluentBundle</code> with localized diagnostics for the \xe2\x80\xa6DaThe earliest block that has only candidates &gt;= this one as \xe2\x80\xa6CdTry to reject the assumption based off of simple \xe2\x80\xa6DhSpan of the privacy modifier in fields of an item <code>DefId</code> \xe2\x80\xa6CmReturns the associated item with the given identifier and \xe2\x80\xa6ChList all the lifetimes that appear in the provided type.FeReturns <code>Some(output)</code> if <code>powi</code> (called <code>pown</code> in C) results in \xe2\x80\xa6CnIterate over every impl that could possibly match the self \xe2\x80\xa6DfAvoid unsafe <code>std::env::set_var()</code> by allowing tests to \xe2\x80\xa6DnConverts from <code>rustc_errors::DiagInner</code> to <code>Diagnostic</code>.DjCreate a new <code>OutlivesEnvironment</code> from normalized outlives \xe2\x80\xa60Deexpected diagnostic will have the level <code>Expect</code> which \xe2\x80\xa6CbPer-function coverage information added by the \xe2\x80\xa6ChGenerates the contents of the covfun record for this \xe2\x80\xa6CmGenerates the contents of the covmap record for this CGU, \xe2\x80\xa6Ajinverted index of genericsCnPeels away all the compiler generated code surrounding the \xe2\x80\xa6Cfif-ext - if macro from different crate (related to \xe2\x80\xa6BdGets the value of the given variant.BhCheck the readiness of file description.FeIf <code>expr</code> is a <code>match</code> expression that has only one non-<code>!</code> arm, \xe2\x80\xa6DjGiven a <code>DefId</code> for an opaque type in return position, find \xe2\x80\xa6DdReturns the name of the provided <code>Ty</code> (that must be a \xe2\x80\xa6ClReturns a list of directories where target-specific tool \xe2\x80\xa6CkGet the total number of threads that were ever spawn by \xe2\x80\xa6EhOption for <code>cfg(target_has_reliable_f128_math)</code>, true if <code>f128</code>\xe2\x80\xa6ChQuery backing <code>Ty::is_structural_eq_shallow</code>.000000DjThis method returns true if and only if <code>adt_ty</code> itself has \xe2\x80\xa6ClIs true if the target is an ARM architecture using thumb \xe2\x80\xa6CfIf enabled, when printing a \xe2\x80\x9cfree region\xe2\x80\x9d that \xe2\x80\xa60DjReturns the <code>ConstContext</code> of the body associated with this \xe2\x80\xa6CiReturns the defining scope for an opaque type definition.DfSame as <code>hir</code>, but it adapts the applicability level by \xe2\x80\xa6ChFor greater-than-page-sized allocations, returns the \xe2\x80\xa6CkIndices of the items in the set, sorted by the item\xe2\x80\x99s \xe2\x80\xa60CkThe backend type used for a rust type when it\xe2\x80\x99s in an \xe2\x80\xa60Cjprocess constant containing SIMD shuffle indices &amp; \xe2\x80\xa6CkWhether to include extra comments, like span info. From \xe2\x80\xa6DhIf the given <code>DefId</code> is an associated item of an inherent \xe2\x80\xa6EeReturns <code>true</code> if this <code>#[repr()]</code> should inhibit union ABI \xe2\x80\xa6CnMutates the initial value of the dataflow state upon entry \xe2\x80\xa60CkInserts the actual alignment check\xe2\x80\x99s logic. Returns a \xe2\x80\xa6DiRecord the name of an opaque <code>Ty::ImplTrait</code> pre-expansion \xe2\x80\xa6CfPerforms a instantiation suitable for going from a \xe2\x80\xa60000CjA helper function that allocates memory for the layout \xe2\x80\xa6CjReturns the items of this set in stable sort order (as \xe2\x80\xa6ClReturns the entries of this map in stable sort order (as \xe2\x80\xa6CgWhether this item is conditionally constant for the \xe2\x80\xa6DiReturns whether <code>LinkSelfContainedComponents::CRT_OBJECTS</code> \xe2\x80\xa6DkChecks if the <code>def_id</code> belongs to a function that is part of \xe2\x80\xa6DfReturns <code>true</code> if the token is a non-raw identifier for \xe2\x80\xa6DhIs the token <code>dist</code> away from the current suitable as the \xe2\x80\xa6DcReturns <code>true</code> if calls to the function may be promoted.000000DfReturns <code>Some</code> if this is a reference to a thread-local \xe2\x80\xa6DgReturns <code>Option&lt;String&gt;</code> where String is a textual \xe2\x80\xa6DlReturns <code>true</code> if this is a <code>static</code> item with the \xe2\x80\xa6CnThis checks if this is a conflict marker, depending of the \xe2\x80\xa6CgPrint an <code>isize</code> with underscore separators.CjThe base-URL of the issue tracker for when an item has \xe2\x80\xa6CeOnly returns the opaque types which are stored in \xe2\x80\xa60DfAn enumerated iterator of <code>local</code>s and their associated \xe2\x80\xa6DgAdds a label when <code>&amp;raw EXPR</code> was written instead of \xe2\x80\xa6ClReturns the length of the longest LEB128 encoding of all \xe2\x80\xa6DjLinker arguments used in addition to <code>late_link_args</code> if at \xe2\x80\xa6CmTrims comment characters and possibly a single space from \xe2\x80\xa6ClTransform this fixup into the one that should apply when \xe2\x80\xa6AjLexical region resolution.CnDetect usages of Unicode codepoints changing the direction \xe2\x80\xa6CiIterate through each region that has a value in this set.CeThe target features for compiler flags other than \xe2\x80\xa6BiOutput type to use for llvm_fixup_output.CeReturns HIR ID for the given <code>LocalDefId</code>.000000CjReturns the origin of the opaque type <code>def_id</code>.Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6000000DhLookup the body of a function that has <code>link_name</code> as the \xe2\x80\xa6EfReturns the index of the <code>SourceFile</code> (in <code>self.files</code>) that \xe2\x80\xa6AiLower an index expressionB`Lower a resolved path to a type.EcWhen a range has no end specified (<code>1..</code> or <code>1..=</code>) or no \xe2\x80\xa6CkConverts a flattened iterator of tokens (including open \xe2\x80\xa6ClPass this argument directly instead. Should NOT be used! \xe2\x80\xa6DkPushes the top-level declarations and modifies <code>expr</code> to try \xe2\x80\xa6DiConstruct the decision tree for <code>candidates</code>. Don\xe2\x80\x99t call \xe2\x80\xa6CkReturns whether this target is known to have unreliable \xe2\x80\xa6DeConservatively determines if <code>href</code> is relative to the \xe2\x80\xa6CkTries to extract an inference variable from a type or a \xe2\x80\xa60DhPossibly creates a new source scope if <code>current_root</code> and \xe2\x80\xa6=======DfTest if it is valid for a MIR assignment to assign <code>src</code>\xe2\x80\xa6CgCheck if src can be assigned into dest. This is not \xe2\x80\xa6CfReturns an iterator over all user-declared mutable \xe2\x80\xa6CkRemember whether we already warned about sharing memory \xe2\x80\xa60D`Constructs a <code>TyKind::Error</code> type and registers a \xe2\x80\xa6DhConstructs a <code>RegionKind::ReError</code> region and registers a \xe2\x80\xa6CbLike Ty::new_error_with_message but for constants.ClReturns the next token, paired with a bool indicating if \xe2\x80\xa6CmChecks whether this range is considered non-wrapping when \xe2\x80\xa6DhFinds an \xe2\x80\x9cupper bound\xe2\x80\x9d for <code>fr</code> that is not local. In \xe2\x80\xa6CjFilter out the candidates that aren\xe2\x80\x99t interesting to \xe2\x80\xa6FiSuggest that <code>&amp;T</code> was cloned instead of <code>T</code> because <code>T</code> does not \xe2\x80\xa6ClAllows executing an alternative function when tracing is \xe2\x80\xa60CnChecks whether a trait-ref is potentially implementable by \xe2\x80\xa600Cgsee <code>Ty::outer_exclusive_binder</code> for detailsCjThis field provides fast access to information that is \xe2\x80\xa610101010CnUsed in the new solver to suggest increasing the recursion \xe2\x80\xa60DkWith <code>-Znext-solver=coherence</code>, some obligations may fail if \xe2\x80\xa6Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6000000DfParse <code>mut?</code> or <code>[ raw | pin ] [ const | mut ]</code>.EjParses <code>a.b</code> or <code>a(13)</code> or <code>a[4]</code> or just <code>a</code>.CiParses attributes that appear after the opening of an \xe2\x80\xa6CdParses <code>extern</code> for foreign ABIs modules.DaParses a <code>macro_rules! foo { ... }</code> declarative macro.BmParses attributes that appear before an item.AaParses a pattern.DkParse tuple struct or tuple variant pattern (e.g. <code>Foo(...)</code> \xe2\x80\xa6ClParse the remainder of a bare trait object type given an \xe2\x80\xa6DaReturn for a given <code>Path</code> the span until the last argsDdReturns a name imported by a <code>use</code> declaration. E.g., \xe2\x80\xa6BgReturns the position just before rarrowCnSpan where the named argument is used by position and will \xe2\x80\xa6CmAccess the map of work-products created during the cached \xe2\x80\xa6DjWhen we load, there may be <code>.o</code> files, cached MIR, or other \xe2\x80\xa6BmFormats the substitutions of the primary_spanCjAppends a representation of a (full or partial) simple \xe2\x80\xa6BbEvaluates constraints of the form:ClThe list of the names of all the trait methods that weren\xe2\x80\xa6DcAs a special case, when/if we encounter the <code>main()</code> \xe2\x80\xa6EgReturns the <code>DefId</code> of the <code>RangeFromCopy</code> lang item if it is \xe2\x80\xa6EhReturns the <code>DefId</code> of the <code>RangeInclusive</code> lang item if it is \xe2\x80\xa6Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6000000CnHelper function to read an OsString from a null-terminated \xe2\x80\xa6ChReturns a blank template unless we could find one to \xe2\x80\xa6DaValtrees don\xe2\x80\x99t store the <code>MemPlaceMeta</code> that all \xe2\x80\xa6DjSome variable is \xe2\x80\x9cregular live\xe2\x80\x9d at <code>location</code> \xe2\x80\x93 i.e., \xe2\x80\xa6CiRegister an expansion which has been decoded from the \xe2\x80\xa6CfRegisters an obligation for checking later, during \xe2\x80\xa6CeSet a callback to be invoked when blocking in thread.BjClosure invoked when blocking in a thread.ChThis pass removes storage markers if they won\xe2\x80\x99t be \xe2\x80\xa6CnRewrites the regions in the MIR to use NLL variables, also \xe2\x80\xa6EhThe <code>root_obligation</code> parameter should be the <code>root_obligation</code>\xe2\x80\xa6BiResets the number of bytes consumed to 0.DaRewrite the divergent block of a <code>let-else</code> statement.CnRuns the closure in \xe2\x80\x9cvalidation\xe2\x80\x9d mode, which means the \xe2\x80\xa60CiRun the sequence of passes without validating the MIR \xe2\x80\xa6CfAnalysis of patterns, notably match exhaustiveness \xe2\x80\xa6CnHigher-order macro that invokes the specified macro with a \xe2\x80\xa6CiStructurally compares two types, modulo any inference \xe2\x80\xa6CjSet the pointer for the allocation of the given thread \xe2\x80\xa6Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6000000CmRenders a shortened first paragraph of the given Markdown \xe2\x80\xa6DcWhen calling this after a <code>Diag</code> is constructed, the \xe2\x80\xa6DkReturns <code>true</code> if we should codegen an instance in the local \xe2\x80\xa60CeShadowing involving a label is only a warning for \xe2\x80\xa6EhTransform <code>Aggregate(RawPtr, [p, ()])</code> ==&gt; <code>Cast(PtrToPtr, p)</code>.ClFind the source snippet for this token\xe2\x80\x99s Span, reparse \xe2\x80\xa6CbIt returns the expanded macros correspondence map.BdSource maps for code from the crate.DgExtends the given <code>Span</code> to previous character while the \xe2\x80\xa6DhLike <code>span_lint_and_then</code>, but emits the lint at the node \xe2\x80\xa6CmPrints out a message for a suggestion without showing the \xe2\x80\xa6DjThis computes <code>specialize(ctor, self)</code>. See top of the file \xe2\x80\xa6AoSplits a string of the form \xe2\x80\xa6CjMapping from feature name to feature name based on the \xe2\x80\xa6000000CkReturns the path to a session\xe2\x80\x99s staging dependency graph.CmReturns whether the first match pair of this candidate is \xe2\x80\xa6CmStore query cache hits to the self-profile log. Should be \xe2\x80\xa6CmChecks whether two types are structurally the same enough \xe2\x80\xa6CnReturns the location immediately after this one within the \xe2\x80\xa6DaAttempts to reinterpret <code>method(rcvr, args...)</code> as \xe2\x80\xa6BhSuggests to add an attribute to an item.EcWhen expecting a <code>bool</code> and finding an <code>Option</code>, suggests \xe2\x80\xa6CmIf the type failed selection but the trait is implemented \xe2\x80\xa6Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6000000EhGiven a <code>dyn Subtrait</code> and <code>dyn Supertrait</code> trait object, find \xe2\x80\xa6EkGenerate a synthetic region named <code>&#39;N</code>, where <code>N</code> is the next \xe2\x80\xa6DhIf <code>true</code>, then the value resulting from evaluating this tailDkMacro for machine-specific <code>InterpError</code> without allocation. \xe2\x80\xa60DiApplies the <code>events</code> to Miri\xe2\x80\x99s internal state. The event \xe2\x80\xa6CmExtracts the underlying trait reference and own args from \xe2\x80\xa600000CiThe imported SourceFile\xe2\x80\x99s representation within the \xe2\x80\xa6CkTrims whitespaces to the right except for the line feed \xe2\x80\xa6EmWhen the <code>E</code> of the resulting <code>Result&lt;T, E&gt;</code> in an expression \xe2\x80\xa6BoThe inverse of <code>io_error_to_errnum</code>.ClTry expanding the macro derive. Returns the index of the \xe2\x80\xa6ChMacro invocations that can expand into items in this \xe2\x80\xa6EcCreates a <code>Diag</code> for an unexpected token <code>t</code> and tries to \xe2\x80\xa6EgUnify the <code>original_values</code> with the <code>var_values</code> returned by \xe2\x80\xa6CkRemoves excess indentation on comments in order for the \xe2\x80\xa6CmReturns an iterator over all the RegionVids corresponding \xe2\x80\xa6CmIf this SCC reaches a placeholder it can\xe2\x80\x99t name, return \xe2\x80\xa6CnThe fully liberated input types of this function, with all \xe2\x80\xa6CfThe return type of this function, with all regions \xe2\x80\xa6CnCollects near misses when trait bounds for type parameters \xe2\x80\xa6CgUpdates the item as being reachable through a macro \xe2\x80\xa6CmReturns the upstream crate that exports drop-glue for the \xe2\x80\xa6000000CfPrint a <code>usize</code> with underscore separators.BhValidate a local resolution (from ribs).CkThis stores whether we are currently doing reads purely \xe2\x80\xa60EgConverts a <code>ValTree</code> to a <code>ConstValue</code>, which is needed after \xe2\x80\xa6CiSynthesize an error value to let compilation continue \xe2\x80\xa60DkThe size of the boxed type in bytes, where boxing in a <code>Vec</code> \xe2\x80\xa60ChThis field is used for assigning DepNodeIndices when \xe2\x80\xa60DkVisits the memory covered by <code>place</code>, sensitive to freezing: \xe2\x80\xa6DbLike <code>visit_nested_item()</code>, but for impl items. See \xe2\x80\xa6CjVisits all of the \xe2\x80\x9cprimary\xe2\x80\x9d bindings in a pattern, \xe2\x80\xa6CmVisit all allocations reachable from the given start set, \xe2\x80\xa6DjCalled by <code>ResultsVisitor</code> to recompute the analysis domain \xe2\x80\xa60CnHACK: We walk the nested obligations for a well-formed arg \xe2\x80\xa6CnReturns whenever rustc was launched by Cargo as opposed to \xe2\x80\xa6CnA \xe2\x80\x9cbare wasm\xe2\x80\x9d target representing a WebAssembly output \xe2\x80\xa6DeThe <code>wasm32-wali-linux-musl</code> target is a wasm32 target \xe2\x80\xa61Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6000000DgThe <code>prefix</code> argument allows callers to add an arbitrary \xe2\x80\xa6CjWrites a DOT file containing the results of a dataflow \xe2\x80\xa6BjWrite the given fields of the given place.ClWrite a Path to the machine memory (as a null-terminated \xe2\x80\xa6DbThe <code>arbitrary_self_types_pointers</code> feature implies \xe2\x80\xa6BgThe kind of associated item constraint.00CeThe way in which an associate type/constant is bound.CnIn what context is a dignostic handler being attached to a \xe2\x80\xa6ClA context object for maintaining all state needed by the \xe2\x80\xa6CkCombine the values of all the fields together. The last \xe2\x80\xa6ClRaw content of Fluent resource for this crate, generated \xe2\x80\xa600000000000000000000000000000000CkWe use this to create the anon node with zero dependencies.0BaThis produces a dangling pointer:CnWe defer errors from [fn handle_opaque_type_uses] and only \xe2\x80\xa6CmRepresents <code>#[rustc_do_not_implement_via_object]</code>.0CnSrc should have a stricter alignment than Dst, but it does \xe2\x80\xa6EhThis rvalue expression will be wrapped in <code>&amp;</code> or <code>Box</code> and \xe2\x80\xa6BkAdditional constraints returned on success.00000000CjA marker denoting that the generic arguments that were \xe2\x80\xa6ClThe link uses fully-qualified syntax, which is currently \xe2\x80\xa6DkThe <code>impl_trait_overcaptures</code> lint warns against cases where \xe2\x80\xa6DdThe <code>invalid_atomic_ordering</code> lint detects passing an \xe2\x80\xa6DhThe <code>invalid_nan_comparisons</code> lint checks comparison with \xe2\x80\xa6DjThe <code>invalid_rust_codeblocks</code> lint detects Rust code blocks \xe2\x80\xa6CkTo speed up tree traversals, we want to skip traversing \xe2\x80\xa6CgA unification table that uses an \xe2\x80\x9cin-place\xe2\x80\x9d vector.CeInstantiating a higher-ranked goal and re-proving it.00000000BnAn integer that will always encode to 8 bytes.DbA trait implemented for all <code>AstFragment</code> nodes and \xe2\x80\xa6DfPrints the statistics collected by <code>-Zprint-codegen-stats</code>.DbAppends the contents of a byte slice to a <code>RustString</code>.DgThe <code>long_running_const_eval</code> lint is emitted when const \xe2\x80\xa60CcAn newtype around <code>Ident</code> that calls \xe2\x80\xa6B`Given some where clause like \xe2\x80\xa6DfMust match the layout of <code>LLVMRustModuleFlagMergeBehavior</code>.DgThe <code>no_mangle_generic_items</code> lint detects generic items \xe2\x80\xa6CjThe fallback directories are passed to linker, but not \xe2\x80\xa60BdA let chain with invalid parenthesesCkTry to unify an opaque type with an existing key in the \xe2\x80\xa600000000CnOut of bounds unicode character code, e.g. \xe2\x80\x98\\u{FFFFFF}\xe2\x80\x99\xe2\x80\xa6DkThis is a subset of <code>broken_intra_doc_links</code> that warns when \xe2\x80\xa6CmThe <code>panic_const_async_fn_resumed_drop</code> lang item.Ccgeneric parameters must not be used inside enum \xe2\x80\xa6DkAn unsafe binder cast on a place, e.g. <code>unwrap_binder!(*ptr)</code>\xe2\x80\xa6CiAn exposing pointer to address cast. A cast between a \xe2\x80\xa60CjThis struct holds the liveness data created during MIR \xe2\x80\xa6CfCollects the possible borrowers of each local. For \xe2\x80\xa6Dh<code>bool</code> newtype that indicates whether this is a privately \xe2\x80\xa6CjUsed to do a probe to find out what projection type(s) \xe2\x80\xa600000000CmFeatures that control behaviour of rustc, rather than the \xe2\x80\xa6DfCollect the spans that we see the generic param <code>param_did</code>CjExtension trait for self-profiling purposes: allows to \xe2\x80\xa6DkUsed by <code>FunctionCx::codegen_terminator</code> for emitting common \xe2\x80\xa6CfVisitor, used for EffectiveVisibilities table checkingCkWhether this trait is treated specially by the standard \xe2\x80\xa6DhThe <code>unconditional_recursion</code> lint detects functions that \xe2\x80\xa60DbThe <code>usage_of_type_ir_traits</code> lint detects usage of \xe2\x80\xa6DiThe <code>useless_ptr_null_checks</code> lint checks for useless null \xe2\x80\xa6BhThis link has unbalanced angle brackets.ChThe return value of mem::uninitialized, 0x01 (unless \xe2\x80\xa6BmAn unknown print-config option was requested.BjAn unsafe binder cast on a value, e.g. \xe2\x80\xa6CgPrint a warning about rejected isolated op, without \xe2\x80\xa60BnMutably borrow the stack of the active thread.ClLoad the current vector clock in use and the current set \xe2\x80\xa6CkAdds constraints appropriate for a mutability-type pair \xe2\x80\xa6DcAdds constraints appropriate for an instance of <code>ty</code> \xe2\x80\xa6CmAdd relocation and section data needed for a symbol to be \xe2\x80\xa6DfSome variable with type <code>live_ty</code> is \xe2\x80\x9cdrop live\xe2\x80\x9d at \xe2\x80\xa6ClAdds the diagnostics for a feature to an existing error. \xe2\x80\xa6CiAdd sysroot and other globally set directories to the \xe2\x80\xa6DhAdds <code>LocalizedOutlivesConstraint</code>s between two connected \xe2\x80\xa6ClAdds the constraints that arise from a borrow expression \xe2\x80\xa6CgThis field is used to keep track of how many merged \xe2\x80\xa6B`Truncate deref of any reference.CkReturns a place for an indirect reference to an unsized \xe2\x80\xa6CnWhether an item should be allowed to have the same name as \xe2\x80\xa60ChList of unstable features that are treated as stable \xe2\x80\xa6DjList of <code>#[unstable]</code>/feature-gated features that the macro \xe2\x80\xa6DjTakes a list of <code>allowed_targets</code> for an attribute, and the \xe2\x80\xa6ChReturns whether borrows represented by this kind are \xe2\x80\xa6CmGet the deployment target on Apple platforms based on the \xe2\x80\xa6CiReturns a displayable description and article for the \xe2\x80\xa6DjMaps from an impl/trait or struct/variant <code>DefId</code> to a list \xe2\x80\xa6000000CgAre we allowed to use features from the future edition?0CePerform an atomic RMW operation on a memory location.DcGet a list of attributes excluding <code>#[repr]</code> to display.CiPlaces where identifiers that contain invalid Unicode \xe2\x80\xa6EePerforms <code>which</code> operation on the first component of <code>left</code> \xe2\x80\xa6ClClassify whether an operator is \xe2\x80\x9cright-homogeneous\xe2\x80\x9d, \xe2\x80\xa6CmCheck if any characters were written to the result buffer \xe2\x80\xa6CmA coroutine debuginfo node looks the same as a that of an \xe2\x80\xa6ClBuild the debuginfo node for a coroutine environment. It \xe2\x80\xa6CjIn CPP-like mode, we generate a union with a field for \xe2\x80\xa6CjBuild the debuginfo node for an enum type. The listing \xe2\x80\xa6EhConverts an relative <code>RelativeBytePos</code> to a <code>CharPos</code> relative \xe2\x80\xa6CiReturns true if a node where the strongest idempotent \xe2\x80\xa6CnEven if there is a global cache entry for a given goal, we \xe2\x80\xa6DfReturns <code>true</code> if the two strings of code have the same \xe2\x80\xa6CgCheck that <code>impl1</code> is a sound specializationDkWhen a variable is bound several times in a <code>PatKind::Or</code>, it\xe2\x80\xa6CcValidates syntax inside Rust code blocks (```rust).ClMake sure files are writeable. Mac, FreeBSD, and Windows \xe2\x80\xa6CiChecks if the current token or the previous token are \xe2\x80\xa6CnRequire that the user writes where clauses on GATs for the \xe2\x80\xa6ClChecks that the correct number of generic arguments have \xe2\x80\xa6ChChecks that function parameters aren\xe2\x80\x99t used in the \xe2\x80\xa6CcChecks that an opaque type does not contain cycles.Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6000000CmCheck whether the given pointer points to live memory for \xe2\x80\xa6CkChecks that the dep-graph debugging attributes are only \xe2\x80\xa6DgChecks that the <code>#[rustc_lint_opt_ty]</code> attribute is only \xe2\x80\xa6CmOnce regions have been propagated, this method is used to \xe2\x80\xa6CkTo help checking CLI usage while some of the values are \xe2\x80\xa6EdWhen <em>not</em> using <code>-Z unstable-options</code> on the CLI, ensure only \xe2\x80\xa6DeReturns <code>Some</code> if this is indeed a panic intrinsic and \xe2\x80\xa6HnReborrows <code>&amp;mut A</code> to <code>&amp;mut B</code> and <code>&amp;(mut) A</code> to <code>&amp;B</code>. To match <code>A</code> \xe2\x80\xa6DiCollect a byte position of the beginning <code>|</code> for each arm, \xe2\x80\xa6CdThis module implements RFC 1946: Intra-rustdoc-linksCjWhether to collect a backtrace when each allocation is \xe2\x80\xa6000CkCompiles a list of all suggestions to be printed in the \xe2\x80\xa6ClFigures out the list of root variables (and their types) \xe2\x80\xa6CnCompute the combined size of all inlined items that appear \xe2\x80\xa6CfConditionally multiplies the packed floating-point \xe2\x80\xa6CnCopies the data from an operand to a place. The layouts of \xe2\x80\xa6EaConstructs a new <code>Counter</code> of kind <code>CounterValueReference</code>.CiGiven a match-pair that corresponds to an or-pattern, \xe2\x80\xa6DcGiven <code>where &lt;T as Bar&gt;::Baz: String</code>, suggest \xe2\x80\xa6DhTraverses the frames on the <code>BlockContext</code>, searching for \xe2\x80\xa6CfIf true, identical diagnostics are reported only once.BoThe warning count shown to the user at the end.EfConverts a <code>DefPathHash</code> to its corresponding <code>DefId</code> in the \xe2\x80\xa6CmDefault codegen backend used for this target. Defaults to \xe2\x80\xa6CmGiven an attribute macro that failed to be resolved, look \xe2\x80\xa6ClPerforms an HIR-based well-formed check on the item with \xe2\x80\xa6000000DmChecks for the nearest <code>#[sanitize(xyz = &quot;off&quot;)]</code> or \xe2\x80\xa6000000EhReturns the <code>DefId</code> of the <code>discriminant_kind</code> lang item if it \xe2\x80\xa6EhReturns the <code>DefId</code> of the <code>dispatch_from_dyn</code> lang item if it \xe2\x80\xa6CgSimilar to diverge_cleanup_target, but for dropline \xe2\x80\xa6BmSpan where the same name is also re-exported.BlEmit <code>loan_invalidated_at</code> facts.CkThe list of imports to always rename, a fully qualified \xe2\x80\xa60CkDuring retags, the SIFA needs to be weakened to account \xe2\x80\xa6CmGrows the stack on demand to prevent stack overflow. Call \xe2\x80\xa600000D`<code>vec_filter_candidates</code> but for an <code>Entry</code>DgWhether this and the <code>other</code> expression are the same for \xe2\x80\xa6CcProvide diagnostics when function body is not foundCdEvaluate a static\xe2\x80\x99s initializer, returning the \xe2\x80\xa6000000BbEvaluate a static\xe2\x80\x99s initializer.0CgEvaluates const items or anonymous constants into a \xe2\x80\xa6000000Ceerror that a string literal was expected. You can \xe2\x80\xa6CnWe do not permit arbitrary expressions as const arguments. \xe2\x80\xa6DcOn amdhsa, <code>gpu-kernel</code> functions have an associated \xe2\x80\xa6CnExtracts an metavariable symbol that can be an identifier, \xe2\x80\xa6DjIf the MIR <code>Statement</code> has a span contributive to computing \xe2\x80\xa6EcFinds some region R such that <code>fr1: R</code> and <code>R</code> is live at \xe2\x80\xa6ClFor a given pair of source and target type that occur in \xe2\x80\xa6BgGet the global variable for the vtable.DkGiven a <code>ty::ClosureKind</code>, get the <code>DefId</code> of its \xe2\x80\xa6ClInvoke a function on the given place and all places that \xe2\x80\xa6EdReturns the <code>Span</code> of the value at <code>index</code> extended to the \xe2\x80\xa6BjSpan covering the format string and valuesDhConstruct a <code>SortedMap</code> from a presorted set of elements. \xe2\x80\xa6CbResolves the config for input in <code>dir</code>.DjWhether or not the DWARF <code>.debug_aranges</code> section should be \xe2\x80\xa6CkTransforms a test into code that can be compiled into a \xe2\x80\xa6CkChecks if a Ty&lt;\xe2\x80\x99_&gt; has some inherent method Symbol.ClThis gives direct immutable access to the entire buffer, \xe2\x80\xa6ClGenerates an equality comparison expression for a single \xe2\x80\xa6DkThis retrieves the parent for the given <code>HirId</code> if it\xe2\x80\x99s an \xe2\x80\xa6DbInterpreting <code>tts</code> as a comma-separated sequence of \xe2\x80\xa6BaDebug helper: assign name to tag.CiThe list of backend features computed from CLI flags (\xe2\x80\xa6000000ClThis looks at all uses of opaque types in their defining \xe2\x80\xa6CjThis crate has a <code>#[alloc_error_handler]</code> item.Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6000000DiReturn <code>true</code> if this type has regions that are not a part \xe2\x80\xa60000CmThis function checks whether the method is not static and \xe2\x80\xa6CiConvenience wrapper for <code>highlighting_region</code>.CnReturns the nearest enclosing scope. A scope is roughly an \xe2\x80\xa6EhGiven a <code>LocalDefId</code>, returns the <code>BodyId</code> associated with it, \xe2\x80\xa65555555CjImplied bounds are region relationships that we deduce \xe2\x80\xa6DgProvider for the <code>implied_outlives_bounds</code> query. Do not \xe2\x80\xa67777777CnChecks whether any associated items in impls 1 and 2 share \xe2\x80\xa6CmGets a map with the inferred outlives-predicates of every \xe2\x80\xa60000009DhReturns an <code>InhabitedPredicate</code> that is generic over type \xe2\x80\xa6::::::EeReturns <code>true</code> if this <code>#[repr()]</code> should inhabit \xe2\x80\x9csmart enumDkReturns <code>true</code> if the local variable (or some part of it) is \xe2\x80\xa6CcMaps from an inlined function to its debug info \xe2\x80\xa6CgParses any relevant unstable flags specified on the \xe2\x80\xa6ChMap from integral variable to the kind of integer it \xe2\x80\xa6DcEmit an intermediate note on the given <code>Diag</code> if the \xe2\x80\xa6CaChecks if the given expression is an identity \xe2\x80\xa6BnChecks if the expression is a temporary value.ClChecks if the result of an expression is used, or it\xe2\x80\x99s \xe2\x80\xa6CgChecks if the given method call expression calls an \xe2\x80\xa6DcIs the given keyword <code>kw</code> followed by a non-reserved \xe2\x80\xa6DfDetermine whether or not a label from the <code>rib_index</code>th \xe2\x80\xa6DhIf <code>maybe_path</code> is a path node which resolves to an item, \xe2\x80\xa6CjA keyword or reserved identifier that can be used as a \xe2\x80\xa60CjReturns whether the block is \xe2\x80\x9csafe\xe2\x80\x9d for promotion, \xe2\x80\xa6E`Returns <code>true</code> if <code>func</code> refers to the function we are \xe2\x80\xa6EbWhether <code>ty</code> is a type with <code>_</code> placeholders that can be \xe2\x80\xa6CnWhether this looks like a place expr, without checking for \xe2\x80\xa6CnChecks if the type is equal to a diagnostic item. To check \xe2\x80\xa6CaAttempts to load the query result cache from disk0CfMIR that is eligible for the NRVO must fulfill two \xe2\x80\xa6CnReturns the path suitable for reading from the file system \xe2\x80\xa6CiDesugar <code>&lt;start&gt;..=&lt;end&gt;</code> into \xe2\x80\xa6EeLowers a <code>ReturnPositionOpaqueTy</code> (<code>-&gt; impl Trait</code>) or a \xe2\x80\xa6CmLower a lifetime from the HIR to our internal notion of a \xe2\x80\xa6CkTries to find the span of the semicolon of a macro call \xe2\x80\xa6CkReturns the set of obligations that are in a pending state.CmIf present, playground URL to use in the \xe2\x80\x9cRun\xe2\x80\x9d button \xe2\x80\xa6EgTries to produce a relative path from <code>from</code> to <code>to</code>; if such \xe2\x80\xa6DeTry our best to approximate when adding <code>dyn</code> would be \xe2\x80\xa6AnRemove all adjacent duplicatesCh[query description - consider adding a doc-comment!] \xe2\x80\xa6000000BjConvert an MIR function into a gsgdt GraphDgThis tracks where <code>-Zunleash-the-miri-inside-of-you</code> was \xe2\x80\xa60C`Derive a submodule path from the first found \xe2\x80\xa6CdPut the thread into the queue waiting for the mutex.CkThis is used in case you want the value span instead of \xe2\x80\xa6CcSee <code>MetaItem::name_value_literal_span</code>.0EgReturns <code>true</code> if the item pointed to by <code>def_id</code> is a thread \xe2\x80\xa6DfGet the wait time for the next timeout, or <code>None</code> if no \xe2\x80\xa6ClReturns a ty infer or a const infer depending on whether \xe2\x80\xa6Cn\xe2\x80\x9cNormalize\xe2\x80\x9d ident for use in comparisons using \xe2\x80\x9citem \xe2\x80\xa6ClZero-initialized pointer-sized extern statics are pretty \xe2\x80\xa6DfReturns the <em>default lifetime</em> to be used if a trait object \xe2\x80\xa6000000CnReturns a list of all obligations whose self type has been \xe2\x80\xa6BiEmit an error for recursive opaque types.>>>>>>>CdImplements <code>os_sync_wait_on_address</code>, \xe2\x80\xa6CkImplements <code>os_sync_wake_by_address_all</code> and \xe2\x80\xa6DiIf this is a <code>FooWithOverflow</code>, return <code>Some(Foo)</code>.CiIf set, have the linker export exactly these symbols, \xe2\x80\xa6EhReturns the <code>DefId</code> of the <code>panic_const_div_by_zero</code> lang item \xe2\x80\xa6EhReturns the <code>DefId</code> of the <code>panic_const_gen_fn_none</code> lang item \xe2\x80\xa6EhReturns the <code>DefId</code> of the <code>panic_const_rem_by_zero</code> lang item \xe2\x80\xa6EhParses an array (<code>[TYPE; EXPR]</code>) or slice (<code>[TYPE]</code>) type. The \xe2\x80\xa6CbParses constness for closures (case sensitive, \xe2\x80\xa6FbParses prefix-forms of range notation: <code>..expr</code>, <code>..</code>, <code>..=expr</code>.BoBuilt-in macro for type ascription expressions.EhExtracts <code>--extern-html-root-url</code> arguments from <code>matches</code> and \xe2\x80\xa6CmReports error if \xe2\x80\x93include-parts-dir / crate-info is not \xe2\x80\xa6BgParses <code>extern crate</code> links.CbParse the next substitution from the input string.0EeMatches <code>lit = true | false | token_lit</code>. Returns <code>None</code> if \xe2\x80\xa6DdParse the value of <code>-Ctarget-feature</code>, also expanding \xe2\x80\xa6CjAttempt to parse a single Kleene star, possibly with a \xe2\x80\xa6ChParses a sequence, not including the delimiters. The \xe2\x80\xa6DjDoes the pattern recursively contain a <code>ref mut</code> binding in \xe2\x80\xa6CdPeel derefs adjustments until the last last element.ClPeel off all [free alias types] in this type until there \xe2\x80\xa6DfNormalizes MIR in <code>TypingMode::PostAnalysis</code> mode, most \xe2\x80\xa6CfCreates predicate obligations from the generic bounds.BaPrepare the segments for a vtableCeLike <code>print_def_path</code> but for value paths.0CnFinds the <code>rustc_proc_macro_decls</code> item of a crate.000000DhSpans passed to <code>proc_macro::quote_span</code>. Each span has a \xe2\x80\xa6CgReturns the type of metadata for (potentially wide) \xe2\x80\xa6CkGet the section of a link between the backticks, or the \xe2\x80\xa6EcIf <code>true</code>, <code>steps</code> has been truncated due to reaching the \xe2\x80\xa600000DjRead a null-terminated sequence of <code>u16</code>s, and perform path \xe2\x80\xa6ClInsert cached metadata mapping from a child impl back to \xe2\x80\xa600EdApplied to an expression <code>expr</code> if <code>expr</code> \xe2\x80\x93 or something \xe2\x80\xa6DgEat any extraneous <code>mut</code>s and error + recover if we ate any.EfChecks is <code>new</code> didn\xe2\x80\x99t miss any comment from <code>span</code>, if it \xe2\x80\xa6ClChecks if current token is one of tokens which cannot be \xe2\x80\xa6DnExperimental pattern feature: do <code>&amp;</code> patterns match against \xe2\x80\xa6DhGiven a known <code>param_env</code> and a set of well formed types, \xe2\x80\xa6CgTraverses the entire tree looking for useless tags. \xe2\x80\xa6B`Report unreachable arms, if any.DdAn implementation detail for the <code>representability</code> query000000Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6000000ClResolve an associated item, returning its containing page\xe2\x80\xa6ClGiven the span, rewrite the missing comment inside it if \xe2\x80\xa6ClTransform this fixup into the one that should apply when \xe2\x80\xa6CnCrate containing the implementation of the next-generation \xe2\x80\xa6AmSaves the work product index.0CmSchedule the macOS thread local storage destructors to be \xe2\x80\xa6ChConfiguration for scraping examples from the current \xe2\x80\xa6ClCorrespondence map used to link types used in the source \xe2\x80\xa6DbExtends the given <code>Span</code> to just after the previous \xe2\x80\xa6BiAlways show the suggested change. See \xe2\x80\xa6:::::::CkFor each basic block, how many points are contained within?CnReturns the deeply last field of nested structures, or the \xe2\x80\xa6EhRelates <code>a</code> and <code>b</code> structurally, calling the relation for all \xe2\x80\xa6000000000CkIf there is no expected signature, then we will convert the>>>>>>>CnReturns the time elapsed between the provided time and the \xe2\x80\xa6DeTake resolutions for paths inside the <code>#[derive(...)]</code> \xe2\x80\xa6ChFind leaked allocations, remove them from memory and \xe2\x80\xa6CaRetag all pointers that are stored in this place.CmHandles thread termination of the active thread: wakes up \xe2\x80\xa6DhGiven a known <code>param_env</code> and a set of well formed types, \xe2\x80\xa6CjThis is almost certainly not the method you want!  You \xe2\x80\xa6C`Returns the topmost frame that is considered \xe2\x80\xa6DgThe index of the topmost user-relevant frame in <code>stack</code>. \xe2\x80\xa6BoQuery provider for <code>trait_impls_of</code>.EdDummy type used for the <code>Self</code> of a <code>TraitRef</code> created for \xe2\x80\xa6DeTurn <code>${expr(...)}</code> metavariable expressionss into tokens.DbTransforms the <code>body</code> of the coroutine applying the \xe2\x80\xa6BkAll nodes that can reach <code>node</code>.0EeConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by \xe2\x80\xa600000000000000000000ClReturns the block as a string, with each line trimmed at \xe2\x80\xa6DhThe maximum size (in bytes) to consider a <code>Copy</code> type for \xe2\x80\xa60DfThis returns true if the type <code>ty</code> is \xe2\x80\x9ctrivial\xe2\x80\x9d for \xe2\x80\xa6CkTry to force a dep node to execute and see if it\xe2\x80\x99s green.00ChTry to mark a dep-node which existed in the previous \xe2\x80\xa6ClTry to resolve an overloaded place op. We only deal with \xe2\x80\xa6DeProject to the given <em>named</em> field (which must be a struct \xe2\x80\xa6BmPerforms type inference fallback, setting \xe2\x80\xa6DoReturns <code>true</code> if the given type is an <code>unsafe</code> function.DkDo not call this query directly: part of the <code>ProvePredicate</code>\xe2\x80\xa6000000DjWalks through the expansion ancestors of <code>original_span</code> to \xe2\x80\xa6Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6000000BhGenerate part of the LLVM target triple.ChThe inner atomic value is set to true when a feature \xe2\x80\xa600CiCodegen takes advantage of the additional assumption, \xe2\x80\xa6DjIf <code>stmt</code> is an assignment where the LHS is the given local \xe2\x80\xa6CiExtension trait method to visit consts in unambiguous \xe2\x80\xa6DcLike <code>visit_nested_item()</code>, but for trait items. See \xe2\x80\xa6CoLike <code>visit_results</code>, but only for reachable blocks.0DdReturns <code>true</code> if there will be an output file generated.CiExtends the range to include all preceding whitespace \xe2\x80\xa6DiThis is called to resolve a trait reference from an <code>impl</code> \xe2\x80\xa6CeGives temporary access to the region constraint data.0ClCreate an empty map of regions to locations where they\xe2\x80\x99\xe2\x80\xa6DhReturns <code>true</code> if the given pattern would be printed as a \xe2\x80\xa6DiIf this is a <code>Foo</code>, return <code>Some(FooWithOverflow)</code>.DfThe <code>ambiguous_glob_reexports</code> lint detects cases where \xe2\x80\xa60DeConst conditions that need to hold for <code>[const]</code> alias \xe2\x80\xa600000000CkCreate a new anonymous lifetime parameter and reference it.CgThe <code>bikeshed_guaranteed_no_drop</code> lang item.BnA delegate used when instantiating bound vars.0E`Represents a <code>ty::Ty</code> for use in <code>ClosureOutlivesSubject</code>.CjThe tracker used for the slow error path that collects \xe2\x80\xa6DgMarker trait that controls whether a <code>R1: R2</code> constraint \xe2\x80\xa6DgWrapper around a <code>mir::BasicBlocks</code> graph that restricts \xe2\x80\xa6DhA pair of <code>DefPathData</code> and an integer disambiguator. The \xe2\x80\xa6DhWhether to use the provisional cache. Set to <code>false</code> by a \xe2\x80\xa6000EdThe <code>for_loops_over_fallibles</code> lint checks for <code>for</code> loops \xe2\x80\xa6DcThe <code>function_item_references</code> lint detects function \xe2\x80\xa60DfThe <code>irrefutable_let_patterns</code> lint detects irrefutable \xe2\x80\xa60CeInformation about a constant or a type containing \xe2\x80\xa6AfAdd LLVM module flags.BnPrints the timing information collected by \xe2\x80\xa6ClContains the result of lexical region resolution. Offers \xe2\x80\xa6CjDescription of lifetimes that appear as candidates for \xe2\x80\xa6DhThe different <code>-Clink-self-contained</code> options that can be \xe2\x80\xa6CkThe localized constraint graph indexes the physical and \xe2\x80\xa6DkThe <code>missing_crate_level_docs</code> lint detects if documentation \xe2\x80\xa6DiThe <code>missing_unsafe_on_extern</code> lint detects missing unsafe \xe2\x80\xa60DcThe <code>mixed_script_confusables</code> lint detects visually \xe2\x80\xa6Di<code>MaybeUninitializedPlaces</code> tracks all places that might be \xe2\x80\xa60CkGiven the closure DefId this map provides a map of root \xe2\x80\xa60ClReason for why an anon const is not allowed to reference \xe2\x80\xa6CeProbe entered when normalizing the self ty during \xe2\x80\xa600000000EcThe <code>out_of_scope_macro_calls</code> lint detects <code>macro_rules</code> \xe2\x80\xa60BiNewtype to allow implementing IntoDiagArgE`Represents the <code>on</code> filter in <code>#[rustc_on_unimplemented]</code>.CiThe number of entries in the opaque type storage at a \xe2\x80\xa600CjThe opportunistic resolver can be used at any time. It \xe2\x80\xa60CmThe number of predefined symbols; this is the first index \xe2\x80\xa6CnAfter this many interpreted terminators, we start emitting \xe2\x80\xa6CnThe <code>panic_const_async_fn_resumed_panic</code> lang item.DlThis lint is <strong>warn-by-default</strong>. It detects explicit links \xe2\x80\xa6CgScopes used to determined if it need to apply to \xe2\x80\x93\xe2\x80\xa6DfThe <code>suspicious_double_ref_op</code> lint checks for usage of \xe2\x80\xa6CmRepresents <code>#[rustc_skip_during_method_dispatch]</code>.0CiThe free region corresponding to the environment of a \xe2\x80\xa6DhThe <code>tyvar_behind_raw_pointer</code> lint detects raw pointer to an0BhImplementation of transmutability trait.00CmA depth-first search that also tracks when all successors \xe2\x80\xa6DeThe <code>undropped_manually_drops</code> lint check for calls to \xe2\x80\xa6DhThe <code>unstable_name_collisions</code> lint detects that you have \xe2\x80\xa60BlUsed for recording UnnecessaryQualification.DeThe <code>variant_size_differences</code> lint detects enums with \xe2\x80\xa6DkHandles the <code>wrong number of type / lifetime / ... arguments</code>\xe2\x80\xa6CkWhether the target toolchain\xe2\x80\x99s ABI supports returning \xe2\x80\xa6CdAdd a global value to a list to be stored in the \xe2\x80\xa6ClCollect all defining uses of opaque types inside of this \xe2\x80\xa6CnAdds constraints appropriate for a function with signature \xe2\x80\xa6DiLazily sets <code>experimental_default_bounds</code> to true on trait \xe2\x80\xa6ChAdd function-level costs not well-represented by the \xe2\x80\xa6CnAdd a synthetic object file that contains reference to all \xe2\x80\xa6CmCalled to adjust global allocations to the Provenance and \xe2\x80\xa600CnA list of types where the ADT requires drop if and only if \xe2\x80\xa6000000Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6000000CjReturns the type of the last field of a struct (\xe2\x80\x9cthe \xe2\x80\xa6CkCalled after parsing the crate root. Submodules are not \xe2\x80\xa60CkThis crate needs an allocation error handler and either \xe2\x80\xa6Cn[query description - consider adding a doc-comment!] alloc \xe2\x80\xa6000000DeAllocate enough memory to store the given <code>OsStr</code> as a \xe2\x80\xa6CfDon\xe2\x80\x99t lint when comparing the result of a modulo \xe2\x80\xa60CgList of trait paths to ignore when checking renamed \xe2\x80\xa60CeReturns the remaining depth allowed for nested goals.BlA list of crate names to allow duplicates of0CgList of path segments allowed to have wildcard imports.0CiChecks 16 byte chunks of text at a time. If the chunk \xe2\x80\xa6DbSafe wrapper for <code>LLVMAppendModuleInlineAsm</code>, which \xe2\x80\xa6CkUpdates the current dataflow state with the effect of a \xe2\x80\xa60ClDisturbes a floating-point result by a relative error in \xe2\x80\xa6CnHelper function used inside the shims of foreign functions \xe2\x80\xa6CfAssign names for anonymous or temporary values for \xe2\x80\xa6EdReturns the <code>DefId</code> of the <code>async_iterator_poll_next</code> lang \xe2\x80\xa6DeSame as <code>CodegenUnit::build_cgu_name()</code> but will never \xe2\x80\xa6ChCreates debug information for the given global variable.DnCreate debuginfo for <code>[T]</code> and <code>str</code>. These are unsized.CnBuilds the DW_TAG_structure_type debuginfo node for a Rust \xe2\x80\xa6CkThis function enables creating debuginfo nodes that can \xe2\x80\xa6ClBuild the debuginfo node for a Rust <code>union</code> type.ClDuring a provenance GC, we want to compact the tree. For \xe2\x80\xa6CkChecks if the expression can be moved into a closure as \xe2\x80\xa6DcCreates a canonical variable (with the given <code>info</code>) \xe2\x80\xa6CjChecks the permissions for the given place and read or \xe2\x80\xa6CiReturns an error if inlining is not possible based on \xe2\x80\xa6DcChecks if <code>#[collapse_debuginfo]</code> is applied to a macro.CkEmits an error if a function declaration has a variadic \xe2\x80\xa6CbPrints deprecation warnings for deprecated optionsCeChecks if the given field\xe2\x80\x99s type is \xe2\x80\x9cffi-safe\xe2\x80\x9d.CkCheck whether the given function may be executed on the \xe2\x80\xa60DkChecks <code>tts</code> as part of the RHS of a macro definition, tries \xe2\x80\xa6DjLike <code>check_stability</code>, except that we permit items to have \xe2\x80\xa6DkIs this an <code>(const unsafe? auto?| unsafe auto? | auto) trait</code>\xe2\x80\xa6CnSpecifications of codegen units / ThinLTO which are forced \xe2\x80\xa600CnCaptures the closure\xe2\x80\x99s signature. This closure signature \xe2\x80\xa60000DbCodegen an <code>Rvalue::RawPtr</code> or <code>Rvalue::Ref</code>Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6000000DhAttempts to resolve an obligation to an <code>ImplSource</code>. The \xe2\x80\xa6CfCollects all regions that \xe2\x80\x9cbound\xe2\x80\x9d the variable \xe2\x80\xa6CkComputes whether a match is exhaustive and which of its \xe2\x80\xa6CfEvaluates a constant without providing any generic \xe2\x80\xa6Di<code>derive(Copy)</code> marks items they are applied to so they are \xe2\x80\xa6EdWalks into <code>ty</code> and returns <code>true</code> if any inner type is an \xe2\x80\xa6DfIf <code>arg</code> is already a temporary, returns it. Otherwise, \xe2\x80\xa6CiWhether or not linking dylibs to a static CRT is allowed.CmAccumulate the errors due to missed lifetime elision, and \xe2\x80\xa6CjGiven the expected type, figures out what it can about \xe2\x80\xa6BgRemoves files for a given work product.CmCalculates the MPlaceTy given the offset and layout of an \xe2\x80\xa6ClShow help for flag categories shared between rustdoc and \xe2\x80\xa60AiUsed for error reporting.ClRead discriminant, return the user-visible discriminant. \xe2\x80\xa6CiThe discriminant for the given variant. Panics if the \xe2\x80\xa600CjIf the type contains variants, returns the variant for \xe2\x80\xa6CkComputes the discriminant value used by a specific variant.22ClChecks whether a certain function ABI is compatible with \xe2\x80\xa6Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6000000CkReturns the documentation and its kind if this is a doc \xe2\x80\xa60BkDelay emission of this diagnostic as a bug.DgCreates a trio of drop-loops of <code>place</code>, which drops its \xe2\x80\xa63333333ClGenerates a new <code>loan_invalidated_at(L, B)</code> fact.ChEmits a mermaid flowchart of the NLL regions and the \xe2\x80\xa6EhImplementation of <code>Diag::emit</code>, fully controlled by each <code>impl</code>\xe2\x80\xa60AmEmit all stashed diagnostics.0D`Used to suggest rustc \xe2\x80\x93explain <code>&lt;error code&gt;</code>EfCalls the atomic intrinsic <code>intrinsic</code>; the <code>atomic_</code> prefix \xe2\x80\xa6DjFor LLVM codegen, returns a function-specific <code>Value</code> for a \xe2\x80\xa6CnReturns a diagnostic reporting a struct pattern which does \xe2\x80\xa6DcEvaluates whether the obligation <code>obligation</code> can be \xe2\x80\xa6DlMaps the <code>local_hash</code> of an <code>ExpnData</code> to the next \xe2\x80\xa6CjThe list of generic symbols exported from the given crate.000000CjUsed to generate links on items\xe2\x80\x99 definition to go to \xe2\x80\xa6CjSeparate any lines at the start of the file that begin \xe2\x80\xa6CgIf the given expression is a path to a unit struct, \xe2\x80\xa6Clfilter_reservation_impls filter reservation impl for any \xe2\x80\xa6CfCheck whether we can ignore impl candidates due to \xe2\x80\xa6DkIf the MIR <code>Terminator</code> has a span contributive to computing \xe2\x80\xa6ClMakes a best effort to determine whether and under which \xe2\x80\xa6CfFinds the best match for a given word in the given \xe2\x80\xa6Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6000000DkTranslates the <code>-Ctarget-feature</code> flag into a backend target \xe2\x80\xa6DkReturns the <code>DefId</code> of the callee if the given expression is \xe2\x80\xa6CkInvoke the given function on all the descendants of the \xe2\x80\xa6CmAlways prefer the intrinsic fallback body over the native \xe2\x80\xa6000DiReturns <code>true</code> is the local is from a compiler desugaring, \xe2\x80\xa6iUnchecked0C`Compute the enabled target features from the \xe2\x80\xa6CeCompute the set of locals that can be fully replaced.DiIf <code>true</code>, HTML source pages will generate the possibility \xe2\x80\xa6CmReport an error that a generic argument did not match the \xe2\x80\xa6DiReturns the <code>LocalDefId</code> of the closure that captured this \xe2\x80\xa6CgCompute the value passed to the constructors of the \xe2\x80\xa60DbInterpreting <code>tts</code> as a comma-separated sequence of \xe2\x80\xa6DiGet the diagnostic name of a type, e.g. <code>sym::HashMap</code>. To \xe2\x80\xa6CkNames of specific methods to which glob delegation expands.DjHandles the special <code>miri_start_unwind</code> intrinsic, which is \xe2\x80\xa6CiWe have a parent, but we don\xe2\x80\x99t know where they\xe2\x80\x99re \xe2\x80\xa6DdReturns <code>true</code> when the MIR body associated with this \xe2\x80\xa6ChQuery backing <code>Ty::has_significant_drop_raw</code>.000000EcSee the field <code>has_unconstrained_ty_var</code> in <code>Generalization</code>.CmIn general, we do not check whether all types which occur \xe2\x80\xa6CcWalks the contents of the local crate. See also \xe2\x80\xa6DkIf this operand is a <code>Pair</code>, we return an aggregate with the \xe2\x80\xa6CmThe index of the derived predicate in the parent impl\xe2\x80\x99s \xe2\x80\xa600CnGiven a crate and a trait, look up all impls of that trait \xe2\x80\xa6000000DjChecks if the given HIR node is inside an <code>impl</code> block with \xe2\x80\xa6BkDo not call this query directly: invoke \xe2\x80\xa6CaN.B. this query should only be called through \xe2\x80\xa6111111DkInject the <code>compiler_builtins</code> crate if it is not already in \xe2\x80\xa6DhInitially, the <code>UniversalRegionIndices</code> map contains only theCjInstantiate the nested goals for the candidate without \xe2\x80\xa6BmTell LLVM what instrument function to insert.CnReturns the not-yet-processed and stalled obligations from \xe2\x80\xa6DgInvert a bijective mapping, i.e. <code>invert(map)[y] = x</code> if \xe2\x80\xa6CjParent scopes in which the macros were invoked. FIXME: \xe2\x80\xa6CbTo a first-order approximation, is this a pattern?0EaCheck if the given <code>DefId</code> is <code>#\\[automatically_derived\\]</code>.DjReturns <code>true</code> if this def is a function-like thing that is \xe2\x80\xa6DfHook implementation for <code>TyCtxt::is_eligible_for_coverage</code>.CmChecks if the expression is the final expression returned \xe2\x80\xa6CmField used during rendering, to know if we\xe2\x80\x99re inside an \xe2\x80\xa6ChInspects the match scrutinee expression to determine \xe2\x80\xa6CmReturns true if the type is uninhabited without regard to \xe2\x80\xa6Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6000000DiReturns <code>true</code> if equality for this type is both reflexive \xe2\x80\xa6DkThese reflect the <code>&#39;a: &#39;b</code> relations that are either \xe2\x80\xa60ClThe timestamp of last SC write performed by each thread. \xe2\x80\xa6CjUsed only for error recovery when arriving to EOF with \xe2\x80\xa6AlIs lifetime elision allowed.CmList functions and methods for which lifetime elision was \xe2\x80\xa6BhWhether lifetime elision was successful.DgHelper for <code>FnAbi::apply_attrs_llfn</code>: Composite function \xe2\x80\xa68888888CjWhen name resolution fails, this method can be used to \xe2\x80\xa6CiSchedule TLS destructors for Windows. On windows, TLS \xe2\x80\xa6DhLowers the range end of an exclusive range (<code>2..5</code>) to an \xe2\x80\xa6BlLower a type-relative (and type-level) path.ClConverts a path intended to use as a command to absolute \xe2\x80\xa6DdWhen a bound is annotated with <code>async</code>, it signals to \xe2\x80\xa6EeA combination of <code>root_macro_call</code> and <code>is_diagnostic_item</code> \xe2\x80\xa6CiLike max_width_with_indent but the indentation is not \xe2\x80\xa6CiIf attributes are not allowed on expressions, emit an \xe2\x80\xa6BdDetect guarded string literal syntaxCeMake sure that we are in the condition to suggest \xe2\x80\xa6CfCreate an interpreter context to inspect the given \xe2\x80\xa60Ec<code>MonoReachable</code> internally accumulates a <code>DenseBitSet</code> of \xe2\x80\xa6CdTranslates the mutex kind from what is stored in \xe2\x80\xa6CkIdentifies whether a predicate obligation needs processing.BjCreate a new array type from Const length.DkAllocates a new <code>SourceFile</code> representing a source file from \xe2\x80\xa6CcUnique identifier for file description, used to \xe2\x80\xa6CgUsed to verify the absence of hash collisions among \xe2\x80\xa6Dd<code>trait_def_id</code> MUST BE the <code>DefId</code> of a trait.Ci\xe2\x80\x9cNormalize\xe2\x80\x9d ident for use in comparisons using \xe2\x80\x9c\xe2\x80\xa6DjCalls <code>handle_inactive_variant</code> for each child move path of \xe2\x80\xa6CfReturns the block as a string under its original form.EdReturns the <code>DefId</code> of the <code>panic_const_add_overflow</code> lang \xe2\x80\xa6EdReturns the <code>DefId</code> of the <code>panic_const_div_overflow</code> lang \xe2\x80\xa6EdReturns the <code>DefId</code> of the <code>panic_const_mul_overflow</code> lang \xe2\x80\xa6EdReturns the <code>DefId</code> of the <code>panic_const_neg_overflow</code> lang \xe2\x80\xa6EdReturns the <code>DefId</code> of the <code>panic_const_rem_overflow</code> lang \xe2\x80\xa6EdReturns the <code>DefId</code> of the <code>panic_const_shl_overflow</code> lang \xe2\x80\xa6EdReturns the <code>DefId</code> of the <code>panic_const_shr_overflow</code> lang \xe2\x80\xa6EdReturns the <code>DefId</code> of the <code>panic_const_sub_overflow</code> lang \xe2\x80\xa6Ec<code>macro_rules</code> scope into which the <code>macro_rules</code> item was \xe2\x80\xa6DkParses one of the comma-separated modifiers (prefixed by <code>+</code> \xe2\x80\xa6CkIf an explicit return type is given, require a block to \xe2\x80\xa6CeParses an expression, forcing tokens to be collected.ChParse the pattern for a function or function pointer \xe2\x80\xa6CiParses a pattern, with a setting whether modern range \xe2\x80\xa6CbThis function parses the fields of record structs:nParses either:CnThe minimum size (in bytes) to consider a type for passing \xe2\x80\xa60DjThe <code>#[patchable_function_entry(...)]</code> attribute. Indicates \xe2\x80\xa6CgThe maximum pattern complexity allowed (internal only).000EgAll <code>VarDebugInfo</code> from the MIR body, partitioned by <code>Local</code>. \xe2\x80\xa6EdLooks for applicable methods if we reborrow a <code>Pin&lt;&amp;mut T&gt;</code> \xe2\x80\xa6DjIdentifies what test is needed to decide if <code>match_pair</code> is \xe2\x80\xa6DjCheck if a moved place at <code>idx</code> is a part of a BID. The use \xe2\x80\xa6CjIf the pair of places is being considered for merging, \xe2\x80\xa6CnFor debugging purposes, returns a pretty-printed string of \xe2\x80\xa6DcPrint a single attribute as if it has style <code>style</code>, \xe2\x80\xa6ClSpans of the previous arms except for those that diverge \xe2\x80\xa600CnInstead of normalizing an associated type projection, this \xe2\x80\xa60ClReturn the provenance and relative offset stored in this \xe2\x80\xa6EkPush onto <code>out</code> all the things that must outlive <code>&#39;a</code> for the \xe2\x80\xa6000DgHelper for <code>sub_branch_bindings</code>. Collects bindings from \xe2\x80\xa6DjEats the double-quoted string and returns <code>n_hashes</code> and an \xe2\x80\xa6ClAttempts to read the given constant as though it were an \xe2\x80\xa6DjChecks the method\xe2\x80\x99s receiver (the <code>self</code> argument) can be \xe2\x80\xa6DiRecord the fact that we called <code>trimmed_def_paths</code>, and do \xe2\x80\xa6CnConverts an ident into \xe2\x80\x99label and emits an \xe2\x80\x9cexpected a \xe2\x80\xa6BhTry to recover the more general form \xe2\x80\xa6CkContext generated during borrowck, intended to be passed toBmMark this invocation id as a glob delegation.CfRecords in the <code>outlives_relation</code> (and \xe2\x80\xa6DdPerform the replacement computed by <code>compute_flattening</code>.DeConstraints require that <code>error_element</code> appear in the \xe2\x80\xa6Dh<code>true</code> if this lint is reported even inside expansions of \xe2\x80\xa60DjWhen the code is using the <code>Fn</code> traits directly, instead of \xe2\x80\xa6DhGenerates an <code>AllocId</code> for a function. Will get deduplicated.DgWhere possible, replaces type/const variables in <code>value</code> \xe2\x80\xa60CeGet the discriminant Ty for this Ty if there\xe2\x80\x99s one.CnPerforms fat LTO by merging all modules into a single one, \xe2\x80\xa60CkWhether it is allowed to use this operation from stable \xe2\x80\xa6AkLink up matched candidates.Da<code>since</code> should be set for stable features that are \xe2\x80\xa6BjShould inlining happen for a given callee?CnReturns the actual dynamic size and alignment of the place \xe2\x80\xa6CnResolve macro path with error reporting and recovery. Uses \xe2\x80\xa6DjExtends the given <code>Span</code> to just before the next occurrence \xe2\x80\xa6DbExtends the given <code>Span</code> to just after the previous \xe2\x80\xa6CfIf the type that failed selection is an array or a \xe2\x80\xa6CaWhenever references are used by mistake, like \xe2\x80\xa6B`If the suggestion is approximateDiWhether the target supports stack canary checks. <code>true</code> by \xe2\x80\xa6CgThis flag indicates that an expected diagnostic was \xe2\x80\xa6CgComputes the tag (if any) for a given type and variant.CjThread termination vector clock, this is set on thread \xe2\x80\xa6CiThe maximum number of lines a function or method can have0CmAn additional filter to exclude well-known types from the \xe2\x80\xa6DjIf this basic block ends with a <code>TerminatorKind::SwitchInt</code> \xe2\x80\xa6FdChecks if the type implements one of <code>Fn</code>, <code>FnMut</code>, or <code>FnOnce</code> \xe2\x80\xa6DgDo not call this query directly: part of the <code>Normalize</code> \xe2\x80\xa60000000000000DiUsed to disambiguate underscore items (<code>const _: T = ...</code>) \xe2\x80\xa6CeUtilities for rendering escape sequence errors as \xe2\x80\xa6CjDetermine if the tracked universes of the two SCCs are \xe2\x80\xa6CmCompute the predicates that are required for a type to be \xe2\x80\xa6DiOptions to be set in <code>cfg(target_features)</code>, but including \xe2\x80\xa6CmSet of enabled features for the current target, including \xe2\x80\xa60Dg<code>use_of_var_derefs_origin(variable, origin)</code>: References \xe2\x80\xa60CaSpan of the entire use statement with attributes.BkFor this one we always use value namespace.CiStart profiling a verbose generic activity. Profiling \xe2\x80\xa6CjTrack whether the virtual wildcard row used to compute \xe2\x80\xa6CgPrint types for the purposes of a signature suggestion.0CjPrints the line start address and returns the new line \xe2\x80\xa6DiWrites files that are written directly to the <code>--out-dir</code>, \xe2\x80\xa6ClCalled for Rvalue::Repeat when the elem is neither a ZST \xe2\x80\xa60ClHelper function to write an OsStr as a 0x0000-terminated \xe2\x80\xa6DdDetermines whether <code>eval_mir_constant</code> can never fail \xe2\x80\xa60EfThe <code>break_with_label_and_loop</code> lint detects labeled <code>break</code> \xe2\x80\xa60CfTimes when we replace bound regions with existentials:0AnHigher-ranked subtyping error.CkChecking that the bounds of a trait\xe2\x80\x99s associated type \xe2\x80\xa60000CmAfter we borrow check a closure, we are left with various \xe2\x80\xa6CnComparing the signature and requirements of an impl method \xe2\x80\xa60DjCalled <code>const_make_global</code> on a pointer that does not start \xe2\x80\xa60ChThe <code>contract_build_check_ensures</code> lang item.CfSee docs for explanation of how each argument is used.0000DgThe <code>deref_into_dyn_supertrait</code> lint is emitted whenever \xe2\x80\xa6DfA link to <code>doc.rust-lang.org</code> that includes the channel \xe2\x80\xa6DfThe <code>elided_lifetimes_in_paths</code> lint detects the use of \xe2\x80\xa60DdThe <code>enum_intrinsics_non_enums</code> lint detects calls to \xe2\x80\xa6Di<code>Ok</code> represents successfully retrieving the string literal \xe2\x80\xa6BfHow to handle fieldless enum variants.DfThe <code>integer_to_ptr_transmutes</code> lint detects integer to \xe2\x80\xa6EkThe <code>invalid_reference_casting</code> lint checks for casts of <code>&amp;T</code> \xe2\x80\xa6ClIdentifies a particular impl in the source, along with a \xe2\x80\xa600B`We are doing pointer arithmetic.0BlUsed with <code>-Z assert-incr-state</code>.BkAppend inline assembly to a module. See \xe2\x80\xa6ChCollects all the late-bound regions at the innermost \xe2\x80\xa6CeHorizontalVertical with a soft limit of n characters.CkThe <code>missing_doc_code_examples</code> lint detects \xe2\x80\xa6CcAn newtype around <code>Ident</code> that calls \xe2\x80\xa6DjLike <code>MaybeLiveLocals</code>, but does not mark locals as live if \xe2\x80\xa60BhDefines variants similar to those of \xe2\x80\xa6CkAs part of computing the free region relations, we also \xe2\x80\xa6CcA compact form of <code>ObligationCauseCode</code>.00ChCollects information about outlives constraints that \xe2\x80\xa6CnThe <code>panic_const_coroutine_resumed_drop</code> lang item.DkThe <code>renamed_and_removed_lints</code> lint detects lints that have \xe2\x80\xa60De<code>#[rustc_std_internal_symbol]</code>: an indicator that this \xe2\x80\xa6DeSuperset of <code>Reachable</code> including items leaked through \xe2\x80\xa6Bg(&amp;\xe2\x80\x99a &amp;\xe2\x80\x99b T) where a &gt;= bDlA type like <code>&amp;&#39;a T</code> is WF only if <code>T: &#39;a</code>.010CjRegion variables created as the values for early-bound \xe2\x80\xa60ChWhen we have an unmet lifetime constraint, we try to \xe2\x80\xa6gRvalues0DoResolves elided lifetimes to <code>&#39;static</code> if there are no other \xe2\x80\xa6CkWhether aliases should be related structurally or not. Used00000000000EjUsed for types that are <code>Copy</code> and which <strong>do not care arena </strong>\xe2\x80\xa60EjUsed for types that are <code>Copy</code> and which <strong>do not care about </strong>\xe2\x80\xa611EeThe <code>unqualified_local_imports</code> lint checks for <code>use</code> items \xe2\x80\xa6DkThe <code>untranslatable_diagnostic</code> lint detects messages passed \xe2\x80\xa6DaThe <code>unused_crate_dependencies</code> lint detects crate \xe2\x80\xa60DdThe <code>usage_of_type_ir_inherent</code> lint detects usage of \xe2\x80\xa6CkExplains corresponding feature flag must be enabled for \xe2\x80\xa6DcError E0408: variable <code>{}</code> is not bound in all patterns.Cfe.g., <code>fn foo(&amp;self) where Self: Clone</code>00DeThis field exists to prevent the creation of <code>AliasTy</code> \xe2\x80\xa60CjAdds constraints appropriate for a nominal type (enum, \xe2\x80\xa6DfWhen we have a ty alias we <em>may</em> have two where clauses. To \xe2\x80\xa6CcConvert a relative (tcx) pointer to a Miri pointer.CmReturn a \xe2\x80\x9croot\xe2\x80\x9d pointer for the given allocation: the \xe2\x80\xa60ChDILocations inherit source file name from the parent \xe2\x80\xa6CjReturns the safe version of the signature of the given \xe2\x80\xa6AfThe Apple-specific \xe2\x80\xa6Cn<em>Incorrectly</em> skips the WF checks we normally do in \xe2\x80\xa6CfAsserts that the given arguments match the generic \xe2\x80\xa6CmCompute what placeholders (if any) each SCC must be equal \xe2\x80\xa6ClWhether cfg(version) should treat the current release as \xe2\x80\xa6ClIndicates that we want to add an autoref (and maybe also \xe2\x80\xa6AiUsed as a fallback in \xe2\x80\xa6CnEmit an error when encountering two or more non-zero-sized \xe2\x80\xa6CdBuilds the debuginfo node for a closure environment.ClCreates the debuginfo node for a Rust struct type. Maybe \xe2\x80\xa6BfGenerates LLVM debuginfo for a vtable.CmWhether we\xe2\x80\x99re allowed to use a global cache entry which \xe2\x80\xa6DeReturns <code>StrIndex</code> of the last camel-case component of \xe2\x80\xa6DfReturns <code>true</code> if this type is valid for reordering and \xe2\x80\xa6CiCheck the consistency of bindings wrt or-patterns and \xe2\x80\xa6DbChecks if the items on the <code>#[debugger_visualizer]</code> \xe2\x80\xa6CiLooks for items missing (or incorrectly having) doctests.CcCheck the explicit predicates declared on the type.CnCheck that the signature of this function does not violate \xe2\x80\xa6CkFeature gates RFC 2056 \xe2\x80\x93 trivial bounds, checking for \xe2\x80\xa6EjAn <code>fn</code> in <code>extern { ... }</code> cannot have a body <code>{ ... }</code>.CcCheck the inferred predicates declared on the type.C`Check that the number of args is what we expect.DhCheck that the concrete type behind <code>impl Trait</code> actually \xe2\x80\xa6DeCheck an expression that <em>is being returned</em>. For example, \xe2\x80\xa6CnCheck some basic requirements for this allocation request: \xe2\x80\xa6CjFailure rate of compare_exchange_weak, between 0.0 and 1.0CnRate of spurious failures for compare_exchange_weak atomic \xe2\x80\xa601CdGenerates code for a <code>Resume</code> terminator.DmTransmutes an <code>OperandValue</code> to another <code>OperandValue</code>.ClScans the MIR in order to find function calls, closures, \xe2\x80\xa6BiThis function will do at most two things:BnConverts a macro item into a syntax extension.0CeFor every saved local, looks for which locals are \xe2\x80\xa6DgFinds all type variables which are passed to an <code>unsafe</code> \xe2\x80\xa6CmMap from const parameter variable to the kind of const it \xe2\x80\xa6DfReturns <code>true</code> if it looks like this symbol needs to be \xe2\x80\xa6EgReturns the <code>DefId</code> of the <code>contract_check_ensures</code> lang item \xe2\x80\xa6CmCreate an ELF .so stub file for raw-dylib. It exports all \xe2\x80\xa6DgOnly used in the resolver to register the <code>CRATE_DEF_ID</code> \xe2\x80\xa6CmThe current trait\xe2\x80\x99s associated items\xe2\x80\x99 ident, used for \xe2\x80\xa6BeReturns default crate type for targetEhWhen we process a call like <code>c()</code> where <code>c</code> is a closure type, \xe2\x80\xa6DdWhen encountering an equality constraint in a <code>where</code> \xe2\x80\xa6CfName of the environment variable used to fetch the \xe2\x80\xa60Eh<code>drop_of_var_derefs_origin(var, origin)</code> when the type of <code>var</code>\xe2\x80\xa60CmEagerly emit delayed bugs as errors, so that the compiler \xe2\x80\xa6CmEmulates a Miri-supported intrinsic (not supported by the \xe2\x80\xa6CkChecks whether a type contains generic parameters which \xe2\x80\xa6CkOverflowing literals are linted against in a late pass. \xe2\x80\xa6CmA macro\xe2\x80\x99s expansion does not fit in this fragment kind. \xe2\x80\xa6DgIterate over all added goals: returning <code>Ok(Some(_))</code> in \xe2\x80\xa6BbThe normal case uses field access.DfReturns the explicitly user-written <em>bounds</em> that share the \xe2\x80\xa6000000CiLifetime parameters that lowering will have to introduce.0ClExtracts coverage-relevant spans from MIR, and uses them \xe2\x80\xa6ChIf the given expression is a path to a tuple struct, \xe2\x80\xa6CjReturns an iterator over all associated items with the \xe2\x80\xa6BfFind the best match for multiple wordsCfMap from floating variable to the kind of float it \xe2\x80\xa6FoGiven a <code>DefId</code> of one of the <code>Fn</code>, <code>FnMut</code> or <code>FnOnce</code> traits, \xe2\x80\xa6EfInvokes <code>callback</code> on each immediate subpattern of <code>pat</code>, if \xe2\x80\xa6CdRuns the given function for each path expression \xe2\x80\xa6CnInvoke a function on each value in the given place and all \xe2\x80\xa6CjFreeze the set, and return the spans which have been read.C`Generates unique directory path of the form: \xe2\x80\xa6CnGenerates a string version of this UniqueTypeId, which can \xe2\x80\xa6CkStart profiling a generic activity. Profiling continues \xe2\x80\xa6BoCollect attributes from the whole import chain.CgReturn the full list of types when bounds have been \xe2\x80\xa6CjGets a mutable reference to the value in the entry, or \xe2\x80\xa6CmCheck if we have an allocation for the given thread local \xe2\x80\xa6BgInvocation ids of all glob delegations.CeTrue if there are any late-bound non-region variables0000CeAssumptions that come from the well-formedness of \xe2\x80\xa6CkHighlight the given bound region. We can only highlight \xe2\x80\xa6DeSee <code>foreign_access_skipping.rs</code>. Stores an idempotent \xe2\x80\xa6CnMaps from associated items on a trait to the corresponding \xe2\x80\xa6000000CmReturns the obligations that are implied by instantiating \xe2\x80\xa6EbSame as <code>implements_trait</code> but allows using a <code>ParamEnv</code> \xe2\x80\xa6CaQuery provider for <code>incoherent_impls</code>.CnIncrements the terminate counter. This increment should be \xe2\x80\xa6DkReturns <code>true</code> if the local variable (or some part of it) is \xe2\x80\xa6CmInserts the cast of an operand (any type) to a u128 value \xe2\x80\xa6EiGiven a requirement <code>T: &#39;a</code> or <code>&#39;b: &#39;a</code>, deduce the \xe2\x80\xa6DhReplaces all regions bound by the given <code>Binder</code> with the \xe2\x80\xa6CnGiven the \xe2\x80\x9cinfo\xe2\x80\x9d about a canonical variable, creates a \xe2\x80\xa60CkReturns the span of expr if it was not interpolated, or \xe2\x80\xa6EeReturns the <code>DefId</code> of the <code>into_async_iter_into_iter</code> lang \xe2\x80\xa6BnChecks if target supports crate_type as outputChIs expensive recording of query keys and/or function \xe2\x80\xa6CiChecks if a function\xe2\x80\x99s body represents the identity \xe2\x80\xa6ChCheck for resolve collisions between a trait and its \xe2\x80\xa6ClChecks if an expression represents the identity function \xe2\x80\xa6CnDetermine if the given associated item type is relevant in \xe2\x80\xa6CeIs this the start of a pattern beginning with a path?DgIf <code>place</code> is a field projection, and the field is being \xe2\x80\xa60CkReturns a range of the start/end indices specified with theClChecks if an expression refers to a function marked with \xe2\x80\xa6ChReturns a list of types which (a) have a potentially \xe2\x80\xa6000000CaLower a resolved path to a (type-level) constant.DkSame as <code>make_indirect</code>, but for arguments that are ignored. \xe2\x80\xa6DiEquates the trait in <code>obligation</code> with trait bound. If the \xe2\x80\xa6CiCheck for exclusive ranges written as <code>..&lt;</code>EfIf <code>region</code> and <code>number</code> are both <code>Some</code>, invokes \xe2\x80\xa6ClMinimum chars an ident can have, anything below or equal \xe2\x80\xa60BkThe deployment target for the given target.0BjA target tuple for OpenWrt MIPS64 targets.CjWhether to allow fields starting with an underscore to \xe2\x80\xa60Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6000000DjReturns <code>true</code> if this evaluation result is known to apply, \xe2\x80\xa600CdWhether to enable the new native lib tracing system.0CgMethods for normalizing when you don\xe2\x80\x99t care about \xe2\x80\xa6DhErase the regions in <code>value</code> and then fully normalize all theDgThe guts of <code>normalize</code>: normalize a specific projection \xe2\x80\xa6CnFor an opaque type, return the list of (captured lifetime, \xe2\x80\xa6000000CiResolves a region var to its value in the unification \xe2\x80\xa60CnPre-computed hash of the full HIR. Used in the crate hash. \xe2\x80\xa6CnReturns layout of a non-async-drop coroutine. Layout might \xe2\x80\xa6DoGiven a region <code>R</code>, iterate over all constraints <code>R: R1</code>.Dl<code>macro_rules</code> scopes <em>produced</em> by expanding the macro \xe2\x80\xa6ClInstall projection predicates that allow GATs to project \xe2\x80\xa6CmObtain the list of input types and the output type if the \xe2\x80\xa6CnParse the term to the right of an associated item equality \xe2\x80\xa6DeUsually you want <code>parse_limited</code>, which defaults to no \xe2\x80\xa6CcMatches <code>&#39;-&#39; lit | lit</code> (cf. \xe2\x80\xa6AaParses a pattern.BeParse a tuple or parenthesis pattern.BeParses a structure field declaration.EjParse a type without recovering <code>:</code> as <code>-&gt;</code> to avoid breaking \xe2\x80\xa6CdIndices of unnamed struct or variant fields with \xe2\x80\xa6ClReturns all the elements contained in a given region\xe2\x80\x99s \xe2\x80\xa6EbReturns <code>true</code> if the effect at <code>self</code> should be applied \xe2\x80\xa6CkAnalyzes the coverage graph to create intermediate data \xe2\x80\xa6BhAllocates the private session directory.CnAppends a representation of a qualified path segment, e.g. \xe2\x80\xa6ClSearch for inherent associated items for use at the type \xe2\x80\xa6DbReturns <code>true</code> if we should consider the underlying \xe2\x80\xa6DhSimilar to <code>Self::canonicalize_query</code>, except that it returns0ClAdds a dummy statement whose only role is to associate a \xe2\x80\xa6EgReturns the <code>DefId</code> of the <code>RangeToInclusive</code> lang item if it \xe2\x80\xa6CnHelper function to read a sequence of unsigned integers of \xe2\x80\xa6BnHelper function to read an OsString from a \xe2\x80\xa6DiBase directory containing the <code>library/</code> directory for the \xe2\x80\xa600CjTracks the set of region variables and the constraints \xe2\x80\xa6CmThis function is used by Miri\xe2\x80\x99s provenance GC to remove \xe2\x80\xa6CmReports an error when the number of arguments needed by a \xe2\x80\xa6CmHandle invalid references to positional arguments. Output \xe2\x80\xa6AoItem requires monomorphization.0CjThere are a few places that we need to resolve an anon \xe2\x80\xa6Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6000000DcWas the symbol marked as <code>#[rustc_std_internal_symbol]</code>?CoThis crate provides a derive macro for <code>ConfigType</code>.ClIf true, then scrape-examples.js will be included in the \xe2\x80\xa6DiExecutes <code>op</code> and then scrapes out all the \xe2\x80\x9cold style\xe2\x80\x9d \xe2\x80\xa6DiAdvances the cursor to hold the dataflow state at <code>target</code> \xe2\x80\xa6CmVarious toolchain components used during linking are used \xe2\x80\xa6CcSets the last OS error and writes -1 to dest place.DaReturns <code>true</code> if default trait bound should be added.DhDetermine whether <code>expected</code> is a smart pointer type that \xe2\x80\xa6BoReport lifetime/lifetime shadowing as an error.C`Simplify the projection chain if we know better.CnIf there are generic parameters, return where to introduce \xe2\x80\xa6CjFormat the span location to be printed in diagnostics. \xe2\x80\xa6ClFormat the span location suitable for embedding in build \xe2\x80\xa6EhGiven a <code>Span</code>, gets a new <code>Span</code> covering the first token and \xe2\x80\xa6???????BnConvert markdown to (summary, remaining) HTML.FbSame as applying <code>struct_tail</code> on <code>source</code> and <code>target</code>, but onlyChNormalize a type for when it is structurally matched on.EaResolves <code>ty</code> by a single level if <code>ty</code> is a type variable.CfReturns the sugared return type for an async function.EgFor code <code>rect::area(...)</code>, if <code>rect</code> is a local variable and \xe2\x80\xa6ClSuggest wrapping the block in square brackets instead of \xe2\x80\xa6DgTry to find code with pattern <code>if Some(..) = expr</code> use a \xe2\x80\xa6CmA common error is to forget to add a semicolon at the end \xe2\x80\xa6CkWhich kinds of split debuginfo are supported by the target?DcFor interpolated <code>self.token</code>, returns a span of the \xe2\x80\xa6CiAdds a suggestion to the JSON output that will not be \xe2\x80\xa6ChLike translate_args, but obligations from the parent \xe2\x80\xa60Df<code>repr(transparent)</code> structs can have a single non-1-ZST \xe2\x80\xa6DeIndent each line according to the specified <code>indent</code>. e.g.ClTry to turn a replacement into an addition when the span \xe2\x80\xa6ChTry to replace an alias with the term present in the \xe2\x80\xa6DiManually check here that <code>async fn foo()</code> wasn\xe2\x80\x99t matched \xe2\x80\xa6BfThe maximum complexity a type can have0Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6000000DdDo not call this query directly: part of the <code>Eq</code> type-op000000CmCollection of all types with notable traits referenced in \xe2\x80\xa6DgLike <code>Self::unreachable</code>, but for use in the middle of a \xe2\x80\xa60CoCheck if the SCC of <code>r</code> contains <code>upper</code>.CjFinds a crate that contains a monomorphization of this \xe2\x80\xa6CmEnsure the given scalar is valid for the given type. This \xe2\x80\xa6DeLike <code>visit_nested_item()</code>, but for foreign items. See \xe2\x80\xa6DiReturns <code>true</code> if this session\xe2\x80\x99s target requires the new \xe2\x80\xa6CmCheck whether an operation that writes to a target buffer \xe2\x80\xa6CmShow a suggestion that has multiple parts to it. In other \xe2\x80\xa6BmPrint types for the purposes of a suggestion.0DfThe <code>ambiguous_associated_items</code> lint detects ambiguity \xe2\x80\xa60CgRelevant types for an async callable, including its \xe2\x80\xa6DhImplementation of the <code>AsyncFnKindHelper</code> helper trait, which00DdThe <code>bindings_with_variant_name</code> lint detects pattern \xe2\x80\xa60CnIndicates an outlives-constraint between a type or between \xe2\x80\xa6DeThe <code>diagnostic_outside_of_impl</code> lint detects calls to \xe2\x80\xa6EgThe <code>duplicate_macro_attributes</code> lint detects when a <code>#[test]</code>\xe2\x80\xa60CaThe destination type may carry safety invariants.ClEvaluation successful, but there were unevaluated region \xe2\x80\xa600000CmExtended target modifier info. For example, when external \xe2\x80\xa60CjPut the rhs on the next line if it uses multiple line, \xe2\x80\xa6CjError E0401: can\xe2\x80\x99t use type or const parameters from \xe2\x80\xa6DgThe <code>ill_formed_attribute_input</code> lint detects ill-formed \xe2\x80\xa60DkThe <code>invalid_type_param_default</code> lint detects type parameter \xe2\x80\xa60DgCheck for used feature gates in <code>INCOMPLETE_FEATURES</code> in \xe2\x80\xa6DbIntermediate format to store a captured <code>Place</code> and \xe2\x80\xa6BfNon-hexadecimal value in \xe2\x80\x98\\u{..}\xe2\x80\x99.ClInvalid in-bound unicode character code, e.g. \xe2\x80\x98\\u{DFFF}\xe2\x80\xa6CmA collection of region constraints that must be satisfied \xe2\x80\xa6DaThe <code>panic_const_async_gen_fn_resumed_drop</code> lang item.CoThe <code>panic_const_coroutine_resumed_panic</code> lang item.Cdgeneric parameters must not be used inside const \xe2\x80\xa6CnCriteria to apply when searching for a given Pick. This is \xe2\x80\xa6CkThis struct holds the data needed by the borrowck error \xe2\x80\xa6CcHow to run proc-macro code when building this crateCkThe \xe2\x80\x9cprovisional evaluation cache\xe2\x80\x9d is used to store \xe2\x80\xa6DkThe <code>rust_2024_incompatible_pat</code> lint detects patterns whose \xe2\x80\xa60Cee.g., <code>fn foo(&amp;self) -&gt; impl Sized</code>00DjPart of <code>MinCaptureInformationMap</code>; Maps a root variable to \xe2\x80\xa60CiRepresents <code>#[rustc_object_lifetime_default]</code>.0DiPass to convert <code>if</code> conditions on integrals into switches \xe2\x80\xa6CmRepresents the item categories that can be ordered by the \xe2\x80\xa6DiThe limit used by <code>-Z tiny-const-eval-limit</code>. This smaller \xe2\x80\xa6ChConfiguration passed to the function returned by the \xe2\x80\xa6DfWrapper type for <code>ty::TraitRef</code> which opts-in to pretty \xe2\x80\xa6000DfThe <code>unsafe_attr_outside_unsafe</code> lint detects a missing \xe2\x80\xa60CmIterator over functional and commented parts of a string. \xe2\x80\xa6BiAn uninhabited enum variant is projected.0CnRepresents <code>#[rustc_unsafe_specialization_marker]</code>.0CmAfter a line ending with \xe2\x80\x99&#39;, the next line contains \xe2\x80\xa6FaIndicates a <code>&#39;b: &#39;a</code> constraint where <code>&#39;a</code> is in a universe \xe2\x80\xa600DfThis field exists to prevent the creation of <code>TraitRef</code> \xe2\x80\xa60DkAdds constraints appropriate for a const expression <code>val</code> in \xe2\x80\xa6CnAdd arbitrary \xe2\x80\x9cuser defined\xe2\x80\x9d args defined from command \xe2\x80\xa6EfCheck that all fields of a given <code>adt</code> implement <code>lang_item</code> \xe2\x80\xa6DjDecide allocator kind to codegen. If <code>Some(_)</code> this will be \xe2\x80\xa6DdWhether <code>useless_vec</code> should ignore test functions or \xe2\x80\xa60CdThe set of locals in a MIR body that do not have \xe2\x80\xa60CkContains the spans of block expressions that could have \xe2\x80\xa6DgMaps <code>crate::Level</code> to <code>annotate_snippets::Level</code>CfGiven an instance of the closure type, this method \xe2\x80\xa6C`Returns whether at least a component is enabled.ClGiven a place, returns either the underlying mplace or a \xe2\x80\xa6DiThis is used when constructing a compound <code>Place</code>, so that \xe2\x80\xa6Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6000000CjBan a range pattern if it has an ambiguous interpretation.CmCheck that this pointer has permission to deallocate this \xe2\x80\xa6CdHook for performing extra operations on a memory \xe2\x80\xa60CmBuild the debuginfo node for a C-style enum, i.e. an enum \xe2\x80\xa6CmBuilds the DW_TAG_member describing where we can find the \xe2\x80\xa6ClBuild an error message reporting that a function call is \xe2\x80\xa6CnBuilds the DW_TAG_member debuginfo nodes for the upvars of \xe2\x80\xa6CgIndicates that the caller is #inline and just calls \xe2\x80\xa6CmFor a specific file description, get its ready events and \xe2\x80\xa6DeChecks that an attribute is <em>not</em> used at the crate level. \xe2\x80\xa6CiVerify that deprecation and stability attributes make \xe2\x80\xa6CnCheck for transmutes from integer to pointers (*const/*mut \xe2\x80\xa6BfFIXME(ChAoSUnItY): Too many arguments.CfCheck explicit closure signature annotation, e.g., \xe2\x80\xa6ClDetermines if this type permits \xe2\x80\x9craw\xe2\x80\x9d initialization \xe2\x80\xa60???????CmDescribe the reason for the fake borrow that was assigned \xe2\x80\xa6CgExtract all symbols defined in raw-dylib libraries, \xe2\x80\xa6Cjas opposed from the body of a while loop, which we can \xe2\x80\xa6ClChecks that the number of generics on a given assoc item \xe2\x80\xa6CgReturns the discriminant value corresponding to the \xe2\x80\xa6EhReturns the <code>DefId</code> of the <code>contract_check_requires</code> lang item \xe2\x80\xa6CjPropagate loans throughout the subset graph at a given \xe2\x80\xa6CmWhen coroutine has sync drop, this is async proxy calling \xe2\x80\xa6DbGiven a projection like \xe2\x80\x9c&lt;F as Fn(X)&gt;::Result == Y\xe2\x80\x9d, \xe2\x80\xa6CcGet the default optimizations attrs for a function.DdSome additional <code>Sized</code> obligations badly affect type \xe2\x80\xa6CfGiven a type and a target type, this function will \xe2\x80\xa6CmEncapsulates the idea of iterating over every borrow that \xe2\x80\xa6CiEmit a notification that an artifact has been output. \xe2\x80\xa6CeWhether to recommend using implicit into iter for \xe2\x80\xa60ClReturns a diagnostic reporting a struct pattern which is \xe2\x80\xa6DaExpands a <code>#[derive(PartialEq)]</code> attribute into an \xe2\x80\xa6BjExpand a span to include a preceding commaBhproduces an error along the lines of \xe2\x80\xa6CnGiven a type with type parameters, visit every ADT looking \xe2\x80\xa6CgGenerates an initial set of coverage spans from the \xe2\x80\xa6ChThis function finalizes and thus \xe2\x80\x98publishes\xe2\x80\x99 the \xe2\x80\xa60DiFind the first ancestor span with the same <code>SyntaxContext</code> \xe2\x80\xa6DdDetect typos that were meant to be a <code>const</code> but were \xe2\x80\xa6CgFind the nearest parent module of a <code>DefId</code>.DiLike <code>macro_backtrace</code>, but only returns macro calls where \xe2\x80\xa6DjCheck if it\xe2\x80\x99s even possible to satisfy the <code>where</code> clause \xe2\x80\xa6DdInternally iterate over all inlined items used by <code>item</code>.CfCopied from the rust standard library, and then editedCkGenerates a new symbol name with the given prefix. This \xe2\x80\xa6CkThis function is to get the external macro path because \xe2\x80\xa6DjPush new doctest content into <code>output</code>. Returns the test ID \xe2\x80\xa6Dh<code>range</code> is relative to this allocation reference, not the \xe2\x80\xa6CkChecks that these bytes are initialized, and then strip \xe2\x80\xa6DiFrom the <code>hir::Ty</code> of an async function\xe2\x80\x99s lowered return \xe2\x80\xa6ClGiven a arg inside of generics, we try to destructure it \xe2\x80\xa6CjRecover any missing comments between the param and the \xe2\x80\xa6DhGets a <code>StringId</code> for the given string. This method makes \xe2\x80\xa60CnDecodes the proc-macro quoted span in the specified crate, \xe2\x80\xa6CiIterates over the stability implications in the given \xe2\x80\xa6CnSearch the upvars (if any) to find one that references fr. \xe2\x80\xa6CeReturns the member alignment of an XCoff object file.CnThis excludes nothing. Unless absolutely necessary, prefer \xe2\x80\xa6EfReturns <code>true</code> if <code>self</code> has any late-bound regions that are \xe2\x80\xa60000DdIntern the new <code>DepNode</code> with the dependencies up-to-now.CnA list of paths to types that should be treated as if they \xe2\x80\xa60CgStart a const-continuable scope, which tracks where \xe2\x80\xa6ChGets source indices of the fields by increasing offsets.CnInject any necessary coverage statements into MIR, so that \xe2\x80\xa6ClGiven the \xe2\x80\x9cinfos\xe2\x80\x9d about the canonical variables from \xe2\x80\xa6DkReturns true if the expr is equal to <code>Default::default</code> when \xe2\x80\xa6EdReturns true if the <code>def_id</code> associated with the <code>path</code> is \xe2\x80\xa6CmWhether this is a replacement that overwrites source with \xe2\x80\xa6DkChecks if the <code>DefId</code> matches the given diagnostic item or it\xe2\x80\xa6CjChecks if the given expression is the else clause of a \xe2\x80\xa6DnAllows constructs like <code>&lt;img&gt;</code>, but not <code>&lt;img</code>.CgReturns true if this an overflow checking assertion \xe2\x80\xa6CjWhether the range denotes the fictitious values before \xe2\x80\xa6CmReturns true if the specified expression is in a receiver \xe2\x80\xa6EdReturns <code>true</code> if the <code>Qualif</code> is structural in an ADT\xe2\x80\x99s \xe2\x80\xa6DjChecks if the given expression is a stub, i.e., a <code>todo!()</code> \xe2\x80\xa6CkDetermine the line_start when formatting markdown block \xe2\x80\xa6DnInvokes <code>each_edge(R1, R2)</code> for each edge where <code>R2: R1</code>CfOnce region inference is done, the values for each \xe2\x80\xa6Di<code>lookup_method_in_trait</code> is used for overloaded operators. \xe2\x80\xa6CbLower the generic arguments provided to some path.EgTakes what may be the body of an <code>async fn</code> or a <code>gen fn</code> and \xe2\x80\xa6EbMark the <code>const_allocate</code>d allocation <code>ptr</code> points to as \xe2\x80\xa6CmNormalizes the named associated type in the given impl or \xe2\x80\xa6DiCreates the <code>main</code> function which will initialize the rust \xe2\x80\xa6DdForwards a possible <code>#[track_caller]</code> annotation from \xe2\x80\xa6CmStore the metavariable span for this original span into a \xe2\x80\xa6CmGiven an element A, elements B with the lowest index such \xe2\x80\xa6CnError Reporting for when the lifetime for a type doesn\xe2\x80\x99t \xe2\x80\xa6GbSuppose we have <code>let _ = e</code> and the <code>order</code> of <code>e</code>. Is the <code>order</code> \xe2\x80\xa6CmDetermine whether parentheses are needed around the given \xe2\x80\xa6CnCreates a new parser from a source string. On failure, the \xe2\x80\xa6CmChecks whether a non-terminal may begin with a particular \xe2\x80\xa6CmNotify the worker that the latch they are sleeping on has \xe2\x80\xa6ClNotify the given thread that it should wake up (if it is \xe2\x80\xa6EaDrops the T contained in a <code>Box&lt;T&gt;</code> if it has not been moved \xe2\x80\xa6CfDetermines whether this expression is a macro call \xe2\x80\xa6CiCalculates the original byte position relative to the \xe2\x80\xa6AmReturns all regions (#53178).CjParses the rest of an associative expression (i.e. the \xe2\x80\xa6BgParse an optional higher-ranked binder.CoParse a range pattern <code>$begin $form $end?</code> where \xe2\x80\xa6CiParses a sequence until the specified delimiters. The \xe2\x80\xa6DiReturns the binders in scope and the type of <code>Binder</code> that \xe2\x80\xa6EbReturns <code>true</code> if the effect at <code>self</code> should be applied \xe2\x80\xa6ClThis is overridden for MIR printing because we only want \xe2\x80\xa60ChGiven name and kind search for the assoc item in the \xe2\x80\xa6EgReturns the <code>DefId</code> of the <code>range_inclusive_new</code> lang item if \xe2\x80\xa6DgRecover from a typoed <code>...</code> pattern that was encountered \xe2\x80\xa6EeReturns <code>true</code> iff the <code>RegionNameSource</code> is a valid source \xe2\x80\xa6CnRemembers which shims have already shown the warning about \xe2\x80\xa60CfReturns the path suitable for embedding into build \xe2\x80\xa6CbNever subcandidates may have a set of bindings \xe2\x80\xa6CmReports an error specifically for when data is escaping a \xe2\x80\xa6CgOn missing type parameters, emit an E0393 error and \xe2\x80\xa6CcReports that an overflow has occurred and halts \xe2\x80\xa6B`Report unreachable arms, if any.CmThis field keeps track of when borrow conflict errors are \xe2\x80\xa6CeResolve an identifier in the specified set of scopes.BnResolve a type-relative (and type-level) path.CmAfter parsing the disambiguator, resolve the main part of \xe2\x80\xa6CnTruncate projections so that following rules are obeyed by \xe2\x80\xa6FeLike <code>root_macro_call</code>, but only returns <code>Some</code> if <code>node</code> is the \xe2\x80\xa6CnReturns the sequence of passes that do the initial cleanup \xe2\x80\xa6DiAdvances the cursor to hold the dataflow state at <code>target</code> \xe2\x80\xa6CaDo not use this directly. This is called from \xe2\x80\xa600EgFreezes an <code>AllocId</code> created with <code>reserve</code> by pointing it at \xe2\x80\xa6CmIt is sometimes necessary to adjust the De Bruijn indices \xe2\x80\xa6FeIf <code>color</code> is <code>always</code> or <code>auto</code>, try to print pretty (formatted \xe2\x80\xa6CiWhen a span corresponds to a macro invocation that is \xe2\x80\xa6BoRenders the trait implementations for this typeDjSame as <code>snippet</code>, but it adapts the applicability level by \xe2\x80\xa6Eh<code>Diag::span_suggestion()</code> but you can set the <code>SuggestionStyle</code>\xe2\x80\xa6DhHelper for <code>Self::static_pattern_match</code>, checking whether \xe2\x80\xa6")
rd_("Ak<code>malloc</code> memory.0Aopresumed C ABI for the platform0Ag<code>#[repr(C)]</code>EbCan be specified as <code>extern &quot;C&quot;</code> or, as a shorthand, just \xe2\x80\xa6CdThe set of candidates we are considering in this \xe2\x80\xa6Abthir::ExprKind::Asn<code>@</code>0CmInvoke the linker via a C/C++ compiler (e.g. on most unix \xe2\x80\xa6BjLinker is called through a C/C++ compiler.DjThe search graph does not simply use <code>Interner</code> directly to \xe2\x80\xa6000o<code>==</code>BgThe <code>==</code> operator (equality)DmArguments of a key-value attribute: <code>#[attr = &quot;value&quot;]</code>.n<code>=</code>21022ClTest for equality with value, possibly after an unsizing \xe2\x80\xa6BiA function declaration (<code>fn</code>).AgAn associated function.AcA foreign function.FmE.g., <code>fn foo()</code>, <code>fn foo(&amp;self)</code>, or <code>extern &quot;Abi&quot; fn foo()</code>.0AnThe <code>Fn</code> lang item.CiConstructor function automatically created by a tuple \xe2\x80\xa6EgThe <code>async</code>/<code>gen</code> block generated as the body of an async/gen \xe2\x80\xa6AfFunctions and methods.BmAn associated function with an optional body.ChAn associated function implementation with the given \xe2\x80\xa6AgA function declaration.8AbCall to a const fnClA function that gets called. We don\xe2\x80\x99t necessarily know \xe2\x80\xa611CjThe <code>&gt;=</code> operator (greater than or equal to)Ab<code>&gt;=</code>111BmThe <code>&gt;</code> operator (greater than)Aa<code>&gt;</code>1011Bn<code>Id</code> is a Graphviz <code>ID</code>.AdA direct lint targetBaAn opaque identifier for an item.CfAn <code>if</code> expression without <code>let</code>DcAn <code>if</code> block, with an optional <code>else</code> block.CfAn <code>if</code> block, with an optional else block.AnAn <code>if</code> expression.DlTest whether a <code>bool</code> is <code>true</code> or <code>false</code>.Ab<code>&lt;=</code>CgThe <code>&lt;=</code> operator (less than or equal to)1000Aa<code>&lt;</code>BjThe <code>&lt;</code> operator (less than)10100o<code>!=</code>BkThe <code>!=</code> operator (not equal to)1000AiDon\xe2\x80\x99t retag any fields.BfDo not perform any kind of validation.10CbAll other positions (path expr, method, use tree).CmIgnore all alignment requirements. This is mainly used in \xe2\x80\xa60CjWe are not allowed to retry macro expansion as a fatal \xe2\x80\xa6AfDon\xe2\x80\x99t feed the type.AhHandle the item normallyAj<code>-Copt-level=0</code>0CjUse this variant when whatever you are converting with \xe2\x80\xa6DeNo, don\xe2\x80\x99t declare <code>let</code> bindings, because the caller \xe2\x80\xa6CdNo, don\xe2\x80\x99t schedule drops. The caller has taken \xe2\x80\xa6CnWe aren\xe2\x80\x99t performing any capturing - this is the default \xe2\x80\xa64AnDon\xe2\x80\x99t do any LTO whatsoever.Af<code>-C lto=no</code>Ee<code>-C instrument-coverage=no</code> (or <code>off</code>, <code>false</code> etc.)fDo notBhDon\xe2\x80\x99t collapse debuginfo for the macroAjContains the success value000000AgLoading was successful.01111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111EgAn assignment op (e.g. <code>a += b</code>), or a binary op (e.g. <code>a + b</code>\xe2\x80\xa6EaAn or-pattern <code>A | B | C</code>. Invariant: <code>pats.len() &gt;= 2</code>.BiThe <code>||</code> operator (logical or)0CgA list of patterns where only one needs to be satisfied2n<code>|</code>fA OR BAmThe <code>||</code> operator.EcAn or-pattern, e.g. <code>p | q</code>. Invariant: <code>pats.len() &gt;= 2</code>.2222kOr-pattern.0CjAn or-pattern context, e.g., <code>p_0 | ... | p_n</code>.AeUnwind to this block.A`Everything else.ClSubject is a type, typically a type parameter, but could \xe2\x80\xa6BnA type. Supports pointers, Self, and literals.CkThe ID of a regular type as it shows up at the language \xe2\x80\xa6BjRepresents a type in the <code>HIR</code>.CkExpected the binding to have the given type, but it was \xe2\x80\xa6CcEquivalent to <code>ty::Infer(ty::TyVar(_))</code>.BeSome kind of type inference variable.0BhUse the type of the provided definition.ClUse this rather than <code>TyKind</code>, whenever possible.22BhThis constant came from the type system.02AfThe type of a pattern.544344CjFree-form case. Only for errors that are never caught! \xe2\x80\xa60CjA nice interface for working with the infcx. The basic \xe2\x80\xa6EfReturns a transparent wrapper for <code>TyCtxt</code> which uses <code>span</code> \xe2\x80\xa61AiGet the background color.BiReturns a conditionally mutable resolver.CjObtain the const on the RHS of an assoc const equality \xe2\x80\xa6BnContext used to evaluate constant expressions.000AlThe late context of the lintCjThe parse context, gives access to the session and the \xe2\x80\xa6CnThis module contains the functionality to convert from the \xe2\x80\xa6Dd2023-05: We found that using <code>equivalent</code> rather than \xe2\x80\xa6AfResult when lhs == rhsBfMakes <code>expected == actual</code>.BmCompares two spans to see if they\xe2\x80\x99re equal.1CkGeneral management of file descriptors, and support for \xe2\x80\xa6AiGet the foreground color.AkFile and file system accessCmThis module manages how the incremental compilation cache \xe2\x80\xa6BbThe fs handle we are working with.AhResult when lhs &lt; rhsBeMust not be <code>NegInfinity</code>.DgMust be equal to <code>CRATE_NODE_ID</code> after the crate root is \xe2\x80\xa6BoId of the variant (not the constructor, see \xe2\x80\xa6AcPath resolution id.BeGets the identifier of this registry.Bcnode that produced the work-productCdUsed for internal tracking of the internal constant.DjThe ID of the <code>UseTree</code> that imported this <code>Import</code>.ClUsed to overwrite the resolution with the suggestion, to \xe2\x80\xa6BoReturns an opaque identifier for this registry.CkThe number that appears in the footnote reference and list.CkThe unique identifier of this item. Can be used to find \xe2\x80\xa6AcThe ID of the type.DkThe ID of the item being imported. Will be <code>None</code> in case of \xe2\x80\xa6CgInput, input file path and output file path to this \xe2\x80\xa60BlGets the address of the instruction pointer.DbThis module contains all the defined keyword <code>Symbol</code>s.BeMust not be <code>PosInfinity</code>.AhResult when lhs &gt; rhsDjUsed when <code>State.initialized = false</code>. Should have the same \xe2\x80\xa6CjReturns <code>None</code> if this is <code>Res::Err</code>CeGets the <code>LintId</code> for a <code>Lint</code>.0CmDetermines the category for a given expression. Note that \xe2\x80\xa6DbHelper creating a fully enabled <code>LinkSelfContained</code> \xe2\x80\xa6CjCode related to processing overloaded binary and unary \xe2\x80\xa6ChWhether to add or subtract the value of the node\xe2\x80\x99s \xe2\x80\xa6oEither Eq or NeBbIs this an increment or decrement?F`Produces a new <code>Tree</code> accepting either <code>self</code> or <code>other</code> as \xe2\x80\xa6DhOS name to use for conditional compilation (<code>target_os</code>). \xe2\x80\xa6CnThis pretty-printer is a direct reimplementation of Philip \xe2\x80\xa6EkReturns a <code>Span</code> that would enclose both <code>self</code> and <code>end</code>.BnUtil methods for <code>rustc_middle::ty</code>CjA mini version of ast::Ty, which is easier to use, and \xe2\x80\xa6CfObtain the type on the RHS of an assoc ty equality \xe2\x80\xa6CmGet the type for constants, assoc types, type aliases and \xe2\x80\xa6CgType annotation, if any (otherwise the type will be \xe2\x80\xa6CjThe hidden type we\xe2\x80\x99re remapping. Useful for diagnostics.CnThe type of the pattern, to be checked against the type of \xe2\x80\xa6DjReturns the type of this <code>Place</code> after all projections have \xe2\x80\xa6BeType after the projection is applied.C`Type which must match the generic <code>G</code>CjThe generic type containing the generic parameter that \xe2\x80\xa6000CeDefines how the compiler represents types internally.CmReturns the type of this field. The resulting type is not \xe2\x80\xa6CmThe type variable that represents the value of the opaque \xe2\x80\xa6EaReturns the <code>Ty</code> corresponding to this <code>Instance</code>, with \xe2\x80\xa6444BfReturns the type of this inline const.87AgThe type of this local.CmType of the original user variable. This cannot contain a \xe2\x80\xa6AiThe type of the constant.AkThe possibly inferred type.AkThe type of this expressionEeThe type of the function. This is often a <code>FnDef</code> or a <code>FnPtr</code>.33AmType of the referenced place.CmThe descriptor string representing the name of the format \xe2\x80\xa6BfType of the place under investigation.AfThe type of the place.AfGet the constant type.AnRetrieve the type of this Adt.B`Retrieve the type of this field.CmReturn the generic argument type if applicable, otherwise \xe2\x80\xa6AbThe constant type.DhConversion of internal Rust compiler <code>ty</code> items to stable \xe2\x80\xa6BdReturns the type of this crate item.CmGet the instance type with generic instantiations applied \xe2\x80\xa6BjReturn the type of this static definition.CmReturn the type of this operation for the given input Ty. \xe2\x80\xa60CdGet the type of an operand relative to the local \xe2\x80\xa6CiResolve down the chain of projections to get the type \xe2\x80\xa6CmGet the expected type after applying this projection to a \xe2\x80\xa6AkGet the type of this place.CjThe generic type containing the generic parameter that \xe2\x80\xa6C`Type which must match the generic <code>G</code>111DcA <code>Tree</code> whose layout matches that of a <code>u8</code>.ClCore logic responsible for determining what it means for \xe2\x80\xa6CfConsumes all whitespace characters until the first \xe2\x80\xa6AjAll of the primitive typesChUnwinding is just not possible given the ABI of this \xe2\x80\xa60CjThe ABI (Application Binary Interface) used by a function.BfThe <code>+</code> operator (addition)AoThe <code>add</code> lang item.111ChAlgebraic data types (ADT). For example: structures, \xe2\x80\xa600ClThe second field is the variant index. It\xe2\x80\x99s equal to 0 \xe2\x80\xa60CgAn ADT constructor, e.g. <code>Foo {x: 1, y: 2}</code>.222BgFormat every packages and dependencies.BnAll groupings should have their items ordered.CmDoesn\xe2\x80\x99t stop until it returns the base case (a Local or \xe2\x80\xa6CkIndicates that a type constraint should always be true. \xe2\x80\xa6BkAll predicates may be implied by the trait.BoVisits all nested things, including item-likes.BdAll scopes with the given namespace.AoResolve doc links on all items.BiGenerate stack canaries in all functions.DgTrue if all predicates are true, like <code>on(all($a, $b, $c))</code>.CiIntersection of a list of configuration requirements, \xe2\x80\xa6BeA choice between alternative layouts.CbThe <code>&amp;&amp;</code> operator (logical and)0Ab<code>&amp;</code>gA AND BBeThe <code>&amp;&amp;</code> operator.1111DeTrue if any predicate is true, like <code>on(any($a, $b, $c))</code>.ChUnion of a list of configuration requirements, i.e., \xe2\x80\xa6BkA generic argument for a generic parameter.AhType or const parameter.C`The value is derived from a positional argument.CmWhen we fail during method argument checking, try to find \xe2\x80\xa6AbFunction argument.ChAn argument of non-tuple type. Parameters are (name, ty)BcABIs relevant to 32-bit Arm targets0AhAn arm of a \xe2\x80\x98match\xe2\x80\x99.DdRepresents a single arm of a <code>match</code> expression, e.g. \xe2\x80\xa6AiA <code>match</code> arm.AkThe <code>asm!</code> macro00EhBox. <code>unpin</code> indicates the absence of any pinned data. <code>global</code>\xe2\x80\xa6AkA <code>box</code> pattern.0BlA <code>box &lt;value&gt;</code> expression.AdLinker tool for BPF.CkFor bugs in the compiler. Manifests as an ICE (internal \xe2\x80\xa6DeThe parsed <code>--cfg</code> options that define the compilation \xe2\x80\xa60CnA generic configuration option, e.g., <code>test</code> or \xe2\x80\xa6jComparisonEfThe <code>&lt;=&gt;</code> operator (three-way comparison, like <code>Ord::cmp</code>)0DfDefinition having a unique ID (<code>DefId</code>), corresponds to \xe2\x80\xa60AgAny module with a name.111111B`A visibility node in the layout.AbA definition node.3BfThe <code>/</code> operator (division)AoThe <code>div</code> lang item.111n<code>.</code>0BhAn unsized <code>dyn Trait</code> object0000ClChild requests that we stop monitoring and pass over the \xe2\x80\xa6AaMissing ` at end.kEnd Of FilemEnd of input.AlA literal with syntax error.AhContains the error value0CnPlaceholder for a pattern that wasn\xe2\x80\x99t syntactically well \xe2\x80\xa6CmPlaceholder for an expression that wasn\xe2\x80\x99t syntactically \xe2\x80\xa6CjPlaceholder for a literal that wasn\xe2\x80\x99t well-formed in \xe2\x80\xa6CePlaceholder for a kind that has failed to be defined.3444BhFailed to parse a stabilization version.CmFailed to parse a deprecation version, or the deprecation \xe2\x80\xa60DfName resolution failed. We use a dummy <code>Res</code> variant so \xe2\x80\xa6ClA placeholder for a pattern that wasn\xe2\x80\x99t well formed in \xe2\x80\xa60CaA placeholder for an expression that wasn\xe2\x80\x99t \xe2\x80\xa6CePlaceholder for a type that has failed to be defined.5:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::3333333:::::::::::::3:CbAn <code>f16</code> bitcast to a <code>u16</code>.AdAn <code>f32</code>.AdAn <code>f64</code>.CkDo a full-crate-graph (inter-crate) LTO with \xe2\x80\x9cfat\xe2\x80\x9d LTO.Ag<code>-C lto=fat</code>AfThe binder is present.AdBinder is specified.cGAT0000Dh<code>feature(generic_const_exprs)</code> anon consts are allowed to \xe2\x80\xa6000EoAn <code>async</code> block (<code>async move { ... }</code>), or a <code>gen</code> block (\xe2\x80\xa6Cn<code>gen</code>, which returns an <code>impl Iterator</code>.DnAn explicit <code>gen</code> block or the body of a <code>gen</code> function.ChUnix-like linker with GNU extensions (both naked and \xe2\x80\xa6ClOptions that print the HIR, i.e. <code>-Zunpretty=hir</code>CdRepresents some newtyped <code>usize</code> wrapper.00BfRepresents a <code>fn x(self);</code>.BbAn integer\xe2\x80\x99s bit representation.B`The raw bytes of a simple value.CgCheck alignment on the actual physical integer address.0DiThe <code>bool</code> is the signedness of the <code>Integer</code> type.BdAn integer literal (<code>1</code>).DiIntegral type variable <code>?I</code> (that can only be unified with \xe2\x80\xa60CoA primitive signed integer type. For example, <code>i32</code>.Ea<code>12_u8</code>, <code>0o100</code>, <code>0b120i99</code>, <code>1f32</code>.21CjVarious types that are represented as ints and handled \xe2\x80\xa6237753323232DgA <code>Job</code> is used to advertise work for other threads that \xe2\x80\xa6DiThe <code>Key</code> trait controls what types can legally be used as \xe2\x80\xa60CdUse the lld linker, either the system lld or the \xe2\x80\xa6BhLTO/ThinLTO postlink optimization stage.CmThe length of the repetition at a particular depth, where \xe2\x80\xa6ChYields the length of the place, as a <code>usize</code>.0EcTest that the length of the slice is <code>== len</code> or <code>&gt;= len</code>.AlLength of an array or slice.22AfA local (let) binding.DfA <code>let pat = expr</code> expression that is only semantically \xe2\x80\xa6BcA local (<code>let</code>) binding.BkA <code>let $pat = $expr</code> expression.AkA <code>let</code> binding.EgSpecial expression representing the <code>let</code> part of an <code>if let</code> \xe2\x80\xa6jA literal.CoA literal (e.g., <code>1</code>, <code>&quot;foo&quot;</code>).A`A literal token.221CaA literal string which should directly be emittednLinker is LLD.C`A source code location used for error reporting.DcThis is what the <code>LtoCli</code> values get mapped to after \xe2\x80\xa6BaMaximum value the index can take.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000Distable <code>min_const_generics</code> anon consts are not allowed to \xe2\x80\xa6000EbPartial mapping from <code>Place</code> to <code>PlaceIndex</code>, where some \xe2\x80\xa6BbMaximum value (with SSE semantics)AfTurn on max heuristicsBbMinimum value (with SSE semantics)CiUsed for function signatures, and constant and static \xe2\x80\xa6Ak<code>-Zunpretty=mir</code>BhA module declaration (<code>mod</code>).iA module.CcA path with generic arguments disallowed, e.g., \xe2\x80\xa6BlThe <code>*</code> operator (multiplication)AoThe <code>mul</code> lang item.111BjRepresents a <code>fn x(mut self);</code>.AlNo restriction on mutabilityBbData is mutable and not aliasable.000BhThe <code>-</code> operator for negationAoThe <code>neg</code> lang item.111Ag<code>Vec::new()</code>CkThis origin is used for the inference variables that we \xe2\x80\xa6CnDefault: include extra comments in NLL MIR dumps only. Can \xe2\x80\xa61CmNo-op. Useful for deleting instructions without affecting \xe2\x80\xa60CaThe <code>!</code> operator for logical inversionAoThe <code>not</code> lang item.1BcMutability restricted to immutable.22BkNegation, like <code>on(not($pred))</code>.CoNegates a configuration requirement, i.e., <code>not(x)</code>.CkAny decimal or hexadecimal digit depending on the location.DdA general number used in a <code>printf</code> formatting directive.AhA specific, fixed value.CaLiteral constant <code>1</code>, for convenience.AmThe second field, at index 1.BcValue for one as the integral type.BoPrints only the frame that the error occurs in.0AlThe default value: disabled.ChSplit debug-information is disabled, meaning that on \xe2\x80\xa6AgTurn off any heuristicsDhIn the usual case, a <code>HirId</code> for an identifier maps to at \xe2\x80\xa6AaA single binding.Cj1.x.y. When specified, rustfmt will format in the same \xe2\x80\xa6CjDiscard existing groups, and create a single group for \xe2\x80\xa6CgUse one <code>use</code> statement including all items.2AkPrelink optimization stage.CmAn option that takes a value, and cannot appear more than \xe2\x80\xa6CjThe trait implementation should be compatible with the \xe2\x80\xa6DeThe search pattern to look for. Used by <code>span_matches_pat</code>A`A match pattern.DhPattern types like <code>pattern_type!(u32 is 1..=)</code>, which is \xe2\x80\xa6CfPattern types (<code>pattern_type!(u32 is 1..)</code>)CmA pattern newtype. Takes any type and restricts its valid \xe2\x80\xa600EhThe same as <code>Expr</code>, but may be followed by a <code>:</code>. For example, \xe2\x80\xa6AhA user-provided pattern.BiPaths in path patterns <code>Path</code>.333BlA pattern type, e.g. <code>u32 is 1..</code>BlProgram database files (such as on Windows).EnA pinned borrow, <code>&amp;pin const $expr</code> or <code>&amp;pin mut $expr</code>. The \xe2\x80\xa6AoThe <code>pin</code> lang item.1jA pointer.CmA raw pointer (<code>*const T</code> or <code>*mut T</code>).DeA place referring to a value allocated in the <code>Memory</code> \xe2\x80\xa6DcA raw pointer (i.e., <code>*const T</code> or <code>*mut T</code>).mRaw pointers.44AkLinker tool for Nvidia PTX.EkA raw borrow, <code>&amp;raw const $expr</code> or <code>&amp;raw mut $expr</code>. The \xe2\x80\xa6CeA raw string, like <code>r##&quot;foo&quot;##</code>.1AgRetagging raw pointers.0AdApproximation of 1/xBiWe use this to create a forever-red node.kA referenceCiA reference pattern (e.g., <code>&amp;mut (a, b)</code>).EoA normal borrow, <code>&amp;$expr</code> or <code>&amp;mut $expr</code>. The resulting type \xe2\x80\xa6Db<code>move</code> or <code>use</code> keywords were not specified.DkA reference (<code>&amp;&#39;a T</code> or <code>&amp;&#39;a mut T</code>).AlAppears in a reference type.lA reference.CmA reference to the actual operand. The data is guaranteed \xe2\x80\xa6546EaA reference (i.e., <code>&amp;&#39;a T</code> or <code>&amp;&#39;a mut T</code>).CgA reference; a pointer with an associated lifetime. \xe2\x80\xa60AjConverts from T to &amp;T.1CgCreates a reference of the indicated kind to the place.0jReferencesB`The type is <code>&amp;T</code>.10BaCreates a reference to the place.05AaA reference node.66BlRepresents a normalized comparison operator.BeThe <code>%</code> operator (modulus)AoThe <code>rem</code> lang item.111BcThe resolution of a path or export.CmA <code>return</code>, with an optional value to be returned.0AeA single local scope.Dj<code>TyCtxt</code> (and related cache datastructures) can\xe2\x80\x99t be move \xe2\x80\xa6mLatch is set.ClA scalar or a scalar pair local with a single definition \xe2\x80\xa6BaA sequence of successive layouts.BoThe <code>&lt;&lt;</code> operator (shift left)AoThe <code>shl</code> lang item.111C`The <code>&gt;&gt;</code> operator (shift right)AoThe <code>shr</code> lang item.111A`A single string.BhA <code>String</code> (e.g., \xe2\x80\x9cabc\xe2\x80\x9d).EoA string literal or any <code>&amp;str</code> - <code>panic!(&quot;message&quot;)</code> or \xe2\x80\xa6EdA string literal (<code>&quot;foo&quot;</code>). The symbol is unescaped, and so \xe2\x80\xa6BdNon-translatable diagnostic message.000CkThe pointee of a string slice. Written as <code>str</code>.Cd<code>&quot;abc&quot;</code>, <code>&quot;abc</code>11DmString literals. Strings are not quite the same as <code>&amp;[u8]</code> \xe2\x80\xa60AoLoad source code from a string.333BeA &amp;str chunk in the version sort.BiThe <code>-</code> operator (subtraction)AoThe <code>sub</code> lang item.111BhThe string representation of the symbol.DdThis describes tags that the <code>TaggedRef</code> struct can hold.CfMemory for thread-local statics. This memory may leak.0AoA (recursive) table of contentsBfA try expression (<code>expr?</code>).AoThe <code>Try</code> lang item.BjA tuple (e.g., <code>(a, b, c, d)</code>).BhA tuple (<code>(A, B, C, D,...)</code>).1BiA tuple (<code>(A, B, C, D, ...)</code>).Cl2.x.y. When specified, rustfmt will format in the latest \xe2\x80\xa60BbType and extended type qualifiers.DePrecise capturing syntax: <code>impl Sized + use&lt;&#39;a&gt;</code>CnA use expression (<code>x.use</code>). Span is of use keyword.Ak<code>use |x| y + x</code>.BjA use declaration item (<code>use</code>).AhA <code>use</code> item.2BoAn use expression (e.g., <code>var.use</code>).Dh<code>use foo::bar::*;</code> or <code>use foo::bar::baz as quux;</code>Acthir::ExprKind::UseBnUse of value, generating a clone function callAlYields the operand unchanged10ClForces its contents to be treated as a value expression, \xe2\x80\xa611D`<code>use&lt;&#39;a, T&gt;</code> precise-capturing bound syntaxAmA <code>use</code> statement.DgAn import of 1 or more items into scope, using the <code>use</code> \xe2\x80\xa602ClThis constant cannot go back into the type system, as it \xe2\x80\xa60CmIdentifier WITH a preceding dollar sign, which means that \xe2\x80\xa6AmInfer the value of the const.0EfThis is a binding for a non-<code>self</code> binding, or a <code>self</code> that \xe2\x80\xa6111AfAn array of constants.Aj<code>vec![a, b, c]</code>BgABIs relevant to Windows or x86 targets0AaRetag all fields.0CgOnly in types, since RTN is denied later during HIR \xe2\x80\xa6BkDon\xe2\x80\x99t emit an unstable error for the itemE`Yes, declare <code>let</code> bindings as normal for <code>if</code> conditions.CmYes, the relevant functions should also schedule drops as \xe2\x80\xa6AgWe are capturing tokensAg<code>-C lto=yes</code>Dn<code>-C instrument-coverage</code> or <code>-C instrument-coverage=yes</code>B`Collapse debuginfo for the macroAlAlways <code>RustCall</code>0DgThe <code>abi</code> defines how this data is passed between functions.DfConversion of internal Rust compiler <code>rustc_target</code> and \xe2\x80\xa6ClABI name to distinguish multiple ABIs on the same OS and \xe2\x80\xa6333AmThe ABI used by the function.CgWhen a tag is used, we call this function to add or \xe2\x80\xa6DnIndicate that <code>a &lt; b</code> (where <code>&lt;</code> is this relation)AoCombine two summaries together.BjGet a flags value with all known bits set.0000000000000000000000000000DfCreates a <code>FileLines</code> that contains all lines in all files.EbProduces a <code>Tree</code> where each of the trees in <code>trees</code> are \xe2\x80\xa6ElConvenience method to create the <code>&lt;lhs&gt; &amp;&amp; &lt;rhs&gt;</code> suggestion.ChUse this function to merge the certainty of multiple \xe2\x80\xa6CiCreates a pair of param-env and value for use in queries.EcReturns success if both <code>self</code> and <code>other</code> succeed, while \xe2\x80\xa62222CaCreates a default MacResult that can be anything.FkReturns <code>true</code> if any of <code>Trait</code>, <code>?Trait</code> or <code>!Trait</code> were \xe2\x80\xa60Bb<code>IntoIterator</code> argumentCmHandles the next argument. If the argument is an argfile, \xe2\x80\xa6BnAdd an argument. See <code>Diag::arg()</code>.BhPrepare a suggestion from an expression.BeThe Rust abstract syntax tree module.CaLLVM-frontend specific AVR calling convention \xe2\x80\xa6ClRange of the bad memory that was encountered. (Might not \xe2\x80\xa60BlCharacter repeated to make the lower border.BjRing-buffer of tokens and calculated sizesCkEither a name of the next metavariable, a separator, or \xe2\x80\xa6DfA macro for triggering an ICE. Calling <code>bug</code> instead of \xe2\x80\xa6lRaise a bug.CnThe compiler code necessary to support the cfg! extension, \xe2\x80\xa6CaRoutines for manipulating the control-flow graph.Aocfg and check-cfg configurationD`The representation of a <code>#[doc(cfg(...))]</code> attribute.CmLLVM Control Flow Integrity (CFI) and cross-language LLVM \xe2\x80\xa6CmCompares two given types, eliding parts that are the same \xe2\x80\xa6AlThe (1-based) column number.AlThe (0-based) column offset.DjDefault CPU to pass to LLVM. Corresponds to <code>llc -mcpu=$cpu</code>\xe2\x80\xa6CnCow-Vec-Str: Cow&lt;\xe2\x80\x99static, [Cow&lt;\xe2\x80\x99static, str&gt;]&gt;AeThe field definition.CfAn ID used to get the instance definition from the \xe2\x80\xa6CiA <code>Tree</code> consisting only of a definition node.CmThe number of items that have been drained (removed) thus \xe2\x80\xa6BfReturn dependency information, if any.BaDependency info about this crate.CnThe depth-first number of this node in the search graph \xe2\x80\x93\xe2\x80\xa6Cinext \xe2\x80\x9cdepth first number\xe2\x80\x9d to issue \xe2\x80\x93 just a counterCiThe <code>DefId</code> of the struct, enum or union item.BoThe <code>DefId</code> of the destructor method1AeThe destination type.0BoThe too-large referent of the destination type.CjThe current destination folder of where HTML artifacts \xe2\x80\xa6BnRoot destination to place all HTML output intoClConsumes a token \xe2\x80\x98tok\xe2\x80\x99 if it exists. Returns whether \xe2\x80\xa6CeThe visitor must have an <code>InterpCx</code> in it.0CaElse block for a <code>let...else</code> binding.DiThe upper bound of the range, or <code>None</code> for ranges such as \xe2\x80\xa6CiA pointer to the end of the allocated area. When this \xe2\x80\xa6BcA pointer to the end of free space.BoThe end byte index into <code>init_mask</code>.0CkCreates an empty span pointing to directly after this span.ClOne indexed Line and Column of the last character of the \xe2\x80\xa6CmThe host environment snapshot to use as basis for what is \xe2\x80\xa60ChEnvironment name to use for conditional compilation (\xe2\x80\xa6DeThe <code>extern</code> keyword and corresponding ABI string, if any.AnThe table of file descriptors.0DcBindings to the LLVM-C API (<code>LLVM*</code>), and to our own \xe2\x80\xa6BkDetermines how a pointer should be printed.0CjCustom formatting traits used when outputting Graphviz \xe2\x80\xa60BaDisplay a JSON value as a string.AfWrites serialized JSONAdThe function itself.EgReturns an AST <code>FormatArgs</code> node if a <code>format_args</code> expansion \xe2\x80\xa6DaReturns the list of <code>DefId</code>s that the path resolves toCdRead-only lookup (avoid read-acquiring the RefCell).BiIf it exists, the index this key maps to.BjGet the value at this index, if it exists.DfImplementation detail for <code>InterpCx::get_env_var</code>. This \xe2\x80\xa6CmImplementation detail for <code>InterpCx::get_env_var</code>.AaRead-only lookup.0AnGet the inner value if frozen.CaReturns the item in the map with the given index.CjReturns a reference to the value corresponding to the key.CmReturns a reference to the value in the set, if any, that \xe2\x80\xa6DgGets the <code>FluentValue</code> at the <code>key</code> if it exists.021CmGiven the metadata, extract out the value at a particular \xe2\x80\xa632CeReturns the initialization state at the specified \xe2\x80\xa6BdGet the provenance of a single byte.CcReturns the dataflow state at the current location.CnRetrieve the value stored for a place, or \xe2\x8a\xa4 if it is not \xe2\x80\xa6BhRead a span and record that it was read.CnIndex into a JSON array or map. A string index can be used \xe2\x80\xa6BfReturns the current thread-local value:9:9CnTry to fetch a cached result, checking the recursion limit \xe2\x80\xa6CfMight return parts that are duplicate with ones in \xe2\x80\xa6AgGlobal value numbering.BhParses a desugared <code>for</code> loopCmParses an <code>if</code> expression without <code>let</code>BhParses an <code>if let</code> expressionCkParses an <code>if</code> or <code>if let</code> expressionDkReturns the arguments of the <code>vec!</code> macro if this expression \xe2\x80\xa6BjParses a desugared <code>while</code> loopBnParses a desugared <code>while let</code> loopCkHigher a <code>hir</code> range to something similar to \xe2\x80\xa6DkConvenience function around <code>hir_opt</code> for suggestions with a \xe2\x80\xa6CeHIR datatypes. See the rustc dev guide for more info.BbICH - Incremental Compilation HashBdThe current list of used header IDs.AmId handling for rustdoc-json.ClThe index of the item that will be inspected by the next \xe2\x80\xa6DjThe index into <code>TtParser::locs</code>, which represents the \xe2\x80\x9cdot\xe2\x80\xa6AbThe variant index.CcThe \xe2\x80\x9cuntyped\xe2\x80\x9d variant of <code>ConstInt</code>.0ClThe integer type for an enum descriminant, if explicitly \xe2\x80\xa6A`The opaque type.BjReturns a reference to this entry\xe2\x80\x99s key.BoHow many keys/index pairs are currently active.CjReturns the number of universal regions created in any \xe2\x80\xa6CcGet the length of a slice/string/array stored here.0BjReturns the number of keys created so far.oNumber of SCCs,CmReturns the total number of nodes in the forest that have \xe2\x80\xa6BjReturns the number of elements in the map.BjReturns the number of elements in the set.CkLength of this annotation as displayed in the stderr output21BcHow many elements are in the table.00032CgThe number of targets including <code>otherwise</code>.4343CkThe stringified expression that is the length of the array.AnThe left side of the equation.FeReturns the <code>MetaItemLit</code> if <code>self</code> is a <code>MetaItemInner::Literal</code>\xe2\x80\xa60BmThe absolute value of the resultant constant.00DeIf this is <code>Right</code>, we are not currently executing any \xe2\x80\xa60CiCalculates the flavor of LTO to use for this compilation.CkComputes the least-upper-bound, or mutual supertype, of two0CkComputes the least-upper-bound, or mutual supertype, of \xe2\x80\xa6CgMapping <code>Local -&gt; its possible borrowers</code>0CgStores pointers to the environment variables. These \xe2\x80\xa6BaStores the environment variables.fSafetyCnMap from early/late params of the impl to identity regions \xe2\x80\xa6DiThis module used to contain a type called <code>Map</code>. That type \xe2\x80\xa6CnLocation-indexed (BasicBlock for outer index, index within \xe2\x80\xa6ClThis map only contains values that are not <code>\xe2\x8a\xa5</code>.ClMap from cache key to the provisionally evaluated thing. \xe2\x80\xa6AnA macro to create a FxHashMap.DkThis module implements declarative macros: old <code>macro_rules</code> \xe2\x80\xa6DkUsed when there is no <code>State</code>. Should have the same width as \xe2\x80\xa6CmThis is an incomplete implementation of mmap/munmap which \xe2\x80\xa6CnThis follows the pattern in src/shims/unix/mem.rs: We only \xe2\x80\xa6CnMIR datatypes and passes. See the rustc dev guide for more \xe2\x80\xa6DiConversion of internal Rust compiler <code>mir</code> items to stable \xe2\x80\xa6DhIndex of the \xe2\x80\x9cmove out\xe2\x80\x9d that we found. The <code>MoveData</code> canAlIf the constant is negative.00BdReturns ADT variants ordered by sizeCnCreates the evaluation context from the lint context. This \xe2\x80\xa6CkTakes ownership of the source file handle if the source \xe2\x80\xa6BbBuilds a <code>ParenHelper</code>.AkCreates an empty allocator.CkCreates a new stack with an initial tag. For diagnostic \xe2\x80\xa6EeConstruct a new <code>Stack</code> using the passed <code>Item</code> as the root \xe2\x80\xa6CmInformation for a new node. By default it has no name and \xe2\x80\xa6BlCreate a new tree, with only a root pointer.CcCreate a new clock based on the availability of \xe2\x80\xa6ClCreate a new set of clocks representing memory allocated \xe2\x80\xa6CjCreate a new global state, setup with just thread-id=0 \xe2\x80\xa6DhCreates a new <code>RangeMap</code> for the given size, and with the \xe2\x80\xa6AiCreate a new MiriMachine.CnTraverses the constraints and returns the indexed graph of \xe2\x80\xa6CjCreates a new region inference context with a total of \xe2\x80\xa6ChCreates a new set of \xe2\x80\x9cregion values\xe2\x80\x9d that tracks \xe2\x80\xa6CfCreates a \xe2\x80\x9cdependency graph\xe2\x80\x9d where each region \xe2\x80\xa60DjCreates a new and fully initialized <code>UniversalRegions</code> that \xe2\x80\xa6CkCreates an uninitialized builder for an instance of the \xe2\x80\xa6CaBy default a <code>SpanGuard</code> does nothing.AmCreates a new atomic integer.DeCreates a new worker local where the <code>initial</code> closure \xe2\x80\xa6DeCreates a registry which can hold up to <code>thread_limit</code> \xe2\x80\xa6FaCreates a new <code>SnapshotVec</code>. If <code>L</code> is set to <code>()</code> then most \xe2\x80\xa6BaCompute SCCs without annotations.CfCreates a new jobserver initialized with the given \xe2\x80\xa6BiCreates an empty <code>SsoHashMap</code>.BiCreates an empty <code>SsoHashSet</code>.DjCreates a new <code>Svh</code> given the hash. If you actually want to \xe2\x80\xa6C`Tags <code>pointer</code> with <code>tag</code>.BaCreates a new empty argument map.CjCreate a new color specification that has no colors or \xe2\x80\xa61CkConstructs a syntax extension with the given properties \xe2\x80\xa6CcCreates an <code>Id</code> named <code>name</code>.CnConstruct an empty collection of lang items and no missing \xe2\x80\xa6CmBuilds a new DefPathHash with the given StableCrateId and \xe2\x80\xa6CfAdds a root definition (no parent) and a few other \xe2\x80\xa6CnComputes the stable ID for a crate with the given name and \xe2\x80\xa6CdConverts an identifier to the corresponding segment.AkPanics if n &gt;= u32::MAX.CkThe usual case; collect the set of expressions dynamically.CgCreates the ExprUseVisitor, configuring it with the \xe2\x80\xa6CjConstructs a new, empty <code>IndexVec&lt;I, T&gt;</code>.DhCreates a new bitset with a given <code>domain_size</code> and chunk \xe2\x80\xa6DbCreates a new <code>rows x columns</code> matrix, initially empty.CiCreates a new empty sparse bit matrix with no rows or \xe2\x80\xa6EeConstruct <code>ClosureArgs</code> from <code>ClosureArgsParts</code>, containing \xe2\x80\xa6DnConstruct <code>CoroutineArgs</code> from <code>CoroutineArgsParts</code>, \xe2\x80\xa6BiCreates an empty <code>SsoHashMap</code>.BiCreates an empty <code>SsoHashSet</code>.DaRuns the <code>MemDecoder</code> validation and if it passes, \xe2\x80\xa643DkAvoid using this in favour of more specific <code>new_*</code> methods, \xe2\x80\xa6CgConstruct a trait environment with the given set of \xe2\x80\xa6BfCreates a new <code>VariantDef</code>.BfCreates a new <code>AdtDefData</code>.DfCreates an <code>AutoBorrowMutability</code> from a mutability and \xe2\x80\xa6DcConstructs an <code>AssociatedItems</code> map from a series of \xe2\x80\xa687DnConstruct <code>InlineConstArgs</code> from <code>InlineConstArgsParts</code>.CnCreates a new <code>LocalDecl</code> for a temporary, mutable.DkTry to create an Allocation of <code>size</code> bytes, panics if there \xe2\x80\xa6CiCreates switch targets from an iterator of values and \xe2\x80\xa6DgCreates a new <code>OnDiskCache</code> instance from the serialized \xe2\x80\xa6EeCreates a <code>FlatPat</code> containing a simplified <code>MatchPairTree</code> \xe2\x80\xa6DgThe <code>always_alive</code> set is the set of locals to which all \xe2\x80\xa6ChReturns a map that only tracks places whose type has \xe2\x80\xa6CiCreates a new disjoint-set forest containing the keys \xe2\x80\xa6BfReturns a new DeduceReadOnly instance.AkCreates a new, empty patch.CnDetermines which locals are used &amp; unused in the given \xe2\x80\xa6CmCreates a new parser for the given unescaped input string \xe2\x80\xa6CjConstructs a new, empty <code>IndexVec&lt;I, T&gt;</code>.CnBuild a new matrix from an iterator of <code>MatchArm</code>s.DdReturns an empty <code>TokenStream</code> containing no token trees.DgCreates a new <code>Group</code> with the given delimiter and token \xe2\x80\xa6DjCreates a new <code>Punct</code> from the given character and spacing. \xe2\x80\xa6EfCreates a new <code>Ident</code> with the given <code>string</code> as well as the \xe2\x80\xa6EdCreates a new diagnostic with the given <code>level</code> and <code>message</code>.CkBuild a constant. Note that this should only be used by \xe2\x80\xa6AoConstructs a <code>Body</code>.CjCreate a new SwitchTargets from the given branches and \xe2\x80\xa6AhCreates a new query job.CnComputes the stable ID for a crate with the given name and \xe2\x80\xa6AaUsed for testing.0BmCreate a new limit from a <code>usize</code>.CjBuilds a new ExpnHash with the given StableCrateId and \xe2\x80\xa6CmBuilds a new DefPathHash with the given StableCrateId and \xe2\x80\xa64DhThe most general <code>IdentPrinter</code> constructor. Do not use this.CeConstructs a new identifier from a symbol and a span.ChAvoid this except for things like deserialization of \xe2\x80\xa60ClPass using one or more values of the given type, without \xe2\x80\xa6CmThis defines the \xe2\x80\x9cdefault ABI\xe2\x80\x9d for that type, that is \xe2\x80\xa6CnCreates and returns a valid rayon thread pool builder, but \xe2\x80\xa6C`Creates and return a valid rayon thread pool \xe2\x80\xa6DiUnsafe: caller asserts that <code>data</code> will remain valid until \xe2\x80\xa6DgCreates a new spin latch that is owned by <code>thread</code>. This \xe2\x80\xa6CfCreates the base of a new scope for the given registryCmDeprecated in favor of <code>ThreadPoolBuilder::build</code>.DeCreates a new worker local where the <code>initial</code> closure \xe2\x80\xa6EeConstruct <code>ClosureArgs</code> from <code>ClosureArgsParts</code>, containing \xe2\x80\xa6DnConstruct <code>CoroutineArgs</code> from <code>CoroutineArgsParts</code>, \xe2\x80\xa6BiCreates an empty <code>SsoHashMap</code>.BiCreates an empty <code>SsoHashSet</code>.BbCreates a new fulfillment context.2143DjWraps a <code>rustc_span::Span</code>. In case this span is the result \xe2\x80\xa6A`See struct docs.CkTakes as argument the source code to HTML-ify, the rust \xe2\x80\xa6CoCreate a new buffer, with a limit of <code>length_limit</code>.AgCreate an empty buffer.CnParse comma separated attributes list. Return rust only if \xe2\x80\xa6EhCreates a new <code>ItemizedBlock</code> described with the given <code>line</code>. \xe2\x80\xa6BgCreates a new <code>ModResolver</code>.ChCreates a new <code>FormatReportFormatterBuilder</code>.BjThe entry point of the NLL borrow checker.DgThe bitwise negation (<code>!</code>) of the bits in a flags value, \xe2\x80\xa60000000000000000000000000000AmThe minimum representable tagChConcrete error types for all operations which may be \xe2\x80\xa6C`The stack of Kleene operators (outermost first).ClThe stack of Kleene operators (outermost first) where we \xe2\x80\xa6AaOption enum value0Aj<code>for</code> loop itemBiThe pattern the field is destructured to.BnMatch arm pattern, e.g. <code>10</code> in \xe2\x80\xa61DjIf this pattern and the optional guard matches, then <code>body</code> \xe2\x80\xa6CkThe pattern that appears in the parameter list, or None \xe2\x80\xa6DkAs explained in <code>crate::usefulness</code>, values and patterns are \xe2\x80\xa6BnAttempt to pop an element from the work queue.DhCalled after <code>push</code> when the scope of a set of attributes \xe2\x80\xa6BkRe-insertion position for inert attributes.ClThe absolute offset within the source_map of the current \xe2\x80\xa6DdThe relative offset of the character in the <code>SourceFile</code>.0BnPointer to the allocation contents. Invariant:0BmA pointer to the next object to be allocated.DaThe pointer can be a pure integer, with the <code>None</code> \xe2\x80\xa6CcReturns true if this successfully put into the map.CdReturns inner <code>llvm::TargetMachine</code> type.BkThe unnormalized type provided by the user.AlThe resolution for the path.0CfResolution result corresponding to the item. Local \xe2\x80\xa6AjWhat the link resolved to.ClThe return block from the original call to <code>try</code>.0AiThe expected return type.CjThe layout, type, and the way a value is returned from \xe2\x80\xa6AoThe right side of the equation.CbThe random number generator used for resolving \xe2\x80\xa60AoA weak random number generator.CfInstantiate and run the compiler with the provided \xe2\x80\xa6CiExecutes the main loop for this thread. This will not \xe2\x80\xa6ChRoutine to compute the strongly connected components \xe2\x80\xa6CgReturns the SCC to which a node <code>r</code> belongs.CcThe method name and its generic arguments, e.g. \xe2\x80\xa6CdText that separates permissions on different ranges.AdThe separator token.EbProduces a <code>Tree</code> where each of the trees in <code>trees</code> are \xe2\x80\xa6CiShould only be called by <code>FormatArgsCollector</code>GkCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is \xe2\x80\xa60000000CnUpdates the element at the given index. The old value will \xe2\x80\xa61AhSets the key value pair.02BbSets the <code>index</code>th bit.333CmSets the table value if it is not default. ATTENTION: For \xe2\x80\xa6444444BlSets the latch and resumes all waiters on it555555BaSet the latch, signalling others.CnSet the latch. If this returns true, the owning thread was \xe2\x80\xa6BcSets the current thread-local value8888CbImplements sha256 SIMD instructions of x86 targetsCkGenerate a left-shift. Both operands must have the same \xe2\x80\xa60ChEverything related to checking the signature of shim \xe2\x80\xa6CdInstantiated method signature, i.e., it has been \xe2\x80\xa6BhExtracts the signature from the closure.ClReturns the \xe2\x80\x9ccoroutine signature\xe2\x80\x9d, which consists of \xe2\x80\xa6101010CiInformation about the function signature, or declaration.AnThe signature of the function.BhThe complete debugger visualizer source.AhSource text to tokenize.AiThe complete source code.A`The source type.0B`The referent of the source type.CmThe crate\xe2\x80\x99s name, <em>not</em> the name it\xe2\x80\x99s imported as.ClWe denote as \xe2\x80\x9cSSA\xe2\x80\x9d the set of locals that verify the \xe2\x80\xa6DkWhether a target has the <code>std</code> library. This is usually true \xe2\x80\xa6DbThis module contains <code>TyKind</code> and its major components.CeThe intersection of a source flags value with the \xe2\x80\xa600AmRegion that must be outlived.0111111CmConvenience function for internal use, clients should use \xe2\x80\xa62BiMakes <code>expected &lt;: actual</code>.333333333333333033DmChecks whether <code>expected</code> is a subtype of <code>actual</code>: \xe2\x80\xa644BbThe region SUP must outlive SUB\xe2\x80\xa60DmMakes <code>actual &lt;: expected</code>. For example, if type-checking a \xe2\x80\xa60DoChecks whether <code>expected</code> is a supertype of <code>actual</code>: \xe2\x80\xa6CkCalculation and management of a Strict Version Hash for \xe2\x80\xa6DfThis module contains all the defined non-keyword <code>Symbol</code>s.BjThe pointers the permission is granted to.AdThe tag in question.AeThe tag of this node.AcBorrow Tracker tag.0AbRetrieves the tag.ClThe results of the type checker, from rustc. The span in \xe2\x80\xa600000BaType context we\xe2\x80\x99re checking in.0B`The current <code>TyCtxt</code>.0jTLS state.0AoImplement thread-local storage.CnAllows access to the Rayon\xe2\x80\x99s thread local value which is \xe2\x80\xa6CnThe TLV at the scope\xe2\x80\x99s creation. Used to set the TLV for \xe2\x80\xa6AkTable-of-contents creation.BlCharacter repeated to make the upper border.A`The top element.ChFIXME: #67062 has details about why this is sub-optimal.AkThe sequence of token treesBhRelates two types using a given lattice.ClGlobally-unique id used to track usefulness at the level \xe2\x80\xa60CoThe value of this store. <code>None</code> means uninitialized.jThe value.CgThe location and extra runtime properties of the place.DfBit representation of the discriminant (e.g., <code>-1i8</code> is \xe2\x80\xa6ChRetrieve an environment variable and add it to build \xe2\x80\xa6CmA list of candidates that definitely apply to the current \xe2\x80\xa6CmThe visibility of the variant. Syntactically accepted but \xe2\x80\xa6AgVisibility of the item.C`Used when <code>State.initialized = true</code>.ChReturns the zero-sized valtree: <code>Branch([])</code>.CeAn anonymous region parameter for a given fn (&amp;T)000mCommand line.CnWhat the user typed, if it doesn\xe2\x80\x99t match anything we can \xe2\x80\xa6BlAn attr rule, for use with <code>#[m]</code>AnA token-based attribute macro.BgAn attribute macro <code>#[foo]</code>.0BhIdentifier that is used for auto traits.BjAuto-detect based on the raw source input.CaAutomatically use color, if supported by terminal10CkNumber of least-significant bits in the return value of \xe2\x80\xa6n<code>!</code>BbA token-based function-like macro.1BaA bang macro <code>foo!()</code>.0Aa<code>..x</code>.CkA struct expression with a \xe2\x80\x9cbase\xe2\x80\x9d, an expression of \xe2\x80\xa6CiBase of numeric literal encoding according to its prefix.1CiThe right-hand side body, with metavar references and \xe2\x80\xa6CnThe body of a function, closure, or constant value. In the \xe2\x80\xa6ClLifetimes introduced by a fn are scoped to the call-site \xe2\x80\xa6C`The lowered representation of a single function.CfThe rustc_public\xe2\x80\x99s IR representation of a single \xe2\x80\xa60Bh<code>true</code> or <code>false</code>.CjA boolean literal (<code>true</code>, <code>false</code>).CcIn the LLVM-C API, boolean values are passed as \xe2\x80\xa6CiThe primitive boolean type. Written as <code>bool</code>.00hBooleansiBooleans.10AjRepresents a JSON boolean.333BmThe operator is both left-associative and \xe2\x80\xa6BdBoth case and digit-letter confusionBhA byte char (<code>b&#39;f&#39;</code>).Fj<code>b&#39;a&#39;</code>, <code>b&#39;\\\\&#39;</code>, <code>b&#39;&#39;&#39;</code>, <code>b&#39;;</code>ChA range of byte values (including an uninit byte value).lA byte node.CdEnum of supported arguments to external C functions.Di<code>#[cold]</code>: a hint to LLVM that this function, when called, \xe2\x80\xa6EnA C String (<code>c&quot;foo&quot;</code>). Guaranteed to only have <code>\\0</code> at the \xe2\x80\xa6B`The <code>CStr</code> lang item.Cf<code>c&quot;abc&quot;</code>, <code>c&quot;abc</code>A`A function call.0DeRoughly speaking, evaluates the <code>func</code> operand and the \xe2\x80\xa6AfDestination of a call.1CnA function call. Method calls and overloaded operators are \xe2\x80\xa6DfCall <code>__rust_probestack</code> whenever stack needs to be probed.FdWhatever to ignore case (<code>fn</code> vs <code>Fn</code> vs <code>FN</code>) or not. Used for \xe2\x80\xa6ChOnly case differences (e.g., \xe2\x80\x9chello\xe2\x80\x9d vs \xe2\x80\x9cHello\xe2\x80\x9d)o<code>as</code>BgA cast (e.g., <code>foo as f64</code>).0CePerforms essentially all of the casts that can be \xe2\x80\xa60EcA cast: <code>&lt;source&gt; as &lt;type&gt;</code>. The type we cast to is the \xe2\x80\xa6AmEnum variant comparison type.BcPass the argument after casting it.33DgPass the argument after casting it. See the <code>CastTarget</code> \xe2\x80\xa6Clrepresents: a shared reference to interior mutable data. \xe2\x80\xa6ClA single <code>char</code> (e.g., <code>&#39;a&#39;</code>).BoA character literal (<code>&#39;a&#39;</code>).CnThe primitive character type; holds a Unicode scalar value \xe2\x80\xa6Ff<code>&#39;a&#39;</code>, <code>&#39;\\\\&#39;</code>, <code>&#39;&#39;&#39;</code>, <code>&#39;;</code>11111BmAssociates a normal region of code with a \xe2\x80\xa6B`Represents <code>#[cold]</code>.0AiClippy lint configuration0BaPass a copy of the given operand.0B`The <code>copy</code> lang item.BkCreates a value by loading the given place.AoConsumed as part of an operand.1CeRefers to the struct or enum variant\xe2\x80\x99s constructor.CkImplicit constructor for a unit or tuple-like struct or \xe2\x80\xa6De<code>Ctor</code> refers to the constructor of an enum variant or \xe2\x80\xa6AcUse of a const ctor0330CgThe default address space, corresponding to data space.AbA dead allocation.0ClThis local is not currently alive, and cannot be used at \xe2\x80\xa6CkThe value is already dead at the drop location, no drop \xe2\x80\xa6BoLocal declaration. Example: <code>let x;</code>BfFully recursively validate references.0CoFrom the RFC: \xe2\x80\x9cA <em>deep</em> access means that all data \xe2\x80\xa6CiA shared (deep) borrow. Data must be immutable and is \xe2\x80\xa60AhDeep init, even on panicCmAffect all nested drop flags in addition to the top-level \xe2\x80\xa622DfThe <code>deny</code> level will produce an error and stop further \xe2\x80\xa60ClWe cannot use the item because it is unstable and we did \xe2\x80\xa6CiUsed for emitting structured error messages and other \xe2\x80\xa60CmA child process exited or was killed; if we have a return \xe2\x80\xa6CmChecks if a diff can be generated. If so, rustfmt outputs \xe2\x80\xa60CgThis obligation, along with its subobligations, are \xe2\x80\xa6CkAccess is Deep only when there is a Drop implementation \xe2\x80\xa6B`The <code>drop</code> lang item.ChThe behavior of this statement differs significantly \xe2\x80\xa6BeA type that has its drop shim called.nBeing dropped.2CkForward Mode, Compute derivatives for this input/output \xe2\x80\xa6CbEmscripten Compiler Frontend, a wrapper around \xe2\x80\xa6BgAn enum definition (<code>enum</code>).EgAn enum definition, e.g., <code>enum Foo&lt;A, B&gt; { C&lt;A&gt;, D&lt;B&gt; }</code>.AeAn <code>enum</code>.BaAn <code>enum</code> declaration.0o<code>==</code>DjTrailing brace in any other expression, such as <code>a + B {}</code>. \xe2\x80\xa6nAn expression.AoA literal, const block or path.BaExpr without trailing semi-colon.21CjAn expression without a trailing semi-colon (must have \xe2\x80\xa6BgUnevaluated non-const-item, used by \xe2\x80\xa600AbA THIR expression.BhAn expression with a trailing semicolon.ChIn some contexts, notably in expressions, paths with \xe2\x80\xa6DaExpression paths <code>path</code>, with optional parent context.444CdAn <code>f128</code> bitcast to a <code>u128</code>.CjAn immutable, aliasable borrow that is discarded after \xe2\x80\xa6000CmA unique id for file descriptions. While we could use the \xe2\x80\xa6EhThe same as <code>TyCtxtFeed</code>, but does not contain a <code>TyCtxt</code>. Use \xe2\x80\xa60AmLoad source code from a file.CkAn option that does not take a value, and cannot appear \xe2\x80\xa6D`Represents a <code>MetaWord</code> in an <code>on</code>-filter.BnA condition like <code>on(crate_local)</code>.CgA type alias that actually checks its trait bounds. \xe2\x80\xa60000CaPrints a backtrace with all possible information.0B`E.g. <code>Path&lt;T&gt;</code>.CkEmit control-flow protection for both branches and returns.BdDerive fully-featured implementationCeA function-style rule, for use with <code>m!()</code>Aj<code>use prefix::*</code>BkGlob import, e.g., <code>use foo::*</code>.DhA goal is a statement, i.e. <code>predicate</code>, we want to prove \xe2\x80\xa600000CmJump to the next block in the caller, or cause UB if None \xe2\x80\xa60CeBlock has one successor; we continue execution there.0BjA message suggesting how to fix something.oA help message.0AgPrint the help message.nDoing nothing.AlNo available work was found.0B`See <code>VerifyIfEq</code> docs0AbAn implementation.CaTrait bounds in <code>impl</code> type. E.g., \xe2\x80\xa6hAn impl.BeRepresents an impl block declaration.DiAn implementation, e.g., <code>impl&lt;A&gt; Trait for Foo { .. }</code>.AdA user written impl.00000000CcMetadata about implementations for a type or trait.AkAn <code>impl</code> block.00DgLocal declaration with an initializer. Example: <code>let x = y;</code>Dk<code>Init</code> represents a point in a program that initializes some \xe2\x80\xa6Ae8-bit signed integer.DkBest generated by <code>into</code>. This is generally exprs that cause \xe2\x80\xa6BiAn item in the per-location borrow stack.0AcAn item definition.0gAn itemA`An item binding.AmA user-defined callable item.0000000AdA user defined item.CaWe passed through an item scope. Disallow upvars.CeThis rib acts as a barrier to forbid reference to \xe2\x80\xa6CnAnything with a source location and set of attributes and, \xe2\x80\xa6ClAnything that can hold documentation - modules, structs, \xe2\x80\xa6CeUse one <code>use</code> statement per imported item.ChThe thread tried to join the specified thread and is \xe2\x80\xa60AdEmit structured JSONDkOutput that\xe2\x80\x99s consumed by other tools such as <code>rustfix</code> or \xe2\x80\xa61B`Represents any valid JSON value.CkWrites the resulting diffs in a JSON format. Returns an \xe2\x80\xa60BdKeep the function return unmodified.Bh<code>struct@</code> or <code>f()</code>Djlibc static library (e.g. on <code>musl</code>, <code>wasi</code> targets)C`used when parsing attributes during ast lowering0CkAll scopes with the given namespace, used for partially \xe2\x80\xa6Efintegers, <code>bool</code>, <code>char</code> are represented as scalars. See the \xe2\x80\xa60Gn<code>(...)</code>, <code>Foo(...)</code>, <code>Foo{...}</code>, or <code>Foo</code>, where <code>Foo</code> is a variant \xe2\x80\xa6ClSkip deallocating backing memory of thread-local statics \xe2\x80\xa6BaThe operator is left-associative.ClShift left, logically (shift in zeros) \xe2\x80\x93 same as shift \xe2\x80\xa6Ad<code>{:&lt;}</code>B`The operator is left-associativeAj<code>-Copt-level=1</code>00EeA trait implemented for all <code>X&lt;&#39;a&gt;</code> types that can be safely \xe2\x80\xa600000CkControls whether a line will be hidden or shown in HTML \xe2\x80\xa6BhFoo or simple anchor &lt;www.foo.com&gt;CmThe name of the symbol + the span of the annotation which \xe2\x80\xa6CaA link to an item. Content should not be escaped.AoSpecification of a single lint.0DjAn adapter for <code>MirLint</code>s that implements <code>MirPass</code>.oList meta item.Ej<code>List&lt;T&gt;</code> is a bit like <code>&amp;[T]</code>, but with some critical \xe2\x80\xa60CkA normal, live local. Mostly for convenience, we re-use \xe2\x80\xa6DiLLVM bitcode linker that can be used as a <code>self-contained</code> \xe2\x80\xa6BmA lock which only uses synchronization if \xe2\x80\xa6EhConditionless loop (can be exited with <code>break</code>, <code>continue</code>, or \xe2\x80\xa6EgA conditionless loop (can be exited with <code>break</code>, <code>continue</code>, \xe2\x80\xa6B`A <code>loop { .. }</code> loop.AoA <code>loop</code> expression.CiReport, and also exit with failure status for deny/forbidCj+, -, etc \xe2\x80\x93 takes equal types, produces same type as \xe2\x80\xa6CiThe unsized payload (e.g. length for slices or vtable \xe2\x80\xa60Ao<code>miri_alloc</code> memory.0CeRegion variables created for ill-categorized reasons.CmSome built-in impl we don\xe2\x80\x99t need to differentiate. This \xe2\x80\xa60CgNot well classified or should be obvious from the span.11CmOther types of desugaring that did not come from the HIR, \xe2\x80\xa602122CnWe\xe2\x80\x99ve proven the trait goal by something which is is not \xe2\x80\xa64333233BeMemory mapped directly by the program0EiA trivial wrapper for <code>memmap2::Mmap</code> (or <code>Vec&lt;u8&gt;</code> on WASM).Aj<code>-Copt-level=2</code>00CnCreates a value by performing loading the place, just like \xe2\x80\xa6AoConsumed as part of an operand.1EeTracks the current MSRV from <code>clippy.toml</code>, <code>Cargo.toml</code> or \xe2\x80\xa6ChMSVC-style linker for Windows and UEFI, LLD supports it.CgA descriptive name for this analysis. Used only for \xe2\x80\xa60BnThe valid names of the <code>on</code> filter.ChThe value is derived from the \xe2\x80\x9cnext\xe2\x80\x9d unconverted \xe2\x80\xa6CdIn-tree prototype, extending the NLL infrastructure.CdA node in the borrow tree. Each node is uniquely \xe2\x80\xa6CmA node in the specialization graph is either an impl or a \xe2\x80\xa6BcLint level was set by an attribute.111CfNone of the groupings should have their order checked.B`The operator is not associative.AgDo not check alignment.BdNo data race detection will be done.1AoThe operator is not associativeBi<code>module::StructName { field }</code>BjNo trailing <code>..</code> or expression.BdNo explicit extern keyword was used.BcThis function is not an entrypoint.CmImplicit or Explicit () return type, so a special case of \xe2\x80\xa6AdNothing created yet.Cl<code>Sized</code> types or unsized <code>extern type</code>0AeNo confusion detectediNo value.0AnNo restriction on the genericsCkA struct expression where all the fields are explicitly \xe2\x80\xa6CkRepresents when a function does not have a self argument orCiDo not visit any nested things. When you add a new \xe2\x80\x9c\xe2\x80\xa6ClNo additional information - this is the default. We will \xe2\x80\xa6000AoThe type must be parenthesized.111CgThe default. Specializing on this trait is not allowed.DaFor terminators that have no successor, like <code>return</code>.0868888888888888888888888888888888888888888888888888888888888888888888888888CeWe know that the <code>drop</code> here has no effectDiWe did not eat anything (i.e. the current token is not <code>|</code> \xe2\x80\xa6Dk<code>\xe2\x88\x85 ... \xe2\x88\x85</code> An invisible delimiter, that may, for example, \xe2\x80\xa6;;AdDo not strip at all.BeDo not enable control-flow protectionCn<code>#[derive(Debug)]</code> and <code>{:?}</code> are no-opsAiDo not resolve doc links.AnDon\xe2\x80\x99t emit any stack probes.B`Disable stack canary generation.<<<<B`Marks the absence of a modifier.hNothing.BdA message giving additional context.gA note.0CkWe use this for most things when incr. comp. is turned off.AmRepresents a JSON null value.CkA chunk that is all ones; we don\xe2\x80\x99t represent the ones \xe2\x80\xa6CnAn \xe2\x80\x9copen\xe2\x80\x9d drop is one where only the fields of a value \xe2\x80\xa6o<code>||</code>CeThe single path of the attribute this parser accepts.CkA pair of immediate LLVM values. Used by wide pointers too.CcPass a pair\xe2\x80\x99s elements directly in two arguments.0ClA piece of one of the shared artifacts for documentation \xe2\x80\xa6CaPass on the input binding mode and expected type.BmA single pass over the cleaned documentation.CfA \xe2\x80\x9cPath\xe2\x80\x9d is essentially Rust\xe2\x80\x99s notion of a name.CgA possibly qualified path pattern. Unqualified path \xe2\x80\xa6DgVariable reference, possibly containing <code>::</code> and/or type \xe2\x80\xa6DkA path (<code>module::module::...::Type</code>), optionally \xe2\x80\x9cqualified\xe2\x80\xa6DoA path, e.g., <code>::std::option::Option::&lt;i32&gt;</code> (global). Has \xe2\x80\xa6Ea<code>mod::mod::Type&lt;[lifetime], [Params...]&gt;</code>, including a plain \xe2\x80\xa6CcA representation optimized for a small path graphs.AoRepresents <code>#[path]</code>0DeA <code>Path</code> is essentially Rust\xe2\x80\x99s notion of a name; for \xe2\x80\xa6DnE.g. <code>ContainsLifetime</code>, <code>ContainsLifetime&lt;&gt;</code>, \xe2\x80\xa6El<strong>Note:</strong> Currently this is only used for bare const params (<code>N</code> \xe2\x80\xa6CaA path pattern for a unit struct/variant or a \xe2\x80\xa6CnPath to a definition, possibly containing lifetime or type \xe2\x80\xa6DiA path to a type definition (<code>module::module::...::Type</code>), \xe2\x80\xa6CeThe type representing paths that can be moved out of.B`Any token that can start a path.CjCrate is implicitly loaded by a path resolving through \xe2\x80\xa6BeA named type, which could be a trait.CnA constant that is just a path (i.e., referring to a const \xe2\x80\xa6ClA type that has a simple path to it. This is the kind of \xe2\x80\xa6CbPeel off all immediate reference types. If the \xe2\x80\xa6AhThe <code>+</code> flag.n<code>+</code>1B`The <code>Poll</code> lang item.BbCharacter class preceding this oneAbA non-empty stack.CnThe ID of the theoretical expansion that generates freshly \xe2\x80\xa6AnStandard unsynchronized write.BeA read occurred on this memory range.DdFrom the RFC: \xe2\x80\x9cA <em>read</em> means that the existing data may beB`Represents <code>#[repr]</code>.0Ad<code>#[repr]</code>AoA rest pattern <code>..</code>.Bl<code>module::StructName { field, ..}</code>A`<code>..</code>.AnFormat the root packages only.C`The root inference context while proving a goal.0000DjNo expansion, aka root expansion. Only <code>ExpnId::root()</code> has \xe2\x80\xa61111Ba<code>__rust_alloc</code> memory.0lthat\xe2\x80\x99s us!0Aj<code>#[repr(Rust)]</code>ClThe default ABI, but that can also be written explicitly \xe2\x80\xa6Dd<code>safe</code> an item is explicitly marked as <code>safe</code>.AeIdentical statements.DkStrongly connected components (SCC) of a graph. The type <code>N</code> \xe2\x80\xa6B`Expr with a trailing semi-colon.n<code>;</code>CjAn expression with a trailing semi-colon (may have any \xe2\x80\xa61ChA set containing, at most, one known element. If two \xe2\x80\xa6AjA compiler generated shim.AhEnum for the sign flags.Aj<code>#[repr(simd)]</code>AhSize of a type in bytes.An<code>#[optimize(size)]</code>0Aj<code>-Copt-level=s</code>0nSize in bytes.1BkNothing created yet, and nothing should be.CjFormat packages that are specified by the command line \xe2\x80\xa6AaHas been created.BbSome value of type <code>T</code>.000000000000000000000000000000000000000000000000000000000000000000000000000D`We know that the <code>drop</code> here will invoke a destructor11CgA region of source code, along with macro expansion \xe2\x80\xa6AbA compressed span.0DgSmall wrapper around <code>rustc_span::Span</code> that adds helper \xe2\x80\xa6AgA range of source code.n<code>*</code>EaA statement. No <code>attrs</code> or <code>tokens</code> fields because each \xe2\x80\xa6lA statement.ClThe root frame of the stack: nowhere else to jump to, so \xe2\x80\xa60ChA helper type to build suggestion correctly handling \xe2\x80\xa6AoTwo arguments should be swapped0B`The <code>sync</code> lang item.CfItems are placed horizontally if sufficient space, \xe2\x80\xa6CiUser-declared variable binding or compiler-introduced \xe2\x80\xa6CfEither a type or a constant, usually stored as the \xe2\x80\xa6DiA test to perform to determine which <code>Candidate</code> matches a \xe2\x80\xa6AhEmit human readable textCmNo metadata attached, ie pointer to sized type or foreign \xe2\x80\xa6CeDo a full-crate-graph (inter-crate) LTO with ThinLTO.Ah<code>-C lto=thin</code>AlA container for a THIR body.BgThe accessed pointer is the current oneBo<code>{This}</code> or <code>{TraitName}</code>CkDescribes the number of vertices discovered at the time \xe2\x80\xa6ClMulti-segment custom attribute living in a \xe2\x80\x9ctool module\xe2\x80\xa6DkThe lint is from a tool. The <code>LintId</code> will be returned as if \xe2\x80\xa60CjTree structure with both parents and children since we \xe2\x80\xa60BmA tree-based representation of a type layout.iInhabited0000CjThe target spec explicitly enables self-contained linking.AkAccepts all configurations.C`<code>Bar</code> in <code>Foo&lt;Bar&gt;</code>.DjA type ascription (e.g., <code>builtin # type_ascribe(42, usize)</code>\xe2\x80\xa6AcAn associated type.ClA type ascription (e.g., <code>x: Foo</code>). See RFC 3307.CgAn associated type with (possibly empty) bounds and \xe2\x80\xa62oA foreign type.ClIn other contexts, notably in types, no ambiguity exists \xe2\x80\xa6B`Any token that can start a type.AmType paths <code>Path</code>.ClRustdoc\xe2\x80\x99s representation of types, mostly based on the \xe2\x80\xa6gA type.A`A type argument.AiDenotes a type parameter.2DaA primitive unsigned integer type. For example, <code>u32</code>.00000CjA unary operator expression. This is used to sometimes \xe2\x80\xa6oUnary operator.0mUnit variant.AdFor () return types.oA unit variant.AeAlternative behavior:DgQuery key was <code>()</code> or equivalent, so fingerprint is just \xe2\x80\xa6BkA struct with no fields and no parentheses.CkBasic Unix-like linker for \xe2\x80\x9cany other Unix\xe2\x80\x9d targets \xe2\x80\xa6AkForce CR (<code>\\n</code>).0AoRepresents <code>#[used]</code>0CmUsed for tracking import use types which will be used for \xe2\x80\xa6CcA user-defined local variable or function parameterCmSpecified by the user. In this case we try fairly hard to \xe2\x80\xa60AfGive a default warningDfThe <code>warn</code> level will produce a warning if the lint was \xe2\x80\xa60BeSpaces around \xe2\x80\x9c = \xe2\x80\x9c and \xe2\x80\x9c + \xe2\x80\x9cBoRepresents a wildcard pattern (<code>_</code>).CeRepresents a wildcard pattern (i.e., <code>_</code>).BcA wildcard pattern: <code>_</code>.C`A non-user-provided wildcard, created during \xe2\x80\xa6oWord meta item.GlA <code>do yeet</code> (aka <code>throw</code>/<code>fail</code>/<code>bail</code>/<code>raise</code>/whatever), with an \xe2\x80\xa6CaLiteral constant <code>0</code>, for convenience.BfLLVM\xe2\x80\x99s <code>0</code> address space.AhZero value of the index.00000000000FcA <code>Counter</code> of kind <code>Zero</code>. For this counter kind, the <code>id</code> is \xe2\x80\xa6111111111111BdValue for zero as the integral type.222222222222222222222222222222222222222222222222222222222222222222222222222CnMarker indicating that dropping the arena causes its owned \xe2\x80\xa6DkConvenience method to create the <code>&amp;&lt;expr&gt;</code> suggestion.CdThe base address in memory where an access occurred.ClReturns the absolute address the pointer points to. Only \xe2\x80\xa6CmArchitecture to use for ABI considerations. Valid options \xe2\x80\xa6DiProgram arguments (<code>Option</code> because we can only initialize \xe2\x80\xa6BfArguments passed to <code>main</code>.1CiCommand-line arguments passed to the interpreted program.0CmType/lifetime parameters attached to this path. They come \xe2\x80\xa6CjThe comma separated parts in the <code>&lt;...&gt;</code>.BiThe arguments, e.g. <code>a, b, c</code>.CiGets just the args parser, without caring about the path.DiReturns the args of the <code>DefiningTy</code>. These are equivalent \xe2\x80\xa6CnThe interned event arguments to be recorded in the generic \xe2\x80\xa65BlThe generic arguments for this path segment.C`The parameters of the associated or opaque item.CmLifetime and type parameters from the enclosing function, \xe2\x80\xa6C`The parameters of the associated or opaque type.120BkThe args for the item as given by the user.ClGeneric parameters from the enclosing item, concatenated \xe2\x80\xa64120CmArguments the function is called with. These are owned by \xe2\x80\xa6000BeThe arguments passed to the function.AkThe types of each argument.ChThe generic arguments for this definition. The first \xe2\x80\xa6CfGet the arguments this instance was instantiated with.CmThe type, layout, and information about how each argument \xe2\x80\xa6:98:98:89CmThe current set of parameter instantiations for expanding \xe2\x80\xa6DfThe arguments <em>have</em> to contain an arg for the self type if \xe2\x80\xa6CcArguments provided to the associated type/constant.AnGeneric arguments to the type.BgThe list of each argument on this type.CfThe generic arguments provided to the associated type.CjGenerate an arithmetic right-shift. Both operands must \xe2\x80\xa60CaFunctions dealing with attributes and meta items.CiThe metadata of the attribute associated with this entry.BaFormat attributes and meta items.AoCodegen the MIR to the LLVM IR.C`The \xe2\x80\x9coutermost\xe2\x80\x9d place that holds this value.0BoThe base, e.g. <code>Foo {x: 1, ..base}</code>.ClGet the base target options, unversioned LLVM target and \xe2\x80\xa6EhAll regions of <code>ty</code> must be of kind <code>ReVar</code> and must represent \xe2\x80\xa6DeThe path at <code>binding_place</code> is a binding that is being \xe2\x80\xa6FdBinds the pattern variable <code>br</code> to <code>value</code>; returns an <code>Err</code> if \xe2\x80\xa6AnGet the underlying bits value.0000000000000000000000000000BnThe primary crate data - binary metadata blob.Aj<code>for</code> loop bodyAl<code>while</code> loop bodyCjMatch arm body. Omitted if the pattern is a never pattern.BnAttributes that can be found in function body.BlA mir body that contains region identifiers.BnThe MIR for the function called on this frame.0ChThe expression the arm evaluates to if this arm matches.BjReturns the body this analysis was run on.BhReturn the body of an item if available.CnRetrieves the body of the closure definition. Returns None \xe2\x80\xa6CkRetrieves the body of the coroutine definition. Returns \xe2\x80\xa6AlGet the body of an Instance.B`Get whether this is bold or not.DaA <code>Tree</code> representing the layout of <code>bool</code>.EcChecks if the two <code>Option</code>s are both <code>None</code> or some equal \xe2\x80\xa60AlMoves to the next character.B`Advance the parser by one token.CfThe function to be invoked when the callback is fired.0An\xe2\x80\x9cFinally codegen the call\xe2\x80\x9d0CmManages calling a concrete function (with known MIR body) \xe2\x80\xa6BhCode for type-checking cast expressions.AgConsistent breaking boxDkList of <code>cfg</code> flags to hand to the compiler. Always includes \xe2\x80\xa6DeA <code>Tree</code> whose layout matches that of a <code>char</code>.Aaclip unused bytesCnID of this crate, from the current compilation session\xe2\x80\x99s \xe2\x80\xa6DeIndicates which crate this <code>SourceFile</code> was imported from.CaAdd an error code. See <code>Diag::code()</code>.ClThe error code (e.g. \xe2\x80\x9cE1234\xe2\x80\x9d), if the diagnostic has \xe2\x80\xa6Eh<code>None</code> for <code>ObligationCauseCode::Misc</code> (a common case, occurs ~\xe2\x80\xa6ClContains the doctest processed code without the wrappers \xe2\x80\xa6CkThe range in the markdown that the code within the code \xe2\x80\xa6Ai<code>if</code> conditionDe<code>if</code> condition that is maybe a <code>let</code> expressionAcThe ABI convention.BhThe calling convention of this function.EgThe value found at <code>place</code> is being copied. <code>diag_expr_id</code> is \xe2\x80\xa6CmIf this is unit or tuple-variant/struct, then this is the \xe2\x80\xa6Dk<code>DefId</code> that identifies the variant\xe2\x80\x99s constructor. If this \xe2\x80\xa6CnInformation about where the macro came from, if this piece \xe2\x80\xa6CjThis function is used as a fast path when decoding the \xe2\x80\xa6CaThe <code>data</code> argument for that callback.CnThe mapping data. Thanks to Vec we get both fast accesses, \xe2\x80\xa6BaThe data stored for this element.0EdOriginal data retrieved from <code>epoll_event</code> during <code>epoll_ctl</code>.DiThe data retrieved from <code>epoll_event</code>. libc\xe2\x80\x99s data field \xe2\x80\xa64CnThe data for this key. None is used to represent NULL. (We \xe2\x80\xa6BiFields and constructor id of the variant.CaThe path leading from the crate root to the item.1C`The data that we will serialize and deserialize.EgThe first <code>size</code> bytes of <code>data</code> are the value. Do not try to \xe2\x80\xa60CfAlthough this claims to be a zero-length array, in \xe2\x80\xa6CkInfo about the drop to be performed at this node in the \xe2\x80\xa6BkReturns the extra data stored in a pattern.BaExtra data to store in a pattern.0BlSet of points that define the current local.C`Description of the lint or the issue it detects.0ClThe return place from the original call to <code>try</code>.0EnWhy the <code>Option</code>? It is always <code>Some</code> until the <code>Diag</code> is \xe2\x80\xa60ClThe difference between original and normalized string at \xe2\x80\xa6BcThe table of directory descriptors.0BjA link to the document for this attribute.0CmThe full markdown docstring of this item. Absent if there \xe2\x80\xa6CjCleanup to be done if the coroutine is dropped at this \xe2\x80\xa6000CeDrops and async drops related logic for coroutine \xe2\x80\xa6CnWhich block to jump to if the coroutine is dropped in this \xe2\x80\xa6CjWhen leaving, we need to flush all pending data to not \xe2\x80\xa6ChEmit the body using the provided name for the signature.Al<code>else</code> expression0CkAnnotate the provided diagnostic with information about \xe2\x80\xa6B`Emit and consume the diagnostic.BgWhat kind of artifact we\xe2\x80\x99re emitting.CeOn Rust 2024, this emits a hard error. On earlier \xe2\x80\xa6AdEmit the diagnostic.BdAttempts to evaluate the expression.CkMain evaluator loop and setting up the initial stack frame.ChEvaluate the link-eval virtual forest, providing the \xe2\x80\xa6ClThis shim makes sure that calls only get executed if the \xe2\x80\xa6BhThe expansion produced by the macro callChSimple constant folding: Insert an expression, get a \xe2\x80\xa6CkReturns the expression inside the yield expression, if any.CnAn expression at the end of the block without a semicolon, \xe2\x80\xa6A`The \xe2\x80\x9cvalue\xe2\x80\x9d.AjType checking expressions.BjThe expression whose value is being castedBkRendered expression of the RHS of the rangeBmThe trailing expression of the block, if any.BgThe expression on which use is applied.CaThe expression being evaluated in this statement.CnBuilds MIR from expressions. As a caller into this module, \xe2\x80\xa6AjThe unexpected expression.00DkWill be <code>None</code> in the case of cross-crate reexports, and may \xe2\x80\xa6CnThe stringified expression of this constant. Note that its \xe2\x80\xa6BnThe expression that produced the discriminant.CaThe stringified expression for the initial value.Chlocal queue used for <code>spawn_fifo</code> indirectionBkInformation about the original source file.Cnthe (0-indexed) column in the file, counted in characters, \xe2\x80\xa6CnThe path to the source file in which this span occurs, for \xe2\x80\xa6BfInformation about the original source.DgThe fill character. E.g. the <code>.</code> in <code>{:.&gt;10}</code>.CfOptionally specified character to fill alignment with.DaFind all uses of (including assignments to) a <code>Local</code>.BlGiven a key, returns the (current) root key.CbLocates the given place, if it exists in the tree.CmReturns the \xe2\x80\x9croot\xe2\x80\x9d key of the disjoint-set containing \xe2\x80\xa6EbFlips polarity by turning <code>Positive</code> into <code>Negative</code> and \xe2\x80\xa6000CmA folding traversal mechanism for complex data structures \xe2\x80\xa6BdThe type that the impl block is for.CiForks the inference context, creating a new inference \xe2\x80\xa60AoReturns the argument unchanged.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ClConverts an <code>u64</code> into an <code>AtomicU64</code>.1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111DhConvert the finalized state of a <code>StableHasher</code> and constructdConvert <code>()</code> to <code>Value::Null</code>.3DjConvert 32-bit floating point number to <code>Value::Number</code>, or \xe2\x80\xa6DjConvert 64-bit floating point number to <code>Value::Number</code>, or \xe2\x80\xa6BlConvert boolean to <code>Value::Bool</code>.CjConvert <code>String</code> to <code>Value::String</code>.CcConvert string slice to <code>Value::String</code>.CkConvert copy-on-write string to <code>Value::String</code>.CjConvert <code>Number</code> to <code>Value::Number</code>.CmConvert map (with string keys) to <code>Value::Object</code>.ChConvert a <code>Vec</code> to <code>Value::Array</code>.BmConvert a slice to <code>Value::Array</codecThe function that\xe2\x80\x99s being called.000A`The common case.CgThe feature that must be enabled to use this operation.EgFeature gate the given <code>span</code> under the given <code>feature</code> which \xe2\x80\xa6C`Inserts <code>elem</code> into the state vector.0CmFor a given pair of regions (R1, R2), maps to a region R3 \xe2\x80\xa6CkThe goal we\xe2\x80\x99ve evaluated. This is the input goal, but \xe2\x80\xa60EcIn the <code>origin</code> block, push a <code>goto -&gt; target</code> terminator.A`Grows the arena.CjThis hash is used to deterministically pick a query to \xe2\x80\xa6CgAdd a help message attached to this diagnostic. See \xe2\x80\xa6Cl\xe2\x80\x9ccoverage attribute can be applied to a function (with \xe2\x80\xa6EeCreates a new <code>Diagnostic</code> with the given <code>message</code> at the spanDeAdds a new child diagnostic message to <code>self</code> with the \xe2\x80\xa6BgThe URL to put in the <code>href</code>DeThe id of an anchor within the page (without a <code>#</code> prefix)AiInconsistent breaking boxDd<code>CaptureKind</code> and expression(s) that resulted in such \xe2\x80\xa60CjInformation collected from typeck, including spans for \xe2\x80\xa6DhThis field initially stores a <code>QueryStackDeferred</code> during \xe2\x80\xa6CiContains information that needs to be saved and reset \xe2\x80\xa6C`Initializer expression to set the value, if any.CmSets up any state required for the renderer. When this is \xe2\x80\xa6BaCalls <code>U::from(self)</codemSee docs in build/expr/mod.rseTries to find the associated item that implements \xe2\x80\xa6CkThe associated item described by this <code>LeafDef</code>.10100DkThe <code>DefId</code> of the item which we are collecting opaque types \xe2\x80\xa6CmRenders a single non-module item. This means no recursive \xe2\x80\xa6CnInserts an item into the index. This should be used rather \xe2\x80\xa6CmProvides read-only iteration over everything in the given \xe2\x80\xa6CjThis function exists for priroda to be able to iterate \xe2\x80\xa6BfYield a set of contained flags values.00000000BdIterate over elements, sorted by keyCnReturns an iterator over the items in the map in insertion \xe2\x80\xa6CiAn iterator visiting all key-value pairs in arbitrary \xe2\x80\xa6CmAn iterator visiting all elements in arbitrary order. The \xe2\x80\xa6ClIterate over a tuple of the key an <code>FluentValue</code>.05CnNote: Do you really want to use this? Often you know which \xe2\x80\xa6ChIterates over the indices of set bits in a sorted order.CkIterates through all the columns set to true in a given \xe2\x80\xa60BcUnderlying iterator over the words.965999996599BlReturns an iterator over the switch targets.::::::::76::76:BnThink: <code>iter.any(/* is certain */)</code>EcJoin two <code>Certainty</code>s preserving their <code>DefId</code>s (if any). \xe2\x80\xa6CkDefines the \xe2\x80\x98join\xe2\x80\x99 of provenance: what happens when \xe2\x80\xa60CkComputes the least upper bound of two elements, storing \xe2\x80\xa600DiCreates a new span encompassing <code>self</code> and <code>other</code>.DfTakes two closures and <em>potentially</em> runs them in parallel. \xe2\x80\xa60EeExecute <code>oper_a</code> and <code>oper_b</code> in the thread-pool and return \xe2\x80\xa6ChJoins the elements of all the worker locals into one VecAjA JSON emitter for errors.AhRustdoc\xe2\x80\x99s JSON backendCaLLVM Kernel Control Flow Integrity (KCFI) and \xe2\x80\xa6Bdpthreads-style thread-local storage.0AmIterate over the keys, sortedCiAn iterator visiting all keys in arbitrary order. The \xe2\x80\xa6BjFields used for Hash, and PartialEq trait.11CjDefines the set of legal keys that can be used in queries.22C`Removes <code>elem</code> from the state vector.0C`A kind of target (e.g., lib, bin, example, \xe2\x80\xa6).mKind of macroDfWhat kind of position this is. See <code>FormatArgPositionKind</code>.ClThe \xe2\x80\x9csemantic\xe2\x80\x9d representation of the literal lowered \xe2\x80\xa6AkWhat kind of borrow this is0AgThe fragment specifier.AhA syntax extension kind.AgKind of elided lifetimeAkSemantics of this lifetime.5CbDefines the kind of access made by the projection.CjReturns the closure kind for this closure; only usable \xe2\x80\xa60EfGets the inner <code>ty::Binder&lt;&#39;tcx, PredicateKind&lt;&#39;tcx&gt;&gt;</code>.2Abkind of expressionBnWhether this is a value Drop or a StorageDead.BkExtra information about this initializationDkThe kind of pattern it is: fixed-length <code>[x, y]</code> or variable \xe2\x80\xa6AkRetrieve the constant kind.0AbThe constant kind.AeThe type of instance.D`<code>true</code> if this borrow arose from method-call auto-ref0DhWhat kind of module this is, because this may not be a <code>mod</code>.CnHow the lifetime was introduced, to have the correct space \xe2\x80\xa6CjThe kind of this expansion - macro or compiler desugaring.DkThe <code>ty::LateParamRegionKind</code> corresponding to the anonymous \xe2\x80\xa6==CmInformation about this item that is specific to what kind \xe2\x80\xa6CaWhether this item is a struct, trait, macro, etc.EcThe representation, e.g. <code>#[repr(C)]</code>, <code>#[repr(transparent)]</code>CdThe kind of the struct (e.g. unit, tuple-like or \xe2\x80\xa6CbWhether the variant is plain, a tuple-like, or \xe2\x80\xa6CdThe kind of the parameter and data specific to a \xe2\x80\xa6EhHow this macro is supposed to be called: <code>foo!()</code>, <code>#[foo]</code> or \xe2\x80\xa6BeImplementation of the late lint pass.Ck\xe2\x80\x9cLate resolution\xe2\x80\x9d is the pass that resolves most of \xe2\x80\xa6BmLibrary search paths to hand to the compiler.AjThe (1-based) line number.CjThe one-indexed line of the source file where the span \xe2\x80\xa61AoIndex of line, starting from 0.DcThis is called on the returned <code>CodegenResults</code> from \xe2\x80\xa60BiThe original link written in the markdownCjEmit a lint from a const-eval situation, with a backtrace.ClEmit a lint at the appropriate level, with no associated \xe2\x80\xa60CiThis pass statically detects code which has undefined \xe2\x80\xa6CiRuns several rustdoc lints, consolidating them into a \xe2\x80\xa6BdAsserts that this MetaItem is a listCkShould we tell the user to write a list when they didn\xe2\x80\x99t?DjIf <code>Some</code>, the attribute is allowed to take a list of items \xe2\x80\xa60AnLinked list of specifications.EeGet the backend <code>BasicBlock</code> for a MIR <code>BasicBlock</code>, either \xe2\x80\xa6BfLoads a value from the atomic integer.BfCode to load the dep-graph from files.CnLoad and return the current value of the various counters. \xe2\x80\xa6CaThis module implements a lock which only uses \xe2\x80\xa6EbThis lock protects writes to the <code>data</code> and <code>frozen</code> fields.0BhBindings to acquire a global named lock.CkGenerate a logical right-shift. Both operands must have \xe2\x80\xa60CmFor a given pair of regions (R1, R2), maps to a region R3 \xe2\x80\xa6CnLogic for transforming the raw code given by the user into \xe2\x80\xa6BnThink: <code>iter.all(/* is certain */)</code>CaExtracts the MetaItem from inside this Attribute.BaGet the metadata of a wide value.ClMetadata for unsized places. Interpretation is up to the \xe2\x80\xa61ClThe metadata field of the reference. This is a \xe2\x80\x9ctarget \xe2\x80\xa6000CkMiscellaneous builder routines that are not specific to \xe2\x80\xa6CmMiscellaneous type-system utilities that are too small to \xe2\x80\xa6CfConceptually either forward or reverse mode AD, as \xe2\x80\xa6ClThe synchronization mode of the lock. This is explicitly \xe2\x80\xa6DiIndicates if synchronization is used via <code>mode_union.sync</code> \xe2\x80\xa6CgThe minimum rust version that the project supports. \xe2\x80\xa60BnName(s) that were associated with this tag \xe2\x80\xa6DfFor a single-segment attribute (i.e., <code>#[attr]</code> and not \xe2\x80\xa6CeFor a single-segment meta item, returns its name; \xe2\x80\xa6BbThe name of the region (interned).Abname of the methodCiNone for tuple structs/normal enum variants, Some for \xe2\x80\xa6CkThe name of the module. When the crate may be saved betweenAhThe name to be exported.nThe lint name.AcName of the sectionmName to bind.FbReturns the <code>name</code> symbol in <code>#[lang = &quot;$name&quot;]</code>. For example, \xe2\x80\xa6ClThe name to export this item with. It may not contain \\0 \xe2\x80\xa60:BaA string identifier for the lint.0BnThe name for which collision(s) have occurred.ChThe name of the local binding which shadows the glob \xe2\x80\xa6AgVariant or struct name.Dd<code>&amp;str</code> gives a consistent ordering, which ensures \xe2\x80\xa6BoThe name of the target feature (e.g. \xe2\x80\x9cavx\xe2\x80\x9d)DjReturns a simple string representation of a <code>StatementKind</code> \xe2\x80\xa6CnA name for this CGU. Incremental compilation requires that \xe2\x80\xa6DkReturns a simple string representation of a <code>TerminatorKind</code> \xe2\x80\xa6DkThis can be a named (<code>.foo</code>) or unnamed (<code>.0</code>) field.55AjThe name of this dep kind.oThe field name.CjReturn the fully qualified name of the current definition.BnReturn fully qualified name of this definitionAbThe variable name.CcRetrieve the instance name for diagnostic messages.15AgGet name of the module.iFlag nameCmThe \xe2\x80\x9cprimary\xe2\x80\x9d name for this option. Normally equal to \xe2\x80\xa61BnA string that is shown in place of a filename.CjThe name of the file that the source came from. Source \xe2\x80\xa6BiGets the string that was specified by \xe2\x80\xa6CnThe name of this item. Optional because not every item has \xe2\x80\xa6BmThe content for the anchor tag and title attrCgNeeded for <code>#[rustc_doc_primitive]</code> modules.B`The name of this target feature.AfThe name of the crate.BlSome items such as impls don\xe2\x80\x99t have names.BiThe name of the associated type/constant.AfName of the parameter.DfMay be different from the last segment of <code>source</code> when \xe2\x80\xa6AeThe name of the type.AoThe name of the imported crate.CcThe name of the associated type in the parent type.Cmparses one element on the inside of a list attribute like \xe2\x80\xa6DgShould be the same <code>ecx</code> on each call, and match the one \xe2\x80\xa6CkIndex of the \xe2\x80\x9cnext\xe2\x80\x9d drop to perform (in drop order, \xe2\x80\xa6DjWraps the tokens iteration to ensure that the <code>byte_pos</code> is \xe2\x80\xa6BiThe parent node which consumes the value.CgNode on which the transition is currently being appliedCjThe node whose physical counter is represented by this \xe2\x80\xa6BiGenerate a note/help text without a span.DfAdd a note attached to this diagnostic. See <code>Diag::note()</code>.AkThe note to issue a reason.0EeCreates a new <code>Diagnostic</code> with the given <code>message</code> at the spanDeAdds a new child diagnostic message to <code>self</code> with the \xe2\x80\xa6CgAn extra note that should be issued if this item is \xe2\x80\xa6CkThe reason for deprecation and/or what alternatives to use.DeMaps condition expressions to their enclosing <code>!</code>, for \xe2\x80\xa6C`See the docs for <code>RenameReturnPlace</code>.DiReturns the single <code>DefId</code> that the path resolves to, this \xe2\x80\xa6BfText that starts the permission block.CjOpens a static archive for read-only purposes. This is \xe2\x80\xa6CjAccesses the data returned in <code>LoadResult::Ok</code>.AdCommand line optionsCiChecks if two slices are equal as per <code>eq_fn</code>.0F`Pack pointer <code>ptr</code> with a <code>tag</code>, according to <code>self.packed</code> \xe2\x80\xa6BmA path to the main source file of the target.CdGets just the path, without the args. Some examples:C`Path of the trait, including any type parametersDhThe <code>path</code> may be pushed to, but the part that is present \xe2\x80\xa6CjThe file path to the visualizer file. This is used for \xe2\x80\xa6A`path being movedAfpath being initializedAhTrack a file explicitly.DhPath <code>Segment</code>s at the place of use that failed. Used for \xe2\x80\xa6DiReturn explicit sysroot if it was passed with <code>--sysroot</code>, \xe2\x80\xa6AeThe path to the themeClThe list of path components for the fully qualified path \xe2\x80\xa6AeThe path of the type.D`The path with which <code>parent</code> was referenced (like \xe2\x80\xa6CkPeeks at the current position, without incrementing the \xe2\x80\xa6CmReturns the next item after the current one. It doesn\xe2\x80\x99t \xe2\x80\xa6B`The permission this item grants.BaMutable access to its permissionsEcReturns the <code>DefId</code> of the <code>Poll</code> lang item if it is defined.DiThe i-th element in <code>pool</code> stores allocations of alignment \xe2\x80\xa6AjThe filter test predicate.AbPrevious characterAfThe previous elements.EcReturns the last eaten symbol (or <code>&#39;\\0&#39;</code> in release builds). \xe2\x80\xa6BeUsed by <code>-Z self-profile</code>.0ClGive access to the ptr-sized provenances (which can also \xe2\x80\xa6Di<code>Provenance</code> in this map applies from the given offset for \xe2\x80\xa6ClProvenance in this map applies from the given offset for \xe2\x80\xa6BjRecord an additional event to the history.ChPushes a new \xe2\x80\x9cundo item\xe2\x80\x9d onto the undo log. This \xe2\x80\xa6CiAdds a command line argument verbatim with no argfile \xe2\x80\xa6BkReturns a new stack with an element of top.ClPushes an element to the array returning the index where \xe2\x80\xa6CgPushes a list of AST lint attributes onto this context.1CkPushes a new row to the matrix. Internal method, prefer \xe2\x80\xa6ChWrite some plain text to the buffer, escaping as needed.DiPush a level <code>level</code> heading into the appropriate place in \xe2\x80\xa6BaPush a component onto the buffer.GnSets <code>chr</code> with <code>style</code> for given <code>line</code>, <code>col</code>. If <code>line</code> does not \xe2\x80\xa6GaSets <code>string</code> with <code>style</code> for given <code>line</code>, starting from <code>col</code>. \xe2\x80\xa6CkWhen merging two \xe2\x80\x9croot\xe2\x80\x9d keys, their ranks determine \xe2\x80\xa6m\xe2\x80\x9craw box\xe2\x80\x9dCnDetect data-races for an unsynchronized read operation. It \xe2\x80\xa6CjThe vector clock of all non-atomic reads that happened \xe2\x80\xa6F`Read data from <code>fd</code> into buffer specified by <code>buf</code> and <code>count</code>.ClRead the counter in the buffer and return the counter if \xe2\x80\xa6EfReads as much as possible into the given buffer <code>ptr</code>. <code>len</code> \xe2\x80\xa6BbRepr options provided by the user.0CjReturns a stringified <code>#[repr(...)]</code> attribute.CeThe current set of local scopes for types and values.AkThe index of the root node.00CiData about the top-level items in a crate, as well as \xe2\x80\xa6CnThe ID of the theoretical expansion that generates freshly \xe2\x80\xa6CoThe id of the root <code>Module</code> item of the local crate.CnVector of rows. The rows must form a rectangular 2D array. \xe2\x80\xa6DkDoctest functionality used only for doctests in <code>.rs</code> source \xe2\x80\xa6DiIf this is <code>None</code>, then this is a raw pointer, so size and \xe2\x80\xa6ClMap from node index to SCC, and stores the successors of \xe2\x80\xa6CjThe seed to use when non-determinism or randomness are \xe2\x80\xa60CkSeeks to the given offset (which can be relative to the \xe2\x80\xa6CgAvoid infinite recursion due to recursive declarations.CfGets the overall compiler <code>Session</code> object.0AlAccess the compiler session.00CdTurn a constant int byte representation into an i128BjThe <code>+</code> or <code>-</code> flag.0CmThe size of accesses to this atomic location. We use this \xe2\x80\xa6CmThe size in bytes of the atomic primitive underlying this \xe2\x80\xa6BkThe number of bytes affected from the base.EaIf <code>safe</code> is <code>Some</code>, then the pointer is either null or \xe2\x80\xa6CfSize of the table in entries, including possible gaps.BaThe size of this layout in bytes.BiModule that contains skip related stuffs.BlThe span of the <code>DisallowedPath</code>.0Baentire <code>for</code> loop spanAgSpan of the loop headerAkSpan of the macro call siteBgLine of code that triggered this event.Bdget the span of the entire attributeDeThe span inside the format string for the full <code>{\xe2\x80\xa6}</code> \xe2\x80\xa6AoThe span of the name or number.CiReturn a span encompassing the header, or none if all \xe2\x80\xa6AaThe overall span.CjThe span of the function, without the dot and receiver \xe2\x80\xa6dSpanCjSpan of the whole parameter definition, including default.CaSpan of the whole <code>for&lt;&gt;</code> clauseBnRetrieves the <code>TokenTree</code>\xe2\x80\x99s span.DjThe <code>Span</code> associated with the creation of this constraint. \xe2\x80\xa6BcThe span for the member constraint.AbThe span to blame.BfGets a span representing the location.3BoThe span for the current #[derive(Foo)] header.BiThe entire original formatting directive.BbThe span of the current statement.CfThe span we are going to include in the final snippet.0BjAdd a span. See <code>Diag::span()</code>.Clspan where macro was applied to generate this code; note \xe2\x80\xa6:BeThe span of the meta-variable in LHS.AmSpan of the macro definition.DfSpan of the <code>#[rustc_default_body_unstable(...)]</code> attributeCjSpan of the <code>#[rustc_const_stable(...)]</code> or \xe2\x80\xa6AfSpan of the attribute.210CnThe span encompassing the arguments and constraints inside \xe2\x80\xa6BlReturns the span of this <code>QPath</code>.AlSpan of the entire attributeEcThe span includes the curly braces <code>{</code> and <code>}</code> around the \xe2\x80\xa6dSpanChFirst span where it is accessed (there can be multiple).DkThe span giving rise to the <code>expected</code> type, if one could be \xe2\x80\xa6DhThe <code>Span</code> points to the expression that caused us to divergeCmThe span of the scrutinee or type expression which caused \xe2\x80\xa6BhThe span of code that we are linting on.CmSpans from struct fields and similar that can be obtained \xe2\x80\xa61CnThe span of this particular definition of the opaque type. \xe2\x80\xa6AoSpan of function being checked.DiThe <code>Span</code> associated with the field access or method call \xe2\x80\xa6DiReturns the span of this <code>Scope</code>. Note that in general the \xe2\x80\xa6CbA span representing this MIR, for error reporting.CjThe source span for the AST pertaining to this MIR entity.Bi<code>Span</code> of the tail expression.ClThe span of the block, including the opening braces, the \xe2\x80\xa6Bdspan of the expression in the sourceDkThe span of use, without the dot and receiver (e.g. <code>use</code> in \xe2\x80\xa6CmSpan of the <code>let &lt;PAT&gt; = &lt;INIT&gt;</code> part.=Bj<code>Span</code> of the original pattern.CgA span that has been extracted from MIR and then \xe2\x80\x9c\xe2\x80\xa6AmThe unexpected expr\xe2\x80\x99s span.DfReturns the span of this tree, delegating to the <code>span</code> \xe2\x80\xa6CmReturns the span for the delimiters of this token stream, \xe2\x80\xa6C`Returns the span for this punctuation character.DhReturns the span of this <code>Ident</code>, encompassing the entire \xe2\x80\xa6BkReturns the span encompassing this literal.BcReturn the span of this definition.AoGet the span of this attribute.BnThe span that covers the entire function body.0CmThe span corresponding to the reason for which this query \xe2\x80\xa6000CdSpan of the module itself. Used for error reporting.CnThe source location where the name is defined; None if the \xe2\x80\xa6AfSpan of this use tree.BeWhere to suggest adding the lifetime.AjThe span of the parameter.AbSpan from the itemCiSpan of import\xe2\x80\x99s \xe2\x80\x9cextern\xe2\x80\x9d declaration; used for \xe2\x80\xa6Cfspan of the extern crate that caused this to be loadedDdThe span of the format string, i.e. <code>&quot;content&quot;</code>CmThe span of the scrutinee or type expression which caused \xe2\x80\xa6CnThe source location of this item (absent if it came from a \xe2\x80\xa6AnFlexible target specification.DjThis module contains the <code>InterpCx</code> methods for executing a \xe2\x80\xa6DaReturns <code>true</code> as long as there are more things to do.CiPrint expression such that it can be parsed back as a \xe2\x80\xa6CmCreate a stub debuginfo node onto which fields and nested \xe2\x80\xa6CcContains utility functions to generate suggestions.CkIf we have a span for the condition expression, suggest \xe2\x80\xa6CiStores a value into the atomic integer, returning the \xe2\x80\xa6CkSynchronization primitives like to attach extra data to \xe2\x80\xa60CcContains FreeBSD-specific synchronization functionsCbContains macOS-specific synchronization functions.CmThis module defines various operations and types that are \xe2\x80\xa6DiA lock implementation that\xe2\x80\x99s only used if <code>Lock.mode</code> is \xe2\x80\xa6BgReturns the last field in this variant.CnThe type which determines the unsized metadata, if any, of \xe2\x80\xa6CmRemoves and returns the value in the set, if any, that is \xe2\x80\xa600EeTakes the value out of the <code>Value</code>, leaving a <code>Null</code> in its \xe2\x80\xa611DhAdds a new temporary value of type <code>ty</code> storing the result ofDoTemporary to store the result of <code>deref()</code>/<code>deref_mut()</code>.CnThe expansion from a test function to the appropriate test \xe2\x80\xa6DgTests whether <code>node</code> meets the filter, returning true if so.0ClWalks the crate looking for items/impl-items/trait-items \xe2\x80\xa6CeRuns any tests/code examples in the markdown file \xe2\x80\xa6CjSource text from the start of line_start to the end of \xe2\x80\xa6Ao<code>if</code> then expression0Ci<code>then</code> is always <code>ExprKind::Block</code>.EoProduces a new <code>Tree</code> where <code>other</code> is sequenced after <code>self</code>.CkTHIR datatypes and definitions. See the rustc dev guide \xe2\x80\xa6CjThe MIR is built from some typed high-level IR (THIR). \xe2\x80\xa6BlThe THIR data that this context is building.BgLet the time pass for a small interval.BbThe tier of the target. 1, 2 or 3.BeUsed by <code>-Z self-profile</code>.CfIn this file we handle the \xe2\x80\x9cTree\xe2\x80\x9d part of Tree \xe2\x80\xa6BaThe context for type information.CkIf this is a homogeneous aggregate, returns the homogeneousCcA <code>Tree</code> representing a zero-sized type.CmThe number of tokens assigned to threads. If this is 0, a \xe2\x80\xa6BeThe crate was used non-speculatively.CnWas the symbol marked as <code>#[used(compiler)]</code> or \xe2\x80\xa6CnTracks whether an item is used in scope or used relatively \xe2\x80\xa6AlNumber of uses of the macro.CmMiscellaneous type-system utilities that are too small to \xe2\x80\xa6ClHelper functions corresponding to lifetime errors due to \xe2\x80\xa6AjTotal number of variables.AiBlock until latch is set.DhWalk top-down and call <code>it</code> in each place where a pattern \xe2\x80\xa6BhWalk the pattern in left-to-right order.CnAn iterator over the type substructure. WARNING: this does \xe2\x80\xa60EgIterator that walks <code>self</code> and any types reachable from <code>self</code>\xe2\x80\xa60002311DkAdd a warning attached to this diagnostic. See <code>Diag::warn()</code>\xe2\x80\xa6ClDescribes at which point in the pipeline this validation \xe2\x80\xa6CcFind incompatibilities in matcher/invocation sizes.DfCreates a <code>DisambiguatorState</code> where the next allocated \xe2\x80\xa6DkUpdates the goal to one with a different <code>predicate</code> but the \xe2\x80\xa60EfAllows access to the <code>TyCtxt</code> in the current <code>ImplicitCtxt</code>. \xe2\x80\xa601BnExecute the given function with access the \xe2\x80\xa622AhSingleton part, one fileDiIf <code>true</code>, the attribute is allowed to be a bare word like \xe2\x80\xa60ClA copy of the current word, but with any already-visited \xe2\x80\xa6CmParses a word starting at the current position. A word is \xe2\x80\xa6AoAlignment of <code>Self</code>.CiAlignment for lining up comments following MIR statementsCnShort aliases that we can use in match patterns. If an end \xe2\x80\xa6CgArm Architecture Procedure Call Standard, sometimes \xe2\x80\xa60CjCan be specified as <code>extern &quot;aapcs&quot;</code>.CeIsolated op is rejected with an abort of the machine.0AnAbort the process immediately.CkA projection, opaque type, free type alias, or inherent \xe2\x80\xa600000CeAlignment of a type in bytes (always a power of two).BdRepresents <code>#[align(N)]</code>.0CjExecute op requiring communication with the host, i.e. \xe2\x80\xa60AdOnly used for lints.BnAllow use of unstable features, as on nightly.ChThe <code>allow</code> level will not issue any message.0CkWe can use the item because it is stable or we provided theDgNew dependencies can be added to the <code>TaskDeps</code>. This is \xe2\x80\xa600ClThe token cannot join with the following token to form a \xe2\x80\xa6DkA <code>Punct</code> token cannot join with the following token to form \xe2\x80\xa6CmArray/vector-like placement, with all fields of identical \xe2\x80\xa6BjAn array (e.g, <code>[a, b, c, d]</code>).BkA fixed length array (<code>[T; n]</code>).BkAn array (e.g., <code>[a, b, c, d]</code>).CaA fixed length array (i.e., <code>[T; n]</code>).CoAn array with the given length. Written as <code>[T; N]</code>.00AjThe type is of the element0BiAn array, e.g. <code>[a, b, c, d]</code>.BjFixed match against an array; irrefutable.8AhRepresents a JSON array.444nAn array type.BjAn array type, e.g. <code>[u32; 15]</code>ChRepresents <code>#[rustc_as_ptr]</code> (used by the \xe2\x80\xa60Cn<code>async</code>, which returns an <code>impl Future</code>.An<code>Type: async Trait</code>EcAn explicit <code>async</code> block or the body of an <code>async</code> function.ClWe ate an <code>|</code> (or <code>||</code> and recovered).DhAn await expression (<code>my_future.await</code>). Span is of await \xe2\x80\xa6BcAn <code>&lt;expr&gt;.await</code>.Cn<code>.await</code> calls <code>IntoFuture::into_future</code>DhOn LLVM, mark all generated LLVM functions with the <code>ssp</code> \xe2\x80\xa6DeA binary operator expression, including <code>as</code>-casts and \xe2\x80\xa6BhThe <code>|</code> operator (bitwise or)BaThe <code>bitor</code> lang item.111AnA block (<code>{ .. }</code>).BkA block (<code>&#39;label: { ... }</code>).CnIndented relative to the indentation level of the previous \xe2\x80\xa6DiA block of statements <code>{ .. }</code>, which may have a label (in \xe2\x80\xa6DjAn explicit <code>async</code>/<code>gen</code> block written by the user.CaA block (e.g., <code>&#39;label: { ... }</code>).hA block.BhAn anonymous module; e.g., just a block.BoInstrument for coverage at the MIR block level.DoFirst line is on a new line and all lines align with <strong>block</strong> \xe2\x80\xa6DgA bound on an associated type (e.g., <code>AssocTy: Bound</code> in \xe2\x80\xa6CiTrait bounds in generics bounds and type/trait alias. \xe2\x80\xa6CaAppears as a bound on a type or another lifetime.2CjBound const variable, used only when preparing a trait \xe2\x80\xa6DeBound type variable, used to represent the <code>&#39;a</code> in \xe2\x80\xa61010101010Ad<code>{ ... }</code>0DjA <code>break</code>, with an optional label to break, and an optional \xe2\x80\xa6CfA <code>break</code>, with an optional label to break.B`A <code>break</code> expression.CjThe \xe2\x80\x9cbuilt MIR\xe2\x80\x9d dialect, as generated by MIR building.0AoUpvar is captured by reference.0CnUpvar is captured by use. This is true when the closure is \xe2\x80\xa60BdA use expression <code>x.use</code>.BeType for the bytes of the allocation.0BbThe <code>c_void</code> lang item.ClThe type of in-memory cache to use for queries with this \xe2\x80\xa60CeThis cache is used to store information about the \xe2\x80\xa6n<code>^</code>DgN.B., the variants in <code>Cause</code> are intentionally ordered. \xe2\x80\xa6Cg<code>ExternAbi::C</code> but spelled funny because x860CjCan be specified as <code>extern &quot;cdecl&quot;</code>.CkErrors are bypassed for bootstrapping. This is required \xe2\x80\xa6BmClassification of \xe2\x80\x9ceightbyte\xe2\x80\x9d components.CkHow a span of text is classified. Mostly corresponds to \xe2\x80\xa6BaThe <code>clone</code> lang item.n<code>:</code>0C`The set of available colors for the terminal \xe2\x80\xa6n<code>,</code>CeAn elided lifetime in brackets with written brackets.1Bl<code>1</code> in <code>Foo&lt;1&gt;</code>.BeA constant item (<code>const</code>).DgAn associated constant, <code>const $ident: $ty $def?;</code> where \xe2\x80\xa6CdDon\xe2\x80\x99t compute derivatives with respect to this \xe2\x80\xa6CkThe MIR represents some form of constant. The signature \xe2\x80\xa6EeValidation of a <code>const</code>. <code>allow_immutable_unsafe_cell</code> says \xe2\x80\xa60ChConstructor constant automatically created by a unit \xe2\x80\xa6CmConstants and associated constants, also including inline \xe2\x80\xa6DlA <code>const</code>, associated <code>const</code>, or other const context.ClAn associated constant with an optional value (otherwise \xe2\x80\xa6ChAn associated constant of the given type, set to the \xe2\x80\xa6AjA <code>const</code> item.CcPredicate comes from <code>const_conditions</code>.DhEquivalent to <code>ty::ConstKind::Infer(ty::InferConst::Var(_))</code>.BfSome kind of const inference variable.0An<code>Type: const Trait</code>101BdEnforcing const stability of an itemiConstants0BlAny token that can start a const expression.54434343BaA constant as a generic argument.AmDenotes a constant parameter.BkThe number of repetitions of an identifier.CmA count is used for the precision and width parameters of \xe2\x80\xa6CgThe top-level data structure that stores the entire \xe2\x80\xa6B`Holds information about a crate.BeThe crate currently being documented.BbThe root of the emitted JSON blob.DaExplicitly crate-wide visibility set with <code>pub(crate)</code>BmUse one <code>use</code> statement per crate.CkThe list of constructor functions that we still have to \xe2\x80\xa6CkThe walk found a cycle, but the entire component is not \xe2\x80\xa6CjQuery cycle detected, stashing in favor of a better error.CnAn old-solver-style cycle error, which will fatal. This is \xe2\x80\xa60CkA type has cyclic layout, i.e. the type contains itself \xe2\x80\xa61CcInherently impossible to fulfill; this trait is \xe2\x80\xa6Aa<code>{:?}</code>EdA <code>DefId</code> identifies a particular <em>definition</em>, by combining a \xe2\x80\xa6CkA unique identification number for each item accessible \xe2\x80\xa61DfA \xe2\x80\x9cnormal\xe2\x80\x9d item that uses a <code>DefId</code> for identification.EbA <code>deref</code> pattern (currently <code>deref!()</code> macro-based syntax).BmThe <code>*</code> operator for dereferencingBaThe <code>deref</code> lang item.12BdDereference once, producing a place.DmA dereference of a pointer, reference or <code>Box&lt;T&gt;</code> of the \xe2\x80\xa6BfA <em>non-overloaded</em> dereference.Df<code>box P</code>, <code>&amp;P</code>, <code>&amp;mut P</code>, etc.CbCall <code>Deref::deref[_mut]</code> on the value.DgWe get passed a reference or a raw pointer to <code>self</code> and \xe2\x80\xa6DjDereference projections (e.g. <code>*_1</code>) project to the address \xe2\x80\xa60CiThe source file lines, in undecoded difference list form.CkForward Mode, Compute derivatives for this input/output \xe2\x80\xa6CmActs as a null expression. Lowering it will always emit a \xe2\x80\xa6CkSometimes we need a dummy value when no error has occurred.BgRepresents <code>#[rustc_dummy]</code>.0BiDWARF debuginfo (such as that used on \xe2\x80\xa6DgDynamic library (e.g. <code>libfoo.so</code> on Linux) or an import \xe2\x80\xa6ClAn implementation cannot be chosen unambiguously because \xe2\x80\xa6Cga constant represents an empty string, for convenience.DhValue which represents the <code>FiniteBitSet</code> having no bits set.CjThe initial value when adding a goal to its own nested \xe2\x80\xa6000Ciused when parsing attributes for miscellaneous things \xe2\x80\xa60DjThe \xe2\x80\x9cearly\xe2\x80\x9d effect (e.g., <code>apply_early_statement_effect</code>\xe2\x80\xa6BdNo arguments - <code>panic!()</code>CaThe access does not touch any existing allocationCcA type with no valid variants. Must be uninhabited.AkJust a trailing semi-colon.BcNo arguments: <code>#[attr]</code>.CjA special \xe2\x80\x98empty\xe2\x80\x99 token that is ignored during the \xe2\x80\xa6lEmpty stack.CfNothing that matches a nested macro definition was \xe2\x80\xa6AoE.g. <code>Path&lt;&gt;</code>.4CmEmpty lifetime is for data that is never accessed. We tag \xe2\x80\xa6EeVariant that matches no value. E.g. <code>Some::&lt;Option&lt;!&gt;&gt;</code> if \xe2\x80\xa68CkEmpty \xe2\x80\x9croot\xe2\x80\x9d scope at the crate start containing no \xe2\x80\xa6BdA view into a single entry in a map.AaBlocked on epoll.0DiAn <code>Epoll</code> file descriptor connects file handles and epoll \xe2\x80\xa6k\xe2\x80\x99a = \xe2\x80\x99bCdNo autodiff is applied (used during error handling).AdGive a default errorCcHard error when dereferencing a misaligned pointer.0CiDefines the type to return when merging of two values \xe2\x80\xa6ChThis obligation was resolved to an error. It will be \xe2\x80\xa6CgAn error in the code being compiled, which prevents \xe2\x80\xa6CbFatal error (malformed macro?). Abort compilation.0AcResolution failure.CmIndicates an illegal name was given and an error has been \xe2\x80\xa6DlIndicates an error during lowering (usually <code>&#39;_</code> in wrong \xe2\x80\xa6DbSimilar to <code>Issue</code>, but contains some extra informationCjA placeholder for a const which could not be computed; \xe2\x80\xa6CnA placeholder for a type which could not be computed; this \xe2\x80\xa6910190CnAn error has been encountered during lowering. We probably \xe2\x80\xa6gInvalidAoErrors that can abort analysis.iAn error.0CnA generic error to represent an API request that cannot be \xe2\x80\xa665>65>65AkComplete data for an event:CnPaths must match exactly and are hashed by their exact HIR \xe2\x80\xa6CiThe number of generics must match precisely as stipulatedB`There\xe2\x80\x99s a superfluous argument0kUninhabited0000CkThe target spec explicitly disables self-contained linking.AjDenies all configurations.ClAn error that causes an immediate abort. Used for things \xe2\x80\xa6DjInternal type of a file-descriptor - this is what <code>FdTable</code> \xe2\x80\xa6BaInitialization of a struct field.EhAccess of a named (e.g., <code>obj.foo</code>) or unnamed (e.g., <code>obj.0</code>) \xe2\x80\xa6BhA field in a struct, enum or union. e.g.1Fe<code>B.F</code> where <code>B</code> is the base expression and <code>F</code> is the field. The \xe2\x80\xa6FdA field (e.g., <code>f</code> in <code>_1.f</code>) is one variant of <code>ProjectionElem</code>\xe2\x80\xa600000CkAccess to a field of a struct, a tuple, an union, or an \xe2\x80\xa633EhA field projection (e.g., <code>f</code> in <code>_1.f</code>) project to a field in \xe2\x80\xa60oEmits to files.0Bf<code>FileLines</code> files iterator.FaFixed-sized integer type, e.g. <code>i8</code>, <code>u32</code>, <code>i128</code>. The bool \xe2\x80\xa6EdFixed-sized integer type, e.g. <code>i8</code>, <code>u32</code>, <code>i128</code>.AeFloating-point types.FaA float literal (<code>1.0</code>, <code>1f64</code> or <code>1E10f64</code>). The pre-suffix \xe2\x80\xa6DjFloating-point type variable <code>?F</code> (that can only be unified \xe2\x80\xa60CoA primitive floating-point type. For example, <code>f64</code>.Dc<code>12.34f32</code>, <code>1e3</code>, but not <code>1f32</code>.214122212121AjA function ABI definition.CnMetadata describing how the arguments to a native function \xe2\x80\xa6AjAn argument to a function.BaAn argument passed to a function.0DhThe MIR is a fn item with the given <code>DefId</code> and args. The \xe2\x80\xa6ClThe anonymous type of a function declaration/definition. \xe2\x80\xa600ChHold information about a function definition in a crate.111BbThe <code>fn_mut</code> lang item.DbA function pointer type (e.g., <code>fn(usize) -&gt; bool</code>).CmA function pointer (e.g., <code>fn(usize) -&gt; bool</code>).D`A pointer to a function. Written as <code>fn() -&gt; i32</code>.0DiThe <code>ReifyShim</code> was created to produce a function pointer. \xe2\x80\xa60AbFunction pointers.2222CkRepresents a function\xe2\x80\x99s signature in a trait declaration,0AnRepresents a fn\xe2\x80\x99s signature.B`The value of a function pointer.0Dk<code>#[rustc_force_inline]</code> forces inlining to happen in the MIR \xe2\x80\xa60nA stack frame.0CnAn iterator over the token trees in a delimited token tree \xe2\x80\xa6CfCreated a generic parameter for an anonymous lifetime.CnSynthetic name generated when user elided a lifetime in an \xe2\x80\xa6DdA fresh const variable. See <code>infer::freshen</code> for more \xe2\x80\xa60000AlBlocked on a Futex variable.A`The futex state.1CiA gated attribute which requires a feature gate to be \xe2\x80\xa60CjState required to run in GenMC mode. In this mode, the \xe2\x80\xa6CnA per-trait graph of impls in specialization order. At the \xe2\x80\xa6000AiA delimited token stream.C`A token stream surrounded by bracket delimiters.CcA guard pattern (e.g., <code>x if guard(x)</code>).0AoGuard type that panics on drop.ChUniquely identifies a node in the HIR of the current \xe2\x80\xa6BdThe fingerprint is actually a HirId.CcThe projection bound holds subject to the given \xe2\x80\xa6CmWhether the visitor visits nested \xe2\x80\x9citem-like\xe2\x80\x9d things. \xe2\x80\xa6ClWhether the visitor visits \xe2\x80\x9cintra item-like\xe2\x80\x9d things. \xe2\x80\xa6fisize.DeA <code>PatKind::Ident</code> may either be a new bound variable (\xe2\x80\xa6DgIdentifier token. Do not forget about <code>NtIdent</code> when you \xe2\x80\xa6CkIdentifier WITHOUT a preceding dollar sign, which means \xe2\x80\xa6DkAn identifier or keyword, e.g. <code>ident</code> or <code>continue</code>.AeAny identifier token.BcAn identifier (<code>ident</code>).nAn identifier.Dh<code>Ident</code> isn\xe2\x80\x99t rendered in the HTML but we still need it \xe2\x80\xa6Eb<code>Src</code> is transmutable into <code>Dst</code>, if all of the enclosed \xe2\x80\xa6Ea<code>Src</code> is transmutable into <code>Dst</code> if any of the enclosed \xe2\x80\xa6BaAn <code>if let</code> expressionBjscrutinee, pattern, then block, else blockDjAn indexing operation (e.g., <code>foo[2]</code>). The span represents \xe2\x80\xa6CnThe index of the repetition at a particular depth, where 0 \xe2\x80\xa6BaThe <code>index</code> lang item.CkAn indexing operation (<code>foo[2]</code>). Similar to \xe2\x80\xa6EfSome index like <code>B[x]</code>, where <code>B</code> is the base expression. We \xe2\x80\xa6AiIndex into a slice/array.00000BmA <em>non-overloaded</em> indexing operation.CgIndex into a slice/array. The value of the index is \xe2\x80\xa60ChThis means the type should be inferred instead of it \xe2\x80\xa6ClThis variant is used for anonymous lifetimes that we did \xe2\x80\xa6DkUser wrote an anonymous lifetime, either <code>&#39;_</code> or nothing \xe2\x80\xa6CjThis variant is not always used to represent inference \xe2\x80\xa6DhInference variables in <code>GenericArg</code> are always represented byDk<code>TyKind::Infer</code> means the type should be inferred instead of \xe2\x80\xa6AmInfer the value of the const.BjA type variable used during type checking.1010101010BgA type that is inferred: <code>_</code>CbAn inferred constant as in <code>[10u8; _]</code>.CjA generic argument that\xe2\x80\x99s explicitly set to be inferred.CcA type that\xe2\x80\x99s left to be inferred, <code>_</code>BlTracks the list of dominators for each node.Af16-bit signed integer.Af32-bit signed integer.Af64-bit signed integer.BcTypes that are represented as ints.CiThe token can join with the following token to form a \xe2\x80\xa6DjA <code>Punct</code> token can join with the following token to form a \xe2\x80\xa6DkAny statically computable Layout. Alignment can be <code>None</code> if \xe2\x80\xa6ClA \xe2\x80\x9cLabel\xe2\x80\x9d is an identifier of some point in sources, \xe2\x80\xa6CgWe define various kinds of latches, which are all a \xe2\x80\xa6CnLevelis_errorEmissionGuaranteeTop-levelSubUsed in lints?Bug\xe2\x80\xa6BaSetting for how to handle a lint.0CmRepresents the levels of effective visibility an item can \xe2\x80\xa6BhAn enum representing a diagnostic level.0DgNew-type wrapper around <code>usize</code> for representing limits. \xe2\x80\xa60CgThe source file lines, in decoded (random-access) form.CcThe value is determined solely from the expression.ChLocal represents a <code>let</code> statement, e.g., \xe2\x80\xa6DmA <strong>local</strong> lifetime is one about which we know the full set \xe2\x80\xa6CfTo support alloc-free locals, we are able to write \xe2\x80\xa6BgA local variable or function parameter.AgA named local variable.0BjDenotes the start of a <code>Place</code>.2222222ClDisplay the path before the application of rewrite rules \xe2\x80\xa63CiThis external crate can be found in the local doc/ folderBb<code>const FOO: u32 = ...;</code>BnThe <code>x</code> flag in <code>{:x?}</code>.0BkEnsure all literals use lowercase letteringCgApply remappings to the expansion of std::file!() macroBhOther MinGW libs and Windows import libsBmThe keyword <code>macro</code> was processed.DiA MBE macro definition (<code>macro_rules!</code> or <code>macro</code>).ClAll scopes with macro namespace and the given macro kind \xe2\x80\xa6AnExpansion produced by a macro.o<code>m!</code>AdA macro declaration.CnA macro_rules! declarative macro. Contains a single string \xe2\x80\xa6BaAny <code>match</code> expressionAkA <code>match</code> block.DkA <code>match</code> block, with a source that indicates whether or not \xe2\x80\xa6B`A <code>match</code> expression.CjA match, like <code>on(Rhs = &quot;Whatever&quot;)</code>.Ai<code>Type: ?Trait</code>B`<code>Type: [const] Trait</code>10CnPotentially unknown, some cases converge, others require a \xe2\x80\xa611CiFor all cases where you aren\xe2\x80\x99t sure or that are too \xe2\x80\xa6222ChIndicates that the trait bound relaxes a trait bound \xe2\x80\xa6AhThe <code>-</code> flag.n<code>-</code>1DgThe <code>bool</code> indicates whether the result of the operation \xe2\x80\xa6BkCode before /* foo */ and after the commentCgA chunk that has a mix of zeros and ones, which are \xe2\x80\xa6CjPack as many items as possible per row over (possibly) \xe2\x80\xa6CiAn option that takes a value, and can appear multiple \xe2\x80\xa6AcBlocked on a mutex.A`The mutex state.1D`<code>#[naked]</code>: an indicator to LLVM that no function \xe2\x80\xa6B`Represents <code>#[naked]</code>0Bf<code>format_args(\xe2\x80\xa6, arg = 1)</code>Cm<code>{a}</code> or <code>{:a$}</code> or <code>{:.a$}</code>AoNormal structs/struct variants.BjLate-bound regions that appear in the AST.000CgThere is a named lifetime, we won\xe2\x80\x99t suggest anything.B`The never type (<code>!</code>).Ah<code>Type: Trait</code>AoA never pattern <code>!</code>.12BdThis is the current stable behavior:AnThe never type <code>!</code>.002BhAssert unreachability of never patterns.DhNever pattern. Only used in <code>WitnessPat</code>. An actual never \xe2\x80\xa60222oNever use color0BfNever emit leading pipes on match armsCbNiche (values invalid for a type) encoding the \xe2\x80\xa60Aa<code>{:o}</code>AmLiteral starts with \xe2\x80\x9c0o\xe2\x80\x9d.AaAny other reason.AiExtensible set of actionsCjOther usages which have not yet been categorized. Feel \xe2\x80\xa6CmArchitectures which don\xe2\x80\x99t need other considerations for \xe2\x80\xa6oSomething else.BgAny other ABI, including unstable ones.CnOther random stuff that does not fit to other kinds. e.g., \xe2\x80\xa6CcAn item that cannot be reordered. Either has an \xe2\x80\xa6kOwned data.00000BaThe <code>panic</code> lang item.DaGenerate a panic that can be caught by <code>catch_unwind</code>.BaA parameter in a function header.ChSuccessfully linked the lifetime to a generic parameter.BlRepresents a parameter in a function header.BeNon-lifetime argument (type or const)BlUser-given names or fresh (synthetic) names.1AjGeneric lifetime parameternFeed the type.AjA const generic parameter.EeA type parameter; for example, <code>T</code> in <code>fn f&lt;T&gt;(x: T) {}</code>.CjSuccessful resolution to an obligation provided by the \xe2\x80\xa6CnUse the type of the parameter of the provided function. We \xe2\x80\xa613232CaDescription of a type-checked function parameter.12432124343AmA type or constant parameter.DeParentheses in patterns used for grouping (i.e., <code>(PAT)</code>).CeNo-op: used solely so we can pretty-print faithfully.CjNo-op; kept solely so that we can pretty-print faithfully.CjContext that provides type information about constructors.BmA globally unique id to distinguish patterns.ChJust a helper \xe2\x80\x92 separate structure for each namespace.CnA piece is a portion of the format string which represents \xe2\x80\xa6DjA <code>Place</code> represents how a value is located in memory. This \xe2\x80\xa60ClPlaces roughly correspond to a \xe2\x80\x9clocation in memory.\xe2\x80\x9d \xe2\x80\xa6DbThis <code>Place</code> only contains projection which satisfy \xe2\x80\xa61FdAn assignable memory location like <code>x</code>, <code>x.f</code>, <code>foo()[3]</code>, that \xe2\x80\xa6D`Some user-given name like <code>T</code> or <code>&#39;x</code>.AkA struct with named fields.AmA variant with no parenthesesn<code>#</code>0CkA self-contained computation during trait solving. This \xe2\x80\xa600000000ClThis is a jobserver proxy used to ensure that we hold on \xe2\x80\xa6CmA packed 128-bit integer. Useful for reducing the size of \xe2\x80\xa6GbA <code>Punct</code> is a single punctuation character such as <code>+</code>, <code>-</code> or <code>#</code>\xe2\x80\xa6EfA single punctuation character (<code>+</code>, <code>,</code>, <code>$</code>, etc.).DkRepresents an optionally <code>Self</code>-qualified value/type path or \xe2\x80\xa6BkA qualified path to an associated item: \xe2\x80\xa6DfThe explicit <code>Self</code> type in a \xe2\x80\x9cqualified path\xe2\x80\x9d. The \xe2\x80\xa6AkEmit as little as possible.0ClRepresent a range akin to <code>ast::ExprKind::Range</code>.Bi<code>..</code> or <code>..=</code> rangeHiA range pattern (e.g., <code>1...2</code>, <code>1..2</code>, <code>1..</code>, <code>..2</code>, <code>1..=2</code>, <code>..=2</code>).HgA range (e.g., <code>1..2</code>, <code>1..</code>, <code>..2</code>, <code>1..=2</code>, <code>..=2</code>; and <code>..</code> in \xe2\x80\xa61BaThe <code>Range</code> lang item.D`A range pattern (e.g., <code>1..=2</code> or <code>1..2</code>).0CgTest whether the value falls within an inclusive or \xe2\x80\xa6BgA range that is inclusive of both ends.0CgA region variable. Should not exist outside of type \xe2\x80\xa600000CmOperation completed successfully, thread continues normal \xe2\x80\xa60BmExpansion produced a result (possibly dummy).0CjRetag references in the given place, ensuring they got \xe2\x80\xa6CiRetagging, a \xe2\x80\x9cStacked Borrows\xe2\x80\x9d shadow state operation1ChExpansion could not produce a result and needs to be \xe2\x80\xa60BbThe operator is right-associative.Ad<code>{:&gt;}</code>BaThe operator is right-associativeAjApproximation of 1/sqrt(x)CnRepresents a statically-describable scope that can be used \xe2\x80\xa6Dk<code>Scope</code>s are used to explicitly mark destruction scopes, and \xe2\x80\xa6CbA specific scope in which a name can be looked up.CkRepresents a fork-join scope which can be used to spawn \xe2\x80\xa60Di&lt;&lt;, &gt;&gt; \xe2\x80\x93 when shifting a single integer, rhs can be any \xe2\x80\xa6CiPrints a terser backtrace which ideally only contains \xe2\x80\xa60CeDisplay only the filename, as a way to reduce the \xe2\x80\xa6BaThe <code>sized</code> lang item.Ah<code>Sized</code> trait000000000n<code>/</code>AiWaiting for time to pass.CfWait for a bit, until there is a timeout to be called.1DdThe <code>Sleep</code> struct is embedded into each registry. It \xe2\x80\xa6BgA slice pattern <code>[a, b, c]</code>.BkA variable-length slice (<code>[T]</code>).AdA slice pattern, \xe2\x80\xa6CaA variable length slice (i.e., <code>[T]</code>).CkThe pointee of an array slice. Written as <code>[T]</code>.00CeUsed for references to unsized types with slice tail.0CdMatches against a slice, checking the length and \xe2\x80\xa611BkA constructor for array and slice patterns.AiArray and slice patterns.D`The type is matched by slices. <code>array_len</code> is the \xe2\x80\xa610555EcA slice type (does <em>not</em> include the <code>&amp;</code>): <code>[i32]</code>BoAn unsized slice type, e.g. <code>[u32]</code>.oA single space.Ao<code>#[optimize(speed)]</code>0CmSections which do not require relocation are written into \xe2\x80\xa6AiExtra per-location state.ClStack memory. Error if deallocated except during a stack \xe2\x80\xa61000BaStack represented as linked list.BlThe stack of goals currently being computed.CcChild process requests that we begin monitoring it.DcThe <code>start</code> lang item. For all binary crates without \xe2\x80\xa6AcMissing ` at start.DkThe state for the <code>FlowSensitiveAnalysis</code> dataflow analysis. \xe2\x80\xa6DjSome <code>data</code> together with information about how they relate \xe2\x80\xa6000oDataflow state.1111ChThe states in a <code>Dfa</code> represent byte offsets.2BbNo file specified, read from stdinDhThe <code>Steal</code> struct is intended to used as the value for a \xe2\x80\xa6BfStore the return value to the pointer.B`Appears as LHS of an assignment.DdThe different settings that the <code>-C strip</code> flag can have.BeThe style for a node or edge. See \xe2\x80\xa6CiA lookup table for computing the inverse byte for the \xe2\x80\xa6DaWhen collecting for an explicit <code>#[define_opaque]</code> \xe2\x80\xa6n<code>~</code>0DkSimilarly, a maximum address size of <code>u64</code> is assumed widely \xe2\x80\xa6EfA single token. Should never be <code>OpenDelim</code> or <code>CloseDelim</code>, \xe2\x80\xa6CmA token - this holds both delimiter (e.g. \xe2\x80\x98{\xe2\x80\x99 and \xe2\x80\x98}\xe2\x80\xa6CiA jobserver token has become available. Sent from the \xe2\x80\xa6DkA token. Unlike <code>tokenstream::TokenTree::Token</code> this lacks a \xe2\x80\xa6CcThis is only used for implicit token trees. The \xe2\x80\xa6CmParsed token. It doesn\xe2\x80\x99t contain information about data \xe2\x80\xa6BiA trait declaration (<code>trait</code>).AcA trait definition.AlE.g., <code>Iterator</code>.EmCorresponds to <code>where Foo: Bar&lt;A, B, C&gt;</code>. <code>Foo</code> here would be \xe2\x80\xa61010AoTrait paths in bounds or impls.AmThe sugared form of the trait323232BaA <code>trait</code> declaration.00AkThis is used in most cases.AeA tuple of constants.BfA tuple pattern (<code>(a, b)</code>).nTuple variant.BgThe <code>tuple_trait</code> lang item.EhA tuple pattern (e.g., <code>(a, b)</code>). If the <code>..</code> pattern fragment \xe2\x80\xa6A`A tuple variant.CdA tuple type. For example, <code>(i32, bool)</code>.00BhA tuple, e.g. <code>(a, b, c, d)</code>.CnAn argument of tuple type. For a \xe2\x80\x9cfound\xe2\x80\x9d argument, the \xe2\x80\xa6222BkA tuple type: <code>(i32, &amp;str)</code>.AmA struct with unnamed fields.AnA variant with unnamed fields.CoA tuple type, e.g. <code>(String, u32, Box&lt;usize&gt;)</code>CdEquivalent to <code>ty::Infer(ty::IntVar(_))</code>.0AgA pattern type pattern.A`A type variable.0000DfA <strong>ty</strong>pe <strong>v</strong>ariable <strong>ID</strong>.0000Ba<code>-Zunpretty=hir,typed</code>CdThe source and destination types of a transmutation.0Ag8-bit unsigned integer.BhLatch is not set, owning thread is awakefusize.CkA unary operation (e.g., <code>!x</code>, <code>*x</code>).0DgA <em>non-overloaded</em> unary operation. Note that here the deref \xe2\x80\xa6ClCombine fieldless variants into a single match arm. This \xe2\x80\xa6DfAll fields start at no offset. The <code>usize</code> is the field \xe2\x80\xa6BhA union definition (<code>union</code>).DjA union definition, e.g., <code>union Foo&lt;A, B&gt; {x: A, y: B}</code>.AdThe type is a union.03AeA <code>union</code>.BaA <code>union</code> declaration.0BaThe <code>unpin</code> lang item.BnThe <code>X</code> flag in <code>{:X?}</code>.0BkEnsure all literals use uppercase letteringBaA variable captured by a closure.BcAn upvar referenced by closure env.0CkWhen building place for an expression within a closure, \xe2\x80\xa6CnA constraint that came from a usage of a variable (e.g. in \xe2\x80\xa60Al<code>move |x| y + x</code>.Bh<code>self</code>, <code>mut self</code>1AlUsed to hold computed value.AlA type-level constant value.110111AeWidth of the terminalC`Predicate comes from <code>predicates_of</code>.BcA desugared <code>while</code> loopBeA while loop, with an optional label.BcA <code>while _ { .. }</code> loop.AlAppears as a width, e.g. \xe2\x80\xa6CjCan be specified as <code>extern &quot;win64&quot;</code>.AnStandard unsynchronized write.ChA write may have occurred on this memory range. Some \xe2\x80\xa6D`From the RFC: \xe2\x80\x9cA <em>write</em> means that the data may be \xe2\x80\xa6CkA <code>yield</code>, with an optional value to be yielded.DjA suspension point for coroutines (i.e., <code>yield &lt;expr&gt;</code>).AkA plain <code>yield</code>.AfMarks a suspend point.AgDestination of a yield.1B`A <code>yield</code> expression.DaResult of <code>yield_now()</code> or <code>yield_local()</code>.0CmA chunk that is all zeros; we don\xe2\x80\x99t represent the zeros \xe2\x80\xa6AfAfter the equals sign.EdIf <code>safe</code> is <code>Some</code>, then the pointer is aligned as indicated.BeThe alignment we know for this place.CnThe alignment of the allocation to detect unaligned reads. \xe2\x80\xa60AoOptionally specified alignment.CbAlignment in bytes, if explicitly specified by \xe2\x80\xa6DeAllocates memory as described in <code>Layout</code>. This memory \xe2\x80\xa6DcAllocates an object in the <code>TypedArena</code>, returning a \xe2\x80\xa6CbMemory allocation implementation for rustc_public.CgThis module provides methods to retrieve allocation \xe2\x80\xa6CjInternal memory allocator implementation for rustc_public.CnReturns true if the corresponding type is inhabited in the \xe2\x80\xa6CeApplies a single projection element, yielding the \xe2\x80\xa6AkApplies the queued changes.BeApply the opportunities on the graph.AkUsed to allocate HIR nodes.CgThe arena that types, regions, etc. are allocated from.0ClWe use an arena to avoid cloning the slices when cloning \xe2\x80\xa6CkThe number of fields for this constructor. This must be \xe2\x80\xa6CmThe number of fields in this pattern. E.g. if the pattern \xe2\x80\xa60EdConvenience method to create the <code>&lt;lhs&gt; as &lt;rhs&gt;</code> suggestion.AjAttributes of the variant.CmAttributes, both outer and inner. These are stored in the \xe2\x80\xa6BjAttributes inside the owner being lowered.CmData structures for representing parsed attributes in the \xe2\x80\xa6BfCollected attributes of the HIR nodes.AhAttributes on this item.CiBegin initializing this InitOnce. Must only be called \xe2\x80\xa6CmOne indexed Line and Column of the first character of the \xe2\x80\xa6EeConverts a <code>hir</code> binary operator to the corresponding <code>ast</code> \xe2\x80\xa6D`The bitwise or (<code>|</code>) of the bits in two flags values.0000000000000000000000000000CkA block can only yield a constant if it has exactly one \xe2\x80\xa6BfThe block that the location is within.CnUniversal getter for block data, either it is in \xe2\x80\x98old\xe2\x80\x99 \xe2\x80\xa6BoBound that applies if <code>ty</code> is equal.0AcProduce a UB error.DbBuilds the whole <code>assert!</code> expression. For example, \xe2\x80\xa6CkCombine the provided files, rlibs, and native libraries \xe2\x80\xa6CjBuilds a \xe2\x80\x9cglobal file table\xe2\x80\x9d for this CGU, mapping \xe2\x80\xa61ClAfter having set all necessary fields, this converts the \xe2\x80\xa6ChBuilding proof trees incrementally during trait solving.CnBuild a monomorphic body for a given instance based on the \xe2\x80\xa6D`Creates a new <code>ThreadPool</code> initialized using this \xe2\x80\xa6CmDeprecated in favor of <code>ThreadPoolBuilder::build</code>.DiCreates a new <code>FormatReportFormatter</code> from the settings in \xe2\x80\xa6CnThis is conceptually a <code>&amp;&#39;self.owner [u8]</code>.BnNumber of bytes of code (when pretty-printed).DkSince this has passed the validation of <code>MetadataBlob::new</code>, \xe2\x80\xa6CnThe actual bytes of the allocation. Note that the bytes of \xe2\x80\xa60CkProvenance in this map only applies to the given single \xe2\x80\xa6BjThe number of bytes, <code>&gt;= 2</code>.EcReturns the <code>DefId</code> of the <code>CStr</code> lang item if it is defined.CbA small LRU cache of searches of the borrow stack.0DiThe cache only tracks the <code>ambient_variance</code> as it\xe2\x80\x99s the \xe2\x80\xa6CkWe\xe2\x80\x99re able to use a cache here as the folder does not \xe2\x80\xa6DjThis cache only tracks the <code>DebruijnIndex</code> and assumes that \xe2\x80\xa6ClWe only use the debruijn index during lookup. We don\xe2\x80\x99t \xe2\x80\xa62AnCache for candidate selection.4ClThis same cache is used throughout rustdoc, including in \xe2\x80\xa6BmThe <code>Cache</code> used during rendering.BgThe reason we have to prove this thing.000AiMatch on a variant of \xe2\x80\xa611111111DdThe list of <code>BasicBlock</code>s from the one that found the \xe2\x80\xa6ClThe current hierarchy of parent headings, the levels are \xe2\x80\xa6CeIterator over chars. Slightly faster than a &amp;str.0AiRun rustfmt in check modeEgThe <code>Visitor</code> responsible for actually checking a <code>mir::Body</code> \xe2\x80\xa6DkCheck function to be called during the <code>PostExpansionVisitor</code>\xe2\x80\xa60Actypeck: check phaseCdReturns true if <code>local</code> can be propagatedEbChecks if the next token is <code>tok</code>, and returns <code>true</code> if so.CfThis module defines the primary IR used in rustdoc \xe2\x80\xa6BdRemoves all items from the undo log.CkClears the map, removing all key-value pairs. Keeps the \xe2\x80\xa6BdClears the set, removing all values.CeClears this color specification so that it has no \xe2\x80\xa6AcClear all elements.EeSets all columns at <code>row</code> to false. Has no effect if <code>row</code> doesBdUnsets the <code>index</code>th bit.5454CnRemoves all provenance inside the given range. If there is \xe2\x80\xa6ClActually frees the underlying memory in contrast to what \xe2\x80\xa67676CgMutex clock. This tracks the moment of the last unlock.CmTracks the happens-before relationship between a cond-var \xe2\x80\xa6CdTracks the happens-before relationship between a \xe2\x80\xa6CeThe increasing clock representing timestamps that \xe2\x80\xa6BmThe release clock associated with this event.CcClones the inner value along with the frozen state.BdText that ends the permission block.AjClose the file descriptor.CjThis module contains some shared code for encoding and \xe2\x80\xa6BbThis module defines the following.BhCount the number of set bits in the set.BdCount the number of bits in the set.BdCount the number of 1s in the chunk.CcReturns the number of elements in <code>row</code>.CgNumber of elements to copy from src to dest, not bytes.0DgParses a <code>Count</code> parameter at the current position. This \xe2\x80\xa6CeNumber of elided lifetimes, used for elision in path.CkCreates a new spin latch for cross-threadpool blocking. \xe2\x80\xa6BaCode for debugging the dep-graph.CfUsed to deduplicate global allocations: functions, \xe2\x80\xa6CkReturns a structure that calls <code>f</code> when dropped.CkThe number of parent frames plus one (thus, the topmost \xe2\x80\xa6DgConvenience method to create the <code>*&lt;expr&gt;</code> suggestion.CiTreat this value as a pointer and return the place to \xe2\x80\xa6CmAsserts that this operand is a pointer (or reference) and \xe2\x80\xa6BgReturn a name suitable for diagnostics.BjConvert the MacroKinds to a static string.CaGet an English description for the item\xe2\x80\x99s kind.CnA human readable name for the res kind (\xe2\x80\x9cfunction\xe2\x80\x9d, \xe2\x80\x9c\xe2\x80\xa6BiThe English description of the namespace.CaReturns a description of this abstract data type.CgThe description wording should combine well with \xe2\x80\x9c\xe2\x80\xa6CmGives a description of the renderer. Used for performance \xe2\x80\xa6AmDiscriminant of this variant.BdThe discriminant value being tested.0BjRustdoc\xe2\x80\x99s FileSystem abstraction module.CgClears the map, returning all key-value pairs as an \xe2\x80\xa6CfClears the set, returning all elements in an iterator.10101010Cnset of places to drop when exiting this scope. This starts \xe2\x80\xa6BbCreates a dummy <code>Expr</code>.BjSome token that will be thrown away later.EdWraps <code>value</code> in a binder, asserting that <code>value</code> does not \xe2\x80\xa6CjCreates dummy var values which should not be used in a \xe2\x80\xa60BmCreate a new binder with no bounded variable.2121FeIf <code>self</code> contains a <code>Span</code>, it\xe2\x80\x99ll be replaced with <code>DUMMY_SP</code> \xe2\x80\xa6BfImplementation of the early lint pass.ClThe actual, physical, edges we have recorded for a given \xe2\x80\xa6BgReturns all of the edges in this graph.BfGet a flags value with all bits unset.00000000000B`Empty hash map to simplify code.11CmConstruct a trait environment suitable for contexts where \xe2\x80\xa622CjReturns a reference to the (per header unique, static) \xe2\x80\xa60333AmNew matrix with no witnesses.4444444444ClIf a span is entered, we exit the previous span (if any, \xe2\x80\xa6EmInstalls <code>self</code> in a <code>TyCtxt</code> and <code>ImplicitCtxt</code> for the \xe2\x80\xa6CfGet a wrapper around a mutable access to the value \xe2\x80\xa6CnThe most recent entry returned by readdir(). Will be freed \xe2\x80\xa6CmGets the given key\xe2\x80\x99s corresponding entry in the map for \xe2\x80\xa600BaNops after entry, but before bodyAdNops after the entry22DhReturn the <code>epoch</code> instant (time = 0), to convert between \xe2\x80\xa6ClThe \xe2\x80\x9cepoch\xe2\x80\x9d for this machine\xe2\x80\x99s monotone clock: the \xe2\x80\xa6CgReturns <code>true</code> if fr1 is known to equal fr2.DfIndicates that trying to normalize <code>key</code> resulted in error.CiTracks if we encountered an error while checking this \xe2\x80\xa6EeCreates a new <code>Diagnostic</code> with the given <code>message</code> at the spanDeAdds a new child diagnostic message to <code>self</code> with the \xe2\x80\xa6ClWhen things go wrong, we need some error handling. There \xe2\x80\xa64AhStart/end of the sectionAkExtra data for the machine.0AlExtra state for the machine.0DjA non-empty <code>extra</code> allows for a precise calculation of the \xe2\x80\xa6DbReturns an iterator over the files contained in <code>self</code>.CgPeeks the next symbol from the input stream without \xe2\x80\xa6AaFormatting flags.CjThis field provides fast access to information that is \xe2\x80\xa60CeFlags of the ADT (e.g., is this a struct? is this \xe2\x80\xa6CiFlags of the variant (e.g. is field list non-exhaustive)?1222BeSimple file-locking apis for each OS.EeAssign <code>TOP</code> to all places that are contained in <code>place</code> or \xe2\x80\xa6CmIf the extern entry is not referenced in the crate, force \xe2\x80\xa6Cmas we walk the defining uses, we are checking that all of \xe2\x80\xa6DeImplementation of the SYS_futex syscall. <code>args</code> is the \xe2\x80\xa6CaDerive a new pointer from one with the given tag.ClConstructs a \xe2\x80\x9cnormal\xe2\x80\x9d graph from the constraint set; \xe2\x80\xa6CcMatch arm guard, e.g. <code>n &gt; 10</code> in \xe2\x80\xa6AfOptional guard clause.BkIterate over the first pattern of each row.BlAll cycle heads this cache entry depends on.ClAll cycle heads this goal depends on. Lazily updated and \xe2\x80\xa6Dk\xe2\x80\x9cHooks\xe2\x80\x9d let you write <code>tcx</code> methods in downstream crates \xe2\x80\xa6CjHooks to be able to register functions in other crates \xe2\x80\xa60CfFor a single-segment attribute, returns its ident; \xe2\x80\xa6CeFor a single-segment meta item, returns its name; \xe2\x80\xa6CkFor a single-segment meta item, returns its identifier; \xe2\x80\xa6CeFor a single-segment attribute, returns its name; \xe2\x80\xa6BlThe identifier portion of this path segment.AmThe identifier for the field.AdName of the variant.CeReturns an identifier if this token is an identifier.54ClGet the identifier of this <code>Node</code>, if applicable.EmEither a named lifetime definition (e.g. <code>&#39;a</code>, <code>&#39;static</code>) or an543EcComputes the <code>Ident</code> of this variant by looking up the <code>Span</code>0AaName of the item.AiThe suggested identifier.00BnThe identifier for the binding, always the \xe2\x80\xa6CbThe name of the argument if it\xe2\x80\x99s a simple ident.B`Name used to refer to the crate.CnThis is the data stored inside the file. ItemId is used to \xe2\x80\xa6AoImplementation of CompilerCtxt.CnMaps a type ID to all known implementations for that type. \xe2\x80\xa6CgAll impls (both of traits and inherent) for this union.ClAll impls (both of traits and inherent) for this struct. \xe2\x80\xa6B`<code>impl</code>s for the enum.CgThe implementations, inherent and of traits, on the \xe2\x80\xa6CiExtracts the value of this index as a <code>usize</code>.0DcAlways <code>0</code> for types that cannot have multiple variants.CnWhich argument this position refers to (Ok), or would\xe2\x80\x99ve \xe2\x80\xa622CfPoints to the current token tree in the stream. In \xe2\x80\xa633333333333333333333333333333333333333333333333333DiGets the (dialect, phase) index of the current <code>MirPhase</code>. \xe2\x80\xa64444444444444444444CnStores a map from fingerprints to nodes per dep node kind. \xe2\x80\xa65550CeThe index of the argument in the original definition.666666EeIndex into a <code>serde_json::Value</code> using the syntax <code>value[0]</code> orChOur index amongst the broadcast threads (ranges from \xe2\x80\xa6CeGets the index of this thread in the pool, within \xe2\x80\xa6CeOur index amongst the worker threads (ranges from \xe2\x80\xa6:::::::::::::::::CkA mapping of IDs that contains all local items for this \xe2\x80\xa6CkA collection of all items in the local crate as well as \xe2\x80\xa6CdThe inference context of the lowering context if \xe2\x80\xa6DcSet to <code>None</code> to disable the resolution of inference \xe2\x80\xa6BmError Reporting Code for the inference engineBnThe type-specific fields describing this item.CiGets the argument type at the given offset. This will \xe2\x80\xa6AbInput to be parsedBoAn anonymous string containing the source code.CgIs this for a function (rather than a static variable).BkRelevant <code>rust-lang/rust</code> issue.0CnA list of all items produced by parsing attributes so far. \xe2\x80\xa600BkThe elements of the map in insertion order.0DiMappings from lang items to their possibly found <code>DefId</code>s. \xe2\x80\xa6DdThe key is the item <code>ItemId</code> and the value is: (item, \xe2\x80\xa6Bo<code>Item</code>s declared inside this module.EgAssociated <code>Item</code>s that can/must be implemented by the <code>impl</code> \xe2\x80\xa6CjThe list of associated items contained in this impl block.CkIf this value is known, returns the type it is known to be.ClIf this value is known, returns the const it is known to \xe2\x80\xa6BhThe crate root this path is relative to.BjReturns the item\xe2\x80\x99s <code>CrateNum</code>ClReturn information about the crate where this definition \xe2\x80\xa6elabelCbWhat label should we attach to this span (if any)?0CeOptional label to display adjacent to the annotation.CeLabel that should be placed at this location (if any)DkThis is <code>Some(_)</code> iff there is an explicit user-specified \xe2\x80\x99\xe2\x80\xa6BkThe latch that is used to wait on this job.0Ci\xe2\x80\x9cerror: internal compiler error\xe2\x80\x9d, \xe2\x80\x9cerror\xe2\x80\x9d, \xe2\x80\x9c\xe2\x80\xa6D`Returns the diagnostic <code>level</code> for <code>self</code>.BnNumber of lines of code (when pretty-printed).CaLocations of lines beginnings in the source code.mThe new linesCjthe lines that are identified as part of an itemized blockCgThe set of lines (context and old/new) in the mismatch.2AlA list of link replacements.ClThis mapping resolves intra-doc links from the docstring \xe2\x80\xa6AaRegistered lints.0EhWe use <code>flock</code> rather than <code>fcntl</code> on Linux, because WSL1 does \xe2\x80\xa6BgFormat list-like expressions and items.CbConfiguration options related to rewriting a list.BgA pointer to the contents of the place.DfMakes a local <code>DefId</code> from the given <code>DefIndex</code>.C`The index of the local variable we are visiting.mlocal to dropCgReturn a local variable if this info is related to one.CmStores the local DefIds in a dense map. Local queries are \xe2\x80\xa604Ac<code>?Trait</code>CkChecks if a required version from this module is met at \xe2\x80\xa6DhTry to combine two <code>HomogeneousAggregate</code>s, e.g. from two \xe2\x80\xa6DnPrepend the given set of <code>spans</code> onto the set in <code>self</code>.FeReturns a new <code>Range</code> with lines from <code>self</code> and <code>other</code> if they \xe2\x80\xa6CkLets you pick and choose as what you want to parse each \xe2\x80\xa6DhCreate <code>Some(Vec![..])</code> of all constants, unless there is anyCn<code>-Z instrument-xray=never</code>, disable instrumentationAgAll nodes of this tree.00gOutputsC`The list of obligations. In between calls to \xe2\x80\xa6BdReturns all the nodes in this graph.AoFull HIR for the current owner.AdContents of the HIR.ChMap from a region to the index of the node in the graph.BdThe set of all DepNodes in the graph0ClNotes to be displayed when an attempt is made to use the \xe2\x80\xa60CnGet the id of the thread that currently owns this lock, or \xe2\x80\xa6BhThe thread that currently owns the lock.CkReturns a list of page ranges managed by the allocator, \xe2\x80\xa6BdHelper functions for causing panics.Cnif some job panicked, the error is stored here; it will be \xe2\x80\xa6BoId of the generic parameter that introduced it.0CdThe parameter corresponding to the anonymous region.Bl<code>true</code> if parentheses are needed.CnParses an <code>if let</code> or <code>match</code> expressionClAttempt to parse a meta-variable expression from a token \xe2\x80\xa6CoTakes a <code>tokenstream::TokenStream</code> and returns a \xe2\x80\xa6DiParses a <code>MirPhase</code> from a pair of strings. Panics if this \xe2\x80\xa6DhContains <code>ParseSess</code> which holds state living beyond what \xe2\x80\xa6CkParses a clobber ABI for the given target, or returns a \xe2\x80\xa6CgParses a <code>MetaItem</code> into a <code>Cfg</code>.CgReturns a collection of parsed macro def\xe2\x80\x99s arguments.ClThis module contains paths to types and functions Clippy \xe2\x80\xa6CmThe values are start positions in <code>out</code>, in bytes.DgMaintains a mapping of local crate <code>DefId</code>s to the fully \xe2\x80\xa6ClMaps IDs to fully qualified paths and other info helpful \xe2\x80\xa6BeA list of path defined in attributes.CmRecords how far through the \xe2\x80\x9cdesugaring and optimization\xe2\x80\xa6ClComputations on places \xe2\x80\x93 field projections, going from \xe2\x80\xa6BiInformation about the <code>Place</code>.BhThe <code>Place</code> that is captured.01EfReturns the <code>Place</code> that is the target of this <code>Operand</code>, or \xe2\x80\xa6mPlace to drop0mThis place\xe2\x80\xa6DkReads as much as possible into the given buffer <code>ptr</code> from a \xe2\x80\xa6CnPattern analysis sometimes wants to print patterns as part \xe2\x80\xa6CkExecute <code>f</code> then unroll any bindings it creates.DjRetrieves the type to which <code>vid</code> has been instantiated, if \xe2\x80\xa6Df<code>probe_kind</code> is only called when proof tree building is \xe2\x80\xa6B`Test if this latch has been set.3DiRemove all <code>Def</code> nodes, and all branches of the layout for \xe2\x80\xa6DjNegates elements from <code>left</code> when the corresponding element \xe2\x80\xa6CiExperimental types for the trait query interface. The \xe2\x80\xa6CgThe rustc Query System: Query Definitions and ModifiersCeThe current query job, if any. This is updated by \xe2\x80\xa60BhValues computed by queries that use MIR.3C`Look up SearchPathFile by (prefix, suffix) pair.4BlThe queue of threads waiting for this mutex.AkNo output printed to stdoutEhQuote a <code>TokenStream</code> into a <code>TokenStream</code>. This is the actual \xe2\x80\xa6Dg<code>quote!(..)</code> accepts arbitrary tokens and expands into a \xe2\x80\xa6BkWhich radix the literal was represented in.DmConvenience method to create the <code>&lt;lhs&gt;..&lt;rhs&gt;</code> or \xe2\x80\xa6BoThe range covered by this element; never empty.0DdFor this SCC, the range of <code>all_successors</code> where its \xe2\x80\xa6BbThe range of bits for a given row.CkThe range in the markdown that the code block occupies. \xe2\x80\xa6EcIndicates that while trying to normalize <code>key</code>, <code>key</code> was \xe2\x80\xa60CfReset the current color settings to their original \xe2\x80\xa6BdGet whether reset is enabled or not.ChA pool of addresses we can reuse for future allocations.DkDistinguishes between <code>unsafe { ... }</code> and <code>{ ... }</code>.0Be<code>LocalDefId</code> of the scope.0ClThe source scope, keeping track of which bindings can be \xe2\x80\xa6ClThe scope for this statement; may be used as lifetime of \xe2\x80\xa6ClManaging the scope stack. The scopes are tied to lexical \xe2\x80\xa6DhMethods for custom fork-join scopes, created by the <code>scope()</code>DjCreates a \xe2\x80\x9cfork-join\xe2\x80\x9d scope <code>s</code> and invokes the closure \xe2\x80\xa60CjCreates a scope that executes within this thread-pool. \xe2\x80\xa6BfThe allocated box to fit the text intoClFor unstable features: the version the feature was added \xe2\x80\xa6BkRust release which stabilized this feature.0DeUsually a version number when this <code>Item</code> first became \xe2\x80\xa6CmIf true, the size is exact, otherwise it\xe2\x80\x99s only a lower \xe2\x80\xa60AoSleep for the desired duration.CjCode that decides when workers should go to sleep. See \xe2\x80\xa6BhSlice this slice by <code>slicer</code>.CmPerforms region inference and report errors if we see any \xe2\x80\xa6ChCode to solve constraints and write out the results. \xe2\x80\xa6CfThe next-generation trait solver, currently still WIP.AmNumber of spaces left on lineCdReturns the <code>Span</code>s in <code>self</code>.ClPuts the task into the Rayon threadpool\xe2\x80\x99s job queue in \xe2\x80\xa6DkSpawn a thread with the <code>ThreadBuilder</code> parameters, and then \xe2\x80\xa6DjSpawns a job into the fork-join scope <code>self</code>. This job will \xe2\x80\xa62CnSpawns an asynchronous task in this thread-pool. This task \xe2\x80\xa6DkThe index in <code>TyAlias.generics.where_clause.predicates</code> that \xe2\x80\xa6CgDivides the inline const args into their respective \xe2\x80\xa6CjPartition a range of integers into disjoint subranges. \xe2\x80\xa6CkThis computes constructor splitting for variable-length \xe2\x80\xa6CjThis analyzes a column of constructors to 1/ determine \xe2\x80\xa6CnDivides the closure args into their respective components. \xe2\x80\xa6CdDivides the coroutine args into their respective \xe2\x80\xa6CnMutable state of the visit: the tags left to handle. Every \xe2\x80\xa6AgThe virtual call stack.BdStack used when doing (reverse) DFS.11CmManages the low-level pushing and popping of stack frames \xe2\x80\xa6BdBorrow the current thread\xe2\x80\x99s stack.0CbThe stack of things yet to be completely expanded.DiThe lower bound of the range, or <code>None</code> for ranges such as \xe2\x80\xa6BiA pointer to the start of the free space.CcThe current byte index into <code>init_mask</code>.0CjCreates an empty span pointing to directly before this \xe2\x80\xa6BgIndex of the first byte in the templateChSee <code>DiagCtxt::stash_diagnostic</code> for details.AdAST pretty printing.CfWhether the lazy init mask is fully initialized or \xe2\x80\xa6BkThe state variable that is updated. The \xe2\x80\xa6CjState discriminant used when suspending or resuming at \xe2\x80\xa6BhTry to steal a single job and return it.CjWhat happened inside of this probe in chronological order.0CnThe valid autoderef steps that could be found by following \xe2\x80\xa6101001111001AlThe statements in the block.AfStatements in a block.AlThe statements in the blocK.BgStores a value into the atomic integer.CnDenotes if the attribute decorates the following construct \xe2\x80\xa6BiVisual representation of this suggestion.1DiDefines the <code>TermsContext</code> basically houses an arena where \xe2\x80\xa6ChPeeks the third symbol from the input stream without \xe2\x80\xa6DhConverts the <code>ScalarInt</code> to i8. Panics if the size of the \xe2\x80\xa6DjConverts the scalar to produce an <code>i8</code>. Fails if the scalar \xe2\x80\xa6DgConvert this to an <code>OpTy</code>. This might be an irreversible \xe2\x80\xa60CmAttempt reparsing the pattern as a type. This is intended \xe2\x80\xa6DaAttempts to reparse as <code>Ty</code> (for diagnostic purposes).FbConverts the <code>ScalarInt</code> to <code>u8</code>. Panics if the <code>size</code> of the \xe2\x80\xa6DiConverts the scalar to produce a <code>u8</code>. Fails if the scalar \xe2\x80\xa6AbThe current token.0BmThe total size of the argument, which can be:CkThis is the heart of the liveness computation. For each \xe2\x80\xa6BgReturns a string tuple for this target.BbType of parameter being converted.CfReturns a documentation-level item type from the item.BcThe type referred to by this alias.AgThe type of the static.AiThe type of the constant.0CkInside a trait declaration, this is the default for the \xe2\x80\xa6BbThe type of the contained element.DcThe base type, e.g. the <code>u32</code> in <code>u32 is 1..</code>AhThe type of the pointee.EfThe type of the pointee, e.g. the <code>i32</code> in <code>&amp;&#39;a mut i32</code>BdThe type that\xe2\x80\x99s being constrained.BeThe type of the constant as declared.C`Common types, pre-interned for your convenience.0BoUnion-find implementation. The main type is \xe2\x80\xa6BcUnify two types (using sub or lub).CfWhat is the variance that satisfies the two variances?EgMerges the set containing <code>a</code> and the set containing <code>b</code> into \xe2\x80\xa6D`The bitwise or (<code>|</code>) of the bits in two flags values.0000000ClUnions two keys without the possibility of failure; only \xe2\x80\xa611FdSets <code>self = self | other</code> and returns <code>true</code> if <code>self</code> changed \xe2\x80\xa600222222222GaSets <code>dst</code> to the union of <code>dst</code> and <code>src</code>, returns true if <code>dst</code> \xe2\x80\xa633333333CeMerges two sorted sequences into one sorted sequence.BkCompute the union of two <code>Dfa</code>s.AnUnions two edge sets together.66BdResult when lhs is NaN or rhs is NaNCmThis module contains collection types that don\xe2\x80\x99t expose \xe2\x80\xa6EaReturns a <code>Span</code> from the beginning of <code>self</code> until the \xe2\x80\xa6BaInferring borrow kinds for upvarsBoThe query and related span that uses the cycle.0CmEven for unions, we need to use the correct registers for \xe2\x80\xa6EhThis stores a pointer to a <code>GlobalCtxt</code>. This is set to <code>Some</code> \xe2\x80\xa60CeWhere the data for this user variable is to be found.AdThe value to return.0C`The primitive type used to represent this value.DkUnions never have niches, so there is no <code>valid_range</code>. Even \xe2\x80\xa633CiPacks together a number of counters. The counters are \xe2\x80\xa6G`Something like <code>&quot;&amp;str&quot;</code> or <code>&quot;alloc::string::String&quot;</code>, in which \xe2\x80\xa6ClThe value of the evaluated expression for this constant, \xe2\x80\xa6ChThe numerical value of the discriminant. Stored as a \xe2\x80\xa6CmInside a trait declaration, this is the default value for \xe2\x80\xa6DeCalls the corresponding <code>visit_*</code> function on the visitor.CmAST walker. Each overridden visit method has full control \xe2\x80\xa6oThe MIR VisitorAoThe rustc_public\xe2\x80\x99s IR VisitorCnA visiting traversal mechanism for complex data structures \xe2\x80\xa6ClThe width. E.g. <code>{:5}</code> or <code>{:width$}</code>.CjA user-provided, batching width. If not given, we will \xe2\x80\xa6AlMinimum width of the output.CnThe encoded size of the elements of a table is selected at \xe2\x80\xa6000CdThe string width requested for the resulting format.BeGets a slice of the underlying words.CaA compressed representation of <code>RWU</code>s.AnPrint the current indentation.ClDetect data-races for an unsynchronized write operation. \xe2\x80\xa6CjThe vector clock timestamp and the thread that did the \xe2\x80\xa6CnA write call adds the 8-byte integer value supplied in its \xe2\x80\xa6EgWrites as much as possible from the given buffer <code>ptr</code>. <code>len</code> \xe2\x80\xa6DmWrite out a string version of the <code>FluentValue</code> to <code>W</code>.DdMirrors <code>Variance::xform</code> - used to \xe2\x80\x98combine\xe2\x80\x99 the \xe2\x80\xa6Dg<code>a.xform(b)</code> combines the variance of a context with the \xe2\x80\xa6101001CgMapping for ExternAbi to CanonAbi according to a Target0CnThe tracked value is uninitialized or was moved out of and \xe2\x80\xa60Clrepresents: a unique pointer; allows: child reads, child \xe2\x80\xa6CeReverse Mode, Compute derivatives for this scalar \xe2\x80\xa6CkThis is the state during which the session directory is \xe2\x80\xa6B`We added <code>RegionVid</code>.AbBorrow expression.FkA referencing operation (<code>&amp;a</code>, <code>&amp;mut a</code>, <code>&amp;raw const a</code> or \xe2\x80\xa6DoA referencing operation (i.e., <code>&amp;a</code> or <code>&amp;mut a</code>).An<code>Type: const Trait</code>0CkDefinitely known to diverge and therefore not reach the \xe2\x80\xa6ClForces the machine code generator to always preserve the \xe2\x80\xa6CjAlways use color, whether it is a piped or terminal output0BePlace leading pipes on all match armsAg<code>&amp;&amp;</code>ClEither transmutation is allowed, we have an error, or we \xe2\x80\xa6EeRepresents a job stored in an <code>Arc</code> \xe2\x80\x93 like <code>HeapJob</code>, but mayClInformation about the ABI of a function\xe2\x80\x99s argument, or \xe2\x80\xa6CmInformation about how to pass an argument to, or return a \xe2\x80\xa6DiThe coercion was manually written by the user with an <code>as</code> \xe2\x80\xa60DgAn argument to one of the <code>asm!</code> macros. The argument is \xe2\x80\xa6DkEvaluates the operand, which must have type <code>bool</code>. If it is \xe2\x80\xa60n<code>=</code>EfAn assignment (<code>a = foo()</code>). The <code>Span</code> argument is the span \xe2\x80\xa6BmAn assignment (e.g., <code>a = foo()</code>).ClAssign statements roughly correspond to an assignment in \xe2\x80\xa60BfAn assignment: <code>lhs = rhs</code>.CmDenotes a call to the intrinsic function <code>assume</code>.0CbA tail call return, with the value to be returned.CeA <code>become</code>, with the value to be returned.BaA <code>become</code> expression.CfA binary string (e.g., <code>b&quot;abc&quot;</code>).Aa<code>{:b}</code>lA binary op.DbA binary operation (e.g., <code>a + b</code>, <code>a * b</code>).0AmLiteral starts with \xe2\x80\x9c0b\xe2\x80\x9d.BkA <em>non-overloaded</em> binary operation.CfDeclares lifetimes, and each can be early-bound or \xe2\x80\xa6Di<code>Binder</code> is a binder for higher-ranked lifetimes or types. \xe2\x80\xa6CmA binder represents a possibly generic type and its bound \xe2\x80\xa6111BmThe <code>&amp;</code> operator (bitwise and)BbThe <code>bitand</code> lang item.111BiThe <code>^</code> operator (bitwise xor)BbThe <code>bitxor</code> lang item.111AkTracking pointer provenance0ClA \xe2\x80\x9cboring\xe2\x80\x9d constraint (caused by the given location) \xe2\x80\xa6BnA local without anything interesting about it.1EcTake the address and produce either a <code>&amp;</code> or <code>*</code> pointer.oMutable borrow.BeA borrow, e.g. <code>&amp;arg</code>.AjBounds on type parameters.DaThe macro statement had braces (e.g., <code>foo! { ... }</code>).ClThe fields of any kind of aggregate. Structs, tuples and \xe2\x80\xa60CnAssociates a branch region with separate counters for true \xe2\x80\xa6CfEmit control-flow protection for branches (enables \xe2\x80\xa6ChAlso instrument branch points (includes block coverage).CjHow to break. Described in more detail in the module docs.CcA trait defining types that are used to emulate \xe2\x80\xa6DlCreate the <code>AttributeKind</code> given attribute\xe2\x80\x99s <code>Span</code>.CgTrack the position of viewable characters in our bufferAnThe callee of a function call.Aa<code>{:^}</code>BlEmit Control Flow Guard metadata and checks.nProve a clauseClA subset of predicates which can be assumed by the trait \xe2\x80\xa6101111AgA client of a jobserverBcInclusive at the beginning and end.Bj<code>T1</code> coerced to <code>T2</code>00000CaImproper orphan check for backward compatibility.00BgUnification of two or more identifiers.AjThe compiler configurationCdA regular string, like <code>&quot;foo&quot;</code>.CjLine and byte-column coordinates of a source code span \xe2\x80\xa6EhSome <code>ResultsCursor</code>s want to own an <code>Analysis</code>, and some want \xe2\x80\xa6DkThe function passed to <code>cs_fold</code> is called repeatedly with a \xe2\x80\xa6DiEncodes if a <code>DefKind::Ctor</code> is the constructor of an enum \xe2\x80\xa6BgPeekable iterator over a char sequence.0ChOnly the specified groupings should have their order \xe2\x80\xa6CfAn ABI that rustc does not know how to call or define.CjAn ABI that rustc does not know how to call or define. \xe2\x80\xa610CkCustom function called when a duplicate attribute is found.A`A custom reason.ClA custom (free-form) fluent-translated error, created by \xe2\x80\xa60CmCustom sources for explicit parser calls from plugins and \xe2\x80\xa6CfUnix-like linker for Apple targets (both naked and \xe2\x80\xa6CnA unique identifier that we can use to lookup a definition \xe2\x80\xa6AhDeinitializes the place.AnAppears on <code>Deinit</code>1AkA token-based derive macro.BjA derive macro <code>#[derive(Foo)]</code>AbA derive macro \xe2\x80\xa6CjThe tag directly stores the discriminant, but possibly \xe2\x80\xa6CgItem is directly accessible, without help of reexports.B`Call a known <code>FnDef</code>.CmWe know the enum does no niche optimizations and can thus \xe2\x80\xa6AkPass the argument directly.40Blthis ABI is exactly mapped for this platform0ChWhether the obligation is user-specified rather than \xe2\x80\xa6n<code>$</code>0CmThe type that holds the dataflow state at any given point \xe2\x80\xa60o<code>..</code>DkFor terminators that have two successors, like <code>assert</code> with \xe2\x80\xa60CfType of dynamic symbols (for <code>dlsym</code> et al)0CeUEFI ABI, usually an alias of C, but sometimes an \xe2\x80\xa60CeReplace all anonymous lifetimes by provided lifetime.B`Enable the llvm offload pipelineB`Enable the autodiff opt pipelineBnEndianness of the target, which must match \xe2\x80\xa6CnThis kind of label uses the graphviz label escString type: \xe2\x80\xa6DaA literal <code>%%</code> escape, with its start and end indices.CnWrapper struct which will emit the HTML-escaped version of \xe2\x80\xa6DfOnly used for lints. Requires a <code>LintExpectationId</code> for \xe2\x80\xa6DgThe <code>expect</code> level will suppress the lint message but in \xe2\x80\xa60CfA unique ID associated with a macro invocation and \xe2\x80\xa6Db<code>extern</code> qualifier on a function item or function type.DfProvided by <code>extern crate foo</code> or as part of the extern \xe2\x80\xa6BmCrate is loaded by <code>extern crate</code>.BbA constant from a different crate.DiValue which represents the <code>FiniteBitSet</code> having every bit \xe2\x80\xa6CgCompilation failed, either due to normal errors or ICE.BePerforms fat LTO on the given module.C`Encoded value. DO NOT CONSTRUCT BY HAND; use \xe2\x80\xa6CkA call to <code>Fn(..)::call(..)</code>, desugared from \xe2\x80\xa6Acwhen a fn is called10DbThe <code>FnCtxt</code> stores type-checking context needed to \xe2\x80\xa6CeA signature (not the body) of a function declaration.CfRepresents the header (not the body) of a function \xe2\x80\xa6BcThe <code>fn_once</code> lang item.AlOfficially, the semantics of0Ec<code>Forbid</code> is equivalent to the <code>deny</code> level but can\xe2\x80\x99t be \xe2\x80\xa60CkAny attempt to add new dependencies will cause a panic. \xe2\x80\xa600DcAnything else - <code>panic!(&quot;error {}: {}&quot;, a, b)</code>ChA single <code>printf</code>-style formatting directive.CjA formatted output substitution with its internal byte \xe2\x80\xa6ChA normal format string as per <code>format_args!</code>.BeFormat files and their child modules.ClA free type alias that actually checks its trait bounds. \xe2\x80\xa60000BbThe <code>freeze</code> lang item.Clrepresents: a shared pointer; allows: all read accesses; \xe2\x80\xa6AiAn owned immutable value.AoWe are awaiting a normal futureBhThe <code>future_trait</code> lang item.CbDeprecated in the future (\xe2\x80\x9cto be determined\xe2\x80\x9d).0CkGlobals copied from <code>tcx</code>. This memory may leak.0DlA <strong>global</strong> region is one that can be named from anywhere. \xe2\x80\xa6CdMiri representation of a Windows <code>HANDLE</code>CmA set that has a \xe2\x80\x9ctop\xe2\x80\x9d element, which is greater than \xe2\x80\xa60DeA <code>u64</code> but encoded with a fixed size; for hashes this \xe2\x80\xa6DfHashes computed by <code>TyCtxt::hash_owner_nodes</code> if necessary.B`Arguments to <code>--help</code>CiHide the symbol outside of the defining DSO even when \xe2\x80\xa6CjFake extra constructor for variants that should not be \xe2\x80\xa6DkVariant behind an unstable gate or with the <code>#[doc(hidden)]</code> \xe2\x80\xa61BoIndicates whether the type is <code>Box</code>.CfUsed to detect the incorrect use of expressions in \xe2\x80\xa6CmScope of the condition and then block of an if expression \xe2\x80\xa6AaIgnore duplicatesChIgnore a meta-variable for repetition without expansion.BaRepresents <code>#[ignore]</code>0CgNew dependencies are ignored. This is also used for \xe2\x80\xa6AdIgnore the argument.11AlThis is not a real lifetime.1Ca<code>fn shim(&amp;self) { inner(*self )}</code>.BfThe binding is part of a use statementClAll imports are unique and allocated on a same arena, so \xe2\x80\xa6DiRepresents <code>#[inline]</code> and <code>#[rustc_force_inline]</code>.0BcRuns Enzyme\xe2\x80\x99s aggressive inliningCmIt is harmless to use this option even on targets that do \xe2\x80\xa6CcAn integral type variable (<code>{integer}</code>).0000HoAn <strong>int</strong>egral (<code>u32</code>, <code>i32</code>, <code>usize</code>, etc.) type <strong>v</strong>ariable <strong>ID</strong>.0000BfIs the trait definition an auto trait?0Dc<code>#[xxx] pub async/const/extern &quot;Abi&quot; fn foo()</code>DhEffectively a Job trait object. Each JobRef <strong>must</strong> be \xe2\x80\xa6CnThe thread was already joined by some thread and cannot be \xe2\x80\xa6Ab<code>&lt;-</code>CkLinker, dlltool, and their necessary libraries (e.g. on \xe2\x80\xa6D`The value representing a locked state for the <code>Cell</code>.EgError produced by a <code>layout_of</code> call, while computing <code>FnAbi</code> \xe2\x80\xa6BlAn error occurred during layout computation.0DfLegacy version, using datalog and the <code>polonius-engine</code> \xe2\x80\xa6eSliceDfLinker abstraction used by <code>back::link</code> to build up the \xe2\x80\xa6BhIdentifies a lint known to the compiler.0DhModule with inlined definition <code>mod foo { ... }</code>, or with \xe2\x80\xa6BoFound and loaded an existing session directory.DbThe different settings that the <code>-C lto</code> flag can have.AbTarget line width.CcA Marker adds the given mark to the syntax context.BbRepresents <code>#[marker]</code>.0CnSpecializing on this trait is allowed because it doesn\xe2\x80\x99t \xe2\x80\xa6CjA 2D matrix. Represents a list of pattern-tuples under \xe2\x80\xa6BmA single tokentree within a Markdown documentB`A local that requires an alloca.AnThe alloc ID points to memory.0An<code>fn foo(&amp;self)</code>AmMethod has something illegal.B`dispatchable associated function1111Ao<code>-Zunpretty=mir-cfg</code>ClAll modules are unique and allocated on a same arena, so \xe2\x80\xa6CjNames declared in the given module. The node ID is for \xe2\x80\xa6oRegular module.AkWe passed through a module.CmThis module is used to store stuff from Rust\xe2\x80\x99s AST in a \xe2\x80\xa6DlA module declaration, e.g. <code>mod foo;</code> or <code>mod foo {}</code>.DkA module declaration, e.g. <code>mod foo;</code> or <code>mod foo {}</code>0BlRepresents module with its inner attributes.BnUse one <code>use</code> statement per module.Ca<code>fn shim(*mut self) { inner(*self )}</code>.Ce<code>fn shim(&amp;mut self) { inner(*self )}</code>.Da<code>\\r\\n</code> in Windows, <code>\\n</code> on other platforms.0An<code>use prefix::{...}</code>B`There are no leaf fields at all.0DcIndicates that we should <em>not</em> jump to the return/unwind \xe2\x80\xa60CkLint doesn\xe2\x80\x99t exist. Potentially contains a suggestion \xe2\x80\xa60AkOutside of a metadata node.CgThe lint refers to a tool that has not been registered.0AgIdentifies an AST node.Bb<code>format_args(\xe2\x80\xa6, arg)</code>Ah<code>Type: Trait</code>AcA normal attribute.DcA normal method call of the form <code>receiver.foo(a, b, c)</code>DgIn normal mode, a <code>R1: R2</code> constraint results in an edge \xe2\x80\xa6ClIndicates that no special handling should be done - we\xe2\x80\x99\xe2\x80\xa60CnNormal, builtin attribute that is consumed by the compiler \xe2\x80\xa6CoNormal attribute that does not need <code>#[unsafe(...)]</code>10AnA <code>match _ { .. }</code>.0BdAny non-concatenating binder scopes.BmNo link name, so just the name of the symbol.BgNormal function call, no special source0BcNo restriction needs to be applied.An<code>-Zunpretty=normal</code>Ak<code>-Zunpretty=hir</code>;hDefault.0Cm<code>{1}</code> or <code>{:1$}</code> or <code>{:.1$}</code>CiRepresents a JSON number, whether integer or floating \xe2\x80\xa6CkA numeric chunk in the version sort. Keeps track of the \xe2\x80\xa6EfAn alias for <code>macro</code> and <code>debuginfo</code>. This ensures all paths \xe2\x80\xa6CmA built-in impl for trait objects. The index is only used \xe2\x80\xa6000000AiRepresents a JSON object.1111BbBounds specified on an object type2BdThe <code>ptr.offset</code> operator0CkWritten to last line of file to specify the location of \xe2\x80\xa6ChRemap lifetimes that appear in opaque types to fresh \xe2\x80\xa6DkAn opaque type (usually from <code>impl Trait</code> in type aliases or \xe2\x80\xa60DjUsed to represent values we know nothing about. The <code>usize</code> \xe2\x80\xa6CmConstants that must not be matched structurally. They are \xe2\x80\xa60CjA type that provides internal information but that can \xe2\x80\xa6AaSome opaque hash.ChIdentifier produced by an opaque expansion is always \xe2\x80\xa6555jLLVMOpcodeBbThe <code>Option</code> lang item.AhThe full list of passes.CjSplit debug-information can be found in a \xe2\x80\x9cpacked\xe2\x80\x9d \xe2\x80\xa6CaWhether enclosing parentheses are present or not.Bc<code>(extracted, remaining)</code>AlA parsed built-in attribute.CjThe parser structure for interpreting the input format \xe2\x80\xa6AnA parser for Rust source code.DmThis access is caused by a <code>match</code> or <code>if let</code> pattern.EgSpecifies whether to resolve a path in the <code>TypeNS</code>, <code>ValueNS</code>\xe2\x80\xa6E`<code>&amp;&#39;lt pin const self</code>, <code>&amp;&#39;lt pin mut self</code>AaPretty print modeAbmatch expr { \xe2\x80\xa6 }Abyield expr { \xe2\x80\xa6 }Ad<code>struct@</code>CnA primitive type such as <code>i32</code> or <code>str</code>.ClNot represented directly in the AST; referred to by name \xe2\x80\xa611111111AdProper orphan check.00CkThe query is known to be true, presuming that you apply the00BoVisible everywhere (including in other crates).00CgExplicitly public visibility set with <code>pub</code>.CnA \xe2\x80\x9cqualif\xe2\x80\x9d(-ication) is a way to look for something \xe2\x80\x9c\xe2\x80\xa6Ab<code>-&gt;</code>DlA doc fragment created from a \xe2\x80\x9craw\xe2\x80\x9d <code>#[doc=&quot;&quot;]</code> \xe2\x80\xa6nA raw pointer.C`Raw pointer, stored as C\xe2\x80\x99s <code>void*</code>.DfA raw pointer. Written as <code>*mut T</code> or <code>*const T</code>0AfConverts from T to *T.1CnCreates a raw pointer with the indicated mutability to the \xe2\x80\xa6CkConstruct a raw pointer from the data pointer and metadata.10CiA raw pointer aggregate built from a thin pointer and \xe2\x80\xa6444Ji<code>r&quot;abc&quot;</code>, <code>r#&quot;abc&quot;#</code>, <code>r####&quot;ab&quot;###&quot;c&quot;####</code>, <code>r#&quot;a</code>. <code>None</code> indicatesCmAnswers \xe2\x80\x9cwhy wasn\xe2\x80\x99t the source type transmutable into \xe2\x80\xa6BkRepresents a <code>fn x(&amp;self);</code>.BoRepresents a <code>fn x(&amp;mut self);</code>.ElWe get passed <code>self: Self</code> and call the target with <code>&amp;mut self</code>\xe2\x80\xa6Db<code>&amp;&#39;lt self</code>, <code>&amp;&#39;lt mut self</code>CjSubject is a free region from the closure. Indicates a \xe2\x80\xa6BeRegion variable <code>&#39;?R</code>.0D`Use this rather than <code>RegionKind</code>, whenever possible.1011111CjReject an op requiring communication with the host. By \xe2\x80\xa60BeRemote URL root of the external crateCiAlso an array, but with only one constant, repeated N \xe2\x80\xa6Al<code>vec![elem; len]</code>CgAn array literal constructed from one repeated element.0CkCreates an array where each element is the value of the \xe2\x80\xa60CkAn array literal constructed from one repeated element, \xe2\x80\xa6CmThis corresponds to a <code>[value; count]</code> expression.22Bbe.g., <code>$($foo: expr),*</code>EgThe result type of the <code>visit_*</code> methods. Can be either <code>()</code>, \xe2\x80\xa60BlImplicit or explicit return from a function.A`Everything else.AjReturns from the function.0BaA <code>return</code> expression.BiEmit control-flow protection for returns.CmThe associated type comes from an RPITIT. It has no name, \xe2\x80\xa600AeA temporary variable.0CdThe various kinds of rvalues that can appear in MIR.0DhSomething that generates a new value at runtime, like <code>x + y</code>B`Blocked on a reader-writer lock.AjThe read-write lock state.1CmLatch is not set, owning thread is going to sleep on this \xe2\x80\xa6A`Safety of items.CfInformation about one scalar component of a Rust type.DoA single scalar value (must have <em>initialized</em> <code>Scalar</code> ABI).0CiUsed for types with <code>layout::abi::Scalar</code> ABI.DkA <code>Scalar</code> represents an immediate, primitive value existing \xe2\x80\xa601113CnIndicates that suggestions cannot be added or removed from \xe2\x80\xa6CjFrom an \xe2\x80\x9cimpl\xe2\x80\x9d (or a \xe2\x80\x9cpseudo-impl\xe2\x80\x9d returned by \xe2\x80\xa6AkThe <code>Self</code> type.AeA sequence separator.BhData must be immutable and is aliasable.000Aie.g. <code>42_i32</code>.CkReport, but do not exit with failure status for deny/forbidCl<code>use prefix</code> or <code>use prefix as rename</code>CiSingle enum variants, structs/tuples, unions, and all \xe2\x80\xa6CoUse in combination with <code>SingleAttributeParser</code>. \xe2\x80\xa6ClAn outlives constraint that only has to hold at a single \xe2\x80\xa6CfThe basic case: a field expression for one or more \xe2\x80\xa6EdOne import, e.g., <code>use foo::bar</code> or <code>use foo::bar as baz</code>. \xe2\x80\xa6DiFor terminators that have a single successor, like <code>goto</code>, \xe2\x80\xa60c1e26CmSections which do not require relocation are written into \xe2\x80\xa6BhReturns the size of a value of that type0BiReturns the size of a value of that type.0C`The primal function which we will differentiate.DkOptions that print the source code, i.e. <code>-Zunpretty=normal</code> \xe2\x80\xa6Af<code>#[stable]</code>0CgThe 1.0 rules (either types fail to unify, or where \xe2\x80\xa6DiThe <code>HirId</code> that the lint expectation is attached to. This \xe2\x80\xa61CdThis target feature is stable, it can be used in \xe2\x80\xa622AkExtra per-allocation state.0CaMay contain self-references, <code>!Unpin</code>.BdA static item (<code>static</code>).CdA foreign static item (<code>static FOO: u8</code>).2Cm\xe2\x80\x99a: \xe2\x80\x99static i.e. \xe2\x80\x99a = \xe2\x80\x99static and the user should \xe2\x80\xa6BdThe <code>&#39;static</code> region.DjThe <code>mutability</code> of the static, ignoring the type which may \xe2\x80\xa6BcValidation of a <code>static</code>01Bb<code>&#39;static</code> lifetime.7EmUser wrote <code>&#39;static</code> or nothing (which gets converted to <code>&#39;_</code>).BjInitializer of a <code>static</code> item.CaA <code>static</code> or <code>static mut</code>.AkA <code>static</code> item.CdA foreign static item (<code>static ext: u8</code>).<<<ClThe alloc ID points to a \xe2\x80\x9clazy\xe2\x80\x9d static variable that \xe2\x80\xa6CkThe value is known to always be initialized at the drop \xe2\x80\xa61EbStatic library (e.g. <code>libfoo.a</code> on Linux or <code>foo.lib</code> on \xe2\x80\xa6??BbA <code>static</code> declaration.0BgA declaration of a <code>static</code>.CkThe child process with the specified pid was stopped by \xe2\x80\xa6AlWrites the output to stdout.0DgSimilar to <code>MetaItemLit</code>, but restricted to string literals.A`A string literalDkWe error on <code>with_exposed_provenance</code>, ensuring no precision \xe2\x80\xa60CnJust check for negative impls, not for \xe2\x80\x9cwhere clause not \xe2\x80\xa6000BbThe <code>String</code> lang item.AiRepresents a JSON string.CgOn LLVM, mark all generated LLVM functions with the \xe2\x80\xa6BmA struct or struct variant pattern (e.g., \xe2\x80\xa6AlA struct literal expression.oStruct variant.BjA struct definition (<code>struct</code>).ChA non-static method where <code>Self</code> is a struct.DkThis <code>DefKind::Ctor</code> is a synthesized constructor of a tuple \xe2\x80\xa6DiRefers to the struct itself, <code>DefKind::Ctor</code> refers to its \xe2\x80\xa66CcA struct or struct-like variant literal expression.AaA struct variant.DcA struct definition, e.g., <code>struct Foo&lt;A&gt; {x: A}</code>.BmRecords the index of the field being coerced.DkRefers to the struct itself, [<code>DefKind::Ctor</code>] refers to its \xe2\x80\xa60AcTuples and structs.DhThe type is a tuple or struct. <code>empty</code> tracks whether the \xe2\x80\xa610DbPaths in struct expressions and patterns <code>Path { .. }</code>.AfA <code>struct</code>.BbA <code>struct</code> declaration.0AlA variant with named fields.BbTest what enum variant a value is.BlUse String for now but we should replace it.AiAn interned UTF-8 string.CkCan be specified as <code>extern &quot;sysv64&quot;</code>.CjABI of the \xe2\x80\x9csystem\xe2\x80\x9d interface, e.g. the Win32 API, \xe2\x80\xa60CkCan be specified as <code>extern &quot;system&quot;</code>.CoTarget uses a <code>path</code> field for equality and hashing.DkEverything <code>rustc</code> knows about how to compile for a specific \xe2\x80\xa6AjInformation about a targetiA thread.CkConvert a softfloat type to its corresponding hostfloat \xe2\x80\xa6CkConvert a hostfloat type to its corresponding softfloat \xe2\x80\xa6DgAlways fallback to <code>()</code> (aka \xe2\x80\x9calways spontaneous decay\xe2\x80\x9d)AhSize of a DST is too big0CiThe central data structure of the compiler. It stores \xe2\x80\xa60CeThe various kinds of type recognized by the compiler.CfThe various kinds of types recognized by the compiler.CcDefines the kinds of types used by the type system.000AdA TypeId allocation.0BcThe <code>type_id</code> lang item.CkThe first pointer-sized segment of a type id. On 64 bit \xe2\x80\xa60G`The type namespace includes <code>struct</code>s, <code>enum</code>s, <code>union</code>s, <code>trait</code>\xe2\x80\xa6B`Something in the type namespace.DiThe canonical type is the result of <code>type_of(def_id)</code> with \xe2\x80\xa60BnCreated from performing a <code>TypeOp</code>.Cm\xe2\x80\x9cType ops\xe2\x80\x9d are used in NLL to perform some particular \xe2\x80\xa6oUnused for now.0Ah16-bit unsigned integer.Ah32-bit unsigned integer.Ah64-bit unsigned integer.Fdlibgcc/libunwind (e.g. on <code>windows-gnu</code>, <code>fuchsia</code>, <code>fortanix</code>, \xe2\x80\xa6CmA value of fully uninitialized memory. Can have arbitrary \xe2\x80\xa60AjTrue uninitialized memory.AmGrants unique mutable access.0Dh<code>unsafe</code> an item is explicitly marked as <code>unsafe</code>.CkUnsafe attribute that requires safety obligations to be \xe2\x80\xa60BbThe <code>unsize</code> lang item.EnUnsize a pointer/reference value, e.g., <code>&amp;[T; n]</code> to <code>&amp;[T]</code>. \xe2\x80\xa600CkA scalar or a scalar pair local that is neither defined \xe2\x80\xa6CnDescribes if unwinding is necessary and where to unwind to \xe2\x80\xa6DmAn <code>Into</code>-like trait that takes <code>TyCtxt</code> to perform \xe2\x80\xa60000DgThere are three valid forms of the attribute: <code>#[used]</code>, \xe2\x80\xa60CiThe arm is useful. This additionally carries a set of \xe2\x80\xa60BlThe inferred type of a user type annotation.CdA vector clock for detecting data-races, this is \xe2\x80\xa6AdA vtable allocation.0nA trait objectClThis alloc ID points to a symbolic (not-reified) vtable. \xe2\x80\xa60BcThe <code>va_list</code> lang item.oA vacant entry.0BkVacant slot (no equivalent key in the map).1101Cnnon-dispatchable associated function that is excluded from \xe2\x80\xa622EgPatterns using the <code>..</code> notation (<code>[x, .., y]</code>). Captures any \xe2\x80\xa6AaA local variable.AaA basic undo log.Di<code>repr(simd)</code> types need special handling because they each \xe2\x80\xa6CnVertically aligned under whatever column this block begins \xe2\x80\xa6CiFirst line on the same line as the opening brace, all \xe2\x80\xa6DaThis <code>ReifyShim</code> was created to populate a vtable. \xe2\x80\xa60CnA resumable waiter of a query. The usize is the index into \xe2\x80\xa6Aix86 (32-bit) abi options.EaTest if a memory <code>access</code> using pointer tagged <code>tag</code> is \xe2\x80\xa6CmRead the local\xe2\x80\x99s value or error if the local is not yet \xe2\x80\xa6BdRange of the original memory access.0ClAdjust this context for resolution in a scope created by \xe2\x80\xa6CmAllocates a stack slot in the function for a value of the \xe2\x80\xa6EgCreates a <code>Diverges::Always</code> with the provided <code>span</code> and the \xe2\x80\xa6Cm<code>-Z instrument-xray=always</code>, force instrumentationEcAnswers whether a <code>Tree</code> is transmutable into another <code>Tree</code>.FcThis method begins by converting <code>src</code> and <code>dst</code> from <code>Ty</code>s to \xe2\x80\xa6EaAnswers whether a <code>Dfa</code> is transmutable into another <code>Dfa</code>.FeFor given <code>line</code> inserts <code>string</code> with <code>style</code> after old content \xe2\x80\xa6Ee<code>true</code> mean add the tips afterward for case <code>use a::{b,c}</code>, \xe2\x80\xa6AnAdds this text to the templateDkIf the <code>Value</code> is a number, represent it as f64 if possible. \xe2\x80\xa6DcIf the <code>Value</code> is an integer, represent it as i64 if \xe2\x80\xa6CnReturns mutable reference to basic blocks. Invalidates CFG \xe2\x80\xa6CdReturns a mutable pointer to the underlying integer.CbGives direct access to the raw underlying storage.0CoDereferences to the underlying <code>&amp;OperandBundle</code>.AeGets the source text.CkAttempts to get the text from the source file. This can \xe2\x80\xa6CiThe polarity marker in front of the impl trait ref if \xe2\x80\xa6BhConverts a level to a lower-case string.01C`Get the string representation of this attribute.CmAccess the underlying string. This is a slowish operation \xe2\x80\xa60DfIf the <code>Value</code> is a String, returns the associated str. \xe2\x80\xa6AnReturn the component\xe2\x80\x99s name.CmReturn the linker feature name, as would be passed on the \xe2\x80\xa6AiReturn sanitizer\xe2\x80\x99s name77CgExtracts the value of this index as a <code>u32</code>.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000DcIf the <code>Value</code> is an integer, represent it as u64 if \xe2\x80\xa6DkCreates an <code>Assert</code> terminator and return the success block. \xe2\x80\xa6ChHelper method to interpret <code>target = result</code>.EnRecord that <code>local</code> is assigned <code>value</code>. <code>local</code> must be SSA.CdLoad the internal atomic memory cells if they exist.ClKeep the conditional imports together in a submodule, so \xe2\x80\xa6CkConverts unsigned integers into a string representation \xe2\x80\xa6BeBasic block to apply the optimizationCiThe set of mps that are waiting for the black-box parser.AgBefore the equals sign.BiId of the introducing place. That can be:CdId of the introducing place. See <code>Param</code>.ClHow deep are we? Makes sure we don\xe2\x80\x99t touch the vars of \xe2\x80\xa6DeThe bitwise and (<code>&amp;</code>) of the bits in two flags values.0000000000000000000000000000ClThe bitset used by FUTEX_*_BITSET, or u32::MAX for other \xe2\x80\xa6DfThe bitwise exclusive-or (<code>^</code>) of the bits in two flags \xe2\x80\xa60000000000000000000000000000BfBodies inside the owner being lowered.AhContent of local bodies.CnDescribes whether a local\xe2\x80\x99s address escaped and it might \xe2\x80\xa6EfThe value found at <code>place</code> is being borrowed with kind <code>bk</code>. \xe2\x80\xa6CiWhether the pattern scrutinee needs to be borrowed in \xe2\x80\xa6DdTrait and lifetime bounds (<code>Clone + Send + &#39;static</code>).DjTrait and lifetime bounds (e.g., <code>Clone + Send + &#39;static</code>).CjConstraints that must be met by the implementor of the \xe2\x80\xa6BiThe bounds for this associated type. e.g.BjThe set of bounds that constrain the type.CmBounds applied directly to the type. Note that the bounds \xe2\x80\xa6ChDefines a set of traits that is used for abstracting \xe2\x80\xa6CfWhether to bundle objects from static library into \xe2\x80\xa6EeReturns the <code>DefId</code> of the <code>c_void</code> lang item if it is defined.ClHandles codegen of callees as well as other call-related \xe2\x80\xa6CiCancel and consume the diagnostic. (A diagnostic must \xe2\x80\xa6CmFormatting of chained expressions, i.e., expressions that \xe2\x80\xa6ChContains checks that must be run to validate matches \xe2\x80\xa6AiA vector of arena chunks.0ClThe chunks. Each one contains exactly CHUNK_BITS values, \xe2\x80\xa6AjThe set of changed chunks.0ChThe closing sequence of characters for the piece of textDkIndicates that the value generated by <code>expression</code>, which is \xe2\x80\xa6CmAttempt to coerce an expression to a type, and return the \xe2\x80\xa6ClThe one-indexed column of the source file where the span \xe2\x80\xa6CkCommits all changes since the last snapshot. Of course, \xe2\x80\xa6CjCommit: keep the changes that have been made since the \xe2\x80\xa61BoCode that is useful in various codegen modules.BbConcatenate two <code>Dfa</code>s.BlCalled before creating the compiler instance0BbConditional compilation stripping.BkQuery configuration and description traits.CiContains infrastructure for configuring the compiler, \xe2\x80\xa6AmThe declared constant itself.CeA simple const eval API, for use on arbitrary HIR \xe2\x80\xa6CaCommon consts, pre-interned for your convenience.0ClFor each function that was instrumented for coverage, we \xe2\x80\xa6CkAll available crates in the graph, including those that \xe2\x80\xa6000000Cmthe rustc crate store interface. This also includes types \xe2\x80\xa6ChCurrent position of implicit positional argument pointerCiRandom access inspection of the results of a dataflow \xe2\x80\xa6B`Cursor for getting lexer tokens.DeProvides the implementation of the <code>custom_mir</code> attribute.CfThis exists so that <code>provide_one!</code> is happyAhMacro <code>DefId</code>EcReturn the <code>DefId</code> of this <code>Def</code> if it has an ID, else panic.CaDef id of the RPITIT (GAT) in the <em>trait</em>.Ckdef_id of the opaque type whose defining uses are being \xe2\x80\xa6BbThe opaque type we are traversing.AiDefId of the generic typeCmImpl method ID, for inherent methods, or trait method ID, \xe2\x80\xa6FdThe <code>DefId</code> of the <code>TraitItem</code> or <code>ImplItem</code> for the associated \xe2\x80\xa6000Dj<code>DefId</code> that identifies the variant itself. If this variant \xe2\x80\xa611BgReturns the item\xe2\x80\x99s <code>DefId</code>AkDefId of the constant item.Am<code>DefId</code> of caller.0CjRetrieve the unique identifier for the current definition.DdThe <code>DefId</code> of the module to place the use-statements in.666666CiUse this method to get the DefId of a clean AST node, \xe2\x80\xa6DiThis function is used to extract a <code>DefId</code> to be used as a \xe2\x80\xa6AnThe \xe2\x80\x9cmain\xe2\x80\x9d id of the item.BeReturns the type of given crate item.0AgCache the deref values.BbGet whether this is dimmed or not.CkIs the obligation \xe2\x80\x9cdirectly\xe2\x80\x9d user-specified, rather \xe2\x80\xa6CmPerforms an arbitrary FFI call, enabling tracing from the \xe2\x80\xa6EfEats <code>&lt;</code> possibly breaking tokens like <code>&lt;&lt;</code> in process.CfEncodes type metadata identifiers for LLVM CFI and \xe2\x80\xa6EhUsed as the <code>target_endian</code> <code>cfg</code> variable. Defaults to little \xe2\x80\xa6DfEnsure that the set can hold at least <code>min_domain_size</code> \xe2\x80\xa6DbChecks if these two <code>Layout</code> are equal enough to be \xe2\x80\xa6DdChecks if these two <code>PassMode</code> are equal enough to be \xe2\x80\xa6DiChecks if these two <code>ArgAttributes</code> are equal enough to be \xe2\x80\xa6DfChecks if these two <code>CastTarget</code> are equal enough to be \xe2\x80\xa6DbChecks if these two <code>ArgAbi</code> are equal enough to be \xe2\x80\xa6BiChecks whether two patterns are the same.D`Records that <code>a == b</code>, depending on <code>dir</code>.AmErrors emitted by ast_passes.AmErrors emitted by codegen_ssaChBacktrace of obligations that were found to be in error.CbErrors emitted by <code>rustc_hir_analysis</code>.C`Errors emitted by <code>rustc_hir_typeck</code>.BiError messages accumulated during parsingBbErrors emitted by symbol_mangling.AjErrors emitted by ty_utilsCdStorage for the errors produced while generating \xe2\x80\xa6nHTML escaping.CiXor-ed event types that happened to the file description.CkThe events bitmask retrieved from <code>epoll_event</code>.Bd<code>except=</code> attribute valueCmDefinitions shared by macros / syntax extensions and e.g. \xe2\x80\xa6Ed<code>meta_item</code> is the attribute, and <code>item</code> is the item being \xe2\x80\xa6DjExpects and consumes the token <code>t</code>. Signals an error if the \xe2\x80\xa6D`The bitwise or (<code>|</code>) of the bits in each flags value.00CjConverts a single syntactical attribute to a number of \xe2\x80\xa611111BeExtends the undo log with many undos.22222222222ClMerges the witnesses of two matrices. Their column types \xe2\x80\xa6333333333DlReturns the path kind when merging <code>self</code> with <code>rest</code>.4CeThe file descriptor value of the file description \xe2\x80\xa6CdSays where the fields are located within the layout.BbReturn the fields of this variant.0AgFields of this variant.BeThe fields location within the layoutBhRetrieve all the fields in this variant.B`The list of fields in the union.BaThe list of fields in the struct.CnThe list of variants in the enum. All of the corresponding \xe2\x80\xa6BoCustom pattern selecting file paths to reformatAgbuild final suggestion:DeConsumes the <code>Expander</code>, returning the expanded arguments.CmAsserts that all nodes have been visited, and returns the \xe2\x80\xa6ClFinish using the buffer and get the written output. This \xe2\x80\xa6BiGet the final <code>String</code> buffer.B`Gets the fixity of this operatorAhIs this pre- or postfix?CjRetrieve information about this instance binary interface.BkDeconstruct a function type if this is one.BgComputes the signature of the function.000000CkGet the function signature for function like types (Fn, \xe2\x80\xa6ChGet the function signature for this function definition.CiRetrieve the function signature for the given generic \xe2\x80\xa60AnKeep only the tag and creationCiA helper method to format numeric literals with digit \xe2\x80\xa6BlReturns literal formatted in a sensible way.CfParses a format specifier at the current position, \xe2\x80\xa6AjHow to format the argumentAfHTML formatting moduleCmThe main entry point for Rustfmt. Formats the given input \xe2\x80\xa6CnCompute the transitive closure derived from the edges, and \xe2\x80\xa6CkAn immutable, owned value (except for interior mutability).ClCodegens a reference to a fn/method item, monomorphizing \xe2\x80\xa6CmThe most interesting method: Providing a shared reference \xe2\x80\xa6DiReturns a reference to entry <code>k</code>. If no such entry exists, \xe2\x80\xa60CkThis defines for a given permission, whether it permits \xe2\x80\xa6CkA header used to detect if this is the right crate to load.CkInformation about core properties of the function, e.g. \xe2\x80\xa6CkThe core properties of the function, such as the ABI it \xe2\x80\xa6CiThis module contains functions that retrieve specific \xe2\x80\xa6BoId of the variant (not the constructor, see \xe2\x80\xa6DiThe late bound vars for a given item are stored by <code>HirId</code> \xe2\x80\xa6C`The <code>HirId</code> of the top-level pattern.De<code>HirId</code> of the expression or pattern producing this value.0A`HirId for lints.DhA pre-populated <code>IdMap</code> with the default headings and any \xe2\x80\xa6CmThe map used to ensure all generated \xe2\x80\x98id=\xe2\x80\x99 attributes \xe2\x80\xa6CmGiven a binding and an import that resolves to it, return \xe2\x80\xa6ClDetermines if a node with the given attributes should be \xe2\x80\xa6BnReturns whether the feature can be used in \xe2\x80\xa6BdLevel of indentation of current lineCnthe number of characters (typically whitespaces) up to the \xe2\x80\xa6CjTraverse the crate, collecting all the test functions, \xe2\x80\xa6CmPush a job into the \xe2\x80\x9cexternal jobs\xe2\x80\x9d queue; it will be \xe2\x80\xa6CmParsed representation of the <code>#[inline]</code> attributeB`Inlining pass for MIR functions.ChSupport for inlining external documentation into the \xe2\x80\xa6Ac<code>(A, B)</code>BiThe types of the function\xe2\x80\x99s parameters.BfList of argument names and their type.BiThe input types, enclosed in parentheses.ChAssign this key to a new index. Panics if the key is \xe2\x80\xa6CkAssign a value to the index. Permanently overwrites any \xe2\x80\xa6D`The bitwise or (<code>|</code>) of the bits in two flags values.00CnReturns the <code>PlaceholderIndex</code> for the inserted \xe2\x80\xa61111EeAdds a <code>UniqueTypeId</code> to metadata mapping to the <code>TypeMap</code>. \xe2\x80\xa62BaInserts a new entry into the map.03BfInserts a key-value pair into the map.AhAdds a value to the set.DfAttempt to enqueue <code>element</code> in the work queue. Returns \xe2\x80\xa66CnInsert <code>elem</code>. Returns whether the set has changed.0CaReturns <code>true</code> if the set has changed.DiSets the cell at <code>(row, column)</code> to true. Put another way, \xe2\x80\xa60CgReturns true if we increased the number of elements \xe2\x80\xa6:65:AlAdds a predicate to the set.ClInsert a new foreign item into the seen set. If a symbol \xe2\x80\xa6<<<<87<<<<ClInsert a symbol and its span into symbol gallery. If the \xe2\x80\xa6======98=2ClInsert a local impl into the specialization graph. If an \xe2\x80\xa60CnAttempt to insert an impl into this set of children, while \xe2\x80\xa601?;:?BlInsert a final result into the global cache.CeThis module specifies the type based interner for \xe2\x80\xa6BmMaps a string to its interned representation.0BcMap from metavars to matched tokensEeCheck if this is an <code>ItemKind::Enum</code>, <code>ItemKind::Struct</code> or \xe2\x80\xa6CcWhether all known bits in this flags value are set.0000000000000000000000000000FbWhether the configuration consists of just <code>Cfg</code>, <code>Not</code> or <code>All</code>.EfReturns <code>true</code> if this <code>FileLines</code> contains all lines in all \xe2\x80\xa6CoReturns <code>true</code> if this is <code>Box&lt;T&gt;</code>.BkChecks if there is nothing more to consume.DbReturns true if the <code>Value</code> is a number that can be \xe2\x80\xa6EfReturns true if the <code>Value</code> is an integer between <code>i64::MIN</code> \xe2\x80\xa6CfReturns <code>true</code> if the token is any literal.BkReturn <code>true</code> if self is mutable0000CnWhether the access is mutable or not. Keep this private so \xe2\x80\xa611D`Return <code>true</code> if self is <strong>not</strong> mutable000000CiReturns true if the given node has been marked as red \xe2\x80\xa6CfReturns <code>true</code> if this literal is a string.CmReturns <code>true</code> if this type is a <code>str</code>.CfChecks if a given expression is a match expression \xe2\x80\xa6DiReturns true if the <code>Value</code> is an integer between zero and \xe2\x80\xa6DaReturns <code>true</code> if this place context represents a use.CoReturns <code>true</code> if the type is a ZST and not unsized.BbGet whether this is italic or not.DhTakes an iterator over elements that implement <code>Display</code>, \xe2\x80\xa6ClWhether the sequence can be repeated zero (*), or one or \xe2\x80\xa6BoStored layout information about the allocation.0BbCompute the full coroutine layout.BlThe layout of value, based on its Rust type.CkThe monomorphized type of this place, including variant \xe2\x80\xa6oGet the layout.DeDon\xe2\x80\x99t modify if <code>Some</code>, this is only used to prevent \xe2\x80\xa610AbGet a type layout.CfThis describes the layout of each page, and is not \xe2\x80\xa6CbFunctions dedicated to fact generation for the \xe2\x80\xa6Dh<code>indent</code> is the indentation of the first line. The next linesBcLength modifier for the conversion.EeLength of this integer type. e.g. <code>IntegerLength::I8</code> for <code>u8</code>.BgWhether the interval is open or closed.AcRegistering limits:Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6000000A`Linker to invokeBnLocals are in a private module as updating \xe2\x80\xa6CjThe location where each MIR arg/var/tmp/ret is stored. \xe2\x80\xa6CkThe list of locals for this stack frame, stored in order as0ClThese are the id\xe2\x80\x99s of names that are bound by patterns \xe2\x80\xa6AkValue stored in each local.BkDeclarations of locals within the function.CfConvenience function to get all the locals in this \xe2\x80\xa61CdReturns the cached value (and other information) \xe2\x80\xa60CmA bunch of methods and structures more or less related to \xe2\x80\xa6AdAllow marking spans.CiWhether or not the impl is permitted due to the trait \xe2\x80\xa6CmYou can think of a scope as containing a list of closures \xe2\x80\xa6BfUse platform dependent mcount functionAjThe virtual memory system.000AeThe memory subsystem.11CnMethod lookup: the secret sauce of Rust. See the rustc dev \xe2\x80\xa6CmWe errored. Signal that in the pattern, so that follow up \xe2\x80\xa6CkThe module in which the match occurs. This is necessary forCkCreates a parent scope with the passed argument used as \xe2\x80\xa6Cbcomes from <code>PathRes::Failed { module }</code>BnThe final module being resolved, for instance:DaThe path at <code>assignee_place</code> is being assigned to. \xe2\x80\xa6CkWhether it\xe2\x80\x99s an anonymous static generated for nested \xe2\x80\xa6BdUsed to report a trace through adts.11CdDid this import result from a nested import? ie. \xe2\x80\xa6CkDo not run doctests, compile them if should_test is active.nBuilds the \xe2\x80\xa6D`A <code>Tree</code> whose layout is a number of the given width.CbThe offset (measured in bits) of the current word.Chindex or -index (in Python terms), depending on from_endAnOffset into <code>alloc</code>0111110011A`See struct docs.CiIf non-empty, the attribute is allowed to take a list \xe2\x80\xa60CjThis context, but with all transparent and semi-opaque \xe2\x80\xa6Bjthe string that marks the start of an itemChThe opening sequence of characters for the piece of textCdWhat kind of variable is this \xe2\x80\x93 a free region? \xe2\x80\xa6DkTime when the compilation session started. If <code>None</code>, timing \xe2\x80\xa6AhOrigin of the predicate.EhThe <code>DefId</code> where the attr was originally attached. <code>None</code> for \xe2\x80\xa6ChOrphan checker: every impl either implements a trait \xe2\x80\xa6CnGets the result type, if one could be found. Note that the \xe2\x80\xa6n<code>C</code>DiThis is true if we identified that this Ty (<code>?T</code>) is found \xe2\x80\xa6ChRelated to out filenames of compilation (e.g. binaries).AlThe output from the type op.DeOutput directory to generate docs into. Defaults to <code>doc</code>.AnThe output type, if specified.DbThe output type provided after the <code>-&gt;</code>, if present.EnThis is semantically a pair of <code>pointer: &amp;&#39;a P</code> and <code>tag: T</code> \xe2\x80\xa6CbAlignment in bytes, if explicitly specified by \xe2\x80\xa6DkWhether this instance of <code>MiriAllocBytes</code> had its allocation \xe2\x80\xa60CaA list of generic parameter definitions (e.g. \xe2\x80\xa6BnThe bounds that are associated with the alias.EcWhen <code>Yes</code>, the first and last character of <code>span</code> are an \xe2\x80\xa6BkAll tags except the root have a parent tag.A`The parent path.AfThe defining function.0CjThe type alias or associated type parent of the TAIT/ATPITBbRegion parent of expressions, etc.DfThe parent of a given impl, which is the <code>DefId</code> of the \xe2\x80\xa6CiAll impls have a parent; the \xe2\x80\x9croot\xe2\x80\x9d impls have as \xe2\x80\xa610443443CiTransitively points towards the \xe2\x80\x9croot\xe2\x80\x9d of the set \xe2\x80\xa6DhThe <code>Span</code> for the tokens in the previous macro expansion \xe2\x80\xa6CfThe parent query job which created this job and is \xe2\x80\xa60DeThe direct parent module (it may not be a <code>mod</code>, however).BkThe expansion that produced this expansion.655CjID of the module to which this visibility restricts items.CaThis is in essence an (improved) duplicate of \xe2\x80\xa6BoNames of additional optimization passes to run.CkContains information about \xe2\x80\x9cpasses\xe2\x80\x9d, used to modify \xe2\x80\xa6AkWhere to put the match arm.DkReturns the type of a pattern as a monotype. Like <code>expr_ty</code>, \xe2\x80\xa6BdRuns the function on each namespace.CnReturns the liveness matrix of points where each region is \xe2\x80\xa6BmFor each region: the points where it is live.DhReturns an <code>OperandValue</code> that\xe2\x80\x99s generally UB to use in \xe2\x80\xa6AmThe radix prefix, if present.AoNops to prepend to the functionCnFlag prefix (usually, \xe2\x80\x98C\xe2\x80\x99 for codegen flags or \xe2\x80\x98Z\xe2\x80\x99 \xe2\x80\xa60AeNops before the entryBeThe various pretty-printing routines.0CkImplement methods to pretty print rustc_public\xe2\x80\x99s IR body.CmRender the JSON in a human readable way (with indents and \xe2\x80\xa6CnLatch set once thread has started and we are entering into \xe2\x80\xa6DeWrites as much as possible from the given buffer <code>ptr</code> \xe2\x80\xa6BjDescribes whether a local contains qualif.CjThe lengths of ranges that are run-length encoded. The \xe2\x80\xa6Bhignore can optionally have a reason: \xe2\x80\xa6Bjmust_use can optionally have a reason: \xe2\x80\xa610BgReason for the current stability level.0C`reasons why migration is needed for this captureCnThe reason for the lint used by diagnostics to provide the \xe2\x80\xa60CjThe reason for this expectation that can optionally be \xe2\x80\xa6oRFC 2383 reasonBcReason for backward incompatibility0DjWraps a <code>value</code> in a binder, using the same bound variables \xe2\x80\xa600BhThe region for which this borrow is live0DgThis file builds up the <code>ScopeTree</code>, which describes the \xe2\x80\xa6CoSome region that caused <code>universe</code> to be what it is.DkThis file declares the <code>ScopeTree</code> type, which describes the \xe2\x80\xa6DkThis module contains the definitions of most <code>TypeRelation</code>s \xe2\x80\xa6CdGeneric relation routine suitable for most anything.0000010000CfLLVM optimizations for which we want to print remarks.CnReturn whatever index this key was using to the deassigned \xe2\x80\xa6CmDelete any value associated with this index. Returns None \xe2\x80\xa6CeThe intersection of a source flags value with the \xe2\x80\xa60000000AnRemoves an entry from the map.01CnRemoves a key from the map, returning the value at the key \xe2\x80\xa6CkRemoves a value from the set. Returns whether the value was3CaReturns <code>true</code> if the set has changed.00DjSets the cell at <code>(row, column)</code> to false. Put another way, \xe2\x80\xa6532555553255555555553255325CgIf the crate is renamed, this is its name in the crate.DhReturns content of <code>StyledBuffer</code> split by lines and line \xe2\x80\xa6EgRenders directed graph <code>g</code> into the writer <code>w</code> in DOT syntax. \xe2\x80\xa6CjRender the fragment, including the leading <code>#</code>.BbRustdoc\xe2\x80\x99s HTML rendering module.BkCreate a diagnostic for a const eval error.BmThe final location debuginfo should point to.DfThe resulting token stream from the <code>TokenTree</code> we just \xe2\x80\xa6AkHolds the parsed arguments.AcWhere to resume to.0BfThe block to jump to after resumption.lReturns typeCeRetains only the elements specified by the predicate.000000000CgHow many rounds have we been circling without sleeping?CkMaps a tag and a location to a perm, with possible lazy \xe2\x80\xa600Dj<code>unsafe</code> keyword accepted syntactically for macro DSLs, but \xe2\x80\xa6CmWhether this is <code>unsafe</code>, or has a default safety.EhWhether it\xe2\x80\x99s a <code>unsafe static</code>, <code>safe static</code> (inside extern \xe2\x80\xa6BaAlways <code>Normal</code> (safe)011000CiMaps from source code to the corresponding debug info \xe2\x80\xa6CnThe current set of scopes, updated as we traverse; see the \xe2\x80\xa6CiSearch for a JSON file specifying the given target tuple.CiPeeks the second symbol from the input stream without \xe2\x80\xa6CiCandidate selection. See the rustc dev guide for more \xe2\x80\xa600ChAttempts to select obligations using <code>selcx</code>.AiSet the background color.AiSet the foreground color.CiSet the instruction pointer; remember to also set the \xe2\x80\xa6CdSet the stack pointer, ideally to a zeroed-out area.CfWhether the futex is shared across process boundaries.AeShared mutable state.BnWhether the value is of a signed integer type.0CnWhether deprecation warnings should be suppressed for this \xe2\x80\xa6ChReturns Some if the list contains only a single element.CkUtils for extracting, inspecting or transforming source \xe2\x80\xa6BoThe name of the function getting differentiatedAlWhere the region comes from.BfThe source node for <code>edge</code>.CcThe context in which the lifetime occurred. See \xe2\x80\xa6FeCan be <code>ForLoopDesugar</code> if the <code>let</code> statement is part of a <code>for</code>\xe2\x80\xa6CmSource of the match, i.e. <code>match</code> or a desugaring.BbFilesystem location of this crate.CfThe type of the scrutinee before the adjustment is \xe2\x80\xa62A`location of moveDbThe span for the origin source code that <code>self</code> was \xe2\x80\xa6Da<code>source</code> in <code>use prefix::source as target</code>.BnWas this format literal written in the source?6AkThe item being re-exported.AmThe full path being imported.CjConversion of internal Rust compiler items to stable ones.CjConvert an internal Rust compiler item into its stable \xe2\x80\xa6DhReturns the <code>TokenStream</code> of tokens that are delimited in \xe2\x80\xa6EeReturns the <code>DefId</code> of the <code>String</code> lang item if it is defined.CmParses all of a string which is to be considered a \xe2\x80\x9craw \xe2\x80\xa6oString literal.CdCalled for a span of text. If the text should be \xe2\x80\xa6CkThe type suffix, including preceding underscore if present.CbThe original suffix as written in the source code.BnThe original suffix as written in source code.1CeSpan of <code>super</code> in <code>super let</code>.CcThe original literal as written in the source code.BoThe original literal as written in source code.1CiAn \xe2\x80\x9cinterner\xe2\x80\x9d is a data structure that associates \xe2\x80\xa6DbSymbol of the format string, i.e. <code>&quot;content&quot;</code>CkThe syntax that the user used to declare this lifetime. SeeCnThis defines the syntax of MIR, i.e., the set of available \xe2\x80\xa6BhThe name of the function being generatedBfThe target node for <code>edge</code>.CkThis module implements some validity checks for attributes.CjWhere to go after this call returns. If none, the call \xe2\x80\xa60DlThe <code>SwitchInt</code> will be replaced by <code>Goto { target }</code>.ClProvide information about the machine that this is being \xe2\x80\xa6Ef<code>target</code> in <code>use prefix::source as target</code>. It will directly \xe2\x80\xa6CnA base target for Nintendo 3DS devices using the devkitARM \xe2\x80\xa6CjA base target for Nintendo Switch devices using a pure \xe2\x80\xa6ChA base target for PlayStation Vita devices using the \xe2\x80\xa6BmThe target used to compile the crate against.CmInformation about the target for which this documentation \xe2\x80\xa6CmList of themes to extend the docs with. Original argument \xe2\x80\xa6AcImplements threads.BiThe thread that is waiting on this futex.DhIf <code>measureme</code> profiling is enabled, holds timing information0CjReturns the corresponding backwards-compatible CLI flavor.DiConverts the <code>ScalarInt</code> to i16. Panics if the size of the \xe2\x80\xa6DkConverts the scalar to produce an <code>i16</code>. Fails if the scalar \xe2\x80\xa6DiConverts the <code>ScalarInt</code> to i32. Panics if the size of the \xe2\x80\xa6DkConverts the scalar to produce an <code>i32</code>. Fails if the scalar \xe2\x80\xa6DiConverts the <code>ScalarInt</code> to i64. Panics if the size of the \xe2\x80\xa6DkConverts the scalar to produce an <code>i64</code>. Fails if the scalar \xe2\x80\xa6DhConverts the <code>ScalarInt</code> to a signed integer of the given \xe2\x80\xa6CjConverts the scalar to produce a signed integer of the \xe2\x80\xa6CeTurn a mplace into a (thin or wide) pointer, as a \xe2\x80\xa6EfConverts the <code>ScalarInt</code> to <code>u16</code>. Panics if the size of the \xe2\x80\xa6DjConverts the scalar to produce a <code>u16</code>. Fails if the scalar \xe2\x80\xa6FcConverts the <code>ScalarInt</code> to <code>u32</code>. Panics if the <code>size</code> of the \xe2\x80\xa6DjConverts the scalar to produce a <code>u32</code>. Fails if the scalar \xe2\x80\xa6FcConverts the <code>ScalarInt</code> to <code>u64</code>. Panics if the <code>size</code> of the \xe2\x80\xa6DjConverts the scalar to produce a <code>u64</code>. Fails if the scalar \xe2\x80\xa6DfThe bitwise exclusive-or (<code>^</code>) of the bits in two flags \xe2\x80\xa60000000000000000000000000000CkOriginal tokens this item was parsed from. This isn\xe2\x80\x99t \xe2\x80\xa600DjThe underlying tokens for the attribute target that <code>attrs</code> \xe2\x80\xa6ClThe trait this <code>Self</code> is a generic parameter for.00000000AfThe path to the trait.DcThe trait being implemented or <code>None</code> if the impl is \xe2\x80\xa6Dc<code>None</code> iff this is an <em>inherent</em> associated type.AkThe full path to the trait.BcInterface of a Rust codegen backendCfTrait Resolution. See the rustc-dev-guide for more \xe2\x80\xa6CfTrait Resolution. See the rustc dev guide for more \xe2\x80\xa6CnA list of all traits in a crate, used by rustdoc and error \xe2\x80\xa6000000ChUsed to memoize the traits in this module for faster \xe2\x80\xa62CkThis map contains information about all known traits of \xe2\x80\xa6CnAll the traits implemented. One of them is the vtable, and \xe2\x80\xa6CfThe target triple for which this documentation was \xe2\x80\xa6CgIf the type is function like, get the signature for it.CjCurrent type-checker, giving us our inference context etc.Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6000000CmType metadata identifiers for LLVM Control Flow Integrity \xe2\x80\xa6CjType metadata identifiers for LLVM Kernel Control Flow \xe2\x80\xa6DiThis module implements the <code>UniMap</code>, which is a way to get \xe2\x80\xa6CmText to show when a permission is not initialized. Should \xe2\x80\xa6ClA <code>Tree</code> containing a single, uninitialized byte.ClUpdate a block pointer and return the value. Use it like \xe2\x80\xa6Aaclip unused bytesClIndicates that the source expression should be \xe2\x80\x9cunsized\xe2\x80\xa6AkUnwinding runtime for Miri.BgAction to be taken if the call unwinds.CjThe imaginary cleanup block link. This particular path \xe2\x80\xa6CnAction to be taken if the inline assembly unwinds. This is \xe2\x80\xa6210ClPackage up unwind recovery. Note that if you are in some \xe2\x80\xa6Cgget a CanonAbi even if Deprecated, panicking if InvalidCnFetches the value, applies a function to it that it return \xe2\x80\xa6EcUpdate <code>self</code> with the usefulness information found in <code>row</code>.CiInformation about upvars not necessarily preserved in \xe2\x80\xa6CjUpvar (closure capture) collection from cross-body HIR \xe2\x80\xa6BiThe span of the <code>use</code> keyword.0AoWhether this pattern is useful.DhFalse when the matrix is just built. This is set to <code>true</code> byDhTrait method used to inject <code>va_end</code> on the \xe2\x80\x9cspoofed\xe2\x80\x9d \xe2\x80\xa60BjGet the LLVM type of a <code>Value</code>.BbIterate over values, sorted by keyCkAn iterator visiting all values in arbitrary order. The \xe2\x80\xa60BbThe origins of each type variable.1CnPossible values. For each value, the location to branch to \xe2\x80\xa6022CcVendor name to use for conditional compilation (\xe2\x80\xa6CkVerifies that the current thread is associated with the \xe2\x80\xa6BkThe lifetime we have found to be redundant.Bhthe \xe2\x80\x9cworker\xe2\x80\x9d half of our local dequeCgThe worker which will wait on scope completion, if any.BoThe writer thread that currently owns the lock.AmThe Xtensa ABI implementationDeCreate a zeroed <code>AllocBytes</code> of the specified size and \xe2\x80\xa60CmIndicates the variant of the AArch64 ABI we are compiling \xe2\x80\xa6DjWe added a goal to the <code>EvalCtxt</code> which will get proven the \xe2\x80\xa600000000AgThe address of a place.CjRepresents the projection of an associated, opaque, or \xe2\x80\xa6000BgReturns the minimum alignment of a type0BhReturns the minimum alignment of a type.0BiA type with a statically known alignment.CbA unique identification number for each provenanceAfSummarizes informationAkABIs defined for 32-bit Arm0BcExtra data to store in a match arm.CnTreat parameters as placeholders in the given environment. \xe2\x80\xa6000DjAssociated function: <code>impl MyStruct { fn associated() {} }</code> \xe2\x80\xa600AeAssociative operator.CkAssociated type: <code>trait MyTrait { type Assoc; }</code>00AjThe kind of AST transform.BjTransform done by the compiler on the AST.B`<code>-Zunpretty=ast-tree</code>BdThe <code>async_fn</code> lang item.CnWhen lowering async functions, we create locals within the \xe2\x80\xa6Ae<code>async fn</code>Bje.g., <code>async fn foo(&amp;self)</code>0110AeA list of attributes.HbReceiver has type <code>T</code>, add <code>&amp;</code> or <code>&amp;mut</code> (if <code>T</code> is <code>mut</code>), and \xe2\x80\xa6CkRegions created as part of an autoref of a method receiver.0B`DepNodes for functions + methodsCkUsed a rustfmt:: attribute other than skip or skip::macros.ChThe access occurred with a place that was based on a \xe2\x80\xa60CdAn environment of meta-variables to their binder \xe2\x80\xa6EhA fresh binding <code>ref mut binding @ OPT_SUBPATTERN</code>. The <code>HirId</code>\xe2\x80\xa6Cl<code>x</code>, <code>ref x</code>, <code>x @ P</code>, etc.DeThe scope introduced by a <code>macro_rules!</code> macro definition.ChThis is the optimized bitcode, which could be either \xe2\x80\xa6Co&amp;, |, ^ \xe2\x80\x93 takes equal types, produces same type as input,CdIdentifier that is used for blanket implementations.BcThe thread is blocked on something.Dh<code>Borrows</code> stores the data used in the analyses that track \xe2\x80\xa60Ad<code>[ ... ]</code>0DkSingle-segment attribute defined by the language (<code>#[inline]</code>\xe2\x80\xa6DiA true pointer type, such as <code>&amp;T</code> and <code>*mut T</code>.BiSuccessful resolution for a builtin impl.0000ClUpvar is captured by value. This is always true when the \xe2\x80\xa60nA byte offset.EbA byte string (<code>b&quot;foo&quot;</code>). The symbol is unescaped, and so \xe2\x80\xa6Cf<code>b&quot;abc&quot;</code>, <code>b&quot;abc</code>DkThe different settings that the <code>-C control-flow-guard</code> flag \xe2\x80\xa6DiA function that converts individual items (of type <code>Item</code>) \xe2\x80\xa6BeInformation about a captured element.CmCapture a backtrace at the point the error is created and \xe2\x80\xa60BoWrapper trait for <code>Part&lt;T, U&gt;</code>CmThe type can be determined purely from subexpressions. If \xe2\x80\xa6ChA pair of a basic block and an index into that basic \xe2\x80\xa6CaStrings provided as <code>--cfg [cfgspec]</code>.AcA character offset.AdCleanups to be done.0BdThe <code>clone_fn</code> lang item.ChA closure (e.g., <code>move |a, b, c| a + b + c</code>).AoE.g., <code>|x, y| body</code>.0CdThe MIR is a closure. The signature is found via \xe2\x80\xa6BkA closure, coroutine, or coroutine-closure.AeA closure expression.BcThis is a plain closure expression.DlAn explicit <code>async</code>/<code>gen</code> closure written by the user.hClosuresCjA closure (e.g., <code>move |a, b, c| {a + b + c}</code>).Af<code>|x, y| {}</code>CjThe anonymous type of a closure. Used to represent the \xe2\x80\xa600C`A closure that is coerced to a function pointer.AeA closure definition.99222A`Code generation.AiTime spent doing codegen.D`Use in combination with <code>CombineAttributeParser</code>. \xe2\x80\xa6CfThe combination of two field expressions. E.g. for \xe2\x80\xa6jLeaf typesB`Blocked on a condition variable.AoThe conditional variable state.1CmInformation about the item currently being const-checked, \xe2\x80\xa6AhA <code>const fn</code>.oParsing contextBcThe <code>Context</code> lang item.BlThe context in which a block is encountered.CfMajor driving force in all rustdoc rendering. This \xe2\x80\xa6BbThe count is specified explicitly.CkA reference to an instance of an abstract \xe2\x80\x9ccounter\xe2\x80\x9d \xe2\x80\xa6CjEnum that can hold a constant zero value, the ID of an \xe2\x80\xa6ClStabilized in the upcoming version, whatever number that \xe2\x80\xa60DaThe default value if <code>-Zon-broken-pipe=...</code> is not \xe2\x80\xa6DdMust match the layout of <code>LLVMDIFlags</code> in the LLVM-C API.BcLiteral doesn\xe2\x80\x99t contain a prefix.EeThis current does not support <code>f32</code> nor <code>f64</code>, as they\xe2\x80\x99re \xe2\x80\xa60EhWhat kind of definition something is; e.g., <code>mod</code> vs <code>struct</code>. \xe2\x80\xa6Cn<code>Vec::default()</code> or <code>Default::default()</code>EfWe support <code>expose_provenance</code>/<code>with_exposed_provenance</code> via \xe2\x80\xa60CgDefault means no value was provided, it will take a \xe2\x80\xa6AnReturns type is not specified.CnDon\xe2\x80\x99t do anything special about fieldless variants. They \xe2\x80\xa6BiNo <code>#[optimize(..)]</code> attribute0AhBinder is not specified.CbLint is at the default level as declared in rustc.AeA \xe2\x80\x9cnormal\xe2\x80\x9d retag.CmExport the symbol from the DSO and apply overrides of the \xe2\x80\xa61ClA default value, i.e. not specified by the user. In this \xe2\x80\xa60CgFor the most part items are private by default. The \xe2\x80\xa6oUse heuristics.CnUse scaled values based on the value of <code>max_width</code>CjOne direct assignment and any number of direct uses. A \xe2\x80\xa6C`This serves as an index into arrays built by \xe2\x80\xa600CdAllows for controlled descent when using visitor \xe2\x80\xa6DcSimplified version of <code>FluentArg</code> that can implement \xe2\x80\xa60CbConvenience extension trait for <code>Diag</code>.AlSubstitution dictionary key.ClA single argument that implements <code>Display</code> - \xe2\x80\xa6o<code>{}</code>DiPretty-print wrapper for a <code>Cfg</code>. Also indicates what form \xe2\x80\xa6Cipoint inserted because Local was dropped at the given \xe2\x80\xa6BlSpecifies how a trait object is represented.0000AnA trait object. Written as \xe2\x80\xa600000CkWhen the underlying type is a reference type, reference \xe2\x80\xa6CjThe set of outbound byte edges associated with a DFA node.BlThe edition of the compiler. (See RFC 2052.)0CnA markdown tagged element, which may or may not contain an \xe2\x80\xa6BaWhat kind of object file to emit.CjEmitter trait for emitting errors and other structured \xe2\x80\xa6BjThe thread is enabled and can be executed.CjIndicates that new suggestions can be added or removed \xe2\x80\xa6AlA note about error handling.0EeA kind of file descriptor created by <code>eventfd</code>. The <code>Event</code> \xe2\x80\xa6EdAn <code>EventId</code> is a <code>StringId</code> with the additional guarantee \xe2\x80\xa6AcBlocked on eventfd.0CmAn error came up while waiting on the child process to do \xe2\x80\xa6CkOne of these is made during expansion and incrementally \xe2\x80\xa6CmUse tree-based collections to cheaply get a deterministic \xe2\x80\xa6CbThe contents of <code>ParseResult::Failure</code>.DjArm failed to match. If the second parameter is <code>token::Eof</code>\xe2\x80\xa60ClFailure branch for tests with two possible outcomes, and \xe2\x80\xa6AiThe file descriptor tableBdRepresents <code>#[ffi_pure]</code>.0CkVisitor used to determine impl visibility and reachability.CmA pattern in a form suitable for lowering the match tree, \xe2\x80\xa6DkExtends a type <code>T</code> with top and bottom elements to make it a \xe2\x80\xa60DkBlanket extension trait for contexts that can compute <code>FnAbi</code>\xe2\x80\xa6ChThe initial retag of arguments when entering a function.0CnThe essential nodes of a desugared for loop as well as the \xe2\x80\xa6C`A <code>for</code> loop, with an optional label.BfA <code>for _ in _ { .. }</code> loop.CjAn unsized FFI type that is opaque to Rust. Written as \xe2\x80\xa600000CiThe target function, to be created using forward mode AD.BnFor covariant cases, we add a forward edge \xe2\x80\xa6CkDataflow that runs from the entry of a block (the first \xe2\x80\xa60DkA <code>FreshTy</code> is one that is generated as a replacement for an \xe2\x80\xa60000CjA structure representing an active landing pad for the \xe2\x80\xa6CnThe legal operations for a transfer function in a gen/kill \xe2\x80\xa60DbGeneral type variable <code>?T</code> that can be unified with \xe2\x80\xa60000000Bde.g., <code>fn foo&lt;A&gt;()</code>CnThis is a generic const expression (i.e. N * 2), which may \xe2\x80\xa611AaA type parameter.ClParameterized types. The contained string is the name of \xe2\x80\xa6AiA crate or markdown file.DfA <code>u128</code> but encoded with a fixed size; for hashes this \xe2\x80\xa6CfType alias for a hash map that uses the Fx hashing \xe2\x80\xa6000CfType alias for a hash set that uses the Fx hashing \xe2\x80\xa6000CjRepresents a job stored in the heap. Used to implement \xe2\x80\xa6ChA node with a <code>HirId</code> and a <code>Span</code>B`<code>-Zunpretty=hir-tree</code>ClList of all events that affected a tag. NOTE: not all of \xe2\x80\xa6CiThis uses a graphviz HTML string label. The string is \xe2\x80\xa6DhDo not touch <code>SIGPIPE</code>. Use whatever the parent process uses.BkSignal local id which should never be used.0BeIndicates whether the ADT is an enum.C`Extend functionality of rustc_apfloat softfloatsChA lint name that should give no warnings and have no \xe2\x80\xa6AhA trait impl definition.ClWhether we do the orphan check relative to this crate or \xe2\x80\xa600CkIndicates that this node is a member of the given cycle \xe2\x80\xa6CmAllow for the argument to be passed in-place: destroy the \xe2\x80\xa60ChBacking store for an in-place unification table. Not \xe2\x80\xa6Dn<code>InferOk&lt;&#39;tcx, ()&gt;</code> is used a lot. It may seem like a \xe2\x80\xa60CiA placeholder for a type that hasn\xe2\x80\x99t been inferred yet.0000ClIn addition to the semantic changes, beginning with this \xe2\x80\xa60C`Being inspected in some way, like loading a len.CmA suggestion has already been emitted, change the wording \xe2\x80\xa6BkIntegers, also used for enum discriminants.CdThe given argument is the invalid type for the inputCnThe provided argument is the invalid type for the expected \xe2\x80\xa6CjABI we do not map for this platform: it must not reach \xe2\x80\xa60CnA representation of an IO error: either a libc error name, \xe2\x80\xa60BfAn io error during reading or writing.0DeGiven a region <code>R</code>, true if it is <code>&#39;empty</code>.0BlIndirect queue to provide FIFO job priority.AfA keyword declaration.CkInformation about the most specialized definition of an \xe2\x80\xa6000CjIdle, but lending the compiler process\xe2\x80\x99s Token to an \xe2\x80\xa6BaA let else block does not diverge00ElRepresents a <code>let &lt;pat&gt;[: &lt;ty&gt;] = &lt;expr&gt;</code> expression (not a \xe2\x80\xa6BjAssignment to, or initializer for, a localFiRepresents a <code>let</code> statement (i.e., <code>let &lt;pat&gt;:&lt;ty&gt; = &lt;init&gt;;</code>\xe2\x80\xa6CmThe input could be broken and the returned snippet should \xe2\x80\xa6CkArgument which is passed to linker, relative order with \xe2\x80\xa6CbMust match the layout of <code>LLVMLinkage</code>.DjPossible values for the <code>#[linkage]</code> attribute, allowing to \xe2\x80\xa6BcRepresents <code>#[linkage]</code>.10AcTime spent linking.ClSpecifications found at this position in the stack. This \xe2\x80\xa6EhThis type is used within both <code>ast::MetaItemLit</code> and <code>hir::Lit</code>\xe2\x80\xa6Bg<code>{:5}</code> or <code>{:.5}</code>BbFor example, a number or a string.GiLiterals, e.g. <code>12u8</code>, <code>1.0e-40</code>, <code>b&quot;123&quot;</code>. Note that <code>_</code> is an \xe2\x80\xa6jA literal.FgA literal string (<code>&quot;hello&quot;</code>), byte string (<code>b&quot;hello&quot;</code>), C \xe2\x80\xa6GgA literal character (<code>&#39;a&#39;</code>), string (<code>&quot;hello&quot;</code>), number (<code>2.3</code>), \xe2\x80\xa6Ckpoint inserted because Local was live at the given LocationCcTrailing brace in a macro call, like the one in \xe2\x80\xa6DhRepresents a macro invocation. The <code>path</code> indicates which \xe2\x80\xa6AoA macro pattern; pre-expansion.fMacro.BbA macro invocation; pre-expansion.AmA macro in the type position.AcA macro invocation.BfA macro expanding to associated items.BcA macro expanding to foreign items.CkAdditional memory kinds a machine wishes to distinguish \xe2\x80\xa6ClMemory for args, errno, env vars, and other parts of the \xe2\x80\xa610CfMethods of this trait signifies a point where CTFE \xe2\x80\xa6220DbThe macro namespace includes <code>macro_rules!</code> macros, \xe2\x80\xa6BaSomething in the macro namespace.BnWhether this kind of memory is allowed to leak0CgAllows the machine code generator to omit the frame \xe2\x80\xa6BaMessages sent to the coordinator.Dge.g., <code>$var</code>. The span covers the leading dollar and the \xe2\x80\xa6CkA minimum number of generics that is demanded on a lang \xe2\x80\xa6EfJust like <code>MirPass</code>, except it cannot mutate <code>Body</code>, and MIR \xe2\x80\xa6CjA streamlined trait that you can implement to create a \xe2\x80\xa6ClA missing pattern, e.g. for an anonymous param in a bare \xe2\x80\xa6AgE.g. <code>Path</code>.1AhThere is a missing input02CmFake extra constructor for constructors that are not seen \xe2\x80\xa60AaModule item kind.CeMust not contain self-references, <code>Unpin</code>.0000000Dj<code>MoveOut</code> represents a point in a program that moves out of \xe2\x80\xa6BdRepresents <code>#[must_use]</code>.0Ah<code>#[must_use]</code>BbData is mutable and not aliasable.0BjNew variable with given index was created.kA new line.CjA struct which can never be instantiated. Used for the \xe2\x80\xa60000CnDid not find an applicable method, but we did find various \xe2\x80\xa6Ac<code>-C lto</code>CkForces the machine code generator to preserve the frame \xe2\x80\xa6DfThe operation will emit <em>not</em> errors and lints. Use this if \xe2\x80\xa60CdDo nothing; the return value is indirect or ignored.CnThis identifier (and its span) is the identifier passed to \xe2\x80\xa6CaConstant that can be added to add one to the JEC.CaThe unsize info of this projection or opaque typeBaThe unsize info of this parameterBiAn open directory, tracked by DirHandler.DaThe backend <code>OperandValue</code> has already been generated.EfAn <code>Operand</code> is the result of computing a <code>mir::Operand</code>. It \xe2\x80\xa6CkAn operand in MIR represents a \xe2\x80\x9cvalue\xe2\x80\x9d in Rust, the \xe2\x80\xa60BjThe top-level command-line options struct.00BbConfiguration options for rustdoc.CkIMPORT_ORDINAL Uses the ordinal (i.e., a number) rather \xe2\x80\xa6CkThe degree of overlap between 2 places for borrow-checking.BaExtra data to store in a pattern.CnNeeded as its own node with its own HirId for tracking the \xe2\x80\xa6CjAll the different flavors of pattern that Rust recognizes.o<code>::</code>CmThe left-hand side, with patterns and metavar definitions \xe2\x80\xa6CnType error arising from type checking a pattern against an \xe2\x80\xa60BgRepresents a pattern in the type systemB`The binding is part of a pattern2CkThis obligation has not yet been selected successfully. \xe2\x80\xa6n<code>%</code>BlUsed as a placeholder for unused LocalDefId.BkAn evaluated place, together with its type.0BbRepresents <code>#[pointee]</code>0EcPointer-sized integer type, i.e. <code>isize</code> and <code>usize</code>. The \xe2\x80\xa6Aa<code>{:p}</code>AkA potentially-wide pointer.BhRepresents a pointer in the Miri engine.0ChWe know the value to be a pointer to this place. The \xe2\x80\xa6DkPointer-sized integer type, i.e. <code>isize</code> and <code>usize</code>.Abexpr.match { \xe2\x80\xa6 }Abexpr.yield { \xe2\x80\xa6 }BaA <code>expr.match { .. }</code>.ClThe tracked value is initialized and needs to be dropped \xe2\x80\xa60BlThe external source has been loaded already.CkAn operation that must be removed for const-checking to \xe2\x80\xa6BcThe \xe2\x80\x9cprimary\xe2\x80\x9d effect (e.g., \xe2\x80\xa6BbPrint ActivityAnalysis InformationAnPrint TypeAnalysis informationCeA trait that \xe2\x80\x9cprints\xe2\x80\x9d user-facing type system \xe2\x80\xa6CaThis can only happen for non-local items when \xe2\x80\xa6ClA product pattern context, e.g., <code>Variant(a, b)</code>.BcThe <code>RangeTo</code> lang item.G`<code>cr&quot;abc&quot;</code>, \xe2\x80\x9ccr#\xe2\x80\x9cabc\xe2\x80\x9d#\xe2\x80\x9c, <code>cr#&quot;a</code>. <code>None</code> indicates an \xe2\x80\xa6CkWrapper for a raw enum value returned from LLVM\xe2\x80\x99s C APIs.DgA generic type that can be used to prepend a <code>List</code> with \xe2\x80\xa6CmA higher-ranked region. These represent either late-bound \xe2\x80\xa600000CfA region that resulted from some other error. Used \xe2\x80\xa600000BkFailed to read from <code>.ftl</code> file.Al<code>[Foo link][ref]</code>CgHolds tables of the various region types in one struct.BfEnforcing regular stability of an itemCbThe lint has been removed due to the given reason.ChLint with this name existed previously, but has been \xe2\x80\xa61BhThe lint has been renamed to a new name.CkTemporary renaming, used for easing migration pain; see \xe2\x80\xa61ClThe parsing configuration used to parse a parameter list \xe2\x80\xa6ClThe results of a dataflow analysis that has converged to \xe2\x80\xa60CiThe target function, to be created using reverse mode AD.DhIn reverse mode, a <code>R1: R2</code> constraint results in an edge \xe2\x80\xa6CfThe rib kind restricts certain accesses, e.g. to a \xe2\x80\xa6AnRendering style for RTN types.0CfMemory allocated by the runtime, e.g. for readdir. \xe2\x80\xa60CaThe \xe2\x80\x9cruntime MIR\xe2\x80\x9d dialect, used for CTFE, \xe2\x80\xa60EeChange <code>SIGPIPE</code> to <code>SIG_DFL</code> so that the process is killed \xe2\x80\xa6EhChange <code>SIGPIPE</code> to <code>SIG_IGN</code> so that failed writes results in \xe2\x80\xa6CnA minimal representation of a path segment. We use this in \xe2\x80\xa6CmRepresents the data associated with a compilation session \xe2\x80\xa60CmA session is a run of rustfmt across a single or multiple \xe2\x80\xa6DdVariable with given index was changed <em>from</em> the given value.CgThis node and all nodes reachable from it have been \xe2\x80\xa6CmValidate the interior of the value, but not things behind \xe2\x80\xa60DgFrom the RFC: \xe2\x80\x9cA <em>shallow</em> access means that the immediate \xe2\x80\xa6AiStops at any dereference.CkA shared shallow borrow. The immediately borrowed place \xe2\x80\xa60AhOnly does a shallow initChOnly affect the top-level drop flag, not that of any \xe2\x80\xa6CiThe immediately borrowed place must be immutable, but \xe2\x80\xa60BdPrint only type name, without fieldsCjAn array of cache-line aligned inner locked structures \xe2\x80\xa6BkDescribes the expected signature of a shim.CiSilence errors when lowering generics. Only used with \xe2\x80\xa6Aj<code>-Copt-level=z</code>00CmCompilation skipped. This happens when users invoke rustc \xe2\x80\xa6CiIndicates whether a token can join with the following \xe2\x80\xa6DbIndicates whether a <code>Punct</code> token can join with the \xe2\x80\xa6CkA span tag byte encodes a bunch of data, so that we can \xe2\x80\xa6CjSpanned returns a span including attributes, if available.ClAn already executing query. The query job can be used to \xe2\x80\xa6Bo\xe2\x80\x9cstdcall\xe2\x80\x9d has both GNU and Windows variantsCjgnu-stdcall on \xe2\x80\x9cunix\xe2\x80\x9d and win-stdcall on \xe2\x80\x9cwindows\xe2\x80\x9d10ClCan be specified as <code>extern &quot;stdcall&quot;</code>.CeGeneric mark meaning that the block occurred as a \xe2\x80\xa6BkInformation about an expression in a chain.CkA \xe2\x80\x9csub\xe2\x80\x9d-diagnostic attached to a parent diagnostic. \xe2\x80\xa60CfIt\xe2\x80\x99s a subexpression, i.e., <em>not</em> standalone.AoArose from a subtyping relationAh<code>T1 &lt;: T2</code>00CjA <code>Subtype(T)</code> projection is applied to any \xe2\x80\xa600000002111CmThis obligation was selected successfully, but may or may \xe2\x80\xa6AdParsed successfully.0CjSuccess branch, used for tests with two possible outcomes.AbStrip all symbols.CgThe child process with the specified pid entered or \xe2\x80\xa6AiList of supported targetsChFailures that can occur during the execution of Tree \xe2\x80\xa6BfPerforms thin-LTO on the given module.ClThe moment in time when a blocked thread should be woken \xe2\x80\xa6DjAlways fallback to <code>!</code> (which should be equivalent to never \xe2\x80\xa6CfWe don\xe2\x80\x99t support 16-bit systems, so let\xe2\x80\x99s have \xe2\x80\xa6CnA tool attribute module; e.g., the <code>rustfmt</code> in \xe2\x80\xa600000000CkInformation about the expected type at the top level of \xe2\x80\xa6ChRepresents a trait method\xe2\x80\x99s body (or just argument \xe2\x80\xa6CkA built-in impl that is considered trivial, without any \xe2\x80\xa600000000000AfConf with parse errorsBaA type alias (<code>type</code>).oA foreign type.BhType alias: <code>type Foo = Bar;</code>Catype aliases: <code>type Foo = impl Trait;</code>CjA type alias, e.g., <code>type Foo = Bar&lt;u8&gt;</code>.2211BhRepresents a constant in the type systemDeThis is the wrapper around <code>ty::Const</code> for a non-local \xe2\x80\xa6CfEquivalent to <code>ty::Infer(ty::FloatVar(_))</code>.0DnType parameter: the <code>T</code> in <code>struct Vec&lt;T&gt; { ... }</code>00DfThe <code>TypeMap</code> is where the debug context holds the type \xe2\x80\xa6CnEmpty string, to be used where LLVM expects an instruction \xe2\x80\xa6CfExactly like <code>BinaryOp</code>, but less operands.000CkRecords the \xe2\x80\x9cundo\xe2\x80\x9d data for a single operation that \xe2\x80\xa6CfUngated attribute, can be used on all release channels0ClAn argument passed entirely registers with the same kind \xe2\x80\xa6onot a known ABICkA path which is not be coinductive right now but we may \xe2\x80\xa6ChUnknown token, not expected by the lexer, e.g. \xe2\x80\x9c\xe2\x84\x96\xe2\x80\x9dBhA type doesn\xe2\x80\x99t have a sensible layout.2AcWe know nothing yetBbNot a pointer, or we can\xe2\x80\x99t know.44BfThe external crate could not be found.CeFormat failure that does not fit to above categories.BoTuple and unit structs/enum variants like this.DhUpvars do not get their own <code>NodeId</code>. Instead, we use the \xe2\x80\xa60CeUp to three resolutions for type, value and macro \xe2\x80\xa6DkA tree of paths sharing common prefixes. Used in <code>use</code> items \xe2\x80\xa6DgAn interned valtree. Use this rather than <code>ValTreeKind</code>, \xe2\x80\xa60FaThe value namespace includes <code>fn</code>s, <code>const</code>s, <code>static</code>s, and \xe2\x80\xa6BaSomething in the value namespace.mEnum variant.DkThis <code>DefKind::Ctor</code> is a synthesized constructor of a tuple \xe2\x80\xa6DjRefers to the variant itself, <code>DefKind::Ctor</code> refers to its \xe2\x80\xa6G`<code>Foo(...)</code> or <code>Foo{...}</code> or <code>Foo</code>, where <code>Foo</code> is a variant name \xe2\x80\xa6DhRefers to the variant itself, [<code>DefKind::Ctor</code>] refers to \xe2\x80\xa60BeBranch corresponding to this variant.nEnum variants.0AeA variant of an enum.AdA variant of a enum.0ChThe default data race detector for Miri using vector \xe2\x80\xa6CjData race detection via the use of vector clocks. Weak \xe2\x80\xa6DaRepresents the pre-expansion arguments of a <code>vec!</code> \xe2\x80\xa6jEmit more.0Blalso stores the original symbol for printing0AiPrint version informationD`Dynamic dispatch to <code>&lt;dyn Trait as Trait&gt;::fn</code>.0000000DjA virtual function definition stored in a VTable. The <code>idx</code> \xe2\x80\xa6CiVariant that doesn\xe2\x80\x99t fit the other cases, i.e. most \xe2\x80\xa6CmThis node has been examined by the depth-first search but \xe2\x80\xa6CiEach method of this trait is a hook to be potentially \xe2\x80\xa6CdEach method of the Visitor trait is a hook to be \xe2\x80\xa6DiEvery <code>walk_*</code> method uses deconstruction to access fields \xe2\x80\xa6CkThis obligation was selected successfully, but it has a \xe2\x80\xa6CkPrint a warning about rejected isolated op, with backtrace.0CmA warning about the code being compiled. Does not prevent \xe2\x80\xa6jA warning.0CeUnix-like linker for Wasm targets (both naked and \xe2\x80\xa6BfWindows <code>HeapAlloc</code> memory.0AoForce CRLF (<code>\\r\\n</code>).0AlABIs defined for x86-{32,64}0CjOn x86-32 only: make use of SSE and SSE2 for ABI purposes.CkPointers into this address space contain extra metadata \xe2\x80\xa6DnMake sure to prevent auto-traits like <code>Send</code> and <code>Sync</code>.Ecdisable <code>Send</code> and <code>Sync</code>, just for a little future-proofing.1CnGrammatical tool for displaying messages to end users in a \xe2\x80\xa6BlAcquires a token from this jobserver client.BhGets the pointer to this place as an \xe2\x80\xa6Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6AmThe ADT we\xe2\x80\x99re constructing.111111AkThe enum type being tested.ClThe data type where this variant comes from. For now, we \xe2\x80\xa6DkSingle step of highlighting. This will classify <code>token</code>, but \xe2\x80\xa6CfAn infrastructure to mechanically analyse proof trees.CmAn analysis to determine which locals require allocas and \xe2\x80\xa6ClExtract result of a transition (checks that the starting \xe2\x80\xa6BoA helper class for dealing with static archivesBnThe index of the argument whose type is wrong.0Ac\xe2\x80\x9ca\xe2\x80\x9d or \xe2\x80\x9can\xe2\x80\x9dBnAn English article for the literal token kind.DeReturn an indefinite article (a/an) for use with <code>descr()</code>BkGets an English article for the definition.CaGets an English article for the <code>Res</code>.CjGet the article (\xe2\x80\x9ca\xe2\x80\x9d or \xe2\x80\x9can\xe2\x80\x9d) to use with this \xe2\x80\xa600EcReturns <code>Some(expander)</code> for a macro usable as an <code>Attr</code>; \xe2\x80\xa6DhIf the <code>Value</code> is a Boolean, returns the associated bool. \xe2\x80\xa6DeReturns the value of this punctuation character as <code>char</code>.DfReturns the css class expected by rustdoc for each <code>Class</code>.DhIf the <code>Value</code> is a Null, returns (). Returns None otherwise.DgCompile <code>expr</code> into a fresh temporary. This is used when \xe2\x80\xa6AmSee docs in build/expr/mod.rsCcSpan of the <code>#[feature(...)]</code> attribute.0BfThe type of the <code>PlaceBase</code>CnThe original type being checked, before we recursed to any \xe2\x80\xa61EhReturns a <code>Span</code> between the end of <code>self</code> to the beginning of \xe2\x80\xa6ChThe binders of the branch where we entered the macro \xe2\x80\xa6CnReturns the binding for the name if it is known or None if \xe2\x80\xa6CjThe kind of bound applied to the associated type/constant.EgConvenience method to create the <code>&lt;lhs&gt; &amp; &lt;rhs&gt;</code> suggestion.DkSets <code>out_vec[i] = op(out_vec[i], in_vec[i])</code> for each index \xe2\x80\xa6CnThe ID of the fn body that triggered this obligation. This \xe2\x80\xa600BmCreate a type representing <code>bool</code>.CiUsed <em>mostly</em> as a stack; never empty. Invariants:0DiThis module used to be named <code>build</code>, but that was causing \xe2\x80\xa6BmLogic required to produce a monomorphic body.CmCheck properties that are required by built-in traits and \xe2\x80\xa6AkLints in the Rust compiler.BmSome lints that are built in to the compiler.AfLints indexed by name.0CeThe target type. That is, the type we are casting to.CnArguments for the cc wrapper specifically. Check that it\xe2\x80\x99\xe2\x80\xa6BaHas the caller body been changed?CaIndicates that the caller body has been modified.0BgHas something changed in the level map?B`The cleanup block, if it exists.0BkCode for type-checking closure expressions.Ck\xe2\x80\x9cCollection\xe2\x80\x9d is the process of determining the type \xe2\x80\xa6DeCombines two confusion types. If either is <code>Both</code>, the \xe2\x80\xa6DfA thin wrapper around <code>Command</code> in the standard library \xe2\x80\xa6CgCompare using the provided built-in comparison operatorEcThe value found at <code>place</code> is moved, depending on <code>mode</code>. \xe2\x80\xa6CgOptionally consumes the specified character. If the \xe2\x80\xa6EaReturns the <code>DefId</code> of the <code>Context</code> lang item if it is \xe2\x80\xa6C`Basic types for managing and implementing lints.AjType context book-keeping.AoImplementation of CompilerCtxt.CgConverts a single syntactical attribute to a single \xe2\x80\xa6CnThis module holds the logic to convert rustc internal ADTs \xe2\x80\xa6EfCopies the data from an operand to a place. <code>src</code> and <code>dest</code> \xe2\x80\xa6CmThe object contains an unsigned 64-bit integer (uint64_t) \xe2\x80\xa6ClValidates all used crates and extern libraries and loads \xe2\x80\xa6CiFolds over fields, combining the expressions for each \xe2\x80\xa6CjThe set of current mps to be processed. This should be \xe2\x80\xa6BdReturns the MSRV at the current nodeCiGets the registry associated with the current thread. \xe2\x80\xa6CkThe new encoding of the dependency graph, optimized for \xe2\x80\xa6DhGets the <code>WorkerThread</code> index for the current thread; returnsClCurrent hierarchy of components leading down to what\xe2\x80\x99s \xe2\x80\xa6D`<code>DIVariable</code> returned by <code>create_dbg_var</code>.BjDeallocates a pointer from this allocator.CnDeallocate a location: Like a write access, but also there \xe2\x80\xa6AeDeallocation requiresAlDeclare various LLVM values.CmAllocates a type for a declaration, which may have a type \xe2\x80\xa6EfReturns the <code>DefKey</code> for a given <code>DefId</code>. This indicates the \xe2\x80\xa6CgThe default to be used when borrow tracking is disabledCeCreates an instance of <code>TargetDataLayout</code>.BfCreates a new <code>TypedArena</code>.CcOptional default value for the const generic param.BiCreates a default <code>fx</code> hasher.CfConstructs a syntax extension with default properties.CbOptional default value for the const generic paramCbConstructs expansion data with default properties.CmCreates a set of \xe2\x80\x9csane defaults\xe2\x80\x9d for any target. This \xe2\x80\xa6CfThe default type for this parameter, if provided, e.g.ChThe stringified expression for the default value, if \xe2\x80\xa6C`Required for resolving derive helper attributes.AjDestroys this arena chunk.AfDisables on-drop call.Ddthe (0-indexed) column for <em>display</em> purposes, counted in \xe2\x80\xa6D`Various utilities for working with <code>fmt::Display</code> \xe2\x80\xa6EoCall <code>fn_ptr</code> of <code>fn_abi</code> with the arguments <code>llargs</code>, the \xe2\x80\xa6CkReturns the documentation if this is a doc comment or a \xe2\x80\xa60AmRust edition for this target.CdEdition of the crate in which this macro is defined.BoEdition of the crate from which this span came.CcEdition of the crate in which the macro is defined.CnEdition used when reading the crate. Defaults to \xe2\x80\x9c2015\xe2\x80\x9d\xe2\x80\xa6CjDefault edition to use when parsing doctests (to add a \xe2\x80\xa6BfThe current rustc diagnostics emitter.EeReturns <code>true</code> if there is a need to gather <code>PoloniusFacts</code> \xe2\x80\xa60D`Is the given feature enabled (via <code>#[feature(...)]</code>)?CnThe linker features that are enabled on the CLI, using the \xe2\x80\xa6Ck1-based ending column of the source code span. High bit \xe2\x80\xa6Cm1-based ending column (in bytes) of the source code span. \xe2\x80\xa6BfEnd column within the line (exclusive)CkColumn in line where span ends, starting from 0, exclusive.CdAn end position of the file that this snippet lives.BiThe number of valid entries in the chunk.BhThe levels are strictly decreasing, i.e.CeHelper to get a tracked environment variable via. \xe2\x80\xa6DaPlace where the <code>environ</code> static is stored. Lazily \xe2\x80\xa6ClThe associated file is available for read(2) operations, \xe2\x80\xa6DfAdd sufficient constraints to ensure <code>a == b</code>. See also \xe2\x80\xa6BaSpan of the <code>=</code> token.0BjLinux <code>eventfd</code> implementation.DhThis function creates an <code>Event</code> that is used as an event \xe2\x80\xa6CkUnsafe: this may be called from a different thread than \xe2\x80\xa6CfA live node representing every \xe2\x80\x98exit\xe2\x80\x99 from the \xe2\x80\xa6CnWhether an allocation has been exposed or not. This cannot \xe2\x80\xa6BgThe source type for the cast expressionC`Returns the type of an expression as a monotype.DiReturns <code>true</code> if a type that impls this closure kind must \xe2\x80\xa6000CjThis module contains code to help parse and manipulate \xe2\x80\xa6BlThe list of external crates to link against.DmExtracts the first <code>lang = &quot;$name&quot;</code> out of a list of \xe2\x80\xa6EeExtract the first <code>rustc_diagnostic_item = &quot;$name&quot;</code> out of a \xe2\x80\xa6DkThe feature gate, for example <code>#![feature(rustc_attrs)]</code> for \xe2\x80\xa60CmLocal index into the function\xe2\x80\x99s local-to-global file ID \xe2\x80\xa6CiReturn a list of function definitions from this crate \xe2\x80\xa6DiReturns the plain name of the intrinsic. e.g., <code>transmute</code> \xe2\x80\xa6BnThe definition span of the method being calledDkThis <code>Span</code> is the span of the function, without the dot and \xe2\x80\xa6000CjThe span of the function, without the dot and receiver \xe2\x80\xa6ClFreshening is the process of replacing unknown variables \xe2\x80\xa6DdReturns <code>Some</code> for integral/pointer casts. Casts like \xe2\x80\xa6DiReturns the appropriate <code>Funclet</code> for the current funclet, \xe2\x80\xa6CnCalls <code>gen</code> for each element in <code>elems</code>.0ClSome code that abstracts away much of the boilerplate of \xe2\x80\xa6CmRetrieve the value stored for a place index, or \xe2\x8a\xa4 if it \xe2\x80\xa6CnRetrieve the value stored for a place, or \xe2\x8a\xa4 if it is not \xe2\x80\xa6CbGet the value at this index mutably, if it exists.oMutable lookup.0CfReturns a mutable reference to the underlying integer.ClReturns a mutable pointer into the vec; whatever changes \xe2\x80\xa6CmReturns a mutable reference to the value corresponding to \xe2\x80\xa600CjReturns a mutable reference to the inner value if allowed.CnMutably index into a JSON array or map. A string index can \xe2\x80\xa622AkGet the process identifier.CnCheck if there is ptr-sized provenance at the given index. \xe2\x80\xa6AkGet the symbol as a string.BiGet an \xe2\x80\x9cOS\xe2\x80\x9d thread ID for any thread.DhReturns <code>true</code> if the given string MAY include URLs or alike.CkThe name of this section, e.g. \xe2\x80\x98Methods\xe2\x80\x99 as well as \xe2\x80\xa6CmA set of traits that define a stable interface to rustc\xe2\x80\x99\xe2\x80\xa60CjHelper attributes defined by a macro to be used inside it.BhPrepare a suggestion from an expression.BiStores past operations on this allocation00CgNotable events in the history of this tag, used for \xe2\x80\xa6DhStack of inlined instances. We only check the <code>DefId</code> and \xe2\x80\xa60AnMachinery for hygienic macros.Bc<code>if let</code> else expressionBc<code>if let</code> then expressionB`<code>while let</code> loop bodyCjThe feature is implied by another feature, rather than \xe2\x80\xa6CmA bunch of methods and structures more or less related to \xe2\x80\xa6CkIterate down the constraint indices associated with a givenCfFor those regions that may appear in the parameter \xe2\x80\xa6ChInitialises the supervisor process. If this function \xe2\x80\xa60BbIdentifier of the original access.BgWhether the first range is initialized.CmWhether this scope is the root of a scope tree of another \xe2\x80\xa6DkA cached copy of the result of <code>MonoItem::instantiation_mode</code>\xe2\x80\xa6DjUsed by <code>clean::inline</code> to tell if an item has already been \xe2\x80\xa6CeData structure used to inspect trait solver behavior.000000CmWhen one of the KILL signals is delivered to the process, \xe2\x80\xa6EhExecutes <code>op</code> within the threadpool. Any attempts to use <code>join</code>\xe2\x80\xa6CjWhether the diagnostic should say \xe2\x80\x9cinstead\xe2\x80\x9d (as in \xe2\x80\xa6DkCalculates absolute value of integers in <code>op</code> and stores the \xe2\x80\xa6AoThe integer part of the number.AnGet the symbol for an integer.BcGet whether this is intense or not.DjReturns <code>true</code> if the type is sized and a 1-ZST (meaning it \xe2\x80\xa60CjAnonymous queries cannot be replayed from one compiler \xe2\x80\xa60DiWhether the trait is marked <code>auto</code> and is thus implemented \xe2\x80\xa6BkReturns <code>true</code> if this is a boolCdWhether this is a problem at a call site or at a \xe2\x80\xa600BeWhether the expected source is a callBeCheck if <code>self</code> is the \xe2\x80\xa6BiChecks if the given type implements copy.ClTrue if this is a data export, false if it is a function \xe2\x80\xa6DbReturns <code>true</code> if this place context represents a drop.BmReturns <code>true</code> if this is an enum.BlTrue for free region in the current context.DjReturns <code>true</code> if <code>size</code> completely fills the range.CoWhether this statement is a wildcard <code>use</code>, e.g. \xe2\x80\xa6ClWhether the next chunk we will return is initialized. If \xe2\x80\xa60Dj<code>true</code> if the arm is the last one in match expression. Used \xe2\x80\xa6CgWhether this annotation is a vertical line placeholder.CmReturns true if this color specification has no colors or \xe2\x80\xa6CkRead this allocation as a pointer and return whether it \xe2\x80\xa6DcReturns true if the <code>Value</code> is a Null. Returns false \xe2\x80\xa6CfChecks if the value is used as a method call receiver.BbIs this a <code>..</code> pattern?EeReturns <code>true</code> if <code>self</code> is the root universe, otherwise false.000CiWhether this ABI is <code>extern &quot;Rust&quot;</code>.000ClReturns <code>true</code> if parameter is <code>self</code>.CmWhether this crate metadata section is just a stub. Stubs \xe2\x80\xa6CnUsers of some attributes cannot mark them as used, so they \xe2\x80\xa6AhChecks if local is used.CfChecks if given pattern is a wildcard (<code>_</code>)FdReturns <code>true</code> if <code>self</code> is a <code>MetaItem</code> and the meta item is a \xe2\x80\xa60CnThe item this doc-comment came from. Used to determine the \xe2\x80\xa6DkItem on which the link is resolved, used for resolving <code>Self</code>\xe2\x80\xa6CjCreates an integer type with the given number of bits, \xe2\x80\xa6CkReturns the closure kind for this closure; may return a \xe2\x80\xa6CfThe coroutines returned by a coroutine-closure\xe2\x80\x99s \xe2\x80\xa61010010AaLattice variablesCnTraits used to represent lattices for use as the domain of \xe2\x80\xa60DhPrecomputed <code>TyLayout</code>s for primitive data types that are \xe2\x80\xa60Ak<code>if let</code> patternBh<code>while let</code> loop item patternEeThe <code>#[linkage = &quot;...&quot;]</code> attribute on Rust-defined items and \xe2\x80\xa6CbAdd an argument. See <code>Diag::lint_id()</code>.BcA lint Id that can be passed to \xe2\x80\xa60CnGrammatical tool for displaying messages to end users in a \xe2\x80\xa60BaCode related to parsing literals.DgThis place\xe2\x80\x99s extra data if it is unsized, or <code>None</code> if \xe2\x80\xa6DfEach Location <code>l</code> is mapped to the MoveOut\xe2\x80\x99s that are \xe2\x80\xa6BmFinds crate binaries and loads their metadataCiCompare this against <code>hir::Destination.target</code>CmConvenience method for coercing the lowering context into \xe2\x80\xa6CiGlobal machine state as well as implementation of the \xe2\x80\xa6BiStores the <code>Machine</code> instance.000ClThis module contains everything needed to instantiate an \xe2\x80\xa611CnUnderlying map that does all the hard work. Key invariant: \xe2\x80\xa6DfSubtle invariant: If the <code>GenericArg</code> is bound, then it \xe2\x80\xa6ClChecks if the path resolves to the given <code>def_id</code>CiCompares a <code>LanguageIdentifier</code> to another \xe2\x80\xa6DfChecks to see if two <code>FluentValues</code> match each other by \xe2\x80\xa61CgThe matches made against metavar decls so far. On a \xe2\x80\xa6CmCode related to match expressions. These are sufficiently \xe2\x80\xa6ChCheck if the stored hash matches the hash of the string.DgFor use with <code>rustc_unimplemented</code> to support conditions \xe2\x80\xa6ClChecks whether the given configuration can be matched in \xe2\x80\xa6AhFormat match expression.AjThe primary error message.CnThe error message displayed when an attempt is made to use \xe2\x80\xa60BiReturns the message in <code>self</code>.CaLang items that were not found during collection.DhTarget features enabled in callee\xe2\x80\x99s <code>#[target_feature]</code> \xe2\x80\xa6CmCreates a function item for use as the main function of a \xe2\x80\xa6BjThe span of the <code>move</code> keyword.0CmCompute the sum of absolute differences of quadruplets of \xe2\x80\xa6DlCreate a new box type that represents <code>Box&lt;T&gt;</code>, for the \xe2\x80\xa6DiCreates a new <code>DiagCtxt</code> that can be used to emit warnings \xe2\x80\xa6BiCreates a fresh key with the given value.CgGenerates a new pointer tag. Remember to also check \xe2\x80\xa6AjCreate a new pointer type.FaCreates a new <code>InstanceKind::Item</code> from the <code>def_id</code> and <code>args</code>.EeSame as <code>Ident::new</code>, but creates a raw identifier (<code>r#ident</code>).AlCreate a new reference type.AlCreates a new type variable.EcReturns the <code>DefId</code> of the <code>next</code> lang item if it is defined.C`ID number to be used by the next call to opendirDhGenerate a new <code>HirId</code> without a backing <code>NodeId</code>.DgThe <code>AllocId</code> to assign to the next requested ID. Always \xe2\x80\xa6CmAssert that there were no args. If there were, get a span \xe2\x80\xa6Aj\xe2\x80\x9cfunction has no body\xe2\x80\x9dBlOtherwise, just print the suggestion messageDkIndicates if the cell is locked. Only used if <code>Lock.mode</code> is \xe2\x80\xa6CgReturns unique ID (unique with respect to the graph \xe2\x80\xa6EeMaps <code>n</code> to a unique identifier with respect to <code>self</code>. The \xe2\x80\xa6D`The <code>NodeId</code> of the AST node that generated the lint.DiIf <code>Some(_)</code>, suppress all subsequent pattern warnings for \xe2\x80\xa61AdNode ID for linting.DkA <code>Tree</code> whose layout matches <code>std::num::NonZeroXxx</code>.CjConvenience function to get the nth argument type of a \xe2\x80\xa6CnCompute the \xe2\x80\x9csub-immediate\xe2\x80\x9d that is located within the \xe2\x80\xa6CnOffsets for the first byte of each field, ordered to match \xe2\x80\xa60CjThe original length of <code>vec</code> prior to draining.CkFunctions concerning immediate values and operands, and \xe2\x80\xa6BnMiscellaneous options for the inline assembly.0EdDefines all <code>CodegenOptions</code>/<code>DebuggingOptions</code> fields and \xe2\x80\xa6B`Optional settings with defaults.DkWhen setting <code>self.subcandidates</code>, we store here the span of \xe2\x80\xa6BcThe ordinal to be exported, if any.CgThe directory where the JSON blob should be written to.ClThis calls the passed function while ensuring it won\xe2\x80\x99t \xe2\x80\xa60EfCan both impl <code>a</code> and impl <code>b</code> be satisfied by a common type \xe2\x80\xa6DhA <code>Tree</code> whose layout is entirely padding of the given width.EiThe <code>DefId</code> of the Item whose <strong>HTML Page</strong> contains the item \xe2\x80\xa6CfGiven an element A, returns the maximal set {B} of \xe2\x80\xa6CjReturns an iterator over the parents of <code>self</code>.Bb<code>let &lt;PAT&gt; = ...</code>AoValidation of patterns/matches.DkThe <code>AnonSocket</code> file descriptor that is our \xe2\x80\x9cpeer\xe2\x80\x9d, and \xe2\x80\xa6BhThe number of threads requesting a tokenCeWhen in incremental mode, this pass dumps out the \xe2\x80\xa6AfRetrieves the pointer.BoThin pointer component. This is field 0 in MIR.BcLooks up a value by a JSON Pointer.EnFor given <code>line</code> inserts <code>string</code> with <code>style</code> before old \xe2\x80\xa6CnA pass that checks to make sure private fields and methods \xe2\x80\xa6CnThe public parts of this private module are used to create \xe2\x80\xa6AmApplying a general projectionCeCode for projecting associated types out of trait \xe2\x80\xa60CeComputes the result of a projection type (if we can).CkAdds query implementations to the Providers vtable, see \xe2\x80\xa600000CiRegisters query/hook implementations related to coverage.FcReturns <code>&quot;const&quot;</code> or <code>&quot;mut&quot;</code> depending on the mutability.000000AoStructural const qualification.CeIt is intended that the \xe2\x80\x9cforce frame pointer\xe2\x80\x9d \xe2\x80\xa6EePre-interned <code>ReVar(ty::RegionVar(n))</code> for small values of <code>n</code>.DgThe buffer we are reading from, or <code>None</code> if this is the \xe2\x80\xa6CnThe readers that currently own the lock and how many times \xe2\x80\xa6CmThis method tries to recover the query key from the given \xe2\x80\xa60C`Returns an iterator over all the region indices.CiIterate through each region that has a value in this set.CkOn x86-32 targets, the regparm N causes the compiler to \xe2\x80\xa6AoRelative position of the accessBbList of the removed feature gates.BkWhether the statement renames the crate \xe2\x80\xa6nReorder items.C`A stack of where we are in the repeat expansion.CnReplaces all occurrences of one Span with another. Used to \xe2\x80\xa60ChReserve space for new values, just like an ordinary vec.DhReserve memory for <code>num_new_keys</code> to be created. Does not \xe2\x80\xa6DkReserves capacity for at least <code>additional</code> more elements to \xe2\x80\xa6000000000DiThe <code>args</code> are assumed to already be in our interpreter \xe2\x80\x9c\xe2\x80\xa6DhResolves <code>expected</code> by a single level if it is a variable. IfClThis function performs lexical region resolution given a \xe2\x80\xa6CkResolve an instance starting from a function definition \xe2\x80\xa6CnResolves a string as a path within a particular namespace. \xe2\x80\xa6AiRestores an erased value.AjDataflow analysis results.CkScan through each value in the set and keep those where theBmConstruct the reverse graph of the SCC graph.EaA reverse index of the <code>c</code> set; if the <code>c</code> set contains \xe2\x80\xa6AhRewrite self into shape.CmNode ID of the \xe2\x80\x9croot\xe2\x80\x9d use item \xe2\x80\x93 this is always the \xe2\x80\xa6CiThe root expected type induced by a scrutinee or type \xe2\x80\xa600CmPerforms fat LTO by merging all modules into a single one \xe2\x80\xa6ClUpdates all elements. Potentially more efficient \xe2\x80\x93 but \xe2\x80\xa6AlSets the tag to a new value.BkNOTE: Keep these constants in sync with \xe2\x80\xa6EeSpecifies what to do with <code>SIGPIPE</code> before calling <code>fn main()</code>.BeConvert chars from a title for an id.CmConverts a span to a code snippet if available, otherwise \xe2\x80\xa6CfReturns the spacing of this punctuation character, \xe2\x80\xa6EgCreates a new diagnostic with the given <code>level</code> and <code>message</code> \xe2\x80\xa6CgReturn a list of static items defined in this crate \xe2\x80\xa6Bnthe \xe2\x80\x9cstealer\xe2\x80\x9d half of the worker\xe2\x80\x99s dequeChthe \xe2\x80\x9cstealer\xe2\x80\x9d half of the worker\xe2\x80\x99s broadcast dequeC`Where to put the extracted constant declaration.CkLatch is set once worker thread has completed. Used to waitBdThe raw storage for the arena chunk.CiDirectory iterators used to emulate libc \xe2\x80\x9cdirectory \xe2\x80\xa6EgReturns a <code>Span</code> that is a subset of <code>self.span()</code> containing \xe2\x80\xa6BiThis always returns <code>Ok(...)</code>.ClGive useful errors and suggestions to users when an item \xe2\x80\xa6CnReadable explanation of the consequences of an event. Fits \xe2\x80\xa6ClThis is the main loop of the supervisor process. It runs \xe2\x80\xa6CeAll symbols occurred and their first occurrence span.ChThe path to the sysroot. Used during the compilation \xe2\x80\xa6BiThe error guarantees from parser, if any.ClPossible branch targets. The last element of this vector \xe2\x80\xa60ClValid targets for the inline assembly. The first element \xe2\x80\xa60CeCoverage-relevant successors of the corresponding \xe2\x80\xa6BbCurrent targets used in the switchDnThis is a copy-paste of <code>Vec::extract_if</code> for <code>ThinVec</code>.AcThe set of threads.AlThreads used in the program.01CgWe default to 1 here since we want to behave like a \xe2\x80\xa60CkReturns the number of query threads that should be used \xe2\x80\xa61CcUsed to emit section timings events (enabled by \xe2\x80\xa60CiThis throws UB (instead of ICEing) on a size mismatch \xe2\x80\xa6DjConverts the <code>ScalarInt</code> to i128. Panics if the size of the \xe2\x80\xa6DeConverts the scalar to produce an <code>i128</code>. Fails if the \xe2\x80\xa6CdReturn the path remapped or not depending on the \xe2\x80\xa6ChAttempts to cast parameter to <code>ExplicitSelf</code>.FdConverts the <code>ScalarInt</code> to <code>u128</code>. Panics if the <code>size</code> of the \xe2\x80\xa6DkConverts the scalar to produce a <code>u128</code>. Fails if the scalar \xe2\x80\xa6DkConverts the <code>ScalarInt</code> to an unsigned integer of the given \xe2\x80\xa6CmConverts the scalar to produce an unsigned integer of the \xe2\x80\xa6lThe tooltip.CjReturns the topmost active scope, which is known to be \xe2\x80\xa6DhRetrieve the value stored for a place, or <code>None</code> if it is \xe2\x80\xa6DfTry to create an Allocation of <code>size</code> bytes, failing if \xe2\x80\xa6AjObtain the kind of a type.0CnGets the span for the type of the definition. Panics if it \xe2\x80\xa6CmSpan of the explicitly provided type, or None if inferred \xe2\x80\xa6111111CdThe span of the descriptor string (for diagnostics).EaPre-interned <code>Infer(ty::TyVar(n))</code> for small values of <code>n</code>.EaReturns the <code>DefId</code> of the <code>type_id</code> lang item if it is \xe2\x80\xa6Clx Creates an integer type with the given number of bits, \xe2\x80\xa6DhReturns the <em>type</em> of the definition given by <code>DefId</code>.")
rd_("CiThe maximum number of segments a path can have before \xe2\x80\xa6CmThis field keeps track of when borrow errors are reported \xe2\x80\xa6ClAdds constraints appropriate for a region appearing in a \xe2\x80\xa6ChPushes the obligations required for an alias (except \xe2\x80\xa6DgPushes the obligations required for <code>trait_ref</code> to be WF \xe2\x80\xa6CkAdjust closure capture just that if taking ownership of \xe2\x80\xa6CnCalled immediately after actual memory was allocated for a \xe2\x80\xa60CiChecks for the artificial impl that the compiler will \xe2\x80\xa6CjWe need to store the assumed_wf_types for an RPITIT so \xe2\x80\xa6000000DcReturns layout of a <code>async_drop_in_place::{closure}</code> \xe2\x80\xa6CkAttach a callback to be invoked on each root obligation \xe2\x80\xa60DgSimplified version of <code>preprocessed_markdown_links</code> from \xe2\x80\xa6ClSuppress lints whenever the suggested change would cause \xe2\x80\xa60CkThe list of types which may not be held across an await \xe2\x80\xa60EgReturns the <code>DefId</code> of the <code>bikeshed_guaranteed_no_drop</code> lang \xe2\x80\xa6DcChecks whether the <code>borrow_place</code> conflicts with the \xe2\x80\xa6ClReturns a suggestable empty span right after the \xe2\x80\x9cfinal\xe2\x80\xa6ChAssembles this chain of user-type projections into a \xe2\x80\xa6CnThe drop index that will drop everything in and below this \xe2\x80\xa6CgGate suggestions that would not be appropriate in a \xe2\x80\xa6ClEnsures that all target features required by the ABI are \xe2\x80\xa6Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6000000ClCheck an expr with an expectation type which may be used \xe2\x80\xa6EbAn <code>fn</code> in <code>extern { ... }</code> cannot have qualifiers, e.g. \xe2\x80\xa6CkFIXME: Remove when all attributes are ported to the new \xe2\x80\xa6CnProduces an error if comparison operators are chained (RFC \xe2\x80\xa6DjIf <code>unsized_fn_params</code> is active, check that unsized values \xe2\x80\xa6CnCheck for transmutes that overlap with stdlib methods. For \xe2\x80\xa6ClEquate the inferred type and the annotated type for user \xe2\x80\xa6CiChecks that all parameters in the generics of a given \xe2\x80\xa6CjCompute the name of the type as it should be stored in \xe2\x80\xa6CiComputes all points where local is \xe2\x80\x9cuse live\xe2\x80\x9d \xe2\x80\x93 \xe2\x80\xa6DfThis handles the case where an <code>auto trait Foo</code> impl is \xe2\x80\xa6BlA common error is to add an extra semicolon:ChDiscriminant for a given variand index and args of a \xe2\x80\xa60CmPropagate loans throughout the CFG: for each statement in \xe2\x80\xa6DkEnd-user visible description of <code>place</code> if one can be found. \xe2\x80\xa6CiDirect or use GOT indirect to reference external data \xe2\x80\xa6DdFind all <code>Unique</code> elements in this borrow stack above \xe2\x80\xa6CjExperimental pattern feature: after matching against a \xe2\x80\xa6EeTranslate <code>message</code> eagerly with <code>args</code> to <code>String</code>.0CeLookup typo candidate in scope for a macro or import.CgEmit a report about future breakage. Currently only \xe2\x80\xa6CbEmit universal regions facts, and their relations.CjThe \xe2\x80\x9cmain method\xe2\x80\x9d for a canonicalized trait query. \xe2\x80\xa60CkThe minimum number of enum variants for the lints about \xe2\x80\xa60ChThe maximum size of an enum\xe2\x80\x99s variant to avoid box \xe2\x80\xa60DfError in-case <code>default</code> was parsed in an in-appropriate \xe2\x80\xa6C`Evaluates the default-impl stability of an item.CcThe maximum amount of nesting a block can reside in0ClReturns whether such a resolved path can occur in a unit \xe2\x80\xa6EdGiven an <code>FnOnce::Output</code> or <code>AsyncFn::Output</code> projection, \xe2\x80\xa6DhGiven a <code>hir::HirId</code> for a block (or an expr of a block), \xe2\x80\xa60ClReturns the associated item with the given identifier in \xe2\x80\xa6CnWalk the generics of the item for a trait bound whose self \xe2\x80\xa6EhReturns <code>true</code> if a fragment of type <code>frag</code> can be followed by \xe2\x80\xa6DkLike <code>Ty::to_opt_closure_kind</code>, but it caps the \xe2\x80\x9cmaximum\xe2\x80\x9d\xe2\x80\xa6DiIf <code>true</code>, HTML source pages will generate links for items \xe2\x80\xa6CkDoes this generic argument contain our target inference \xe2\x80\xa6Cn[query description - consider adding a doc-comment!] check \xe2\x80\xa6000000CjThis gives direct mutable access to the entire buffer, \xe2\x80\xa6DhChecks for the case where <code>fr</code> maps to something that the \xe2\x80\xa6CeCalled when the interpreter is going to shut down \xe2\x80\xa6CjFormatted code missed something, like lost comments or \xe2\x80\xa6DiWhether the expression pointed at by <code>hir_id</code> belongs to a \xe2\x80\xa6CnNodeIds of pattern identifiers and labelled nodes that are \xe2\x80\xa6DeReturn an <code>ImplTraitContext</code> that allows impl trait in \xe2\x80\xa6DgAnalogue of module <code>unexpanded_invocations</code> but in trait \xe2\x80\xa6CiInitializes the region variables for each universally \xe2\x80\xa6CaPut the thread into the queue waiting for the \xe2\x80\xa6ClSynchronize with the previous completion of an InitOnce. \xe2\x80\xa6CiInsert the trait ref and optionally a projection type \xe2\x80\xa60DhIf <code>intercrate</code> is set, we remember predicates which were \xe2\x80\xa60DhReturn true if the <code>proj_possible_ancestor</code> represents an \xe2\x80\xa600CkChecks that the given meta-item is compatible with this \xe2\x80\xa6DjChecks if the given expression is a macro call to <code>todo!()</code> \xe2\x80\xa6DaFast path helper for testing if a type is <code>AsyncDrop</code>.CiAmount of lifetime parameters for each item in the crate.Dh<code>true</code> if we\xe2\x80\x99re emitting JSON blobs about each artifact \xe2\x80\xa600DiReplaces any late-bound regions bound in <code>value</code> with free \xe2\x80\xa6CkWe are looking for lifetimes in an elision context. The \xe2\x80\xa6Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6000000DcChecks if the given filename ends with the <code>.rcgu.o</code> \xe2\x80\xa6BdLower an associated item constraint.CiLower an associated item constraint from the HIR into \xe2\x80\xa6AdThis is for rustdoc.CfLower a type-relative path in type position to a type.CnRenders a subset of Markdown in the first paragraph of the \xe2\x80\xa6CjEnsures that the last parsed pattern (or pattern range \xe2\x80\xa6CfTry to merge all of the subcandidates of the given \xe2\x80\xa6DmWhether to <strong>only</strong> check for missing documentation in items \xe2\x80\xa60CmThe named groupings of different source item kinds within \xe2\x80\xa60CmThis pass removes jumps to basic blocks containing only a \xe2\x80\xa6DdGiven a session and a <code>source_file</code>, return a parser. \xe2\x80\xa6ChCaches the results of goal evaluation in the new solver.0CkCreates a fresh region variable with the next available \xe2\x80\xa60ChReturns the minimum and maximum values for the given \xe2\x80\xa6Dk<code>expn_id.outer_expn_is_descendant_of(ctxt)</code> is equivalent to \xe2\x80\xa6ChParse the field access used in offset_of, matched by \xe2\x80\xa6DgParses bounds of a type parameter <code>BOUND + BOUND + ...</code>, \xe2\x80\xa6CnParses a block. Inner attributes are allowed, block labels \xe2\x80\xa6EfIf <code>force_collect</code> is <code>ForceCollect::Yes</code>, forces collection \xe2\x80\xa6CmParses the modifiers that may precede a trait in a bound, \xe2\x80\xa6CmReturns the base obligation and the base trait predicate, \xe2\x80\xa600CePeels off all references on the type. Returns the \xe2\x80\xa6DjEach time we add a placeholder to <code>placeholder_indices</code>, we \xe2\x80\xa6BbEvaluates constraints of the form:DiSimilarly to <code>probe_for_return_type</code>, this method attempts \xe2\x80\xa6CmProbe path segments that are semantically allowed to have \xe2\x80\xa6EfReturns the <code>DefId</code> of the <code>RangeInclusiveCopy</code> lang item if \xe2\x80\xa6CkRecord the variance of each region contained within the \xe2\x80\xa6DfSome variables are \xe2\x80\x9cregular live\xe2\x80\x9d at <code>location</code> \xe2\x80\x93 \xe2\x80\xa6EhGiven the map <code>opaque_types</code> containing the opaque <code>impl Trait</code>\xe2\x80\xa6CkThis lint pass is softly deprecated. It misses expanded \xe2\x80\xa6DiReplaces all types or regions bound by the given <code>Binder</code>. \xe2\x80\xa6CdReports an illegal reassignment; for example, an \xe2\x80\xa6BfReport that a match is not exhaustive.ClUnify the inference variables corresponding to coroutine \xe2\x80\xa6CgComputes the backend target features to be added to \xe2\x80\xa6CnAfter this series of passes, no lifetime analysis based on \xe2\x80\xa6CjReturns the sequence of passes that lowers analysis to \xe2\x80\xa6ClWhen the initializer expression is multi-lined, then the \xe2\x80\xa6DgThis function scans <code>mir</code> for all calls to the intrinsic \xe2\x80\xa6ClSet the top user-relevant frame to the given value. Must \xe2\x80\xa6ClChecks if the provided DefId is a method in a trait impl \xe2\x80\xa6Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6000000CnWhether we have a useful allocation span for an allocation \xe2\x80\xa6CnTransform aggregates like [0, 0, 0, 0, 0] into [0; 5]. GVN \xe2\x80\xa6FdIf <code>ty</code> implements the given <code>sizedness</code> trait, returns <code>None</code>. \xe2\x80\xa6DhHandles error reporting for <code>smart_resolve_path_fragment</code> \xe2\x80\xa6DeSplits <code>op</code> (which must be a SIMD vector) into 128-bit \xe2\x80\xa6BjIndicates whether this value still has \xe2\x80\xa60000FbConverts <code>expr</code> to a <code>char</code> literal if it\xe2\x80\x99s a <code>str</code> literal \xe2\x80\xa6CkThe minimum number of struct fields for the lints about \xe2\x80\xa60ChNormalize a term for when it is structurally matched on.CkWhether aliases should be related structurally. This is \xe2\x80\xa600CnWhether aliases should be related structurally. If not, we \xe2\x80\xa6111111DkSuggest calling a field with a type that implements the <code>Fn*</code>\xe2\x80\xa6CkIf the expected type is an enum (Issue #55250) with any \xe2\x80\xa6CnA possible error is to forget to add a return type that is \xe2\x80\xa6EfGiven the target <code>label</code>, search the <code>rib_index</code>th label rib \xe2\x80\xa6DeTakes the current acquire thread callback, leaving <code>None</code>.DeTakes the current release thread callback, leaving <code>None</code>.BnIs the projection predicate is of the form \xe2\x80\xa6DhReturn the <code>AllocId</code> for the given thread-local static in \xe2\x80\xa60CmExpand a relative path to an absolute path with remapping \xe2\x80\xa6CmReturns the total number of fields in an ADT variant used \xe2\x80\xa6DiGiven the def_id of a Trait <code>trait_def_id</code> and the name of \xe2\x80\xa6DfSmall helper function to change the <code>def_id</code> of a trait \xe2\x80\xa6BaLoad data from the on-disk cache.CiInvoke a query to put the on-disk cached value in memory.110DdChecks whether <code>ty: Copy</code> holds while ignoring region \xe2\x80\xa6CmHelper function for lints that check for expressions with \xe2\x80\xa6CkReturns the single candidate applicable for the current \xe2\x80\xa6CmVisits and format the given items. Items are reordered If \xe2\x80\xa6BiReturns true if we want to generate a \xe2\x80\xa6CjEmit a warning if the item is annotated with the given \xe2\x80\xa6CaCreate a hashing context for hashing new results.00CjWrite an immediate to a place. If you use this you are \xe2\x80\xa6DjMarker statement indicating where <code>place</code> would be dropped. \xe2\x80\xa6DdA <code>BackwardIncompatibleDropHint</code> statement, meant for \xe2\x80\xa61DfThe <code>clashing_extern_declarations</code> lint detects when an \xe2\x80\xa6CmMapping of type annotation indices to canonical user type \xe2\x80\xa60DcThis will be an error in the provided edition <em>and</em> in a \xe2\x80\xa6CaA builder for <code>FormatReportFormatter</code>.0CjCode that changes meaning in some way in a future release.DiThe <code>invalid_codeblock_attributes</code> lint detects code block \xe2\x80\xa6CgIndicates whether the field list of this variant is \xe2\x80\xa6ClIllegal move due to attempt to move from field of an ADT \xe2\x80\xa6D`The <code>lint_pass_impl_without_macro</code> detects manual \xe2\x80\xa6DhThe <code>mismatched_lifetime_syntaxes</code> lint detects when the sameCnThe <code>missing_copy_implementations</code> lint detects \xe2\x80\xa6DdThe <code>non_shorthand_field_patterns</code> lint detects using \xe2\x80\xa6DgThe <code>opaque_hidden_inferred_bound</code> lint detects cases in \xe2\x80\xa6DoThe <code>patterns_in_fns_without_body</code> lint detects <code>mut</code> \xe2\x80\xa60CnTo differentiate \xe2\x80\x9cthe mutex kind has not been changed\xe2\x80\x9d \xe2\x80\xa6CkThe <code>panic_invalid_enum_construction</code> lang item.CgAn address-to-pointer cast that picks up an exposed \xe2\x80\xa60CnData propagated to the typeck parent by nested items. This \xe2\x80\xa6EfThe <code>refining_impl_trait_internal</code> lint detects <code>impl Trait</code> \xe2\x80\xa60DkThe <code>rust_2021_prelude_collisions</code> lint detects the usage of \xe2\x80\xa60DkThe <code>rust_2024_prelude_collisions</code> lint detects the usage of \xe2\x80\xa60EeThe <code>symbol_intern_string_literal</code> detects <code>Symbol::intern</code> \xe2\x80\xa6EeError E0429: <code>self</code> imports are only allowed within a <code>{ }</code> \xe2\x80\xa6CnDon\xe2\x80\x99t show the backtrace for query system by default use \xe2\x80\xa6CmAdd a label to region errors and borrow explanations when \xe2\x80\xa6CnAll traits in the crate graph, including those not visible \xe2\x80\xa6CjUpdates the current dataflow state with an \xe2\x80\x9cearly\xe2\x80\x9d \xe2\x80\xa60Dk<code>apply_random_float_error</code> gives instructions to apply a 2^N \xe2\x80\xa6CaSee comments on <code>get_switch_int_data</code>.0DiLike <code>universal_upper_bound</code>, but returns an approximation \xe2\x80\xa6CkTurns an array of arguments into a Windows command line \xe2\x80\xa6CmBackwards incompatible scoping that will be introduced in \xe2\x80\xa6BjConstructs the reduced graph for one item.CnThe \xe2\x80\x9cdiverging fallback\xe2\x80\x9d system is rather complicated. \xe2\x80\xa6DgChecks all associated type defaults of trait <code>trait_def_id</code>.CkCheck an expr with an expectation type, and also demand \xe2\x80\xa60CnWhen there are any missing associated types, emit an E0191 \xe2\x80\xa6DjReturns whether <code>local_def_id</code> is potentially alive or not. \xe2\x80\xa6AmCheck for predicates like \xe2\x80\xa6BoChecks for uses of unstable APIs in the module.000000ClCross-references the feature names of unstable APIs with \xe2\x80\xa6CiCheck a variant of a non-exhaustive enum for improper \xe2\x80\xa6CkChecks if Polonius has found any unexpected free region \xe2\x80\xa6CmCheck for transmutes that exhibit undefined behavior. For \xe2\x80\xa6DhLint against <code>extern fn</code> declarations having incompatible \xe2\x80\xa6000000CmFor a given outlives constraint and CFG edge, returns the \xe2\x80\xa6CjComputes all points where local is \xe2\x80\x9cdrop live\xe2\x80\x9d \xe2\x80\x93 \xe2\x80\xa6ClExpressions that syntactically contain an \xe2\x80\x9cexterior\xe2\x80\x9d \xe2\x80\xa60CmAdd underlying linker arguments to C compiler command, by \xe2\x80\xa6Bia function pointer that has the shape \xe2\x80\xa60000CiStores the predicates that apply on coroutine witness \xe2\x80\xa60DaWith <code>cfg(debug_assertions)</code>, assert that args are \xe2\x80\xa6FnIf <code>ty</code> is <code>Option&lt;T&gt;</code>, returns <code>T, T, None</code>. If <code>ty</code> is \xe2\x80\xa6ClValidate that deref patterns and normal constructors aren\xe2\x80\xa6AnA captured place is mutable ifBn<strong>(internal test-only flag)</strong> \xe2\x80\xa6DiYields a <code>DefId</code> for the discriminant and an offset to add \xe2\x80\xa6ChCreates a dummy const argument, and reports that the \xe2\x80\xa6CnPerforms minimalistic dyn compat checks outside of bodies, \xe2\x80\xa6Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6000000DiA slightly more general form of <code>eat_metavar_seq</code>, for use \xe2\x80\xa6CoWhether to enforce the validity invariant <em>recursively</em>.0CmReturns whether such a resolved path can occur in a tuple \xe2\x80\xa6DhEnsures that the super-predicates of the trait with a <code>DefId</code>DdReturns the explicitly user-written <em>super-predicates</em> of \xe2\x80\xa6000000CkThe list of non-generic symbols exported from the given \xe2\x80\xa6000000CkGets the mutability of the custom deref adjustment, if any.Bc<code>&lt;LangItem&gt;::name</code>ClFind the first ancestor span that does not come from any \xe2\x80\xa6Djindicates whether the function from <code>parent_expr</code> takes its \xe2\x80\xa6CnGet the codegen backend based on the raw <code>Matches</code>.CjGiven a field that needs to be mutable, returns a span \xe2\x80\xa6DeWalks up the tree of definitions starting at <code>def_id</code>, \xe2\x80\xa6BlAttempt to lex for a guarded string literal.CnDetermines whether identifiers in the assembly have strict \xe2\x80\xa6CmCaches the index of the highest bound var in clauses in a \xe2\x80\xa60DhReturns <code>Some</code> if the impls are the same polarity and the \xe2\x80\xa6BlCalled when the interpreter encounters a \xe2\x80\xa60CfInitialize targets enabled by the build script via \xe2\x80\xa6DjInitialize jobserver before getting <code>jobserver::client</code> and \xe2\x80\xa6CeIntern <code>ret</code> and everything it references.0BlReturns the unsafety of the given intrinsic.BkChecks if the bound region is in Impl Item.DbReturns <code>true</code> if the field list of this variant is \xe2\x80\xa6F`Returns <code>true</code> if this <code>Place</code>\xe2\x80\x99s first projection is <code>Deref</code>.0DjFast path helper for primitives which are always <code>Copy</code> and \xe2\x80\xa6CfChecks if a given type looks safe to be uninitialized.ClThe locations where the local is consumed or mutated, if \xe2\x80\xa6DjIf <code>separate_provide_extern</code>, then the key can be projected \xe2\x80\xa6CfLower a resolved associated type path to a projection.DhSuggest a missing <code>self::</code> if that resolves to an correct \xe2\x80\xa6DgArranges the nodes in <code>balanced_graph</code> into a list, such \xe2\x80\xa6BnCache for <code>mangle_internal_symbol</code>.0BnCheck if we may need to perform additional \xe2\x80\xa6DkReturn <code>Yes</code> if the obligation\xe2\x80\x99s predicate type applies to \xe2\x80\xa6DeNormalize <code>where_clause_trait_ref</code> and try to match it \xe2\x80\xa6CjAttempt to perform a synchronized operation, this will \xe2\x80\xa6CdTries to recover from associated item paths like \xe2\x80\xa6CnWhen a private field is being set that has a default field \xe2\x80\xa6DgDetermines whether the type <code>self_ty</code> supports a visible \xe2\x80\xa6DfThe <code>InterpCx</code> is only meant to be used to do field and \xe2\x80\xa6CnShow a suggestion that has multiple parts to it, always as \xe2\x80\xa6CjGets an iterator over all the early-bound regions that \xe2\x80\xa6AoThis is the difference between:CkIf the match is exhaustive, this is empty. If not, this \xe2\x80\xa60CmNormalizes the parameter environment, reporting errors if \xe2\x80\xa6ClMinimum operating system versions currently supported by \xe2\x80\xa60EhReturns the <code>DefId</code> of the <code>panic_const_async_fn_resumed</code> lang \xe2\x80\xa6EhReturns the <code>DefId</code> of the <code>panic_const_gen_fn_none_drop</code> lang \xe2\x80\xa6ChReturns the pattern and a bool indicating whether we \xe2\x80\xa6EdIn <code>let p = e</code>, operators with precedence <code>&lt;=</code> this one \xe2\x80\xa6CnFor debugging purposes, returns a pretty-printed string of \xe2\x80\xa6ClGiven the original values and the (canonicalized) result \xe2\x80\xa6CfRecover from function pointer types with a generic \xe2\x80\xa6ChThis should be used when relating a rigid alias with \xe2\x80\xa6DcReturns a <code>rustlib</code> path for this particular target, \xe2\x80\xa6CmRemoves trailing spaces from the specified snippet. We do \xe2\x80\xa6CnThe current implementation of deref patterns requires that \xe2\x80\xa6DgChecks whether <code>Self: DefaultAutoTrait</code> bounds should be \xe2\x80\xa6EfInterns the <code>Allocation</code> and return a new <code>AllocId</code>, even if \xe2\x80\xa6DkGenerates an <code>AllocId</code> for a memory allocation. If the exact \xe2\x80\xa6DiGenerates an <code>AllocId</code> for a static or return a cached one \xe2\x80\xa6DkGenerates an <code>AllocId</code> for a (symbolic, not-reified) vtable. \xe2\x80\xa6CjWhether provenance should be reset outside of pointers \xe2\x80\xa6ChPerforms a full-qualified function call (formerly \xe2\x80\x9c\xe2\x80\xa6ClRewrite the any doc comments which come before any other \xe2\x80\xa6DjIf we should lint on this usage, return the <code>HirId</code>, source \xe2\x80\xa6CgReturn the target\xe2\x80\x99s small data threshold support, \xe2\x80\xa6CdWhether the targets supports -Z small-data-thresholdClChecks whether a given span has any significant token. A \xe2\x80\xa6CkExtends the span to include any trailing whitespace, or \xe2\x80\xa6CnIf there are generic parameters, return where to introduce \xe2\x80\xa6ClMaps a StableCrateId to the corresponding CrateNum. This \xe2\x80\xa6CmNormalize a const for when it is structurally matched on, \xe2\x80\xa6CkWhen encountering a lifetime error caused by the return \xe2\x80\xa6Dgissue #102320, for <code>unwrap_or</code> with closure as argument, \xe2\x80\xa6CkThe maximum number of argument a function or method can \xe2\x80\xa60BhThe order of associated items in traits.0ChPrint the error message for lifetime errors when the \xe2\x80\xa6CmThis field keeps track of errors reported in the checking \xe2\x80\xa6EgReturns the <code>DefId</code> of the <code>unsized_const_param_ty</code> lang item \xe2\x80\xa6CkReturns the upstream crate that exports async-drop-glue for000000ClChecks that generic parameters are in the correct order, \xe2\x80\xa6CeWhether to emit warnings on all wildcard imports, \xe2\x80\xa60CnChecks if a borrowed value was captured by a trait object. \xe2\x80\xa6BiAlways show the suggested change. See \xe2\x80\xa6BgRaw \xe2\x80\x98\\r\xe2\x80\x99 encountered in raw string.DkThe <code>closure_returning_async_block</code> lint detects cases where \xe2\x80\xa6DiThe <code>dangling_pointers_from_locals</code> lint detects getting a \xe2\x80\xa6DgThe <code>exported_private_dependencies</code> lint detects private \xe2\x80\xa60DkThe <code>impl_trait_redundant_captures</code> lint warns against cases \xe2\x80\xa6DeImplicit lifetime in a context like <code>dyn Foo</code>. This is \xe2\x80\xa6DgThe <code>late_bound_lifetime_arguments</code> lint detects generic \xe2\x80\xa60DgThe <code>missing_debug_implementations</code> lint detects missing \xe2\x80\xa6EgThe <code>refining_impl_trait_reachable</code> lint detects <code>impl Trait</code> \xe2\x80\xa60DcPerform trait upcasting coercion of <code>dyn Trait</code> to a \xe2\x80\xa600DkThe <code>uncovered_param_in_projection</code> lint detects a violation \xe2\x80\xa60DkThe <code>unfulfilled_lint_expectations</code> lint detects when a lint \xe2\x80\xa60DfThe <code>ungated_async_fn_track_caller</code> lint warns when the \xe2\x80\xa6DgThe <code>unknown_diagnostic_attributes</code> lint detects unknown \xe2\x80\xa60DjThe <code>unstable_syntax_pre_expansion</code> lint detects the use of \xe2\x80\xa60DjThe <code>unused_associated_type_bounds</code> lint is emitted when an \xe2\x80\xa60CiA discriminant of an uninhabited enum variant is written.0BiWhich crates to allow absolute paths from0DgImplicitly add <code>Self: DefaultAutoTrait</code> clauses on trait \xe2\x80\xa6CeEmits notes when the overlap is caused by complex \xe2\x80\xa6EiWhether to allow <code>r#&quot;&quot;#</code> when <code>r&quot;&quot;</code> can be used0CjUpdates the current dataflow state with an effect that \xe2\x80\xa60CmAssemble and merge candidates for goals which are related \xe2\x80\xa6DkGiven a <code>ty::ClosureKind</code>, get the <code>DefId</code> of its \xe2\x80\xa6DiReturns true if the given <code>expr</code> is binary expression that \xe2\x80\xa6DlSets up the drops for jumping from <code>block</code> to <code>scope</code>.CmDo a bytewise comparison of the two places, using relaxed \xe2\x80\xa6DiReturns <code>true</code> if the token is any literal, a minus (which \xe2\x80\xa6DjOutputs an error for <code>#[allow_internal_unstable]</code> which can \xe2\x80\xa6ClHelper function for checking that the provided attribute \xe2\x80\xa6CiSuggests importing a macro from the root of the crate \xe2\x80\xa6DgAn item in <code>extern { ... }</code> cannot use non-ascii identifier.CmDebugging aid for <code>object_lifetime_default</code> query.ClCheck that the opaque\xe2\x80\x99s precise captures list is valid \xe2\x80\xa6EdChecks for <code>::</code> or, potentially, <code>:::</code> and then look ahead \xe2\x80\xa6CmCheck that an expression is not a promoted temporary with \xe2\x80\xa6CmThis function checks if there are trailing angle brackets \xe2\x80\xa6CmBuild a map from pattern identifiers to binding-info\xe2\x80\x99s, \xe2\x80\xa6ClComputes a name for the global variable storing a vtable \xe2\x80\xa6CiGiven the bounds on an object, determines what single \xe2\x80\xa6CmMapping from ident span to path span for paths that don\xe2\x80\x99\xe2\x80\xa6DhA type implements an <code>auto trait</code> if its components do as \xe2\x80\xa6BoWe have the following builtin impls for arrays:DoChecks if the pattern contains any <code>ref</code> or <code>ref mut</code> \xe2\x80\xa6CiThis converts the <code>lines</code> field to contain \xe2\x80\xa6CmThe body of the coroutine, modified to take its upvars by \xe2\x80\xa6000000BlCreates the function-specific debug context.0CmCreates a simple WebAssembly object file, which is itself \xe2\x80\xa6CkPart of enum check. Given the discriminants of an enum, \xe2\x80\xa6BfWrite out the region constraint graph.BjWrite out the region constraint SCC graph.CkProvides a word similarity score between two words that \xe2\x80\xa6CgEmits a mermaid flowchart of the polonius localized \xe2\x80\xa6CiEmits an error if any trait bound modifiers were present.BcEvaluates the stability of an item.CnEnsures definitely inactive variants are excluded from the \xe2\x80\xa6DkTargeted error when encountering an <code>FnMut</code> closure where an \xe2\x80\xa6CcCompute the const bounds that are implied for a \xe2\x80\xa6000000CmDoes this expression require a semicolon to be treated as \xe2\x80\xa600CnFind the first write-incompatible item above the given one \xe2\x80\xa6CiTries to find the terminator of the loop in which the \xe2\x80\xa6DkReturns the lowest statement index in <code>start..=end</code> which is \xe2\x80\xa60CdRuns the given function for each path expression \xe2\x80\xa6DgIf the type is a pair, we return a <code>Pair</code>, otherwise, an \xe2\x80\xa6ClReturns a list of user-specified type predicates for the \xe2\x80\xa6DgGives raw, immutable access to the <code>Allocation</code> address, \xe2\x80\xa6ChSearch the argument types for one that references fr \xe2\x80\xa6ClObtain the size and alignment of a <em>live</em> allocation.DkReads <code>crates.js</code>, which seems like the best place to obtain \xe2\x80\xa6CnReturns true if the expression contains ambiguous literals \xe2\x80\xa60DkCheck if a Ty&lt;\xe2\x80\x99_&gt; of <code>Iterator</code> contains any mutable \xe2\x80\xa6DhHas <code>#[rustc_doc_primitive]</code> or <code>#[doc(keyword)]</code>.CjWhile walking import chains we need to track effective \xe2\x80\xa6ClEnsures definitely inactive variants are included in the \xe2\x80\xa6Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6000000ClChecks whether a trait\xe2\x80\x99s associated item is impossible \xe2\x80\xa6EfReturns <code>true</code> if the given type is a primitive (a <code>bool</code> or \xe2\x80\xa6CaConverts a lifetime into a new generic parameter.EfReturns <code>None</code> if the <code>DefPathHash</code> does not correspond to a \xe2\x80\xa6CfFor a given outlives constraint arising from a MIR \xe2\x80\xa65555555CkUsed when fuzzing the global cache. Accesses the global \xe2\x80\xa6DcSee <code>hir::ConstArg</code> for when to use this function vs \xe2\x80\xa6CiUsed when lowering a type argument that turned out to \xe2\x80\xa6CnDo the common parts of lowering an RTN type. This involves \xe2\x80\xa6BdLower/desugar a coroutine construct.DjSuggests a missing <code>crate::</code> if that resolves to an correct \xe2\x80\xa6DjSuggests a missing <code>super::</code> if that resolves to an correct \xe2\x80\xa6CmGiven the region obligations and constraints scraped from \xe2\x80\xa60DfWalks upwards from <code>orig_id</code> to find a node which might \xe2\x80\xa6ChOn ambiguous associated type, look for an associated \xe2\x80\xa6BbReturn a two string tuple (s1, s2)DfWhether <code>Copy</code> is needed as an additional bound on type \xe2\x80\xa6CdConfirm and normalize the given inherent projection.CjA flag to mark we are currently performing a data race \xe2\x80\xa6CfResolves an int var to a rigid int type, if it was \xe2\x80\xa60DgThe guts of <code>normalize</code>: normalize a specific projection \xe2\x80\xa6EdReturns the <code>DefId</code> of the <code>panic_const_coroutine_resumed</code> \xe2\x80\xa6EdReturns the <code>DefId</code> of the <code>panic_const_gen_fn_none_panic</code> \xe2\x80\xa6CnAttempt to recover from match arm body with statements and \xe2\x80\xa6BlParses <code>*</code> or <code>{...}</code>.ClLoans are in scope while they are live: whether they are \xe2\x80\xa6EhHelper for <code>prepare_vtable_segments</code> that returns <code>ControlFlow</code>\xe2\x80\xa6ClExperimental pattern feature: when do reference patterns \xe2\x80\xa6CkReturn whether the current terminator is fully unreachable.ClPlaceholder regions need to be converted eagerly because \xe2\x80\xa6CjGenerates an AllocId for a core::any::TypeId. Will get \xe2\x80\xa6CiLook to see if a resolved item has an associated item \xe2\x80\xa6DkResolves type and const variables in <code>t</code> if possible. Unlike \xe2\x80\xa6EhTruncate <code>place</code> so that an <code>unsafe</code> block isn\xe2\x80\x99t required to \xe2\x80\xa6Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6CkReveals all opaque types in the given value, replacing them111111D`Rewrite the <code>else</code> keyword with surrounding comments.EfCheck whether evaluating <code>goal</code> with a depth of <code>root_depth</code> \xe2\x80\xa600EdSets the last OS error and return <code>-1</code> as a <code>i32</code>-typed ScalarEdSets the last OS error and return <code>-1</code> as a <code>i64</code>-typed ScalarDbOrder the predicates in <code>predicates</code> such that each \xe2\x80\xa6Ee<code>&amp;</code> only allow mutation if the borrowed place is <code>!Freeze</code>.EaReturns true if <code>ty</code> is a type on which calling <code>Clone</code> \xe2\x80\xa6CgIt\xe2\x80\x99ll return false if any variant is not a C-like \xe2\x80\xa6CkIf there is no expected signature, then we will convert theChQuery provider for <code>specialization_graph_of</code>.DgA possible error is to forget to add <code>.await</code> when using \xe2\x80\xa6DkReturns a filename-friendly string of the <code>DefPath</code>, without \xe2\x80\xa6DcTries to erase the regions in <code>value</code> and then fully \xe2\x80\xa6DnWhen we promote a type test <code>T: &#39;r</code>, we have to replace all \xe2\x80\xa6CmPrint the error message for lifetime errors when both the \xe2\x80\xa6DjSteals a previously stashed error with the given <code>Span</code> and \xe2\x80\xa6DdTry to resolve <code>ty</code> to a structural type, normalizing \xe2\x80\xa6Cjcheck whether the return type is a generic type with a \xe2\x80\xa6CjCompute the tupled upvars that a coroutine-closure\xe2\x80\x99s \xe2\x80\xa6000CiCompute the information for the pointer stored at the \xe2\x80\xa6Df<code>ty_or_const_infer_var_changed</code> is equivalent to one of \xe2\x80\xa60DeReturns <code>Some</code> if a type implements a trait shallowly, \xe2\x80\xa60DgDo not call this query directly: part of the <code>Normalize</code> \xe2\x80\xa6000000DeIf the type\xe2\x80\x99s last token is <code>}</code>, it must be due to a \xe2\x80\xa6CnReturns just the universal regions that are contained in a \xe2\x80\xa6CkThis field is used to keep track of how many left angle \xe2\x80\xa6EgModify the <code>typing_mode</code> to <code>PostAnalysis</code> and eagerly reveal \xe2\x80\xa6ClCalled <code>const_make_global</code> on a dangling pointer.0DhThe <code>explicit_builtin_cfgs_in_flags</code> lint detects builtin \xe2\x80\xa60DhThe <code>explicit_outlives_requirements</code> lint detects unnecessary0CnEvaluation failed because of recursion involving inference \xe2\x80\xa600000CkEvaluation successful, but need to rerun because opaque \xe2\x80\xa600000DfThe <code>invalid_macro_export_arguments</code> lint detects cases \xe2\x80\xa60CeIndicates whether the variant list of this ADT is \xe2\x80\xa6CnData on the parent definition where a generic argument was \xe2\x80\xa6m\xe2\x80\x98\\u{_12}\xe2\x80\x99CkA container of LocalizedOutlivesConstraints that can be \xe2\x80\xa6CiWhen the main thread would exit, we will yield to any \xe2\x80\xa6CkThe maximum capacity of the socketpair buffer in bytes. \xe2\x80\xa6DgThe <code>multiple_supertrait_upcastable</code> lint detects when a \xe2\x80\xa6DkThere can be many more <code>MovePathIndex</code> than there are locals \xe2\x80\xa60DgThe <code>non_contiguous_range_endpoints</code> lint detects likely \xe2\x80\xa60CmError E0403: the name is already used for a type or const \xe2\x80\xa6EeWe need to have a <code>Node</code> for the <code>HirId</code> that we attach the \xe2\x80\xa6CoRepresents <code>#[rustc_layout_scalar_valid_range_end]</code>.0DgError E0409: variable <code>{}</code> is bound in inconsistent ways \xe2\x80\xa6ClThis only exists during proof tree building and does not \xe2\x80\xa6CmWhether to accept a safety comment to be placed above the \xe2\x80\xa60CgWhether to allow module inception if it\xe2\x80\x99s not public.0CkAllowed names below the minimum allowed characters. The \xe2\x80\xa60CiUpdates the current dataflow state with the effect of \xe2\x80\xa60CoSearches for impls that might apply to <code>obligation</code>.D`Implements one of the <code>Fn()</code> family for a fn pointer.ClPerform an atomic compare and exchange at a given memory \xe2\x80\xa6DkAttempt to suggest converting the <code>dyn Trait</code> argument to an \xe2\x80\xa6DgAttempt to suggest that a <code>dyn Trait</code> argument or return \xe2\x80\xa6Dj<code>blame_specific_*</code> means that the function will recursively \xe2\x80\xa6DgRe-sugar <code>ty::GenericPredicates</code> in a way suitable to be \xe2\x80\xa6ClBuild a DW_TAG_enumeration_type debuginfo node, with the \xe2\x80\xa6DhCreates debuginfo for a fixed size array (e.g. <code>[u64; 123]</code>).CkDetect and reject early-bound &amp; escaping late-bound \xe2\x80\xa6CmChecks whether a borrow of this place is invalidated when \xe2\x80\xa6BnChecks if the attribute is applied to a trait.DfChecks if a <code>vis</code> nonterminal fragment is unnecessarily \xe2\x80\xa6BiChecks if an item is stable or error out.CeImplements the \xe2\x80\x98lax\xe2\x80\x99 (default) version of the \xe2\x80\xa6C`For a given closure, returns the iterator of \xe2\x80\xa6DgCoercing <em>from</em> an inference variable. In this case, we have \xe2\x80\xa6EdReturns the <code>DefId</code> of the <code>coerce_pointee_validated</code> lang \xe2\x80\xa6CdThe maximum cognitive complexity a function can have0DfFills the <code>Resolver::effective_visibilities</code> table with \xe2\x80\xa6DdWe generate a builtin <code>Unsize</code> impls for structs with \xe2\x80\xa6DhA trait alias holds if the RHS traits and <code>where</code> clauses \xe2\x80\xa6CiDetermines whether the body of the coroutine uses its \xe2\x80\xa6CnCould this lifetime/label be an unclosed char literal? For \xe2\x80\xa6nNo source map.BmCreate a snapshot of the <code>Parser</code>.CnLooks at the topmost frame on the BlockContext and reports \xe2\x80\xa6EfConverts a <code>DefPathHash</code> to its corresponding <code>DefId</code> in the \xe2\x80\xa6CnReturns a set of constraints that needs to be satisfied in \xe2\x80\xa6EgEmit an error because <code>return</code> or <code>become</code> is used outside of \xe2\x80\xa6CgReplaces all bound variables (lifetimes, types, and \xe2\x80\xa60CiWe\xe2\x80\x99ve found an expression that would be parsed as a \xe2\x80\xa6CnTakes a list of candidates such that some of the candidates\xe2\x80\xa6CgThe predicates of the trait that are implied during \xe2\x80\xa6000000ChIf the given expression is a local binding, find the \xe2\x80\xa6CjFind the first ancestor span that\xe2\x80\x99s contained within \xe2\x80\xa6DcReturns the deepest <code>async_drop_in_place::{closure}</code> \xe2\x80\xa6CeCalls the given function once for each expression \xe2\x80\xa6C`Span of the <code>:</code> and format specifiersCmStart profiling with some event filter for a given event. \xe2\x80\xa6DhTurn a <code>ty::GenericParamDef</code> into a bound arg. Generally, \xe2\x80\xa6CnThis function computes borrowck facts for the given def id \xe2\x80\xa6CiGets a mutable store buffer associated with an atomic \xe2\x80\xa6CjGenerates the equality expression for a struct or enum \xe2\x80\xa6FnRetrieves the <code>HirId</code> for <code>id</code>\xe2\x80\x99s enclosing function <em>if</em> the <code>id</code>\xe2\x80\xa6BdThis method is the equivalent of \xe2\x80\xa6DmWhen we have an implied bound that <code>T: &#39;a</code>, we can further \xe2\x80\xa6DhEnsures that the super-predicates of the trait with a <code>DefId</code>CaGets the stringified path for an enum from an \xe2\x80\xa6ClIf this is a two-phase borrow, then we will record it as \xe2\x80\xa6CfWhen normalizing an associated item, constrain the \xe2\x80\xa60CeTrue if this is CGU is used to hold code coverage \xe2\x80\xa6CjReturns whether the given type is an enum from another \xe2\x80\xa6EaReturns <code>true</code> if the given <code>HirId</code> is inside an always \xe2\x80\xa6CjCheck if this path is potentially a trivial const arg, \xe2\x80\xa6CkCheck if this expression is potentially a trivial const \xe2\x80\xa6ClReturns true if the given def ID represents a local item \xe2\x80\xa6ClChecks if the type is a reference equals to a diagnostic \xe2\x80\xa6D`Returns <code>true</code> if the variant list of this ADT is \xe2\x80\xa6AoThis is the difference between:CfFor a given outlives constraint arising from a MIR \xe2\x80\xa6ClThe localized outlives constraints that were computed in \xe2\x80\xa6CmIf the predicate failure is caused by an unmet bound on a \xe2\x80\xa6DcSee <code>hir::ConstArg</code> for when to use this function vs \xe2\x80\xa6CcLower a resolved (type-level) associated item path.CfLower a type-relative path to a (type-level) constant.CnSuggests a missing external crate name if that resolves to \xe2\x80\xa6CgSome special error handling for the \xe2\x80\x9ctop-level\xe2\x80\x9d \xe2\x80\xa6DjReturns <code>true</code> if this evaluation result is known to apply, \xe2\x80\xa600CkViewing the relation as a graph, computes the \xe2\x80\x9cmutual \xe2\x80\xa6CbGives access to lints emitted during ast lowering.000000Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6000000EeReturns the <code>DefId</code> of the <code>panic_null_pointer_dereference</code> \xe2\x80\xa6CjOptionally parses <code>for&lt;$generic_params&gt;</code>.ChReturn the doc-comments on this item, grouped by the \xe2\x80\xa6CmLike <code>token_uninterpolated_span</code>, but works on \xe2\x80\xa6CgEmit an error for the given associated item constraint.CmPropagate loans within a region between two points in the \xe2\x80\xa6CjLint \xe2\x80\x9cpublic\xe2\x80\x9d fields in a struct that are prefixed \xe2\x80\xa60CkTry reading an immediate in memory; this is interesting \xe2\x80\xa6DjBase directory containing the <code>compiler/</code> directory for the \xe2\x80\xa600DhTransform the generic parameters to have the given <code>impl</code> \xe2\x80\xa600DfIf encountering <code>future.await()</code>, consumes and emits an \xe2\x80\xa6DoConsumes alternative await syntaxes like <code>await!(&lt;expr&gt;)</code>, \xe2\x80\xa6CeRecover on encountering a struct, enum, or method \xe2\x80\xa6DhReturns <code>true</code> if the item is visible, meaning it\xe2\x80\x99s not \xe2\x80\xa6Dgused for type aliases to only render their <code>repr</code> attribute.EgThis resolves the identifier <code>ident</code> in the namespace <code>ns</code> in \xe2\x80\xa6CmProcess the region constraints and return any errors that \xe2\x80\xa60FlGiven a <code>DefId</code> for an <code>fn</code>, return all the <code>dyn</code> and <code>impl</code> \xe2\x80\xa6BaRewrite bounds on a where clause.DkSchedule a pthread TLS destructor. Returns <code>true</code> if found a \xe2\x80\xa6CiSave the name used to resolve the extern crate in the \xe2\x80\xa6CnAttempts to match a range of bytes from parsed markdown to \xe2\x80\xa6CmCurrently only used in rustc_borrowck, probably should be \xe2\x80\xa60EcSuggest calling <code>Ty::method</code> if <code>.method()</code> isn\xe2\x80\x99t found \xe2\x80\xa6CcThis is the symbol name of an instance if it is \xe2\x80\xa6BnThis function will return <code>None</code> ifChPrints out a message with for a multipart suggestion \xe2\x80\xa6DbFind the associated item in the impl <code>impl_id</code> that \xe2\x80\xa6ClWe\xe2\x80\x99ve found an enum/struct/union type with the generic \xe2\x80\xa6DaWhen given a <code>ConcreteFailure</code> for a function with \xe2\x80\xa6DjSteals a previously stashed error with the given <code>Span</code> and \xe2\x80\xa6DgAttempt to suggest using <code>.is_empty</code> when trying to cast \xe2\x80\xa6CmChecks that the fields of the type (an ADT) all implement \xe2\x80\xa6CfReturns a list of all of the unconstrained generic \xe2\x80\xa6EgWhether the <code>unsafe_op_in_unsafe_fn</code> lint is <code>allow</code>ed at the \xe2\x80\xa6ClEnables verbose mode. Triggers if there is more than one \xe2\x80\xa60CkReturns the set of upstream monomorphizations available \xe2\x80\xa6000000CkIf branch coverage is enabled, inject marker statements \xe2\x80\xa6CjVisits all of the \xe2\x80\x9cprimary\xe2\x80\x9d bindings in a pattern, \xe2\x80\xa6CnForce us to name impls with just the filename/line number. \xe2\x80\xa60CiAdds a suggestion to the JSON output that will not be \xe2\x80\xa6CmDetermine whether parentheses are needed around the given \xe2\x80\xa6Df<code>&lt;[FnMut/Fn coroutine-closure] as FnOnce&gt;::call_once</code>0000000CfIndicates to look for the library in the search paths.DaThe <code>ineffective_unstable_trait_impl</code> lint detects \xe2\x80\xa60CmTrying to set discriminant to the niched variant, but the \xe2\x80\xa60DkThe <code>malformed_diagnostic_attributes</code> lint detects malformed \xe2\x80\xa60DiThe <code>misplaced_diagnostic_attributes</code> lint detects wrongly \xe2\x80\xa60DfThe <code>non_exhaustive_omitted_patterns</code> lint aims to help \xe2\x80\xa60DhThe <code>pub_use_of_private_extern_crate</code> lint detects a specific0DjThe <code>supertrait_item_shadowing_usage</code> lint detects when the \xe2\x80\xa60DcThe <code>unsupported_calling_conventions</code> lint is output \xe2\x80\xa60ClThe ID for the additional wrapper struct type describing \xe2\x80\xa6CmWhether to accept a safety comment to be placed above the \xe2\x80\xa60ChAdd object files containing code from the current crate.CkWhen inlining items, we merge their attributes (and all \xe2\x80\xa6BmProbability for address reuse across threads.0DkReally hacky heuristic to remap an <code>assert_eq!</code> error to the \xe2\x80\xa6DcWhether <code>indexing_slicing</code> should be allowed in test \xe2\x80\xa60DaEmit diagnostics using the <code>annotate-snippets</code> libraryCiUpdates the current dataflow state with the effect of \xe2\x80\xa60DeApplies a random ULP floating point error to <code>val</code> and \xe2\x80\xa6DgApplies a random 16ULP floating point error to <code>val</code> and \xe2\x80\xa6DjGiven a projection like <code>T::Item</code>, searches the environment \xe2\x80\xa6CnSuppress checking of the passed type names in all types of \xe2\x80\xa60DiAssert that the provided <code>HashStableContext</code> is configured \xe2\x80\xa6EmGiven a <code>DefId</code> of one of the <code>AsyncFn</code>, <code>AsyncFnMut</code> or \xe2\x80\xa6ChRecursively searches for the most-specific blameable \xe2\x80\xa6CjBuilds the DW_TAG_variant_part of an enum or coroutine \xe2\x80\xa6ClChecks whether a node can be replaced by its only child. \xe2\x80\xa6CaThis operator could be used to follow a block \xe2\x80\xa6CjCheck shim for variadic function. Returns a tuple that \xe2\x80\xa6DkChecks that we can prove that <code>longer_fr: shorter_fr</code>. If we \xe2\x80\xa6CmGiven the list of enabled features that were not language \xe2\x80\xa6DdChecks the <code>#[define_opaque]</code> attributes on items and \xe2\x80\xa6BlCombines all the reasons for 2229 migrationsDjReturn the top user-relevant frame, if there is one. <code>skip</code> \xe2\x80\xa6ClSuggest returning a local binding with a compatible type \xe2\x80\xa6BmEvaluate a constant to a type-level constant.CiChecks if the given expression contains macro call to \xe2\x80\xa6EhReturns the <code>DefId</code> of the <code>contract_build_check_ensures</code> lang \xe2\x80\xa6CkConvert auto-derefs, indices, etc of an expression from \xe2\x80\xa6AjWhen processing impl traitBgDEPRECATED LINT: CYCLOMATIC_COMPLEXITY.0CnCombines multiple lints passes into a single lint pass, at \xe2\x80\xa6EiGiven a projection like <code>&lt;T as Foo&lt;&#39;x&gt;&gt;::Bar</code>, returns any \xe2\x80\xa6BiDiscard all covspans that overlap a hole.Da<code>ErrorGuaranteed::emit_producing_guarantee</code> uses this.CmHelper function that canonicalizes and runs the query. If \xe2\x80\xa60DiEvaluates the predicates in <code>predicates</code> recursively. This \xe2\x80\xa6AaExportable items:EhThe expected type is <code>bool</code> but this will result in <code>()</code> so we \xe2\x80\xa6DkGiven a <code>binding_span</code>, return the span through to the comma \xe2\x80\xa6EgGiven the target <code>ident</code> and <code>kind</code>, search for the similarly \xe2\x80\xa6ClFinds the width of the character, either before or after \xe2\x80\xa6ChWhether Assert(OverflowNeg) and Assert(Overflow) MIR \xe2\x80\xa60DfGiven an <code>impl_def_id</code>, return true if the self type is \xe2\x80\xa6000000DjIncrements the jobs event counter if <code>increment_when</code>, when \xe2\x80\xa6Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6000000EeReturns <code>true</code> if this <code>#[repr()]</code> guarantees a fixed field \xe2\x80\xa6BkA type is niche-optimization candidate iff:DbReturns <code>true</code> if the given type is a non aggregate \xe2\x80\xa6CdChecks whether the return type is unsized via an \xe2\x80\xa64444444ClTransform this fixup into the one that should apply when \xe2\x80\xa6CnAttempts to special-case the overflowing literal lint when \xe2\x80\xa6ClLower a resolved associated const path to a (type-level) \xe2\x80\xa6CjTurn all by-value immutable bindings in a pattern into \xe2\x80\xa6Da<code>Diag::multipart_suggestion()</code> but you can set the \xe2\x80\xa6DgJust a convenient wrapper of <code>next_region_var</code> for using \xe2\x80\xa60AoThis is the difference between:ChReturns the number of global plus external universal \xe2\x80\xa6CgResolves a float var to a rigid int type, if it was \xe2\x80\xa60EfReturns the <code>DefId</code> of the <code>panic_invalid_enum_construction</code> \xe2\x80\xa6CnPerform the migration analysis for RFC 2229, and emit lint \xe2\x80\xa6ClCaller should never need to consult the store buffer for \xe2\x80\xa6DoOn <code>impl</code> evaluation cycles, look for <code>Self::AssocTy</code> \xe2\x80\xa6DiSame as <code>(pre|post)_link_objects</code>, but when self-contained \xe2\x80\xa6ClAssemble a list of predicates that would be present on a \xe2\x80\xa6CkReads the given number of bytes from memory, and strips \xe2\x80\xa6DbRecords the borrows on the specified local as <code>killed</code>.DjRecords the borrows on the specified place as <code>killed</code>. For \xe2\x80\xa6CnRecover from an invalid single colon, when the user likely \xe2\x80\xa6CjRecover the missing comments in the specified span, if \xe2\x80\xa6DkRegister <code>AliasRelate</code> obligation(s) that both types must be \xe2\x80\xa600000000CmInsert a hidden type into the opaque type storage, making \xe2\x80\xa60EeMacros that expand into branches (e.g. <code>assert!</code>, <code>trace!</code>) \xe2\x80\xa6CnGets the rendered precise capturing args for an opaque for \xe2\x80\xa6000000ClPops the current frame from the stack, copies the return \xe2\x80\xa6CnPut the reader in the queue waiting for the lock and block \xe2\x80\xa6CnPut the writer in the queue waiting for the lock. Once the \xe2\x80\xa6CaRecord the fact that we need to serialize the \xe2\x80\xa6CmInvoked to compute the signature of a closure expression. \xe2\x80\xa6DcExtends the given <code>Span</code> to just before the previous \xe2\x80\xa6DkThis methods steals all <code>LintExpectationId</code>s that are stored \xe2\x80\xa6CkWhen encountering the expected boxed value allocated in \xe2\x80\xa6DgSuggest calling a method on a field i.e. <code>a.field.bar()</code> \xe2\x80\xa6CbSuggest restricting a type param with a new bound.0ChIf the last field is a range literal, but it isn\xe2\x80\x99t \xe2\x80\xa6CkTrim trailing whitespaces unless they consist of two or \xe2\x80\xa6CiRemove spaces between the opening brace and the first \xe2\x80\xa6DkWhen given a <code>ConcreteFailure</code> for a function with arguments \xe2\x80\xa6DhEmitted wwhen given a <code>ConcreteFailure</code> when relating two \xe2\x80\xa6CkFIXME(#57893): For backwards compatibility with the old \xe2\x80\xa6DdKeep <code>new_extern_crate</code> if it looks better in diagnosticsCkIf branch coverage is enabled, inject marker statements \xe2\x80\xa6BiInternal helper to share code between \xe2\x80\xa6CjVisitor that requires that (almost) all regions in the \xe2\x80\xa6DeThe <code>default_overrides_default_fields</code> lint checks for \xe2\x80\xa6DiThe <code>deprecated_where_clause_location</code> lint detects when a \xe2\x80\xa60DaRepresents <code>#[rustc_layout_scalar_valid_range_start]</code>.0DhThe <code>self_constructor_from_outer_item</code> lint detects cases \xe2\x80\xa60CdRepresents the items that can occur within a module.CiIf all variants of the enum are fieldless, expand the \xe2\x80\xa6CkAdd object files containing metadata for the current crate.CkAdd all the obligations that are required, instantiated \xe2\x80\xa6DcAdds a suggestion to errors where an <code>impl Trait</code> is \xe2\x80\xa6CnThis function adds a suggestion to change the binding name \xe2\x80\xa6CkAll self-profiling events generated by the query engine use0DgThis is <code>Some</code> if this item allowed to be referred to on \xe2\x80\xa60CkReturns a Ty that applies the specified capture kind on \xe2\x80\xa6E`Assembles the <code>Sized</code> and <code>MetaSized</code> traits which are \xe2\x80\xa6DbSearches for unsizing that might apply to <code>obligation</code>.CjInitializes each of the bindings from the candidate by \xe2\x80\xa6CnBinding for guards is a bit different from binding for the \xe2\x80\xa6CfThis function builds a DW_AT_enumeration_type that \xe2\x80\xa6DjThrough #123739, <code>BackwardIncompatibleDropHint</code>s (BIDs) are \xe2\x80\xa6ClChecks that the correct number of generic arguments have \xe2\x80\xa6DcWhether to check MSRV compatibility in <code>#[test]</code> and \xe2\x80\xa60BlUnschedules any drops in the top two scopes.Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6000000ClFigures out the list of root variables (and their types) \xe2\x80\xa6FePartition all <code>VarDebugInfo</code> in <code>self.mir</code>, by their base <code>Local</code>\xe2\x80\xa6Dk<code>Tuple</code> is implemented if the <code>Self</code> type is a tuple.CmFor default impls, we need to break apart a type into its \xe2\x80\xa6CkIf called from a Rayon worker thread, indicates whether \xe2\x80\xa60CnReturns true if the current worker thread currently has \xe2\x80\x9c\xe2\x80\xa6CnCombines multiple lints passes into a single lint pass, at \xe2\x80\xa6DlSearches the environment for where-clauses like <code>G: &#39;a</code> whereCnThis sohuld only be used when we\xe2\x80\x99re either instantiating \xe2\x80\xa6ClFind any fn-ptr types with external ABIs in <code>ty</code>.CmGets the node where an expression is either used, or it\xe2\x80\x99\xe2\x80\xa6CiReturns the list of implementations for the primitive \xe2\x80\xa6ClGet the pointer to the function of the specified name in \xe2\x80\xa6CeGet a thread-specific allocation id for the given \xe2\x80\xa6CfThis excludes lint errors and delayed bugs. Unless \xe2\x80\xa6CeAttempts to highlight the specific part of a type \xe2\x80\xa6EfIntern <code>ret</code>. This function assumes that <code>ret</code> references no \xe2\x80\xa60DiLint messages for the <code>unfulfilled_lint_expectations</code> lint \xe2\x80\xa6DjLint that the range <code>pat</code> overlapped with all the ranges in \xe2\x80\xa6BlThe lower bound for linting decimal literals0CfThe set of saved locals live at each suspension point.CiLooks up the file\xe2\x80\x99s (1-based) line number, (0-based \xe2\x80\xa6CkMarks this CGU as the one used to contain code coverage \xe2\x80\xa6CjCauses inactive enum variants to be marked as \xe2\x80\x9cmaybe \xe2\x80\xa6CkTest if AmbiguityError ambi is any identical to any one \xe2\x80\xa6CkThe largest universe of a placeholder reached from this \xe2\x80\xa6ElSwift lets users write <code>Ty?</code> to mean <code>Option&lt;Ty&gt;</code>. Parse the \xe2\x80\xa6CiMake sure that we are in the condition to suggest the \xe2\x80\xa6CjReturns a list of types such that the given type needs \xe2\x80\xa6ClThis is a conservative normalization procedure. It takes \xe2\x80\xa6EgReturns the <code>DefId</code> of the <code>panic_const_async_gen_fn_resumed</code> \xe2\x80\xa6AoThis is the difference between:CiIn the new trait solver, we already do caching in the \xe2\x80\xa6CnDynamically linked executables can be compiled as position \xe2\x80\xa6CmInstantiate a QueryResponse in a probe context, without a \xe2\x80\xa6BeTotal cache hits per query invocationCmA necessary optimization to handle complex solver cycles. \xe2\x80\xa6BoRecover on a doc comment before <code>}</code>.CmRecover <code>$path::(...)</code> as <code>$path(...)</code>.EoWe were supposed to parse <code>&quot;:&quot; $ty</code> but the <code>:</code> or the type \xe2\x80\xa6DfAdjust the impl span so that just the <code>impl</code> keyword is \xe2\x80\xa6CjRemoves unused definitions. Updates the used locals to \xe2\x80\xa6DhHighlights <code>src</code> as an inline example, returning the HTML \xe2\x80\xa6CkReports that a cycle was detected which led to overflow \xe2\x80\xa6BkReturns whether there are const-conditions.CeAttempts to (heuristically) reverse a prefix mapping.CjTraces collected during macro resolution and validated \xe2\x80\xa6DjSame as <code>snippet_block</code>, but adapts the applicability level \xe2\x80\xa6ClParallel vec to the above with SourceInfo for each yield \xe2\x80\xa6Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6000000ChDuring symbol mangling rustc uses a special index to \xe2\x80\xa6DjSuggest add the missing <code>let</code> before the identifier in stmt \xe2\x80\xa6CbSuggest restricting a type param with a new bound.0ClFor \xe2\x80\x9cone type is more general than the other\xe2\x80\x9d errors \xe2\x80\xa6CiOn implicit return expressions with mismatched types, \xe2\x80\xa6CnSuggest replacing comma with semicolon in incorrect repeat \xe2\x80\xa6ChGets the intercrate ambiguity causes collected since \xe2\x80\xa6CgTakes an upvar place and tries to resolve it into a \xe2\x80\xa6DjDoes the work of <code>try_print_visible_def_path</code>, building the \xe2\x80\xa60DfReplaces the universe indexes used in <code>var_values</code> with \xe2\x80\xa6CkRestores the SIFA \xe2\x80\x9cchildren are stronger\xe2\x80\x9d invariant \xe2\x80\xa6CiDetermine whether or not experimental float types are \xe2\x80\xa6ClWrite a Path to the machine memory (as a null-terminated \xe2\x80\xa6EhThe <code>ellipsis_inclusive_range_patterns</code> lint detects the <code>...</code> \xe2\x80\xa6DhDue to <code>ref</code> pattern, there can be a difference between usingDiThe <code>named_arguments_used_positionally</code> lint detects cases \xe2\x80\xa60ClComputing an opaque type\xe2\x80\x99s hidden type caused an error \xe2\x80\xa600D`The <code>panic_misaligned_pointer_dereference</code> lang item.CiWe keep track of the computed LTO cache keys from the \xe2\x80\xa6ChAdds the diagnostics for a feature to an existing error.CkAdd object files for allocator code linked once for the \xe2\x80\xa6ClAdds a suggestion when a closure is invoked twice with a \xe2\x80\xa6CjAdds an explanatory note if the move error occurs in a \xe2\x80\xa6CfWhether to allow mixed uninlined format args, e.g. \xe2\x80\xa60CiBuild the debuginfo node for <code>DW_TAG_variant</code>:ClComputes the type parameters for a type, if any, for the \xe2\x80\xa6CjChecks if the top level expression can be moved into a \xe2\x80\xa6CgCompute whether a param-env assumption is global or \xe2\x80\xa6CiAdds a note if the types come from similarly named cratesChReturns true if a concrete type is specified after a \xe2\x80\xa6DjChecks if <code>#[diagnostic::on_unimplemented]</code> is applied to a \xe2\x80\xa6ChChecks that it is legal to call methods of the trait \xe2\x80\xa6CmOpaque type parameter validity check as documented in the \xe2\x80\xa6DiChecks if <code>#[rustc_legacy_const_generics]</code> is applied to a \xe2\x80\xa6DhChecks the function annotated with <code>#[target_feature]</code> is \xe2\x80\xa6BnImplements the \xe2\x80\x98strict\xe2\x80\x99 version of the \xe2\x80\xa6CfClean region outlives constraints to where-predicates.CjSometimes we get in a situation where we have multiple \xe2\x80\xa6CnThe equivalent of compare_method_predicate_entailment, but \xe2\x80\xa6ClFigures out the list of root variables (and their types) \xe2\x80\xa6DkA coroutine (that comes from an <code>async</code> desugaring) is known \xe2\x80\xa6CnCopy into a temporary if the type is more aligned than the \xe2\x80\xa6CeCompute the eligibility and assignment of each local.CiWhen processing generic arguments and encountering an \xe2\x80\xa6CmGiven a type, this function will calculate and return the \xe2\x80\xa6DbIt is likely that <code>NormalizesTo</code> failed without any \xe2\x80\xa6ClDetermines the Ancestry relationship of Place A relative \xe2\x80\xa6DgReturns structured explanation for <em>why</em> the borrow contains \xe2\x80\xa6CiChecks if the expression has adjustments that require \xe2\x80\xa6CoWhether to give precedence to <code>html_root_url</code> or \xe2\x80\xa6CmExtracts coverage-relevant spans from MIR, and associates \xe2\x80\xa6CnGiven a closure, returns the index of a capture within the \xe2\x80\xa6DeGives raw, mutable access to the <code>Allocation</code> address, \xe2\x80\xa6CnThis is the entirely abstraction-violating way to just get \xe2\x80\xa6ClVisits all item-likes in the crate in some deterministic \xe2\x80\xa6CaGive appropriate suggestion when encountering \xe2\x80\xa6DjGiven a set of captured <code>DefId</code> for an RPIT (opaque_def_id) \xe2\x80\xa6CnThis allows tools to enable rust logging without having to \xe2\x80\xa60CgInitialize the logger with the given values for the \xe2\x80\xa6DjTries to insert the value of a <code>key = value</code> meta item into \xe2\x80\xa6CjList of functions that mention this type in their type \xe2\x80\xa6CfReturns whether the given expression is a destruct \xe2\x80\xa6DhThis is the same as <code>is_expr_identity_function</code>, but does \xe2\x80\xa6CbComputes which locals have to be stored in the \xe2\x80\xa6CmThis method increases the internal macro errors count and \xe2\x80\xa6CmThis method is meant to be invoked as the final step of a \xe2\x80\xa60EhFor the overloaded place expressions (<code>*x</code>, <code>x[3]</code>), the trait \xe2\x80\xa6ClThis function gets called in places where a semicolon is \xe2\x80\xa6CnMove bounds that are (likely) directly attached to generic \xe2\x80\xa6CcCreates a \xe2\x80\x9cmerged\xe2\x80\x9d view of an underlying graph.DjGiven a type mismatch error caused by <code>&amp;T</code> being cloned \xe2\x80\xa6EhReturns the <code>DefId</code> of the <code>panic_const_async_fn_resumed_drop</code> \xe2\x80\xa6CaParse data layout from an llvm data layout stringCnReturns whether the given let pattern and else body can be \xe2\x80\xa6CnGiven a pointer or reference type, returns the type of the \xe2\x80\xa6ChFIXME(@lcnr): this function doesn\xe2\x80\x99t seem right and \xe2\x80\xa6CfPrint the allocation\xe2\x80\x99s bytes, without any nested \xe2\x80\xa6CkConsider a clause, which consists of a \xe2\x80\x9cassumption\xe2\x80\x9d \xe2\x80\xa6CkSearch for a single trait bound whose trait defines the \xe2\x80\xa6BmFinds bounds from <code>hir::Generics</code>.DjRe-compute the top user-relevant frame from scratch. <code>skip</code> \xe2\x80\xa6CkRecovery for e.g. <code>pub(something) fn ...</code> or \xe2\x80\xa6DkIn case <code>i</code> is a non-hidden impl block, then we special-case \xe2\x80\xa6CnComputes all regions that are (currently) known to outlive \xe2\x80\xa6CkTakes a list of sorted spans extracted from MIR, and \xe2\x80\x9c\xe2\x80\xa6AjBe very careful with this!CfThis function detects and reports unused format!() \xe2\x80\xa6CjGiven a primitive type, try to resolve an associated item.BdResolves regions and reports errors.ClDon\xe2\x80\x99t call this directly unless you know what you\xe2\x80\x99re \xe2\x80\xa60CjRust doesn\xe2\x80\x99t permit moving fields out of a type that \xe2\x80\xa6C`Select as many obligations as we can at present.CjSelect whether data race checking is disabled. This is \xe2\x80\xa6CaIf <code>true</code>, then this trait has the \xe2\x80\xa6FbSame as applying <code>struct_tail</code> on <code>source</code> and <code>target</code>, but onlyBiSuggests to remove redundant argument(s):CnThis is the symbol name of the given instance instantiated \xe2\x80\xa6ChThis function computes the symbol name for the given \xe2\x80\xa6CbObtains (and clears) the current set of region \xe2\x80\xa60ChReduces the precision of the captured place when the \xe2\x80\xa6DiChecks whether <code>ty: UseCloned</code> holds while ignoring region \xe2\x80\xa6DjWalks through the expansion ancestors of <code>original_span</code> to \xe2\x80\xa6CiShould the fraction of a decimal be linted to include \xe2\x80\xa60CmLooks up the type associated with this hir-id and applies \xe2\x80\xa6DbLike <code>verbose_generic_activity</code>, but with an extra arg.CjWhen the previously checked expression (the scrutinee) \xe2\x80\xa6EdExecutes <code>f</code> on <code>value</code> after replacing all escaping bound \xe2\x80\xa60DcThe <code>ambiguous_wide_pointer_comparisons</code> lint checks \xe2\x80\xa6DdThe <code>dangling_pointers_from_temporaries</code> lint detects \xe2\x80\xa6DdThe <code>ptr_to_integer_transmute_in_consts</code> lint detects \xe2\x80\xa6DjThe <code>rust_2021_incompatible_or_patterns</code> lint detects usage \xe2\x80\xa60CoSearches for impls that might apply to <code>obligation</code>.BfIn the case of a trait object like \xe2\x80\xa6CkThe first thing we have to do is scan through the parameterBkIn the case of a nested projection like \xe2\x80\xa6CcCreates debuginfo for built-in pointer-like things:CkCheck for cases where arbitrary self types allows shadowingCnSubslices correspond to multiple move paths, so we iterate \xe2\x80\xa6G`Combine <code>prev_str</code> and <code>next_str</code> into a single <code>String</code>. <code>span</code> \xe2\x80\xa6CnThe equivalent of compare_method_predicate_entailment, but \xe2\x80\xa6DfCollect Components for <em>all</em> the args of <code>alias_ty</code>.000CfExecutes one iteration of the drop-live analysis loop.DaComputes the region constraints and <em>new</em> opaque types \xe2\x80\xa6Bk<code>Pointee</code> is always implemented.EdWalks into <code>ty</code> and returns <code>true</code> if any inner type is an \xe2\x80\xa6CfChecks all types in the crate for overlap in their \xe2\x80\xa6000000DjReplace duplicated recovered parameters with <code>_</code> pattern to \xe2\x80\xa6CnIf we have no candidates, then it\xe2\x80\x99s likely that there is \xe2\x80\xa6CnAdd notes with details about the expected and actual trait \xe2\x80\xa6AcThis duplicates \xe2\x80\xa6ChExtracts data used by diagnostic for either types or \xe2\x80\xa6CnThis is only used by unstable_feature_bound as it does not \xe2\x80\xa6CmReturns the associated item with the given identifier and \xe2\x80\xa6DkIterates over the late-bound regions defined on <code>mir_def_id</code> \xe2\x80\xa6CgStart profiling a generic activity, allowing costly \xe2\x80\xa6ClGiven the index of an upvar, finds its name and the span \xe2\x80\xa6BgStore a cache hit of a query invocationEhExtracts <code>value</code>, registering any obligations into <code>fulfill_cx</code>\xe2\x80\xa60DiCrate-local macro expanded <code>macro_export</code> referred to by a \xe2\x80\xa6CkWhen Clippy suggests using a slice pattern, this is the \xe2\x80\xa60CaGive appropriate suggestion when encountering \xe2\x80\xa6BiReturns the kind of a static initializer.CiMap the regions in the type to named regions. This is \xe2\x80\xa6DgDo not call this query directly: Invoke <code>normalize</code> instead.000000EeLike <code>SyntaxContext::adjust</code>, but also normalizes <code>self</code> to \xe2\x80\xa6EhReturns the <code>DefId</code> of the <code>panic_const_async_fn_resumed_panic</code>\xe2\x80\xa6EhReturns the <code>DefId</code> of the <code>panic_const_coroutine_resumed_drop</code>\xe2\x80\xa6DkChecks if <code>expr</code> may be directly used as the return value of \xe2\x80\xa6CjCheck that the given predicate definitely holds in the \xe2\x80\xa6CkEvaluates whether the predicate can be satisfied in the \xe2\x80\xa60DkIf this item looks like a specific enums from <code>rental</code>, emit \xe2\x80\xa6ClCalled on places used for in-place function argument and \xe2\x80\xa60ClGiven the original values and the (canonicalized) result \xe2\x80\xa6F`Attempts to resolve <code>ident</code> in namespaces <code>ns</code> of <code>module</code>. \xe2\x80\xa6ClTop-level patterns incompatible with Rust 2024\xe2\x80\x99s match \xe2\x80\xa60ClSome bindings are introduced when producing HIR from the \xe2\x80\xa6CkIn a move error that occurs on a call within a loop, we \xe2\x80\xa6EaSuggest <code>map[k] = v</code> =&gt; <code>map.insert(k, v)</code> and the like.ClWhether to suppress a restriction lint in constant code. \xe2\x80\xa60Db<code>Span</code> where further predicates would be suggested, \xe2\x80\xa6ClTrait queries just want to pass back type obligations \xe2\x80\x9c\xe2\x80\xa60DhGiven known upvars and a <code>ClosureKind</code>, compute the coroutine000DcThe core of the <code>type_op_prove_predicate</code> query: for \xe2\x80\xa60DiValidate that the given HirId (respectively its <code>local_id</code> \xe2\x80\xa6DkReturns <code>Some(_)</code> if this method cannot be called on a trait \xe2\x80\xa6CnCalled after the \xe2\x80\x9cearly\xe2\x80\x9d effect of the given statement \xe2\x80\xa60DiLike <code>write_os_str_to_wide_str</code>, but on failure as much as \xe2\x80\xa6DcError E0530: <code>X</code> bindings cannot shadow <code>Y</code>s.BlCalled <code>const_make_global</code> twice.0CeSpans that are collected when processing built-in \xe2\x80\xa6DjThe <code>non_glob_import_of_type_ir_inherent_item</code> lint detects \xe2\x80\xa6DeThe <code>text_direction_codepoint_in_comment</code> lint detects \xe2\x80\xa60DeThe <code>text_direction_codepoint_in_literal</code> lint detects \xe2\x80\xa60ClAdd a note to region errors and borrow explanations when \xe2\x80\xa6ChSignal an error due to an attempt to move out of the \xe2\x80\xa6CmThis helper function checks whether an epoll notification \xe2\x80\xa6DjOutputs an error for <code>#[allow_internal_unstable]</code> which can \xe2\x80\xa6CfThis is needed to make it more \xe2\x80\x9creadable\xe2\x80\x9d when \xe2\x80\xa6CgWhen reevaluating a goal with a changed provisional \xe2\x80\xa6EgCollect ranges that overlap like <code>lo..=overlap</code>/<code>overlap..=hi</code>\xe2\x80\xa6CjThis function is best explained by example. Consider a \xe2\x80\xa6DkCompute the <code>intercrate_ambiguity_causes</code> for the new solver \xe2\x80\xa6DkA coroutine (that comes from a <code>gen</code> desugaring) is known to \xe2\x80\xa6CiIf the predicate contained an error, we want to avoid \xe2\x80\xa6CfChecks all types in the crate for overlap in their \xe2\x80\xa6000000AoDefault edition, no source map.CkReturns the early-bound lifetimes declared in this genericsDbChecks that target feature <code>target_feature</code> is enabled.CkFind the first ancestor span that does not come from an \xe2\x80\xa6DiChecks \xe2\x80\x9cdefining uses\xe2\x80\x9d of opaque <code>impl Trait</code> types to \xe2\x80\xa6C`Runs garbage collection for the current session.CjProduces a path from a local caller to the type of the \xe2\x80\xa6CkHandle encountering a symbol in a generic argument list \xe2\x80\xa6CkAttempts to highlight the specific part of a type in an \xe2\x80\xa6DhImplement HashStable by just calling <code>Hash::hash()</code>. Also \xe2\x80\xa6DjSame as <code>implements_trait_from_env</code> but takes the arguments \xe2\x80\xa6CmAdd all borrows to the kill set, if those borrows are out \xe2\x80\xa6DkThis is almost equivalent to <code>leftmost_subexpression_in_stmt</code>\xe2\x80\xa6EaLint that there is a gap <code>gap</code> between <code>pat</code> and all of \xe2\x80\xa6CmSkip over locals that begin with an underscore or have no \xe2\x80\xa6CnLower a type, possibly specially handling the type if it\xe2\x80\x99\xe2\x80\xa6BiRecover from malformed array type syntax.DiRust has no ternary operator (<code>cond ? then : else</code>). Parse \xe2\x80\xa6CkIf we encounter a parser state that looks like the user \xe2\x80\xa6CkEnforce the user\xe2\x80\x99s types against the expectation. See \xe2\x80\xa6BiReturns the <code>DefId</code> of the \xe2\x80\xa6DdIf the user writes <code>S { ref field: name }</code> instead of \xe2\x80\xa6CmCheck if the interior of a deref pattern (either explicit \xe2\x80\xa6DcGiven <code>where &lt;T as Bar&gt;::Baz: String</code>, suggest \xe2\x80\xa6CjUpdate effective visibilities of bindings in the given \xe2\x80\xa6CdDetermines whether deref_to == &lt;deref_from as \xe2\x80\xa6CkThe maximum number of single char bindings a scope may have0ClIn the current stack frame, mark all locals as live that \xe2\x80\xa6DgSee <code>foreign_access_skipping.rs</code>. Computes the SIFA of a \xe2\x80\xa6CkReturns the strongest foreign action this node survives \xe2\x80\xa6CdIf more match pairs remain, test them after each \xe2\x80\xa6EiMust only be called on constants of type <code>&amp;str</code> or <code>&amp;[u8]</code>!DeThe core of the <code>type_op_ascribe_user_type</code> query: for \xe2\x80\xa60ChReturns true if values of a given type will never be \xe2\x80\xa6DiDoes a <em>typed</em> swap of <code>*left</code> and <code>*right</code>.CdCalled after the \xe2\x80\x9cearly\xe2\x80\x9d effect of the given \xe2\x80\xa60CmIf condition coverage is enabled, inject extra blocks and \xe2\x80\xa6CgPrevent selection of visible paths if the paths are \xe2\x80\xa60DjThe <code>edition_2024_expr_fragment_specifier</code> lint detects the \xe2\x80\xa6AeThe result of [fn \xe2\x80\xa6DfThe <code>malformed_diagnostic_format_literals</code> lint detects \xe2\x80\xa60DfThe <code>semicolon_in_expressions_from_macros</code> lint detects \xe2\x80\xa60DkThe <code>supertrait_item_shadowing_definition</code> lint detects when \xe2\x80\xa60DgError E0430: <code>self</code> import can only appear once in the list.BoRepresents all kinds of trait associated items.ClPushes the obligations required for an inherent alias to \xe2\x80\xa6CbConstructs the reduced graph for one foreign item.FdReturns <code>true</code> if <code>IDENT t</code> can start a type \xe2\x80\x93 <code>IDENT::a::b</code>, \xe2\x80\xa6CnAs a heuristic, when we see an impl, if we see that the \xe2\x80\x98\xe2\x80\xa6DiSame as <code>Self::check_expr_with_expectation</code>, but allows us \xe2\x80\xa6DiMuch like <code>collapse_candidates_to_trait_pick</code>, this method \xe2\x80\xa6CnCompute the binding map for an or-pattern. Checks that all \xe2\x80\xa6EcA coroutine (that doesn\xe2\x80\x99t come from an <code>async</code> or <code>gen</code> \xe2\x80\xa6CnA callable type (a closure, fn def, or fn ptr) is known to \xe2\x80\xa6CjThis is somewhat subtle. In general, we want to forbid \xe2\x80\xa6DiFind the appropriate span where <code>use</code> and outer attributes \xe2\x80\xa6DiCreates a <code>MonoItem</code> for each method that is referenced by \xe2\x80\xa6EdThis is the <code>Span</code> where an <code>extern crate foo;</code> suggestion \xe2\x80\xa6AgGiven a projection likeCeResolve an identifier in lexical scope. This is a \xe2\x80\xa6CmAfter calling a canonical query, we apply the constraints \xe2\x80\xa6CmChecks if an expression is constructing a tuple-like enum \xe2\x80\xa6CgThe returned function is used in a fast path. If it \xe2\x80\xa60CdTo improve performance, sizedness traits are not \xe2\x80\xa6ClTransform this fixup into the one that should apply when \xe2\x80\xa6DeReport that a pattern for a <code>#[non_exhaustive]</code> struct \xe2\x80\xa6EeGiven an already parsed <code>Ty</code>, parses the <code>::AssocItem</code> tail andEeIf <code>loop_header</code> is <code>Some</code> and an unexpected block label is \xe2\x80\xa6CjFor a struct or enum with an invalid bare trait object \xe2\x80\xa6EfCreates a <code>PredicateObligation</code> with <code>new_self_ty</code> replacing \xe2\x80\xa6EbIf you have a <code>Binder&lt;&#39;tcx, T&gt;</code>, you can do this to strip \xe2\x80\xa6CdDoes the peeled expression need to be wrapped in \xe2\x80\xa600CjReturns a pair of boolean indicating whether we should \xe2\x80\xa6CjThis is used to offer suggestions to users. It returns \xe2\x80\xa6DgScan the constraints produced since <code>snapshot</code> and check \xe2\x80\xa6DaSee <code>InferCtxt::region_constraints_added_in_snapshot</code>.10DdReplaces all escaping bound vars. The <code>fld_r</code> closure \xe2\x80\xa6CkSchedule emission of a backwards incompatible drop lint \xe2\x80\xa6CnProvides context-dependent help for errors reported by the \xe2\x80\xa6DaGiven a \xe2\x80\x98Span\xe2\x80\x99, tries to tell if it\xe2\x80\x99s wrapped by \xe2\x80\x9c&lt;\xe2\x80\xa6DiIdentify when the user has written <code>foo..bar()</code> instead of \xe2\x80\xa6DfReturns the explicitly user-written <em>predicates and bounds</em> \xe2\x80\xa6000000DeApplies <code>f_propagate</code> to every vertex of the tree in a \xe2\x80\xa6EbAttempt to propagate a region error (e.g. <code>&#39;a: &#39;b</code>) that is \xe2\x80\xa6CfCalled after the \xe2\x80\x9cprimary\xe2\x80\x9d effect of the given \xe2\x80\xa60CnGiven the args that we just converted from the HIR, try to \xe2\x80\xa6DgThe <code>proc_macro_derive_resolution_fallback</code> lint detects \xe2\x80\xa60CmSearchInterfaceForPrivateItemsVisitor traverses an item\xe2\x80\x99\xe2\x80\xa6ChRepresents the configured ordering of items within a \xe2\x80\xa6ChRepresents the order in which associated trait items \xe2\x80\xa6CkRecord a pattern that\xe2\x80\x99s invalid under Rust 2024 match \xe2\x80\xa6CgSuppress checking of the passed type names in unary \xe2\x80\xa60DnFor some deeply nested <code>&lt;T&gt;::A::B::C::D</code> rigid associated \xe2\x80\xa6EdAssembles <code>Copy</code> and <code>Clone</code> candidates for built-in types \xe2\x80\xa6CmCheck to see if a pair of chained operators looks like an \xe2\x80\xa6CnCheck if a by-value binding is by-value. That is, check if \xe2\x80\xa6DgCheck an expr with an expectation type, and also <code>Needs</code> \xe2\x80\xa6EaEnforce generic args coming before constraints in <code>&lt;...&gt;</code> of \xe2\x80\xa6CjReturns a set of all late-bound regions that appear in \xe2\x80\xa6AjThe core of the algorithm.CmAssemble additional assumptions for an alias that are not \xe2\x80\xa6GbA type is <code>Copy</code> or <code>Clone</code> if its components are <code>Copy</code> or <code>Clone</code>\xe2\x80\xa6EgA type is <code>Sized</code> if its tail component is <code>Sized</code> and a type \xe2\x80\xa6CnInvoked when we are translating the coroutine that results \xe2\x80\xa6CcReturns the description of the root place for a \xe2\x80\xa6ClIf a normalization of an associated item or a trait goal \xe2\x80\xa6CnWhether to apply the raw pointer heuristic to determine if \xe2\x80\xa60CmWe allow impls of marker traits to overlap, so they can\xe2\x80\x99\xe2\x80\xa6CjAssembles constness bounds \xe2\x80\x9cnormal\xe2\x80\x9d item bounds on \xe2\x80\xa6EcWalks the graph of constraints (where <code>&#39;a: &#39;b</code> is considered \xe2\x80\xa6CkGiven the index of an argument, finds its name (if any) \xe2\x80\xa6DkA raw pointer variant of <code>get_bytes_unchecked_for_overwrite</code> \xe2\x80\xa6CjAttempt to parse a generic const argument that has not \xe2\x80\xa6ElReplaces any late-bound regions bound in <code>value</code> with <code>&#39;erased</code>\xe2\x80\xa6CmA fallback for polymorphic types, which are not supported \xe2\x80\xa6BgMach-O files contain information about:DeAsks for the <code>macro_metavar_expr</code> feature if it is not \xe2\x80\xa6CgSome special error handling for the \xe2\x80\x9ctop-level\xe2\x80\x9d \xe2\x80\xa6ClWhether the items within module groups should be ordered \xe2\x80\xa60DgDo not call this query directly: Invoke <code>normalize</code> instead.000000CiUnconditionally adds the diagnostic note described in \xe2\x80\xa6BiReturns the <code>DefId</code> of the \xe2\x80\xa6CnAdjusts the closure capture information to ensure that the \xe2\x80\xa6CnProcess the region obligations that must be proven (during \xe2\x80\xa60DgProhibit or lint against <em>bare</em> trait object types depending \xe2\x80\xa6DgRecover from <code>Fn</code>-family traits (Fn, FnMut, FnOnce) with \xe2\x80\xa6CjWrites a span containing the versions at which an item \xe2\x80\xa6CmReturns from the enclosing function if the type debuginfo \xe2\x80\xa6CmTry to suggest for a module path that cannot be resolved. \xe2\x80\xa6CkGiven a fn_hir_id for a impl function, suggest the type \xe2\x80\xa6CfCalled after the \xe2\x80\x9cprimary\xe2\x80\x9d effect of the given \xe2\x80\xa60CjFormat items with the same item kind and reorder them, \xe2\x80\xa6CiWrite an immediate to memory. If you use this you are \xe2\x80\xa6DhThe <code>absolute_paths_not_starting_with_crate</code> lint detects \xe2\x80\xa60CiError E0435: attempt to use a non-constant value in a \xe2\x80\xa6DhThe <code>dependency_on_unit_never_type_fallback</code> lint detects \xe2\x80\xa60DfThis will change meaning in the provided edition <em>and</em> in a \xe2\x80\xa6DhThe <code>rust_2021_prefixes_incompatible_syntax</code> lint detects \xe2\x80\xa60DjThe <code>unsupported_fn_ptr_calling_conventions</code> lint is output \xe2\x80\xa60C`This field exists to prevent the creation of \xe2\x80\xa60CmSuppress checking of the passed type pair names in binary \xe2\x80\xa60DoGiven an obligation like <code>&lt;SomeTrait for T&gt;</code>, searches the \xe2\x80\xa6DkGiven an <code>trait_assoc_def_id</code> corresponding to an associated \xe2\x80\xa6CmBuild the debuginfo node for the struct type describing a \xe2\x80\xa6DdChecks that the <code>#[rustc_lint_opt_deny_field_access]</code> \xe2\x80\xa6CnCheck if a method call with an intended turbofish has been \xe2\x80\xa6CdReturns a set of all late-bound regions that are \xe2\x80\xa6DiWalk a <code>hir_ty</code> and collect any clauses that may have come \xe2\x80\xa6CfCollect ranges that have a singleton gap between them.CfTraverse the patterns to collect any variants of a \xe2\x80\xa6CkTrait upcasting allows for coercions between trait objects:CfGiven a coroutine-closure, project to its returned \xe2\x80\xa6DgReturns the <code>DefId</code> of instances which might not require \xe2\x80\xa6DgTry to match an implementation of <code>Index</code> against a self \xe2\x80\xa6CkWalks up the callstack from the intrinsic\xe2\x80\x99s callsite, \xe2\x80\xa6DfGiven a <code>use_span</code> of a binding within a use statement, \xe2\x80\xa6CmConstructs a totally unconstrained, ambiguous response to \xe2\x80\xa6ClGiven the def-id of an early-bound lifetime on an opaque \xe2\x80\xa6Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6000000ChObtain just the main MIR (no promoteds) and run some \xe2\x80\xa6CkWhether this opaque always captures lifetimes in scope. \xe2\x80\xa6BiReturns the <code>DefId</code> of the \xe2\x80\xa6CgProhibits explicit lifetime arguments if late-bound \xe2\x80\xa6CgSuggest possible range with adding parentheses, for \xe2\x80\xa6ClTruncate the capture so that the place being borrowed is \xe2\x80\xa6DfReturns true if we should ignore <code>link</code> due to it being \xe2\x80\xa6DnGiven an expression type mismatch, peel any <code>&amp;</code> expressions \xe2\x80\xa6DjWalks through the expansion ancestors of <code>original_span</code> to \xe2\x80\xa6DjAccesses <code>sess.opts.unstable_opts.incremental_ignore_spans</code> \xe2\x80\xa6C`This field exists to prevent the creation of \xe2\x80\xa60DjReturns a <code>true</code> if we\xe2\x80\x99re pretty sure that this\xe2\x80\x99ll blow \xe2\x80\xa6DiWarn if <code>-o</code> is used without a space between the flag name \xe2\x80\xa6ClError E0434: can\xe2\x80\x99t capture dynamic environment in a fn \xe2\x80\xa6DiThe <code>elided_lifetimes_in_associated_constant</code> lint detects \xe2\x80\xa60DiThe <code>never_type_fallback_flowing_into_unsafe</code> lint detects \xe2\x80\xa60DiThe <code>rust_2021_incompatible_closure_captures</code> lint detects \xe2\x80\xa60ClThis function adds a suggestion to remove an unnecessary \xe2\x80\xa6CmAnnotate argument and return type of function and closure \xe2\x80\xa6EfGiven an <code>opaque_ty_def_id</code> corresponding to an <code>impl Trait</code> \xe2\x80\xa6CfThis is a lot more limited than the old solver\xe2\x80\x99s \xe2\x80\xa6ClCheck for duplicate relaxed bounds and relaxed bounds of \xe2\x80\xa6ClChecks a bunch of different properties of the impl/trait \xe2\x80\xa6CiThis function returns all of the debugger visualizers \xe2\x80\xa6DcA type is a <code>FnPtr</code> if it is of <code>FnPtr</code> type.ClIn coherence we have to not only care about all impls we \xe2\x80\xa6DeDeeply normalize all aliases in <code>value</code>. This does not \xe2\x80\xa60DfGiven a <code>binding_span</code> of a binding within a use statement:EhReturns <code>true</code> if the given <code>def_id</code> (trait or function) is \xe2\x80\x9c\xe2\x80\xa6CiReturn the live symbols in the crate for dead code check.000000DkTransforms <code>-&gt; T</code> into <code>Future&lt;Output = T&gt;</code>.CmIn case there were unstable name collisions, emit them as \xe2\x80\xa6CnNotes the point at which a variable is constrained to some \xe2\x80\xa6BiReturns the <code>DefId</code> of the \xe2\x80\xa6CkEvaluates whether the predicate can be satisfied in the \xe2\x80\xa60CkTry equating an assumption predicate against a goal\xe2\x80\x99s \xe2\x80\xa6CkRegisters that the given region obligation must be resolved0CjResolves an associated value path into a base type and \xe2\x80\xa6CaIf <code>true</code>, then this trait has the \xe2\x80\xa6CcExecutables that are both statically linked and \xe2\x80\xa6BhSee <code>may_remove_crossorigin</code>.CdIs the expectation of this match expression an RPIT?00DjPrint the error message for lifetime errors when the <code>impl</code> \xe2\x80\xa6EgDetermines whether the type <code>ty</code> is known to meet <code>bound</code> and \xe2\x80\xa6EgLike <code>param_env</code>, but returns the <code>ParamEnv</code> after all opaque \xe2\x80\xa6000000CjError E0416: identifier is bound more than once in the \xe2\x80\xa6DjThe <code>repr_transparent_external_private_fields</code> lint detects \xe2\x80\xa60CkIndicates if the arg of the closure is a type annotated \xe2\x80\xa6DgDefines unit structs to implement <code>StyleEditionDefault</code> for.CfGiven a coroutine-closure, project to its returned \xe2\x80\xa6DdAssert that the args from an <code>ExistentialTraitRef</code> or \xe2\x80\xa600000ClAmong all pending obligations, collect those are stalled \xe2\x80\xa600CnNon-static lifetimes are prohibited in anonymous constants \xe2\x80\xa6DiThis is a convenience helper for <code>immediate_const_vector</code>. \xe2\x80\xa6lBased on \xe2\x80\xa6DbReturns <code>true</code> if the field list of this variant is \xe2\x80\xa6CmFinds the best match for given word in the given iterator \xe2\x80\xa6ClGets the loop or closure enclosing the given expression, \xe2\x80\xa6B`This is a helper function to \xe2\x80\xa6BjReturns the HirId of <code>N</code> in \xe2\x80\xa6CnThe opaque types from the canonical input. We only need to \xe2\x80\xa60DhIf the next tokens are ill-formed <code>$ty::</code> recover them as \xe2\x80\xa6CiEmits a suggestion if it looks like the user meant an \xe2\x80\xa6CnThis is a backwards compatibility hack to prevent breaking \xe2\x80\xa60CnRewrite a list of items with reordering and/or regrouping. \xe2\x80\xa6BiWhether to lint only if it\xe2\x80\x99s multiline.0BjWhether to lint only if it\xe2\x80\x99s singleline.0DhA specialized variant of <code>elaborate</code> that only elaborates \xe2\x80\xa600CmChecks that the fields of the type (an ADT) all implement \xe2\x80\xa6CgGiven a \xe2\x80\x9cguess\xe2\x80\x9d at the values for the canonical \xe2\x80\xa6DbValidate <em>all</em> occurrences of the given \xe2\x80\x9cvalue-str\xe2\x80\x9d \xe2\x80\xa6DiLooks for any assignments between locals (e.g., <code>_4 = _5</code>) \xe2\x80\xa6AiDetect the following case0CmShorthand helper that creates a canonical region variable \xe2\x80\xa6CeReturns names of captured upvars for closures and \xe2\x80\xa6000000ClOpaques have duplicated lifetimes and we need to compute \xe2\x80\xa6DkA coroutine (that comes from a <code>gen</code> desugaring) is known to \xe2\x80\xa6CnXcoff - On AIX, custom sections are merged into predefined \xe2\x80\xa6CnThe default initial (strongest) idempotent foreign access. \xe2\x80\xa6ClCheck if both impls can be satisfied by a common type by \xe2\x80\xa6CkMonomorphizes a type from the AST by first applying the \xe2\x80\xa6ClThis is the symbol name of the given instance as seen by \xe2\x80\xa6CmIf an appropriate error source is not found, check method \xe2\x80\xa6CmLowers a desugared coroutine body after moving all of the \xe2\x80\xa6DjConsider a clause specifically for a <code>dyn Trait</code> self type. \xe2\x80\xa6CkChecks whether each generic argument is simply a unique \xe2\x80\xa6CkError E0415: identifier is bound more than once in this \xe2\x80\xa6DkThe <code>unpredictable_function_pointer_comparisons</code> lint checks \xe2\x80\xa6CmBuilds the reduced graph for a single item in an external \xe2\x80\xa6CmConfirms that a type is not a type parameter referring to \xe2\x80\xa6DlAn async closure is known to implement the <code>AsyncFn&lt;A&gt;</code> \xe2\x80\xa6ChWe may in theory add further uses of an opaque after \xe2\x80\xa6CiThe Ident is the name of an associated type.The query \xe2\x80\xa6000000CmGiven the fully resolved, instantiated type for an opaque \xe2\x80\xa6ClSearch for a trait bound on a type parameter whose trait \xe2\x80\xa6CiSuggests moving redundant argument(s) of an associate \xe2\x80\xa6DhReturns <code>false</code> if we know for sure that this type has no \xe2\x80\xa6Dm<code>CrateMetadata</code> uses <code>ExternCrate</code> only for diagnosticsD`Returns <code>true</code> if the variant list of this ADT is \xe2\x80\xa6CnDescribes which specific groupings should have their items \xe2\x80\xa6CeMarker to ensure that implementors have carefully \xe2\x80\xa6CkBuild the struct type for describing a single coroutine \xe2\x80\xa6CmThis returns the canonical variable values to instantiate \xe2\x80\xa6ClCopies a CGU work product to the incremental compilation \xe2\x80\xa60DhReturns <code>Some(_)</code> if this item makes the containing trait \xe2\x80\xa60ClEnables tracking of intercrate ambiguity causes. See the \xe2\x80\xa6CnWhen trying to close a generics list and encountering code \xe2\x80\xa6ClCheck if both impls can be satisfied by a common type by \xe2\x80\xa6Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6000000CiWhether to suggest reordering constructor fields when \xe2\x80\xa60ClAdds an async-await specific note to the diagnostic when \xe2\x80\xa6CkWhether this pattern constitutes a read of value of the \xe2\x80\xa6CnEach CGU will normally only emit coverage metadata for the \xe2\x80\xa6CmConvenience function for traits that are structural, i.e. \xe2\x80\xa6DhUnlike <code>instantiate_normalizes_to_term</code> this instantiates \xe2\x80\xa60DjHelper function that takes a <code>SubdiagMessage</code> and returns a \xe2\x80\xa6DgWe have <code>S { foo: val, ..base }</code>, and we suggest instead \xe2\x80\xa6DkWhen the expected <code>impl Trait</code> is not defined in the current \xe2\x80\xa6DfThe <code>rust_2024_guarded_string_incompatible_syntax</code> lint \xe2\x80\xa60DkError E0431: <code>self</code> import can only appear in an import list \xe2\x80\xa6::BfFIXME(ChAoSUnItY): Too many arguments.CnWhether this expression constitutes a read of value of the \xe2\x80\xa6ClWhen an async closure is passed to a function that has a \xe2\x80\xa6CmIf one of the function arguments is a never pattern, this \xe2\x80\xa6ClReturns the dyn-compatibility violations that affect HIR \xe2\x80\xa60DfMigration code for the <code>expr_fragment_specifier_2024</code> rule.CnTry to recover from an unbraced const argument whose first \xe2\x80\xa6DiIdentify when the type error is because <code>()</code> is found in a \xe2\x80\xa6CmOnce we\xe2\x80\x99re done with typechecking the body, we take all \xe2\x80\xa6DiTries to destructure an <code>mir::Const</code> ADT or array into its \xe2\x80\xa6EdCheck whether a <code>ty</code> has a negative <code>Copy</code> implementation, \xe2\x80\xa6ChWhether to also emit warnings for unsafe blocks with \xe2\x80\xa60CkGiven a vector of fulfillment errors, try to adjust the \xe2\x80\xa6CnConsider (possibly several) candidates to upcast or unsize \xe2\x80\xa6DkIterates over the late-bound regions defined on <code>mir_def_id</code> \xe2\x80\xa6Dk<code>-Znext-solver</code>: Successfully proven goals during HIR typeck \xe2\x80\xa6CnTry to note when an opaque is involved in a borrowck error \xe2\x80\xa6CnReplaces args that reference param or infer variables with \xe2\x80\xa6EaWhen encountering an <code>impl Future</code> where <code>BoxFuture</code> is \xe2\x80\xa6FcTruncates <code>place</code> to have up to <code>len</code> projections. <code>curr_mode</code> \xe2\x80\xa6CkMonomorphizes a type from the AST by first applying the \xe2\x80\xa6CmSearches the environment to find all bounds that apply to \xe2\x80\xa6CnWhen a higher-ranked projection goal fails, check that the \xe2\x80\xa6CeAllocates the global variable responsible for the \xe2\x80\xa6DgDo not call this query directly: Invoke <code>normalize</code> instead.000000FlGiven a <code>DefId</code> for an <code>fn</code>, return all the <code>dyn</code> and <code>impl</code> \xe2\x80\xa6ChGiven a method def-id in an impl, compare the method \xe2\x80\xa6Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6000000DkCompute the built-in logic of the <code>AsyncFnKindHelper</code> helper \xe2\x80\xa6CdGiven a span corresponding to a bound, provide a \xe2\x80\xa6DgConfirms that all predicates defined on the <code>Drop</code> impl (\xe2\x80\xa6CjChecks for arguments appearing in the (closure) return \xe2\x80\xa6DkFinds a closure upvar that contains <code>fr</code> and label it with a \xe2\x80\xa6CmLooks at a slice which may contain uninitialized bytes or \xe2\x80\xa6DfReturns true if <code>expr</code> creates any temporary whose type \xe2\x80\xa6DhThis means that some data referenced by <code>borrow</code> needs to \xe2\x80\xa6BkDo not call this query directly: invoke \xe2\x80\xa6000000CjAllocate the self-profiling query strings for a single \xe2\x80\xa6:::::::CiTo return the constraints of a canonical query to the \xe2\x80\xa6CnPoints the cause span of a super predicate at the relevant \xe2\x80\xa6DiA version of <code>make_canonicalized_query_response</code> that does \xe2\x80\xa60ClValidate command line arguments with a <code>Session</code>.DeGiven an <code>fn_def_id</code> of a trait or a trait implementation:DkGiven the <code>item_def_id</code> of a trait or impl, return a mapping \xe2\x80\xa6000000CjGiven the (canonicalized) result to a canonical query, \xe2\x80\xa60CbSuggest using closure argument instead of capture.CjWhen writing a turbofish with multiple type parameters \xe2\x80\xa6CjCheck that an implementation does not refine an RPITIT \xe2\x80\xa6DgFinds an argument that contains <code>fr</code> and label it with a \xe2\x80\xa6CdThe code below is quite involved, so let me explain.EhSuggest providing <code>std::ptr::null()</code> or <code>std::ptr::null_mut()</code> \xe2\x80\xa6CfThis is a helper function shared between enums and \xe2\x80\xa6ClGiven a list of MIR projections, convert them to list of \xe2\x80\xa6DkCalled by <code>Parser::parse_stmt_without_recovery</code>, used to add \xe2\x80\xa6ClCheck that elaborating the principal of a trait ref doesn\xe2\x80\xa6CmThis method is called after we have encountered a missing \xe2\x80\xa6CnInserts a side-effect free instruction sequence that makes \xe2\x80\xa6CkCall this on things you got out of the MIR (so it is as \xe2\x80\xa6CmParses generic args (within a path segment) with recovery \xe2\x80\xa6CmDetermines whether a child capture that is derived from a \xe2\x80\xa6AeAn alternative to \xe2\x80\xa60CeThis method handles placeholders by rewriting the \xe2\x80\xa6EgSuggest using <code>while let</code> for call <code>next</code> on an iterator in a \xe2\x80\xa6DkThe <code>macro_expanded_macro_exports_accessed_by_absolute_paths</code>\xe2\x80\xa60DcChecks \xe2\x80\x9cdefining uses\xe2\x80\x9d of opaque <code>impl Trait</code> in \xe2\x80\xa6DfAssembles constness bounds from <code>~const</code> item bounds on \xe2\x80\xa6DiDrills into <code>expr</code> to arrive at the equivalent location of \xe2\x80\xa6ChReturns whether a call from the current crate to the \xe2\x80\xa6:DdGiven a slice of <code>hir::GenericBound</code>s, if any of them \xe2\x80\xa6CkWe want to achieve the error span in the following example:DeDeeply normalize all aliases in <code>value</code>. This does not \xe2\x80\xa60")
rd_("Fd<code>Src</code> is transmutable into <code>Dst</code>, if <code>src</code> is transmutable into \xe2\x80\xa6CgA property of a macro expansion that determines how \xe2\x80\xa6Bi#[feature(trivial_bounds)] is not enabled00DfAssociate some local constants with the <code>&#39;tcx</code> lifetimeFaDerives <code>TypeFoldable</code> for the annotated <code>struct</code> or <code>enum</code> (\xe2\x80\xa6ChThis trait is implemented for every type that can be \xe2\x80\xa6101000BdThe output from performing a type opAl<code>where T: &#39;r</code>DhThe <code>TypeOutlives</code> struct has the job of \xe2\x80\x9clowering\xe2\x80\x9d a \xe2\x80\xa6111011DgEnforce that <code>a</code> is equal to or a subtype of <code>b</code>.CbA nested goal required to prove that types are \xe2\x80\xa600000000FaType-related paths (e.g., <code>&lt;T&gt;::default</code> or <code>&lt;T&gt;::Output</code>). \xe2\x80\xa6CeA unique identifier for anything that we create a \xe2\x80\xa6BjWhat operation a universe was created for.BjAny other combination of assignments/uses.C`An unsafe existential lifetime binder (e.g., \xe2\x80\xa6EaAn unsafe binder type (e.g. <code>unsafe&lt;&#39;a&gt; Foo&lt;&#39;a&gt;</code>).AfAn unsafe binder type.00000BiThe <code>unsafe_pinned</code> lang item.AhUnsized local variables.0Ec<code>UnsizedPlace(p)</code>: <code>p</code> itself is a thin pointer (indirect \xe2\x80\xa6BoAction to be taken when a stack unwind happens.0CkIndicates that the landing pad is finished and that the \xe2\x80\xa60CkInformation describing the capture of an upvar. This is \xe2\x80\xa60CnA user-given type annotation attached to a constant. These \xe2\x80\xa60BlUsed as the result of an operand or r-value.CmHow to traverse a value and what to do when we are at the \xe2\x80\xa60C`Debug information pertaining to a user variable.BlThe data of a user variable, for debug info.11CaType of each variable must be <code>Sized</code>.00C`Represents a chunk in the version-sort algorithmDgSame as <code>Always</code> but with a reachability warning already \xe2\x80\xa6CmFor Windows Dtors, we store the list of functions that we \xe2\x80\xa6D`Feature-gated test: Stable, <em>or</em> there is an explicit \xe2\x80\xa6000CnA witness-tuple of non-exhaustiveness for error reporting, \xe2\x80\xa6c\xe2\x80\xa6CkOn x86-32/64 only: do not use any FPU or SIMD registers \xe2\x80\xa6BmKind of the access that triggered this event.DhReport a descriptive error when <code>access</code> is not permitted \xe2\x80\xa6CgChecks an access to the given place to see if it is \xe2\x80\xa6AoSimulates an access to a place.DjUser-visible range of the access. <code>None</code> means that this is \xe2\x80\xa6DeA cache of the nodes in <code>nodes</code>, indexed by predicate. \xe2\x80\xa6CgHandle the MIR coverage info in a backend-specific way.0DgAdds the definitions of <code>local</code> into <code>self.defs</code>.DhWhen using the linker flavors opting in to <code>lld</code>, add the \xe2\x80\xa6DmRecords <code>region</code> as being live at the given <code>location</code>.CbAdds the place into the used mutable variables setAmReturns the adjustment steps.CnA list of types where the ADT requires drop if and only if \xe2\x80\xa6000000DdImplements the <code>AliasRelate</code> goal, which is used when \xe2\x80\xa6EfReturns the <code>DefId</code> of the <code>alloc_layout</code> lang item if it is \xe2\x80\xa6BgAssigning each byte a MemoryCellClocks.0CmAllocates a new string in the profiling data. Does not do \xe2\x80\xa6CfSame as <code>alloc</code>, but zeroes out the memory.ChReturns whether an attribute needs to be recorded in \xe2\x80\xa6DkAnonymous <code>DepNode</code>s are nodes whose IDs we compute from the \xe2\x80\xa6DcConvert a <code>CArg</code> to a <code>libffi</code> argument type.CkAdd a span label to the arguments of the closure, if it \xe2\x80\xa6AdSerializes and sortsDiIf the <code>Value</code> is an Array, returns the associated mutable \xe2\x80\xa6DkConverts this <code>ForestObligation</code> suitable for use as a cache \xe2\x80\xa6CkInterpret these generic args as the args of a coroutine \xe2\x80\xa60C`Returns an immutable version of this provenance.CnGet the information of the intrinsic if this function is a \xe2\x80\xa6CmGiven an instance of this key, what crate is it referring \xe2\x80\xa60CeA short representation of this used for MIR printing.CaInverse of <code>SwitchTargets::static_if</code>.CjCheaply converts a meta item literal into a token literal.0DiCalled to evaluate <code>Assert</code> MIR terminators that trigger a \xe2\x80\xa60C`Helper method for assignments to a discriminant.EhIf the given <code>DefId</code> is an associated item, returns the <code>DefId</code>\xe2\x80\xa6ClUpdate the data-race detector for an atomic fence on the \xe2\x80\xa60DkThe <code>backend_repr</code> defines how this data will be represented \xe2\x80\xa6ChThe backend type used for a rust type when it\xe2\x80\x99s in \xe2\x80\xa60FhWhether any <code>&amp;</code> or <code>&amp;mut</code> patterns occur under a non-<code>move</code> \xe2\x80\xa60CkA list of basic blocks. References to basic block use a \xe2\x80\xa6CkMap backward from each point to the basic block that it \xe2\x80\xa6CmWhich arm\xe2\x80\x99s failure should we report? (the one furthest \xe2\x80\xa6F`Performs <code>which</code> scalar operation on <code>left</code> and <code>right</code> and \xe2\x80\xa6EcFor a top-level <code>match</code> arm or a <code>let</code> binding, binds the \xe2\x80\xa6GoIs variable bound via <code>x</code>, <code>mut x</code>, <code>ref x</code>, <code>ref mut x</code>, <code>mut ref x</code>\xe2\x80\xa6BkConverts <code>BinOpKind::Add</code> to \xe2\x80\xa6EeReturns the <code>DefId</code> of the <code>bitand</code> lang item if it is defined.D`The bitwise or (<code>|</code>) of the bits in two flags values.0000000000000000000000000000EeReturns the <code>DefId</code> of the <code>bitxor</code> lang item if it is defined.CkBlock the current thread, with an optional timeout. The \xe2\x80\xa6BfPut the thread into the blocked state.CdFinds the span of arguments of a closure (within \xe2\x80\xa6CnReturns the initial value of the dataflow state upon entry \xe2\x80\xa60CmBreak the input string at a boundary character around the \xe2\x80\xa6DcExecute <code>op</code> on every thread in the pool. It will be \xe2\x80\xa6CnInitializes the global thread pool. This initialization is \xe2\x80\xa6DcCreates a scoped <code>ThreadPool</code> initialized using this \xe2\x80\xa6ClBuilt-in macros have a couple of special properties like \xe2\x80\xa6CkThis pass constructs a second coroutine body sufficient \xe2\x80\xa6EcA backend <code>BasicBlock</code> for each MIR <code>BasicBlock</code>, created \xe2\x80\xa6CnCheck that the BBs to be simplified satisfies all distinct \xe2\x80\xa6CmThe main <code>canonicalize</code> method, shared impl of \xe2\x80\xa6Cflower an ExternAbi to a CanonAbi if this AbiMap allowsAnCapture mode that was selected0DoCalcultates either <code>a + b + cb_in</code> or <code>a - b - cb_in</code> \xe2\x80\xa6ClIf this is Some(), then this is a special \xe2\x80\x9ccatch unwind\xe2\x80\xa60EeScan for a <code>cfg=&quot;foo&quot;</code> attribute and check whether we have a \xe2\x80\xa6EnGiven a <code>#[rustc_clean]</code> attribute, scan for a <code>cfg=&quot;foo&quot;</code> \xe2\x80\xa6F`Check the bodies of <code>const</code>s, <code>static</code>s and <code>const fn</code>s for \xe2\x80\xa6DdIf <code>llvm-cov</code> sees a source region that is improperly \xe2\x80\xa6DgCheck that a body annotated with <code>#[rustc_force_inline]</code> \xe2\x80\xa6DeChecks if an <code>#[inline]</code> is applied to a function or a \xe2\x80\xa6E`Checks if the <code>#[marker]</code> attribute on an <code>item</code> is valid.CjChecks that an opaque type does not contain cycles and \xe2\x80\xa6DbIt contains the closing tag and the associated <code>Class</code>.CkThis is true if the captured variable was from a coroutine.CkObtains the latest type of the given closure; this may be a0BfThe span of the input closure to adaptCkFinds the spans of a captured place within a closure or \xe2\x80\xa6DbConvert from the <code>imm</code> argument used to specify the \xe2\x80\xa6EhIf <code>other_ty</code> is the same as a type argument present in <code>sub</code>, \xe2\x80\xa6Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6000000EeThe inner coercion \xe2\x80\x9cengine\xe2\x80\x9d. If <code>expression</code> is <code>None</code>, \xe2\x80\xa6DjWhether we allow <code>NeverToAny</code> coercions. This is unsound if \xe2\x80\xa6Aj1-based, character offset.CdThe current width of the terminal. Uses value of \xe2\x80\xa6EdExecute <code>f</code> and commit the bindings if closure <code>f</code> returns \xe2\x80\xa60ClRelease the mutex and let the current thread wait on the \xe2\x80\xa6mConfirmation.DhGets the <code>ty::FnDef</code> from an operand if it\xe2\x80\x99s a constant \xe2\x80\xa6CkGenerate a fake value. Poison always affects the entire \xe2\x80\xa60CiWhether the intrinsic can be invoked from stable const fn0CnConverts a constant to a pattern (if possible). This means \xe2\x80\xa6Cdthe main entry point for building MIR for a functionCaChecks whether any bit in the given range is a 1.BkWhether this index has an associated value.C`Whether this key has an associated index or not.CiTests if the map contains the given key. Deliberately \xe2\x80\xa60DkReturns <code>true</code> if the map contains a value for the specified \xe2\x80\xa60000Dhreturns <code>true</code> if expr contains match expr desugared from tryCmCompute the equivalence classes for locals, based on copy \xe2\x80\xa6DjCopy equivalence classes between locals. See <code>copy_classes</code> \xe2\x80\xa6DbMake a copy of the given fn_args. Any <code>InPlace</code> are \xe2\x80\xa6DiCreates/initializes the index for the <code>VecGraph</code>. A helper \xe2\x80\xa6CnThe directories that have already been created in this doc \xe2\x80\xa6DiReturn the <code>NodeId</code> of this variant\xe2\x80\x99s constructor, if it \xe2\x80\xa6ClThe types of the fields for this constructor. The result \xe2\x80\xa6ClReturns the types of the fields for a given constructor. \xe2\x80\xa6CdThe set of all the constructors for <code>ty</code>.DfCreates a set that represents all the constructors of <code>ty</code>.CcThis field is used to calculate precise local URLs.DiUsed to get the current <code>fn</code>\xe2\x80\x99s def span to point to when \xe2\x80\xa6BdThe current trait (used to suggest).CiGet the current span in the topmost function which is \xe2\x80\xa6DjSAFETY: Same as <code>dealloc()</code> with the added requirement that \xe2\x80\xa6DbDeclares a static item of type <code>&amp;&#39;static Lint</code>.0DjThis is a callback from <code>rustc_hir</code> as it cannot access the \xe2\x80\xa6DhReturns a string identifying this <code>DefId</code>. This string is \xe2\x80\xa6CmIn the event that a cycle occurs, if no explicit span has \xe2\x80\xa60BkDelay emission of this diagnostic as a bug.BlThe delayed bugs and their error guarantees.ClCommand-line arguments passed to the compiler have to be \xe2\x80\xa6DhSame ID set as <code>cnum_map</code> plus maybe some injected crates \xe2\x80\xa6DkTracks section IDs for <code>Deref</code> targets so they match in both \xe2\x80\xa6EfReturns the <code>DefId</code> of the <code>deref_target</code> lang item if it is \xe2\x80\xa6CgEmitter to use for diagnostics produced during codegen.CmIn case there were unstable name collisions, emit them as \xe2\x80\xa6CfFunctions for reading and writing discriminants of \xe2\x80\xa6BjThe discriminant, if explicitly specified.ChPrepares to create a path that performs all required \xe2\x80\xa6DhGenerates inline assembly with optional <code>destination</code> and \xe2\x80\xa6Clsee call sites to fold_kind_no_missing_regions_error for \xe2\x80\xa6C`<code>None</code> if the code syntax is invalid.ClPoints where the current variable is \xe2\x80\x9cdrop live\xe2\x80\x9d \xe2\x80\x93 \xe2\x80\xa6CiTypes that could not be resolved: projections and params.00CaA dummy derive macro <code>#[derive(Foo)]</code>.De<code>-Zdump-mir=nll</code> dumps MIR annotated with NLL specific \xe2\x80\xa6EfReturns the <code>DefId</code> of the <code>dyn_metadata</code> lang item if it is \xe2\x80\xa6EgCall <code>f</code> on every \xe2\x80\x9cbinding\xe2\x80\x9d in a pattern, e.g., on <code>a</code> in \xe2\x80\xa60ClConsumes a token \xe2\x80\x98tok\xe2\x80\x99 if it exists. Returns whether \xe2\x80\xa6CfEat <code>::</code> or, potentially, <code>:::</code>.BkTargets (or sources for back refs) of edgesCfDealing with host effect goals, i.e. enforcing the \xe2\x80\xa6CkProduces the actual NLL MIR sections to emit during the \xe2\x80\xa6CmA fake module that contains no definition and no prelude. \xe2\x80\xa6CjEncodes a const using the Itanium C++ ABI as a literal \xe2\x80\xa6CiEncodes a FnSig using the Itanium C++ ABI with vendor \xe2\x80\xa6CgEncodes an index, mapping each trait to its (local) \xe2\x80\xa6CgReplaces all bound variables (lifetimes, types, and \xe2\x80\xa6Ef<code>enter_forall</code>, but takes <code>&amp;mut self</code> and passes it back \xe2\x80\xa61DjEdges into the <code>DropTree</code> that need to be added once it\xe2\x80\x99s \xe2\x80\xa6ChAdapter function used to return result if SsoHashMap \xe2\x80\xa6DiTwo variables are unified in <code>eq_relations</code> when we have a \xe2\x80\xa6DkChecks if this <code>TokenTree</code> is equal to the other, regardless \xe2\x80\xa6BbHow to format errors and warnings.CjThe offset (into the allocation) at which the conflict \xe2\x80\xa6CjPushes a character to a message string for error reportingCnEvaluate the operand, returning a place where you can then \xe2\x80\xa6DhReturns the value, if any, of evaluating <code>op</code>. Calls upon \xe2\x80\xa6E`Helper function to get a <code>windows</code> constant as a <code>Scalar</code>.CnBlock thread if the current counter is 0, else just return \xe2\x80\xa6BmSets a callback to be invoked on thread exit.DdDeprecated in favor of <code>ThreadPoolBuilder::exit_handler</code>.BfClosure invoked on worker thread exit.DkExpands the rules based macro defined by <code>rules</code> for a given \xe2\x80\xa6AfThis expands to eitherDbUnpack the <code>GenericArg</code> as a const when it is known \xe2\x80\xa6ClPanic if this generic argument is not a const, otherwise \xe2\x80\xa6CfThe set of tags that have been exposed inside this \xe2\x80\xa600ChIf the given expression is a local binding, find the \xe2\x80\xa60DhExtend this unord collection with the given <code>UnordItems</code>. \xe2\x80\xa6DeInformation about the <code>extern crate</code> item or path that \xe2\x80\xa6Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6000000CmThe external source code (used for external crates, which \xe2\x80\xa6BnCreates a new suffixed floating-point literal.0ClStore for each place the kind of borrow to take. In case \xe2\x80\xa6BoFormat an untranslated diagnostic for this typeDm<code>Some</code> if this lint is feature gated, otherwise <code>None</code>.0CgConstruct a future incompatibility diagnostic for a \xe2\x80\xa6ChFetches the value, and applies a function to it that \xe2\x80\xa6BeFile paths accessed during the build.Cmfilter_impls filters candidates that have a positive impl \xe2\x80\xa6CnThe set of all Fingerprints in the graph. Each Fingerprint \xe2\x80\xa6CjThis is used to verify that fingerprints do not change \xe2\x80\xa61DnHead of a linked list of <strong>definitions</strong> of each variable \xe2\x80\x93 \xe2\x80\xa6DnHead of a linked list of <strong>uses</strong> of each variable \xe2\x80\x93 use in \xe2\x80\xa6CkFinds the smallest Integer type which can represent the \xe2\x80\xa6DiBinding from an <code>--extern</code> flag, lazily populated on first \xe2\x80\xa6C`Whether floating-point operations can behave \xe2\x80\xa6000BgHelper function for argument untupling.BkThe span of the method call on the variableCmThe span of the declaration block: \xe2\x80\x98move |\xe2\x80\xa6| -&gt; \xe2\x80\xa6\xe2\x80\x990CcDetermine the eagerness of the given function call.EeReturns the <code>DefId</code> of the <code>fn_mut</code> lang item if it is defined.EfReturns the <code>DefId</code> of the <code>fn_ptr_trait</code> lang item if it is \xe2\x80\xa6ClThe universe of the type variable that is in the process \xe2\x80\xa6BmRender the heading even if there are no linksDkA non-child node was read-accessed: keep <code>Reserved</code> but mark \xe2\x80\xa6EfReturns the <code>DefId</code> of the <code>format_count</code> lang item if it is \xe2\x80\xa6Cn<code>{}</code>, <code>{:?}</code>, or <code>{:x}</code>, etc.DhThe result of the checks, <code>Err(_)</code> if there was a problem \xe2\x80\xa6CiThis module handles the relationships between \xe2\x80\x9cfree \xe2\x80\xa6AjFree-region relationships.EeReturns the <code>DefId</code> of the <code>freeze</code> lang item if it is defined.CiIf this constraint is promoted from closure requirements.0CjAttempts to connect to the jobserver specified in this \xe2\x80\xa6CkConstructs a foreign access from an <code>AccessKind</code>CjParses the given command-line for options. If an error \xe2\x80\xa6D`Constructs a <code>Tree</code> from a \xe2\x80\x98variant-like\xe2\x80\x99 layout.EcReturns the <code>DefId</code> of the <code>from_yeet</code> lang item if it is \xe2\x80\xa6EfReturns the <code>DefId</code> of the <code>future_trait</code> lang item if it is \xe2\x80\xa6CmGenerate the NaN returned by a float operation, given the \xe2\x80\xa60CeThe type <code>T</code> that must outlive the region.ClDetermine if we are running in GenMC mode and with which \xe2\x80\xa60DkIf <code>OFFSET_IS_ADDR == false</code>, provenance must always be able \xe2\x80\xa60AkGet the symbol as a string.EaGets the absolute path of <code>def_id</code> as a vector of <code>Symbol</code>.BgReturn filename for diagnostic purposesDeReturn filename from given <code>Span</code>, for diagnostic purposesDfReturn filename from given <code>Span</code>, for diagnostic purposes.ChThe glob binding for this name, if it is known to exist.DfPanics in case the <code>AllocId</code> is dangling. Since that is \xe2\x80\xa6CgRetrieve global allocation for the given allocation ID.0DkAdds the macro call into the span map. Returns <code>true</code> if the \xe2\x80\xa6DjChecks for the existence of <code>hidden</code> in the attribute below \xe2\x80\xa6CnWhether the corresponding item has generic parameters, ie. \xe2\x80\xa6DiChecks that a condition doesn\xe2\x80\x99t have a <code>let</code> expression, \xe2\x80\xa6CiWhether any warnings or errors are present in the report.CdNames of helper attributes registered by this macro.CeHelper attributes that are in scope for the given \xe2\x80\xa6DkGives access to the HIR attributes inside the HIR owner <code>key</code>\xe2\x80\xa6000000CmCreates a new suffixed integer literal with the specified \xe2\x80\xa600BmDetermines if memory leaks should be ignored.0Dk<code>-Z instrument-xray=ignore-loops</code>, ignore presence of loops, \xe2\x80\xa6ClWhen rendering traits, it\xe2\x80\x99s often useful to be able to \xe2\x80\xa6DhCalculate the c-style string length for a given string <code>str</code>.DdThis module contains <code>HashStable</code> implementations for \xe2\x80\xa6CnState used to know whether to ignore resolution errors for \xe2\x80\xa6AoFeatures that must be disabled.DiChecks if the item of any of its parents has <code>#[cfg(...)]</code> \xe2\x80\xa6CjInitiate a call to this function \xe2\x80\x93 pushing the stack \xe2\x80\xa6DkEach Location <code>l</code> is mapped to the Inits that are effects of \xe2\x80\xa6CjThis always-inlined version should only be used on hot \xe2\x80\xa6CmInner locals for this function. These are the locals that \xe2\x80\xa6DiTokens inside the delimiters or after <code>=</code>. Proc macros see \xe2\x80\xa6CnThis module contains code to equate the input/output types \xe2\x80\xa6CgReturns true if we increased the number of elements \xe2\x80\xa6CkInspect a node during the DFS. We first examine its currentAdGet an instance ABI.0C`Returns the possibly-auto-generated MIR of a \xe2\x80\xa6BhPerforms various peephole optimizations.DdInterns a const. (Use <code>mk_*</code> functions instead, where \xe2\x80\xa6DeThe bitwise and (<code>&amp;</code>) of the bits in two flags values.0000000000000000000000000000CfReturns a ThreadPoolBuilder with identical parameters.EcReturns the <code>DefId</code> of the <code>into_iter</code> lang item if it is \xe2\x80\xa6DhCreates a <code>JobRef</code> from this job \xe2\x80\x93 note that this hides allCcReturns a pointer which outlives <code>self</code>.CiA list of indices of arguments provided that were not \xe2\x80\xa6DgReturns <code>true</code> if this is an aggregate type (including a \xe2\x80\xa6CmDetermines whether proc_macro has been made accessible to \xe2\x80\xa6CmA terminator that\xe2\x80\x99s more call-like (might do a bunch of \xe2\x80\xa6DiIf element is a <code>const fn</code> or const ctor we display a help \xe2\x80\xa600CoReturns <code>true</code> if the given token tree is delimited.CeWhether the original and suggested code are the same.Bfchecks if bound region is in Impl Item0CnWhether an item marked with #[deprecated(since = \xe2\x80\x9cX\xe2\x80\x9d)] \xe2\x80\xa6EgReturns <code>true</code> if <code>frag</code> can legally be followed by the token \xe2\x80\xa6EcProduces <code>true</code> if <code>Tree</code> is an inhabited type; otherwise \xe2\x80\xa6BfCheck if the function is an intrinsic.CmWhether the target is like MSVC. This is a combination of \xe2\x80\xa6BhWhether a target toolchain is like WASM.DbReturns <code>true</code> if the variant is <code>MetaItem</code>.0DiReturns <code>true</code> if this item does not appear inside an impl \xe2\x80\xa6CkWe see this identifier in a normal identifier position, \xe2\x80\xa6CfReturns true if node is reachable from the start node.BbSee <code>Level::Reachable</code>.CnCheck whether this pattern is redundant, and if so explain \xe2\x80\xa6CdReturns <code>true</code> if a pattern is refutable.AeIs this edition 2015?000CnWhether the place is the scrutinee itself or a subplace of \xe2\x80\xa6CjWhether the type is succinctly representable as a type \xe2\x80\xa6DbBest effort; will not know that e.g. <code>255u8..</code> is a \xe2\x80\xa6BhQuery backing <code>Ty::is_sized</code>.000000DdSay if you\xe2\x80\x99re playing with <code>rustfmt</code>\xe2\x80\x99s skip attributeClWhether this is an impl that\xe2\x80\x99s implied by the compiler \xe2\x80\xa6DfThis is normally <code>false</code>, which means that this generic \xe2\x80\xa6CgChecks if the given defid refers to an item that is \xe2\x80\xa6BhQuery backing <code>Ty::is_unpin</code>.000000BoBinding from an <code>extern crate</code> item.CnProvides mutable iteration over all elements. The iterator \xe2\x80\xa6CmOnce we become sleepy, what was the sleepy counter value? \xe2\x80\xa6DgThis is called on the returned <code>Box&lt;dyn Any&gt;</code> from \xe2\x80\xa60DcIdentical to <code>join</code>, except that the closures have a \xe2\x80\xa60CkConnector for a node that does not have a child. Should \xe2\x80\xa6Di<code>true</code> if we\xe2\x80\x99re emitting JSON timings with the start and \xe2\x80\xa6CiOutput start and end timestamps of several high-level \xe2\x80\xa611CgA description of this const context that can appear \xe2\x80\xa6CjThis stores the cached landing/cleanup pad block for a \xe2\x80\xa6ClThe token most recently popped from the left boundary of \xe2\x80\xa6DfThe <code>SyntaxContexts</code> that we have serialized (e.g. as a \xe2\x80\xa6BoArena-alloc of LayoutError for coroutine layoutAeGet the layout shape.AoSee <code>HtmlWithLimit</code>.Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6000000ClDetecting lib features (i.e., features that are not lang \xe2\x80\xa6BcCalled for <code>StorageDead</code>0E`Copies <code>p</code> into <code>q</code>, preferring to use hard-linking if \xe2\x80\xa6DoThe <code>#[link_ordinal = &quot;...&quot;]</code> attribute, indicating an \xe2\x80\xa6EdThe <code>#[link_section = &quot;...&quot;]</code> attribute, or what executable \xe2\x80\xa6AmSee <code>LinkedGraph</code>.CaSome parent node that is close to this macro call7777777ClThe set of regions that are live at a given point in the \xe2\x80\xa6CfWhich regions are live. This is exclusive with the \xe2\x80\xa6CkLLVM ABI name, corresponds to the \xe2\x80\x98-mabi\xe2\x80\x99 parameter \xe2\x80\xa6CiUpdate memory cell data-race tracking for atomic load \xe2\x80\xa60CiCrates which are considered local for the purposes of \xe2\x80\xa60CiThe fundamental map relating bitvector indexes to the \xe2\x80\xa60BaThe map from locations to points.BkDefines the <code>PointIndex</code> mappingCnThis method allows us to access the path of the file where \xe2\x80\xa6CiCompute the set of loop headers in the given body. We \xe2\x80\xa6EgLower HIR bounds into <code>bounds</code> given the self type <code>param_ty</code> \xe2\x80\xa6EdThe <code>DefId</code> of the macro being invoked, if this <code>ExpnData</code> \xe2\x80\xa6ClThis is an NFA-based parser, which calls out to the main \xe2\x80\xa6DfTurns a closure that takes an <code>&amp;mut Formatter</code> into \xe2\x80\xa6DfReturns the alignment that <code>malloc</code> would guarantee for \xe2\x80\xa6BaThe mangled name of this instance0CkRetrieve the instance\xe2\x80\x99s mangled name used for calling \xe2\x80\xa6ClMark a Rayon worker thread as blocked. This triggers the \xe2\x80\xa600ChAdditional CSS files to link in pages generated from \xe2\x80\xa6FeResolves <code>maybe_path</code> to a <code>DefId</code> and checks if the <code>PathLookup</code>\xe2\x80\xa6CgIn some compilation scenarios we may decide to take \xe2\x80\xa6DkReturns <code>true</code> if this type is considered a scalar primitive \xe2\x80\xa6EfReturns the <code>DefId</code> of the <code>maybe_uninit</code> lang item if it is \xe2\x80\xa6ClMaps source order field indices to memory order indices, \xe2\x80\xa6ChReturns the method names and argument list of nested \xe2\x80\xa6EfProvider for <code>query mir_borrowck</code>. Similar to <code>typeck</code>, this \xe2\x80\xa6ChBorrow-checks the given typeck root, e.g. functions, \xe2\x80\xa6000000Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6000000CmCompute the MIR that is used during CTFE (and thus has no \xe2\x80\xa61111111CkCompute the main MIR body and the list of MIR bodies of \xe2\x80\xa6CkRuns after recursively rendering all sub-items of a module.ClEach bit is indexed by argument number, starting at zero \xe2\x80\xa6AnSimulates mutation of a place.BjEagerly create and initialize a new mutex.ClTry unlocking by decreasing the lock count and returning \xe2\x80\xa6CgMap the regions in the type to named regions, where \xe2\x80\xa6CiSpan where the named argument\xe2\x80\x99s name is (so we know \xe2\x80\xa6AeTokens are needed if:CmThe nested goals of this goal, see the doc comment of the \xe2\x80\xa6CgConstructs a new initial state. It has not yet been \xe2\x80\xa6CnReturns a partially initialized MIR body containing only a \xe2\x80\xa6ClDefault initial permission of  the root of a new tree at \xe2\x80\xa6EfWrapper around <code>new_reserved_frz</code> and <code>new_reserved_im</code> that \xe2\x80\xa6BfCreate a new type from the given kind.0AmNext unused pointer ID (tag).BoIndex of the sibling to the right of this node.ClCalled after all nodes reachable from this one have been \xe2\x80\xa6DjThe functions that one might think are <code>main</code> but aren\xe2\x80\x99t, \xe2\x80\xa6BgArguments other than the self argument.CiThe extern entry shouldn\xe2\x80\x99t be considered for unused \xe2\x80\xa6DfThe number of <code>Match</code>s that appear in the sequence (and \xe2\x80\xa6BcThe number of variants in this ADT.CiComputes a normalizes-to (projection) goal for opaque \xe2\x80\xa6DfConvenience wrapper that executes <code>f</code> either within the \xe2\x80\xa6BbChecks the coherence orphan rules.BoPolonius output facts. Populated when using \xe2\x80\xa6CgPacks two N-bit integer vectors to a single N/2-bit \xe2\x80\xa6Dj<code>DefId</code> of the type parameter this was instantiated for, if \xe2\x80\xa6Dk<code>DefId</code> of the const parameter this was instantiated for, if \xe2\x80\xa6CbThe module that represents the current item scope.CiParse a meta-variable <code>concat</code> expression: \xe2\x80\xa6BmParses a <code>dyn B0 + ... + Bn</code> type.BkParses <code>extern string_literal?</code>.ClParses a <code>MetaItemInner</code> into a <code>Cfg</code>.CjUse this for any numeric option that has a static default.CmTakes a <code>tokenstream::TokenTree</code> and returns a \xe2\x80\xa6DjParses an optional return type <code>[ -&gt; TY ]</code> in a function \xe2\x80\xa6DfParses fn unsafety: <code>unsafe</code>, <code>safe</code> or nothing.CiUse this for any string option that has a static default.CmParses a raw pointer type: <code>*[const | mut] $type</code>.CfPartitioning Codegen Units for Incremental CompilationCkExpr Id pointing to use that resulted the corresponding \xe2\x80\xa60CkChecks whether the path of this attribute matches the name.AfOffending path segmentCeSpan field of the pattern this node was created from.ClInspect the given sub-module which we are about to visit \xe2\x80\xa6CjReturns the base obligation, ignoring derived obligations.00ChThe number of references that were peeled to produce \xe2\x80\xa600CaJobs that have been spawned, but not yet started.EfReturns the <code>DefId</code> of the <code>phantom_data</code> lang item if it is \xe2\x80\xa6BmGet a debug string representation of a place.CnPlaceholders represent bound regions \xe2\x80\x93 so something like \xe2\x80\xa6CkThe minimum size of the pointee, guaranteed to be valid \xe2\x80\xa6CmReturns the kind of unsize information of t, or None if t \xe2\x80\xa6CgGet the pointer size in the default data address space.CfThe size of the bitwise representation of the pointer.CiGets the predecessors for <code>target</code> as a slice.BjReturns predecessors for each basic block.CjCache the number of predecessors for each block, as we \xe2\x80\xa6ClThis may include transient local filesystem information. \xe2\x80\xa6CjUsed to prefetch queries which will be needed later by \xe2\x80\xa6CmCreates a run-length encoding of the initialization mask; \xe2\x80\xa6BhSelects the first primary span (if any).0BeAppends a representation of a region.DjIf <code>TyVar(vid)</code> resolves to a type, return that type. Else, \xe2\x80\xa60CjCopies the initialization of this temp to the promoted \xe2\x80\xa6E`The <code>DefId</code> is the <code>DefId</code> of the containing MIR body. \xe2\x80\xa6000000ClFetch all the promoteds of an item and prepare their MIR \xe2\x80\xa6DhIf <code>def_id</code> represents a root, pushes it onto the list of \xe2\x80\xa6DfReverses specialization by the <code>Missing</code> constructor by \xe2\x80\xa60EdReturns the <code>DefId</code> of the <code>Range</code> lang item if it is defined.Dh<code>range</code> is relative to this allocation reference, not the \xe2\x80\xa6Di<code>offset</code> is relative to this allocation reference, not the \xe2\x80\xa6AlRead a pointer from a place.DcRead a value of type <code>TypeId</code>, returning the type it \xe2\x80\xa6CbThe queue of reader threads waiting for this lock.CnEats tokens until we can be relatively sure we reached the \xe2\x80\xa6Ec<code>None</code> by default, depends on the <code>generate-redirect-map</code> \xe2\x80\xa6CgAccess to the region graph, built from the outlives \xe2\x80\xa6ClGiven the constraint set from which this graph was built \xe2\x80\xa6ClRecord the region names generated for each region in the \xe2\x80\xa6DaReturns the <code>GenericParamDef</code> associated with this \xe2\x80\xa6Cathe region span of this scope within source code.AhRegion scope of the loopEhThe scope for the <code>#[loop_match]</code> which its <code>#[const_continue]</code>\xe2\x80\xa6AnThe if-then scope or arm scopeDhIf <code>res</code> has a documentation page associated, store it in \xe2\x80\xa6EfAdds sufficient constraints to ensure that <code>a R b</code> where <code>R</code> \xe2\x80\xa6FeReturns whether <code>src</code> is a subtype of <code>dest</code>, i.e. <code>src &lt;: dest</code>.0CgThe span of the unnecessarily-qualified path to remove.EeRemove <code>local</code> from the pool of <code>Locals</code>. Allows writing to \xe2\x80\xa6DkLooks for query cycles starting from the last query in <code>jobs</code>\xe2\x80\xa6ClRemoves a key from the map, returning the stored key and \xe2\x80\xa60000CmReplaces all free regions appearing in the MIR with fresh \xe2\x80\xa6kWork to do.CfEmit a custom diagnostic without going through the \xe2\x80\xa60CbCombines an error with provided span and emits it.CeA wrapper around <code>Resolver::report_error</code>.CnThis target requires everything to be compiled with LTO to \xe2\x80\xa6BeEnd of that block, just wrap the lineDiResolve a condition from an <code>if</code> expression or match guard \xe2\x80\xa6ChThis is the entry point for resolving an intra-doc link.AlGets an instance for a path.DiResolves a <code>path</code> mentioned inside Rust code, returning an \xe2\x80\xa6CmConvenience wrapper around <code>doc_link_resolutions</code>.ChGiven a type Path, resolve it to a Type using the TyCtxtDgThe in-progress <code>result</code> lives at the top of this stack. \xe2\x80\xa6DgIf <code>Some</code>, this stores coercion information for returned \xe2\x80\xa6CmWhether Stacked Borrows and Tree Borrows retagging should \xe2\x80\xa6ChWhether to recurse into datatypes when searching for \xe2\x80\xa61ClThe location where the result of the current stack frame \xe2\x80\xa6Cd<code>return_place</code> of the popped stack frame.10BjThis is the primary entry point for rustc.0CmPerforms thin LTO by performing necessary global analysis \xe2\x80\xa60CfInstantiate and run the compiler with the provided \xe2\x80\xa6EhCommon utilities shared by both <code>rustc_ast</code> and <code>rustc_type_ir</code>\xe2\x80\xa6CiDiagnostics creation and emission for <code>rustc</code>.Dkrustc encodes a lot of hashes. If hashes are stored as <code>u64</code> \xe2\x80\xa6CiThe \xe2\x80\x9cmain crate\xe2\x80\x9d of the Rust compiler. This crate \xe2\x80\xa6nVarious checksBlThe WIP public interface to rustc internals.CeSome stuff used by rustc that doesn\xe2\x80\x99t have many \xe2\x80\xa6CgQueries that are independent from the main solver code.CbWhich locals are live across any suspension point.DhThe psABI alignment for a <code>Scalar</code> or <code>ScalarPair</code>CiThe search graph is responsible for caching and cycle \xe2\x80\xa6000CmIf set to \xe2\x80\x9ctrue\xe2\x80\x9d, the generics can be matched without \xe2\x80\xa6AjThe segment name of targetCjBinding for implicitly declared names that come with a \xe2\x80\xa6CkSet the element at the current index of the vector. May \xe2\x80\xa6CnAdditional environment variables that should be set in the \xe2\x80\xa60EhA wrapper for <code>llvm::LLVMSetMetadata</code>, but it takes <code>Metadata</code> \xe2\x80\xa6ClSets variant subtags of the <code>LanguageIdentifier</code>.0BbHelper for <code>shim_sig!</code>.DcWhen calling this after a <code>Diag</code> is constructed, the \xe2\x80\xa6ChBlocks that automatically handle their own text wrappingCmWhether we should read or write rendered cross-crate info \xe2\x80\xa6ClControls whether we read / write to cci files in the doc \xe2\x80\xa6ClReturns a new span representing an empty span at the end \xe2\x80\xa6ChReturns a new span representing an empty span at the \xe2\x80\xa6BfReturns the one field in this variant.BgThis target has no support for threads.B`Skips a <code>/*</code> comment.EfReturns the <code>DefId</code> of the <code>slice_len_fn</code> lang item if it is \xe2\x80\xa6ChA utility class for implementing \xe2\x80\x9csnapshottable\xe2\x80\x9d \xe2\x80\xa6DhReturns <code>true</code> if the spans are equal with regards to the \xe2\x80\xa6BkThe source scope this scope was created in.DdLooks up the span of <code>impl_did</code> if the impl is local; \xe2\x80\xa6DfAdds a new child diagnostics message to <code>self</code> with the \xe2\x80\xa6ChReturns the assembled code suggestions, whether they \xe2\x80\xa6CmIf the lang feature is stable, the version number when it \xe2\x80\xa60BjThe implementation of stack probes to use.DjThe length of the prefix in <code>out</code> (e.g. 2 for <code>_R</code>).BoStatic files bundled with documentation output.CjAllocations that are considered roots of static memory \xe2\x80\xa60CeMark a storage as live, killing the previous content.CcSet of \xe2\x80\x9cStorageLive\xe2\x80\x9d statements for each local.EgUsed with <code>profiler</code> to cache the <code>StringId</code>s for event names \xe2\x80\xa60BlStrip all doc(hidden) items from the output.BnStrip items marked <code>#[doc(hidden)]</code>ClReturns projections remaining after stripping an initial \xe2\x80\xa6G`Subtracts <code>set</code> from <code>row</code>. <code>set</code> can be either <code>DenseBitSet</code> or \xe2\x80\xa6CiOptions for rendering Markdown in summaries (e.g., in \xe2\x80\xa6DdThis represents the index into the <code>targets</code> array in \xe2\x80\xa60ClThe place the reference refers to: if erroneous code was \xe2\x80\xa6EdWhen inside an <code>async</code> context, this is the <code>HirId</code> of the \xe2\x80\xa6CkThe path to a rustc-like binary to build tests with. If \xe2\x80\xa6AlRuntool to run doctests withCmLoad the vector index used by the given thread as well as \xe2\x80\xa6CmConstruct a coroutine from the closure signature. Since a \xe2\x80\xa6000CmPlace that needs to be switched on. This place is of type \xe2\x80\xa6DhPublic implementation details for the <code>TokenStream</code> type, \xe2\x80\xa6DgThe span of the <code>tracing</code> crate is stored here. When the \xe2\x80\xa60BcTracked access to additional files.EbGets the <code>DefId</code> of the referenced trait. It <em>must</em> actually \xe2\x80\xa6DfReturns the <code>DefId</code> of the trait of the associated item \xe2\x80\xa600BiReturn a trimmed name of this definition.0CmReturn a trimmed name of the given instance including its \xe2\x80\xa6DeIf there is a local which is assigned <code>index</code>, and its \xe2\x80\xa6DjConstruct a place which holds the same value as <code>index</code> and \xe2\x80\xa6ClAttempts to inline a callsite into the caller body. When \xe2\x80\xa6CmCheck if you can select metavar spans for the given spans \xe2\x80\xa6EcCreates a <code>Place</code> or returns <code>None</code> if an upvar cannot be \xe2\x80\xa6AoAttempts to convert to a value.CnIterates over tuple fields. Panics when called on anything \xe2\x80\xa6CgExtract the span of the custom destructor of a type \xe2\x80\xa6CfRetrieve the type of this Adt by instantiating and \xe2\x80\xa6CeRetrieve the type of this field instantiating and \xe2\x80\xa6CmRetrieve the type of this definition by instantiating and \xe2\x80\xa6BjGet the debuginfo node for the given type.DhCreates a hash of the type <code>Ty</code> which will be the same no \xe2\x80\xa6Fa<code>true</code> for <code>...::{self [as target]}</code> imports, <code>false</code> otherwise.CmCreates a new suffixed integer literal with the specified \xe2\x80\xa600EcPerforms <code>which</code> scalar operation on <code>op</code> and returns the \xe2\x80\xa6CmGiven two values, produce a new value that combines them. \xe2\x80\xa60000DcOn a read, we need to disable all <code>Unique</code> above the \xe2\x80\xa60DbNew matrix with one <code>()</code> witness, i.e. with no columns.CjMap from the universes that appear in the query to the \xe2\x80\xa600EeReturns the <code>DefId</code> of the <code>unsize</code> lang item if it is defined.ClRetrieves the information we are losing (making dynamic) \xe2\x80\xa6CnRecover row usefulness and intersection information from a \xe2\x80\xa6CgDrops that need to be done on unwind paths. See the \xe2\x80\xa6CkFind all universal regions that are required to outlive \xe2\x80\xa6CmStatics that will be placed in the llvm.used variable See \xe2\x80\xa6DkThe self type, in the case of a <code>&lt;T&gt;::Item</code> path (when \xe2\x80\xa60CnTell LLVM to emit or not emit the information necessary to \xe2\x80\xa6DkReturns the (inferred) variances of the item given by <code>DefId</code>\xe2\x80\xa6000000CkReturns the name of the <code>LangItem</code> enum variant.DkCalls <code>f</code> with a reference to the name of the enumerator for \xe2\x80\xa6000AfThe name of a variant.01AlAlignments for vector types.ClThe current vector index in use by the thread currently, \xe2\x80\xa6DlA test which, if met by the region <code>&#39;x</code>, proves that this \xe2\x80\xa6ChCompare two identifiers based on the version sorting \xe2\x80\xa6Da<code>virtual_name</code> is the stable path rustc will store \xe2\x80\xa6DaVisit <code>cfg_if</code> macro and look for module declarations.CmFor every call of this function in the visitor, make sure \xe2\x80\xa6CkVisit the leaf candidates (those with no subcandidates) \xe2\x80\xa6CjThis function is a no-op that gets used to ensure this \xe2\x80\xa6DhWe sometimes have <code>region</code>s within an rvalue, or within a \xe2\x80\xa6CnA generic scope visitor. Visits scopes in order to resolve \xe2\x80\xa6CgThreads which are waiting on a token will wait on this.EhWalks the autoref <code>autoref</code> applied to the autoderef\xe2\x80\x99d <code>expr</code>\xe2\x80\xa6CjA field has been added indicating whether it should be \xe2\x80\xa6BoWarning about some tags (unnamed) being hidden.DkAllows access to the current <code>ImplicitCtxt</code>. Panics if there \xe2\x80\xa60CbAdd an argument. See <code>Diag::lint_id()</code>.CdObject types don\xe2\x80\x99t have a self type specified. \xe2\x80\xa6E`Given an existential predicate like <code>?Self: PartialEq&lt;u32&gt;</code> \xe2\x80\xa61101101DjReturns the <code>Span</code> within the syntax context of \xe2\x80\x9cwithin\xe2\x80\x9d\xe2\x80\xa6CgFunctions for saving and removing intermediate work \xe2\x80\xa6Ahwork-product data itselfBiThe number of threads in the thread pool.ChThe index of the worker to wake in <code>registry</code>BhWhat is worker index of the idle thread?DhReturns <code>true</code> if the range wraps around. I.e., the range \xe2\x80\xa6CmWrite out a human-readable textual representation for the \xe2\x80\xa6EhRepeats <code>operand</code> into the destination. <code>dest</code> must have array \xe2\x80\xa6Dh<code>range</code> is relative to this allocation reference, not the \xe2\x80\xa6AiWrite a scalar to a placeBaWrites a <em>non-ZST</em> scalar.CmTimestamps of the last SC write performed by each thread, \xe2\x80\xa6BmRustdoc writes aut two kinds of shared files:CgWrite the buffer, reset to the default style after eachCiMark the given sub-range (relative to this allocation \xe2\x80\xa6BmWrite \xe2\x80\x9cuninit\xe2\x80\x9d to the given memory range.CnThe clock-vector of the timestamp of the last atomic write \xe2\x80\xa6CbThe queue of writer threads waiting for this lock.ClReturns a zero literal operand for the appropriate type, \xe2\x80\xa6ClThe name of the file used to debug the dataflow analysis \xe2\x80\xa6CfContext given to every attribute parser when acceptingBkWe added the given <code>constraint</code>.CaWe just dumped the given statement or terminator.CkA temporary created during the creation of an aggregate \xe2\x80\xa6DcAllow overflowing max width if neither <code>Default</code> nor \xe2\x80\xa6CeAt least for initial deployment, we want to limit \xe2\x80\xa6BfAn override option for eval_stability.CiJumping to the next block has already been taken care of.0BdSee <code>MirPhase::Analysis</code>.0DhDescribes whether an <code>AnonConst</code> is a type level const arg orCdIndicates the confidence in the correctness of a \xe2\x80\xa60CiA compact representation of LLVM attributes (at least \xe2\x80\xa6AhThe argument has a name.BmOverflow in arithmetic that may not overflow.0CiA type representing iteration over the elements of an \xe2\x80\xa6BhUser type annotation assertions for NLL.CkType for MIR <code>Assert</code> terminator error messages.0DkA desugared <code>expr = expr</code>, where the LHS is a tuple, struct, \xe2\x80\xa6BaRepresents associated item kinds.CmAn associated type in a trait impl or a provided one in a \xe2\x80\xa6AgOperator associativity.c\xe2\x80\xa60000000BiThe <code>AsyncGenReady</code> lang item.CeWe are awaiting something that\xe2\x80\x99s known to be an \xe2\x80\xa6BjThe <code>async_iterator</code> lang item.ChValid atomic read orderings, subset of atomic::Ordering.0DbLike <code>TokenTree</code>, but for <code>AttrTokenStream</code>.D`Must match the layout of <code>LLVMRustAttributeKind</code>. \xe2\x80\xa6CeRepresents parsed <em>built-in</em> inert attributes.0CfThe contents of a <code>#[repr(...)]</code> attribute.ChCollect all the awaited expressions within the input \xe2\x80\xa6EhThe <code>bad_asm_style</code> lint detects the use of the <code>.intel_syntax</code>\xe2\x80\xa60BkFound a match, but the return type is wrongCmFor invariant cases, we add both the forward and backward \xe2\x80\xa6DhUsed by <code>CoverageKind::BlockMarker</code> to mark blocks during \xe2\x80\xa6Eh<code>BlockTailInfo</code> is attached to the <code>LocalDecl</code> for temporaries \xe2\x80\xa6ClA temporary created for evaluation of some subexpression \xe2\x80\xa6CgRepresents <code>#[rustc_default_body_unstable]</code>.0Bf<code>async Fn()</code> bound modifierAnThe polarity of a trait bound.0BaA compiler-generated unsafe blockD`The <code>NodeId</code> used to represent the root of the crate.BkThe <code>call_ref_future</code> lang item.DeA composite describing a <code>Place</code> that is captured by a \xe2\x80\xa60BhDetails of which pointer is not aligned.0ChA listener for the FFI start info channel along with \xe2\x80\xa6CnA fixed-size bitset type with a partially dense, partially \xe2\x80\xa6DfClosure lifetime binder, <code>for&lt;&#39;a, &#39;b&gt;</code> in \xe2\x80\xa6CnRepresents <code>for&lt;...&gt;</code> binder before a closureBjThe <code>coerce_unsized</code> lang item.CmAn error type used to represent an error that has already \xe2\x80\xa6ClWithin a syntactic trait ref, there may be multiple poly \xe2\x80\xa6CeContains the rayon thread pool configuration. Use \xe2\x80\xa6CnRepresents the type of confusion detected between original \xe2\x80\xa6BjRepresents <code>#[const_continue]</code>.0CbA <code>#[const_continue] break</code> expression.CgThe context required to evaluate a constant expression.BkThe <code>const_panic_fmt</code> lang item.DiThe mode that <code>ConstProp</code> is allowed to run in for a given \xe2\x80\xa6CmThese indices are generated by slice patterns. Easiest to \xe2\x80\xa600000BjIndex into a slice/array given by offsets.0DkThe heuristic believes that more than one <code>DefId</code> applies to \xe2\x80\xa6DcTwo <code>Constraint</code>s on the same sequence had different \xe2\x80\xa6DhSimilar to <code>ClosureArgs</code>; see the above documentation for \xe2\x80\xa60000BjIndicates the end of dropping a coroutine.0CkAdditional information carried by a MIR body when it is \xe2\x80\xa6CgDescribes what kind of coroutine markers, if any, a \xe2\x80\xa6ClThe type of source expression that caused this coroutine \xe2\x80\xa6CnA coverage-specific simplification of the MIR control flow \xe2\x80\xa6BlControls whether branch coverage is enabled.DgVersion number that will be included the <code>__llvm_covmap</code> \xe2\x80\xa6CmA trait for retrieving all items from a definition within \xe2\x80\xa6CmThe behavior of the CTFE engine when an error occurs with \xe2\x80\xa60DfThis <code>TriColorVisitor</code> looks for back edges in a graph, \xe2\x80\xa6CkWe use this for most things when incr. comp. is turned off.0DfThe <code>deref_nullptr</code> lint detects when a null pointer is \xe2\x80\xa6CmWhen parsing and at the beginning of doing expansions, we \xe2\x80\xa6ChThe file either didn\xe2\x80\x99t exist or was produced by an \xe2\x80\xa60CiA De Bruijn index is a standard means of representing \xe2\x80\xa6000BlWhich kind of debuginfo does the target use?DeA struct expression with a <code>..</code> tail but no \xe2\x80\x9cbase\xe2\x80\x9d \xe2\x80\xa60AmReturn type is not specified.BjThe <code>default_trait1</code> lang item.BjThe <code>default_trait2</code> lang item.BjThe <code>default_trait3</code> lang item.BjThe <code>default_trait4</code> lang item.CcPaths from <code>#[define_opaque]</code> attributesDiA list or glob delegation item (<code>reuse prefix::{a, b, c}</code>, \xe2\x80\xa6BkAn associated list or glob delegation item.BoThis struct stores metadata about each DepKind.CjA dep-node filter goes from a user-defined string to a \xe2\x80\xa60CkVisitor struct used for tracking down dereferencing and \xe2\x80\xa6BmInert attributes registered by derive macros.CkThis inner struct exists to keep it all behind a single \xe2\x80\xa6CfStore a direct return value to an operand local place.AjDisambiguators for a link.BbTrack the indentation of the tree.An<code>#[optimize(none)]</code>0CfConvenient type to merge compatible doctests into one.BcThe value of an inserted drop flag.0CnAn arena that can hold objects of multiple different types \xe2\x80\xa6AmTrait must be dyn-compatible.00000CcDynamically linked position-independent executable.CfTo be supplied to <code>rustc_interface::Config</code>CiResolves ty, region, and const vars to their inferred \xe2\x80\xa6DjA wrapper around an <code>DiagCtxt</code> that is used for early error \xe2\x80\xa60CkThe future edition - this variant will always exist and \xe2\x80\xa60BjThe <code>eh_personality</code> lang item.Eh<code>Endian</code> is in <code>rustc_abi</code>, which doesn\xe2\x80\x99t have access to the \xe2\x80\xa6CjRepresent the different kind of enum checks we can insert.CkError has already been emitted, no need to emit another \xe2\x80\xa6AfEvaluation successful.00000CgThis expression should have the type given (or some \xe2\x80\xa6GfE.g. <code>&amp;&#39;a Type</code>, <code>ContainsLifetime&lt;&#39;a&gt;</code>, <code>impl Trait + &#39;a</code>, \xe2\x80\xa6AoJust two extern prelude scopes.CmVirtual module that denotes resolution in extern prelude. \xe2\x80\xa6DkMetadata of a crate, either the same crate on which <code>rustdoc</code>\xe2\x80\xa6BiEquivalent to <code>VariantIdx(0)</code>.0DfThe <code>FakeReadCause</code> describes the type of pattern why a \xe2\x80\xa60CiThe FakeReadCause describes the type of pattern why a \xe2\x80\xa60DhLook for type <code>param</code> in an ADT being used only through a \xe2\x80\xa6F`The <code>&amp;FnAbi</code>-wrapping type (or <code>&amp;FnAbi</code> itself), which will be \xe2\x80\xa6CjA simple delegate taking 3 mutable functions. The used \xe2\x80\xa60CfWe passed through a function, closure or coroutine \xe2\x80\xa6DhCompiler-generated <code>&lt;T as FnPtr&gt;::addr</code> implementation.0000000ClPrint the RTN type as an impl trait with its path, i.e.e \xe2\x80\xa60CnA fake read injected into a match guard to ensure that the \xe2\x80\xa60DkPrint the RTN type as a value path, i.e. <code>T::method(..): ...</code>\xe2\x80\xa60AaA format literal.ChHolds the place for an or-pattern\xe2\x80\x99s bindings. This \xe2\x80\xa6EfThe <code>Local</code> can be propagated into and reads of this <code>Local</code> \xe2\x80\xa6BjThe <code>fused_iterator</code> lang item.CeThe conditions that must change for a goal to warrant0CaDoes this have any <code>ReErased</code> regions?000BcDoes this have <code>Opaque</code>?000DdError from the <code>homogeneous_aggregate</code> test function, \xe2\x80\xa60CiA buffer that allows generating HTML with a length limit.BkOutput meant for the consumption of humans.DhThe <code>invalid_value</code> lint detects creating a value that is \xe2\x80\xa6CmScope of the condition and then block of an if expression \xe2\x80\xa6BnBytes included via <code>include_bytes!</code>BfError type that denotes indeterminacy.CdAn associated const in an inherent <code>impl</code>0000E`Yields <code>InitChunk</code>s. See <code>InitMask::range_as_init_chunks</code>.0CmSet of types which can be used with a particular register \xe2\x80\xa6DjType has a <code>Drop</code> but it is considered insignificant. Check \xe2\x80\xa6BkCast of int to (possibly) wide raw pointer.BoEnum representing the existing integer lengths.AmCallee codegen for interrupts0AhIntrinsic has wrong type00EkInline asm <code>sym</code> operand must refer to a <code>fn</code> or <code>static</code>.BiInvalid escape character (e.g. \xe2\x80\x98\\z\xe2\x80\x99).CbCan\xe2\x80\x99t convert scalar to handle because it is \xe2\x80\xa6CjA dedicated allocator for interpreter memory contents, \xe2\x80\xa6BcBlock that is formatted as an item.ClDuplicates after the innermost instance of the attribute \xe2\x80\xa6CmDuplicates before the outermost instance of the attribute \xe2\x80\xa6CiCheck for uses of edition keywords used as an identifier.CmAll of the lang items, defined or not. Defined lang items \xe2\x80\xa6ElLifetime parameter: the <code>&#39;a</code> in <code>struct Foo&lt;&#39;a&gt; { ... }</code>00CjCollection of lint levels for the whole crate. This is \xe2\x80\xa6CgA node in the graph to be traversed, one of the two \xe2\x80\xa6BdData for a single <em>location</em>.Dj<code>self</code> used instead of <code>Self</code> in a generic parameterBlDefines a selector to match against a macro.CkFunction pointer type that constructs a new CodegenBackend.ChNode in a tree of \xe2\x80\x9cmatch pairs\xe2\x80\x9d, where each pair \xe2\x80\xa6CkAt this point for most items we can answer whether that \xe2\x80\xa6AeLLVMRustMemoryEffectsCkSome item that needs to monomorphize successfully for a \xe2\x80\xa6AnValues inside meta item lists.0Calayout align of this type (used in vtable header)Cj<code>$sysroot/share/locale/$locale</code> does not exist.CjA single span of changed lines, with 0 or more removed \xe2\x80\xa60BbSet of changed sections of a file.CbOutput the changed lines (for internal value only)01CgIdentifies an offset of a multi-byte character in a \xe2\x80\xa6Bl<code>mod foo;</code> with multiple sources.CiLine at the left enclosing the lines of a fully shown \xe2\x80\xa6CfOpt-in mutable access to <code>IndexSet</code> values.ChIndicates which permissions to grant to the retagged \xe2\x80\xa6AhPolicy for a new borrow.CcThe nil annotation accumulator, which does nothing.CjWe know nothing about what type this expression should \xe2\x80\xa6DdThe <code>Local</code> cannot be part of propagation at all. Any \xe2\x80\xa6DjA visitor that walks over the HIR and collects <code>Node</code>s into \xe2\x80\xa6CmSome information that is irrelevant for the algorithm but \xe2\x80\xa6BjThe constant is too big to be valtree\xe2\x80\x99d.0BiRepresents <code>#[non_exhaustive]</code>0CmFake extra constructor for enums that aren\xe2\x80\x99t allowed to \xe2\x80\xa60An<code>#[non_exhaustive]</code>CkFor literals that don\xe2\x80\x99t correspond to anything in the HIRCeanon consts outside of the type system, e.g. enum \xe2\x80\xa6000CgIn case normalizing aliases in nested goals cycles, \xe2\x80\xa600000000CkIdentifies an offset of a character that was normalized \xe2\x80\xa6CaInvisible opening delimiter, produced by a macro.CdOpaque pointee of <code>LLVMOperandBundleRef</code>.BkWhether to allow non-required optimizationsDgE.g. <code>impl Trait + &#39;_</code>, <code>impl Trait + &#39;a</code>CeOutlives bounds are relationships between generic \xe2\x80\xa6000CjIndicates that trait evaluation caused overflow and in \xe2\x80\xa600000AiAny of the given strings.CoThe <code>rustc_pass_by_value</code> lint marks a type with \xe2\x80\xa6BjThe <code>panic_location</code> lang item.BjThe <code>panic_nounwind</code> lang item.ClA guard used to hold panics that occur during a parallel \xe2\x80\xa6CcWhether to clean generic parameter defaults or not.DmThe <code>(A, B)</code> and <code>C</code> in <code>Foo(A, B) -&gt; C</code>.Bb<code>(inputs) -&gt; output</code>Am<code>Fn(A, B) -&gt; C</code>BfA builder for the <code>Parser</code>.ClRepresents an implicit coercion applied to the scrutinee \xe2\x80\xa6DbWhether the <code>..</code> is present in a struct fields pattern.AjSimple hir::Path collectorCgTracks how nested goals have been accessed. This is \xe2\x80\xa6000CjA column of patterns in a match, where a column is the \xe2\x80\xa6DgRegions created by a <code>&amp;P</code> or <code>[...]</code> pattern.0CdExtra information required only for error reporting.ChTrack whether a given place (aka column) is known to \xe2\x80\xa6CcA \xe2\x80\x9cplaceholder\xe2\x80\x9d that represents \xe2\x80\x9cany type\xe2\x80\x9d.0000000DiTrait for printers that pretty-print using <code>fmt::Write</code> to \xe2\x80\xa60BnA previous inline code node, that looks wrong.B`A primitive (aka, builtin) type.BhPrint the module after running autodiff.CjPrint the module after running autodiff and optimizations.CiIf this type is pub but not publicly reachable, third \xe2\x80\xa6AmA procedural macro attribute.ChThe result type used by <code>process_obligation</code>.AlThe flavor of the protector.CkStores the provenance information of pointers stored in \xe2\x80\xa60CjThis type alias specifies the type returned from query \xe2\x80\xa600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000EkAssociated types like <code>&lt;Type as Trait&gt;::Name</code> and <code>T::Item</code> \xe2\x80\xa6CmAfter we execute a query with a canonicalized key, we get \xe2\x80\xa600FgGiven <code>T: Tr&lt;m() -&gt; Ret&gt;</code> or <code>T: Tr&lt;m(Ty) -&gt; Ret&gt;</code>, suggest \xe2\x80\xa6CiWhether to call <code>item</code> recursively for modulesBiThe <code>RangeFromCopy</code> lang item.CiA placeholder region \xe2\x80\x93 the higher-ranked version of \xe2\x80\xa600000AaLLVMRealPredicateCnAn individual element in a region value \xe2\x80\x93 the value of a \xe2\x80\xa6CnAn annotation for region graph SCCs that tracks the values \xe2\x80\xa6CiConfiguration options for the HTML page-creation process.BnRearranges the locals into <em>use</em> order.CgAllows random access inspection of the results of a \xe2\x80\xa60BfLocation of function\xe2\x80\x99s return value.CmConverts generic params of a TypeFoldable from one item\xe2\x80\x99\xe2\x80\xa6CdView that reverses the direction of edges in its \xe2\x80\xa6DjThis is a function with the <code>#[rustc_main]</code> attribute. Used \xe2\x80\xa6DkThe <code>soft_unstable</code> lint detects unstable features that were \xe2\x80\xa60CnPrefer the same line except where there is a where-clause, \xe2\x80\xa6CjUsed by <code>Builder::storage_live_binding</code> and \xe2\x80\xa6CbContext given to every attribute parser during \xe2\x80\xa6D`Shared mutable state used in <code>Context</code> and elsewhere.AbShift by too much.0CgWhether to skip the leak check, as part of a future \xe2\x80\xa6DhThis is a companion trait to <code>StableOrd</code>. Some types like \xe2\x80\xa6DkA <code>StableCrateId</code> is a 64-bit hash of a crate name, together \xe2\x80\xa6000ChThis type measures the size of AST and HIR nodes, by \xe2\x80\xa6CgThe various kinds of statements that can appear in MIR.0ChStandard library prelude introduced with an internal \xe2\x80\xa6D`The <code>structural_peq</code> lang item. Trait injected by \xe2\x80\xa6ChTrait implemented by error types. This should not be \xe2\x80\xa60BhIterator over substitutions in a string.0DiAuxiliary data used for analyzing <code>SwitchInt</code> terminators, \xe2\x80\xa60CiThe possible branch sites of a TerminatorKind::SwitchInt.0ClA <code>SyntaxContext</code> represents a chain of pairs \xe2\x80\xa6DiThe <code>trivial_casts</code> lint detects trivial casts which could \xe2\x80\xa60DcRepresents <code>#[target_feature(enable = &quot;...&quot;)]</code>0BcInformation about a target feature.Ci#[target_feature(enable = \xe2\x80\x9cfeature1\xe2\x80\x9d, enable = \xe2\x80\x9c\xe2\x80\xa6BkOptional aspects of a target specification.AeLLVMRustThinLTOModuleBmThread builder used for customization via \xe2\x80\xa60AaA set of threads.0BlWhether the timeout is relative or absolute.0C`A high-level section of the compilation process.ChRepresents a trait method or associated constant or typeBjThe <code>transmute_opts</code> lang item.AmOptions for typeid_for_fnabi.DaA generic bound failure for a type test (<code>T: &#39;a</code>).FbDerives <code>TypeVisitable</code> for the annotated <code>struct</code> or <code>enum</code> (\xe2\x80\xa6ChThis trait is implemented for every type that can be \xe2\x80\xa6101000DhThe <code>unit_bindings</code> lint detects cases where bindings are \xe2\x80\xa6DaThe <code>unknown_lints</code> lint detects unrecognized lint \xe2\x80\xa60DhThe <code>unused_braces</code> lint detects unnecessary braces around anDgThe <code>unused_labels</code> lint detects labels that are never used.0DfThe <code>unused_macros</code> lint detects macros that were not used.0GoThe <code>unused_parens</code> lint detects <code>if</code>, <code>match</code>, <code>while</code> and <code>return</code> \xe2\x80\xa6EhThe <code>unused_unsafe</code> lint detects unnecessary use of an <code>unsafe</code>\xe2\x80\xa60Di<code>#[used(compiler)]</code>: indicates that LLVM can\xe2\x80\x99t eliminate \xe2\x80\xa6CmNo constraints on length of matcher. This is true for any \xe2\x80\xa6AmThe trait is not implemented.ClThis can trigger when we have a global bound that is not \xe2\x80\xa61010Cl\xe2\x80\x9cUniverses\xe2\x80\x9d are used during type- and trait-checking \xe2\x80\xa6000CnThis error will be surfaced elsewhere by rustc, so don\xe2\x80\x99t \xe2\x80\xa6FnAn unknown literal prefix, like <code>foo#</code>, <code>foo&#39;</code>, <code>foo&quot;</code>. Excludes \xe2\x80\xa6CmRefers to an unnamable item, such as one defined within a \xe2\x80\xa6AjBlocked on unnamed_socket.0CeReplace inline argument with positional argument: \xe2\x80\xa6CgThis is a more limited form of the standard Struct, \xe2\x80\xa6DhThe <code>TypeOutlives</code> struct has the job of \xe2\x80\x9clowering\xe2\x80\x9d a \xe2\x80\xa6E`Similar to the <code>Try</code> trait, but also implemented for <code>()</code>.000000BaThe first half of a wide pointer.CcDuplicates after the first attribute will be an \xe2\x80\xa60CjProtected against aliasing violations from other pointers.CnThe \xe2\x80\x98location\xe2\x80\x99 at which we try to perform HIR-based wf \xe2\x80\xa600ClRepresents a set of pattern-tuples that are witnesses of \xe2\x80\xa6DiA \xe2\x80\x9cwork product\xe2\x80\x9d corresponds to a <code>.o</code> (or other) file \xe2\x80\xa60ClInclusive wrap-around range of valid values, that is, if \xe2\x80\xa6ChInclusive wrap-around range of valid values (bitwise \xe2\x80\xa6CnIf the register is an AArch64 integer register then return \xe2\x80\xa6ChWhich tag the access that caused this error was made \xe2\x80\xa6CkInformation about the tag that was accessed just before theCdAcquire the given clock into the current thread, \xe2\x80\xa60BjIdentifier of the currently active thread.BjGet the id of the currently active thread.1Diindicates that <code>self</code> refers to something at binding level \xe2\x80\xa6ClQueues the insertion of a statement at a given location. \xe2\x80\xa6CkThis method is designed to work around the following issue:DaRegisters obligations that all <code>args</code> are well-formed.DiThe address space that this <code>GlobalAlloc</code> should be placed \xe2\x80\xa6BeParses a token from the input string.ClContent that will be included inline between the content \xe2\x80\xa6BkMap from DefId-of-aliased-type to its data.EhSetting <code>allow_invalid</code> to true suppresses a warning if <code>path</code> \xe2\x80\xa60CjChecks if a span is \xe2\x80\x9cinternal\xe2\x80\x9d to a macro in which \xe2\x80\xa6CkDo constructor splitting on the constructors of the column.CnThe entrypoint for this crate. Computes whether a match is \xe2\x80\xa6Bbconfidence on the built suggestion0BlWhether or not the suggestion is approximateDeReturns the subpath of indexing a fixed-size array <code>path</code>.CiRecord the size of an artifact that the compiler producesDfEquivalent to <code>self.as_ptr().cast()</code>, but only casts to \xe2\x80\xa6DjIf the <code>Value</code> is an Object, returns the associated mutable \xe2\x80\xa6CiReturns a \xe2\x80\x9cshared reference\xe2\x80\x9d (but not necessarily \xe2\x80\xa6DjConverts a <code>ConstArg</code> in an ambiguous position to one in an \xe2\x80\xa6DdConverts a <code>Ty</code> in an ambiguous position to one in an \xe2\x80\xa6EeAppend <code>AscribeUserType</code> statements onto the end of <code>block</code> \xe2\x80\xa6ClAssign blocks for all of the drops in the drop tree that \xe2\x80\xa6ChReturns the associativity/fixity of an operator. The \xe2\x80\xa6ClLoad or create the internal atomic memory metadata if it \xe2\x80\xa6CjReturns the attributes on the item at <code>def_id</code>.000000BhFor the <code>#[autodiff]</code> macros.DeWhether any binding modifiers occur under a non-<code>move</code> \xe2\x80\xa60CiA control-flow graph can be said to have \xe2\x80\x9cbalanced\xc2\xa0\xe2\x80\xa6CkFor a given MIR location, this stores the values of the \xe2\x80\xa6BnTarget\xe2\x80\x99s binary file format. Defaults to \xe2\x80\xa6CnCalled for all binary operations where the LHS has pointer \xe2\x80\xa60DeThe bitwise and (<code>&amp;</code>) of the bits in two flags values.0000000000000000000000000000DhReturns the correct <code>Tag::BITS</code> constant for a set of tag \xe2\x80\xa6DfThe bitwise exclusive-or (<code>^</code>) of the bits in two flags \xe2\x80\xa60000000000000000000000000000BhBlanket impls associated with the trait.000ClThe block-context: each time we build the code within an \xe2\x80\xa6EbChecks if the two <code>Option</code>s are both <code>Some</code> and pass the \xe2\x80\xa6Dm<strong>(DEPRECATED)</strong> Suggest to worker threads that they execute \xe2\x80\xa6DeDeprecated in favor of <code>ThreadPoolBuilder::breadth_first</code>.CnIf false, worker threads will execute spawned jobs in a \xe2\x80\x9c\xe2\x80\xa6CkEats the expected token if it\xe2\x80\x99s present possibly breakingDhTarget features in <code>missing</code> that are enabled at compile timeDdArm failed to match. If the token is <code>token::Eof</code>, it \xe2\x80\xa6CjConstructs the types used when accessing a Box\xe2\x80\x99s pointerCeBuilt-in attributes and <code>cfg</code> flag gating.BeReturns the type of <code>*ty</code>.DfReturns the type and mutability of <code>*ty</code> for builtin types.BgReturns the type of <code>ty[i]</code>.CiReturns the type of <code>ty[i]</code> for builtin types.DeExecute <code>fn_val</code>. It is the hook\xe2\x80\x99s responsibility to \xe2\x80\xa60CfCall a function: Push the stack frame and pass the \xe2\x80\xa6DcCaller bounds are <code>Obligation</code>s that the caller must \xe2\x80\xa600DhCreates a canonical variable replacing <code>kind</code> from the input,CdThis module contains the \xe2\x80\x9ccanonicalizer\xe2\x80\x9d itself.DdSome unicode characters <em>have</em> case, are considered upper \xe2\x80\xa6DeChecks <code>lhs</code> as part of the LHS of a macro definition, \xe2\x80\xa6CkChecks that all the type/lifetime parameters on an impl \xe2\x80\xa6DeIf the next token is the given keyword, returns <code>true</code> \xe2\x80\xa6DmChecks if <code>#[no_link]</code> is applied to an <code>extern crate</code>.DkType check the given top level pattern against the <code>expected</code>\xe2\x80\xa6Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6000000CmUsed to enable cargo to use checksums to check if a crate \xe2\x80\xa6CmEach spantree edge is \xe2\x80\x9cclaimed\xe2\x80\x9d by the (regular) node \xe2\x80\xa6CnCaches the instantiation of a canonical binder given a set \xe2\x80\xa60BfThe funclet status of each basic blockCiMSVC requires unwinding code to be split to a tree of \xe2\x80\xa6ClSame as <code>.clone().project(..)</code> but more efficientCmAttributes injected into the crate root from command line \xe2\x80\xa6CdThe codegen units, sorted by name to make things \xe2\x80\xa6CkReturns the number of codegen units that should be used \xe2\x80\xa6CmCoercing a mutable reference to an immutable works, while \xe2\x80\xa6CkScans the CTFE alloc in order to find function pointers \xe2\x80\xa6CkQueries for checking whether a type implements one of a \xe2\x80\xa6C`Choose the ordering between the given two items.CnCompare two strings treating multi-digit numbers as single \xe2\x80\xa6CjCompares two spans in (lo ascending, hi descending) order.CjRoutines to check for relations between fully inferred \xe2\x80\xa6DfCompile the macro into a <code>SyntaxExtension</code> and its rule \xe2\x80\xa6BjThe beginning of the line to be displayed.DkIf <code>true</code>, perform cfg-stripping on attached tokens. This is \xe2\x80\xa6CcCache of emitted const globals (value -&gt; global)EeRelate the <code>term</code> with the new <code>unconstrained_term</code> created \xe2\x80\xa6FcReturns <code>true</code> if <code>line</code> from <code>file_name</code> is in <code>self</code>.CgChecks if an <code>Expr</code> contains a certain name.DkCopies the data from an operand to a place. <code>allow_transmute</code>\xe2\x80\xa6BoReturns the number of LF and CRLF respectively.CjFor the given node, returns the finished list of terms \xe2\x80\xa6CiAn in-progress counter expression for each node. Each \xe2\x80\xa6CgCollects additional coverage information during MIR \xe2\x80\xa6DhWhether this pattern includes patterns of length <code>other_len</code>.C`Retrieve all static items defined in this crate.0CgCrate version to note on the sidebar of generated docs.ClThe version of the crate being documented, if given from \xe2\x80\xa6DaThe version string given to <code>--crate-version</code>, if any.BnParse, resolve, and typecheck the given crate.BgCreate a new thread and returns its id.Ed<code>current_class</code> and <code>pending_elems</code> are used to group HTML \xe2\x80\xa6AlThe depth of current patternDkAs with <code>BoundVarReplacer</code>, represents the index of a binder \xe2\x80\xa6DgAs with <code>RegionFolder</code>, represents the index of a binder \xe2\x80\xa6DdStores the index of a binder <em>just outside</em> the stuff we have0CkReturns the index of the page that this was deallocated \xe2\x80\xa6DhDeclare an <code>Arena</code> containing one dropless arena and many \xe2\x80\xa6AiDecorate and emit a lint.0BiConvert a DefId to a Res, where possible.BdCaches decoded <code>DefKey</code>s.Bgspan where macro was defined (if known)DkReturns whether the field corresponding to the <code>DefId</code> has a \xe2\x80\xa6000000AkDefault level for the lint.0C`Declare a global with an intention to define it.Bh<code>#[define_opaque]</code> attributesCePreprocessed <code>#[define_opaque]</code> attribute.DoDefine <code>LazyTables</code> and <code>TableBuilders</code> at the same time.CgThe node in the specialization graph containing the \xe2\x80\xa6000CmLints delayed during ast lowering to be emitted after hir \xe2\x80\xa6CmSpan of the code that should be removed when eliding this \xe2\x80\xa6B`Crate that depends on this crateClTake an operand, representing a pointer, and dereference \xe2\x80\xa6EfReturns the subpath of a dereference of <code>path</code> (or <code>None</code> if \xe2\x80\xa6CiCreates a cause for obligations that are derived from \xe2\x80\xa600E`If <code>expr</code> is a desugared <code>.await</code>, return the original \xe2\x80\xa6CjMark the thread as detached, which means that no other \xe2\x80\xa6CdFields used to add information to diagnostic errors.DeOffset from the <code>base</code> used to calculate the debuginfo \xe2\x80\xa6BcDisallow builtin cfgs from the CLI.CnSome constants do not have a deterministic value. To avoid \xe2\x80\xa6DiWhen we add an underscore binding (with ident <code>_</code>) to some \xe2\x80\xa6EeUsed to force two <code>ExpnData</code>s to have different <code>Fingerprint</code>s.CnThe set of all discriminants for the coroutine, enumerated \xe2\x80\xa60000CgCreates a graphviz representation of the obligation \xe2\x80\xa6Dgemit an error that a <code>name = value</code> pair was found where \xe2\x80\xa6CkA set used to strip duplicates. As we accumulate successorsCnReturns the DWARF version passed on the CLI or the default \xe2\x80\xa6CfUtilities for evaluating whether eagerly evaluated \xe2\x80\xa6D`Eats and discards tokens until one of <code>closes</code> is \xe2\x80\xa6DkKeep this in sync with <code>Token::can_begin_literal_maybe_minus</code>\xe2\x80\xa6oEdit distances.BlFinds the edit distance between two strings.CgThe full range (span) of the element in the doc string.CkEmbed the bitcode of an LLVM module for LTO in the LLVM \xe2\x80\xa6DkThe <code>Span</code> of the attribute that this expectation originated \xe2\x80\xa6BhEmits the polonius MIR, as escaped HTML.CjPre-allocate an empty match array, so it can be cloned \xe2\x80\xa6BlEnables colors and formatting in the output.CgEnable the thread for execution. The thread must be \xe2\x80\xa6DjReturns the <code>mir::Body</code> containing the node associated with \xe2\x80\xa6CgWhen visiting the associated expression as a branch \xe2\x80\xa6CjEncodes a region using the Itanium C++ ABI as a vendor \xe2\x80\xa6ClEncode something with additional information that allows \xe2\x80\xa6DjThis modifies <code>self</code> in place. The traits will be stored in \xe2\x80\xa6EbSets <code>context</code> as the new current <code>ImplicitCtxt</code> for the \xe2\x80\xa60ClThis function returns a file descriptor referring to the \xe2\x80\xa6CmChecks if two expressions evaluate to the same value, and \xe2\x80\xa60CmReturns an equivalent value with all free regions removed \xe2\x80\xa6CkThe region element that erroneously must be outlived by \xe2\x80\xa6BfEscapes to use as a formatting string.ChReturns the value, if any, of evaluating <code>c</code>.CdEvaluates a <em>not yet monomorphized</em> constant.CmAttempts to evaluate the expression as an integer without \xe2\x80\xa6BlTry to evaluate an instance into a constant.0ClSimple constant folding to determine if an expression is \xe2\x80\xa6DkHelper function to get a <code>libc</code> constant as an <code>i32</code>.DkHelper function to get a <code>libc</code> constant as an <code>u32</code>.DkHelper function to get a <code>libc</code> constant as an <code>u64</code>.CeEvaluate whether <code>sup_region: sub_region</code>.CfProbably the most involved method of the whole solver.0DbRecursively evaluates <code>goal</code>, returning whether any \xe2\x80\xa611CkBlock thread if the value addition will exceed u64::MAX -1,CkExpand this or-pattern into its alternatives. This only \xe2\x80\xa6CnRecursively expand this pattern into its subpatterns. Only \xe2\x80\xa6CjAll commandline args used to invoke the compiler, with \xe2\x80\xa60000BfAssert that the predicate is a clause.ChExpect next token to be edible or inedible token. If \xe2\x80\xa6DcUnpack the <code>GenericArg</code> as a region when it is known \xe2\x80\xa6DiIs there is a <code>&amp;self</code> argument? If not, it is a static \xe2\x80\xa6AfLikewise for ExpnHash.CkChecks whether the expansion is the root expansion or a \xe2\x80\xa6DjReturns <code>true</code> if an expression is contained inside the LHS \xe2\x80\xa6CdGets the context an expression\xe2\x80\x99s value is used in.CjIf present, CSS file that contains rules to add to the \xe2\x80\xa6DcProvides the <code>extern static</code> that this platform expects.BnExternal files to insert into generated pages.CkIf this is \xe2\x80\x99static or an early-bound region, then this isCnAn extra set of symbols to add to the symbol interner, the \xe2\x80\xa6CmThe set of timestamps that will happen-before this thread \xe2\x80\xa6ClThe last timestamp of happens-before relations that have \xe2\x80\xa6CmResolved field indices for field accesses in expressions (\xe2\x80\xa60EfReturns the subpath of a field of <code>path</code> (or <code>None</code> if there \xe2\x80\xa6CjFind the item granting the given kind of access to the \xe2\x80\xa6DnHead of a linked list of <strong>drops</strong> of each variable \xe2\x80\x93 these \xe2\x80\xa6BjFlips the polarity of the inner predicate.0BbFlips the polarity of a Predicate.1ClReturns Fluent bundle with the user\xe2\x80\x99s locale resources \xe2\x80\xa60CiLocalized diagnostics for the locale requested by the \xe2\x80\xa6DdPrint the difference between <code>self</code> and <code>old</code>.0Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6000000ChCalculates whether a function\xe2\x80\x99s ABI can unwind or not.EaReturns the <code>DefId</code> of the <code>fn_once</code> lang item if it is \xe2\x80\xa6ClThis implementation is supposed to be used when printing \xe2\x80\xa6DdReturns <code>false</code> if this place is not used in a coroutine.CeCalls the given function once for each expression \xe2\x80\xa6CnA non-child node was write-accessed: this makes everything \xe2\x80\xa6DeFrame pointer mode for this target. Defaults to <code>MayOmit</code>.CkWhether a read access should be performed on the frozen \xe2\x80\xa6EhPre-interned <code>Infer(ty::FreshIntTy(n))</code> for small values of <code>n</code>\xe2\x80\xa6CmAt this point the target\xe2\x80\x99s reference linker flavor doesn\xe2\x80\xa6CfDepending on the parent kind, some variants have a \xe2\x80\xa6DfIncorporates an already-simplified <code>FlatPat</code> into a new \xe2\x80\xa6CmWhether this is from an overloaded operator rather than a \xe2\x80\xa6CkGenerate this template from arbitrary text. Will insert \xe2\x80\xa6CjProcesses the operation and all resulting obligations, \xe2\x80\xa60CjAttempts to resolve all type/region/const variables in \xe2\x80\xa6CeFull type resolution replaces all type and region \xe2\x80\xa610EgReturns the <code>DefId</code> of the <code>future_output</code> lang item if it is \xe2\x80\xa6AdGets all attributes.DfGives raw access to the <code>Allocation</code>, without bounds or \xe2\x80\xa6EgObtain the <code>argc</code> and <code>argv</code> values to pass to the rust start \xe2\x80\xa6FeReturns the drop flag of <code>path</code> as a MIR <code>Operand</code> (or <code>None</code> if \xe2\x80\xa6CdReturn item index and mutable reference to the valueEgGiven a specializing impl <code>impl1</code>, and the base impl <code>impl2</code>, \xe2\x80\xa6ClReturns the key-value pair corresponding to the supplied \xe2\x80\xa60000DbObtains resolution for a label with the given <code>NodeId</code>.DbGet non-atomic access to a <code>&amp;mut [AtomicU64]</code> sliceCkEither get a previously existing entry, or create a new \xe2\x80\xa6DbGets the cached canonical form of <code>key</code> or executes \xe2\x80\xa600CnReturn span pointing to use that resulted in selecting the \xe2\x80\xa6D`Bounds-checked <em>but not align-checked</em> allocation access.ClHow long do we have to wait from now until the specified \xe2\x80\xa6DiReturns <code>Some(attr)</code> if the attribute list contains \xe2\x80\x98attr\xe2\x80\xa6CgDivides imports into three groups, corresponding to \xe2\x80\xa6CnThe guard-context: each time we build the guard expression \xe2\x80\xa6EeIf the given string is <code>&quot;native&quot;</code>, returns the host CPU name \xe2\x80\xa6CkWhether this goal has been used as the root of a cycle. \xe2\x80\xa6CnReturns true if this confusion type represents any kind of \xe2\x80\xa6CnWill <code>AttrItem::meta</code> succeed on this, if reparsed?DfHelper routines for higher-ranked things. See the <code>doc</code> \xe2\x80\xa6ChThe root URL at which the crate\xe2\x80\x99s documentation lives.CmCreates a new suffixed integer literal with the specified \xe2\x80\xa6CeCreates a new unsuffixed integer literal with the \xe2\x80\xa6CkThe scope of the innermost if-then currently being lowered.DhReturns <code>true</code> if we can safely ignore borrows of this place.0CjDef id of the impl method which owns the opaque hidden \xe2\x80\xa6DeIf the given <code>DefId</code> is an associated item of an impl, \xe2\x80\xa6ClThis pass enforces various \xe2\x80\x9cwell-formedness constraints\xe2\x80\xa6BhDoes the function have an implicit self?DhUsed to detect possible new binding written without <code>let</code> \xe2\x80\xa6Di<code>-Znext-solver</code>: Whether this inference context is used by \xe2\x80\xa60ChThe size of the memory range that was expected to be \xe2\x80\xa6000BgIndentation when there is a next child.CmThis module contains logic for determining whether a type \xe2\x80\xa6DkContains the list of <code>DefId</code>s which have been inlined. It is \xe2\x80\xa6DfAn always-inlined variant of <code>probe</code>, for very hot call \xe2\x80\xa6CjInserts an object and its occupied range at given positionDcReplaces the entry point of <code>body</code> with a block that \xe2\x80\xa6AlGet the instantiation types.0CkGet the body of an Instance which is already monomorphized.0CcRetrieve the instance name for diagnostic messages.DhIf <code>expr</code> evaluates to an integer constant, return its value.ClA map of EpollEventInterests registered under this epoll \xe2\x80\xa6GaIntersects <code>row</code> with <code>set</code>. <code>set</code> can be either <code>DenseBitSet</code> or \xe2\x80\xa6EhConvert <code>Self</code> into a <code>DiagArgValue</code> suitable for rendering in \xe2\x80\xa60DiConvert an iterator of anything into <code>FallibleIterator</code> by \xe2\x80\xa6000000000000000000000BdWhether the function is an intrinsicClDetermines whether an item is an intrinsic (which may be \xe2\x80\xa6111111CkFor each bb, give the TOs in which it appears. The pair \xe2\x80\xa6DaReturns <code>true</code> if this place context represents an \xe2\x80\xa6ClCheck whether an allocation is live. This is faster than \xe2\x80\xa6DcChecks whether values of this type <code>T</code> implement the \xe2\x80\xa6DjReturns true if the given <code>expr</code> is a block or resembled as \xe2\x80\xa6CkTests whether this is a Box definitely using the global \xe2\x80\xa6CgWhether the function accepts an arbitrary amount of \xe2\x80\xa6CnReturns whether the <code>cc</code> linker feature is enabled.BkSee <code>Constructor::is_covered_by</code>FeReturns whether <code>self</code> is covered by <code>other</code>, i.e. whether <code>self</code>\xe2\x80\xa6C`Returns <code>true</code> if this is a DerefTempClChecks if this span arises from a compiler desugaring of \xe2\x80\xa6DiReturns <code>true</code> if this place is allowed to be less aligned \xe2\x80\xa60DbReturns true if the attributes contain <code>#[doc(hidden)]</code>DkDetermines whether an item is annotated with <code>#[doc(hidden)]</code>\xe2\x80\xa6CiDetermines whether an item is directly annotated with \xe2\x80\xa6111111BmCheck whether this instance is an empty shim.CdWhether this def is one of the special bin crate \xe2\x80\xa6BiQuery backing <code>Ty::is_freeze</code>.000000CiWhether this range covers the full extent of possible \xe2\x80\xa6CnDetermined whether a given normalized (size, align) should \xe2\x80\xa6AoCheck if node is an impl block.CmSynthetic type-parameters are inserted after normal ones. \xe2\x80\xa60CkWhether a target toolchain is like VEXos, the operating \xe2\x80\xa6CaTrue if this symbol represents a lint group name.BbChecks if the given local is used.DgIs this a loop annotated with <code>#[loop_match]</code> that looks \xe2\x80\xa6EoReturns <code>true</code> if the token is either the <code>mut</code> or <code>const</code> \xe2\x80\xa6EfCheck if the expression return <code>!</code>, a type coerced from <code>!</code>, \xe2\x80\xa6EeReturns whether <code>ty</code> is never-like; i.e., <code>!</code> (never) or an \xe2\x80\xa6BcWhether this is a place expression.ChWas this symbol index predefined in the compiler\xe2\x80\x99s \xe2\x80\xa6DjReturns true if the attributes contain any of <code>proc_macro</code>, \xe2\x80\xa6DiChecks whether the given <code>Expr</code> is a range equivalent to a \xe2\x80\xa6AfAn ABI \xe2\x80\x9clike Rust\xe2\x80\x9dGgCheck if <code>ty</code> is slice-like, i.e., <code>&amp;[T]</code>, <code>[T; N]</code>, or <code>Vec&lt;T&gt;</code>.ChChecks if the span actually refers to a match expression0CmIs this probe being done for a diagnostic? This will skip \xe2\x80\xa6CnReturns true if the given string may be part of a Markdown \xe2\x80\xa6BkReturns true if the crate is a testing one.C`Is this within an <code>impl Foo for bar</code>?00000000CnChecks if the given expression is a path referring an item \xe2\x80\xa6CcWhether the type must unify with another code path.DgReturns <code>true</code> if this literal has no suffix. Note: this \xe2\x80\xa6DdCheck if type is an <code>usize</code> or an integral type variable.DgTrue if <code>c</code> is considered a whitespace according to Rust \xe2\x80\xa6CkWhether the currently checked node is the whole body of \xe2\x80\xa6CgReturn whether the item has a body defined by the user.CkGenerates an Askama template struct for rendering items \xe2\x80\xa6DgSimilar to <code>instantiate_identity</code>, but on an iterator of \xe2\x80\xa600BmConnector for a node that itself has a child.DhThe JSON output includes a <code>rendered</code> field that includes \xe2\x80\xa6CnIf true, all nested temps are also kept in the source MIR, \xe2\x80\xa6EfIf the key is a <code>DefId</code> or <code>DefId</code>\xe2\x80\x93equivalent, return that \xe2\x80\xa60CkResolutions for labels (node IDs of their corresponding \xe2\x80\xa60CmThe destination pointing to the labeled block (not to the \xe2\x80\xa6CmThe leaf scalar with the largest number of invalid values \xe2\x80\xa6EhTrack the <code>Span</code> for the leading <code>&#39;</code> of the last lifetime. \xe2\x80\xa6ClWe make SC fences act like RMWs on a global location. To \xe2\x80\xa6CaCheck if these two layouts look like they are \xe2\x80\xa6CgThe signature within the function body. This mostly \xe2\x80\xa6BnThe current set of local scopes for lifetimes.BnCount the number of places a lifetime is used.BlThe number of lines which have been replaced0BgCreate a dynamic library or executable.EhDefault linker flavor used if <code>-C linker-flavor</code> or <code>-C linker</code>\xe2\x80\xa6ChControl the float ABI to use, for architectures that \xe2\x80\xa6CdThe local file sources we\xe2\x80\x99ve emitted and their \xe2\x80\xa6CnIndex indicating where each variable is assigned, used, or \xe2\x80\xa6CkThe logical edges representing the outlives constraints \xe2\x80\xa6ClPerforms method lookup. If lookup is successful, it will \xe2\x80\xa6AnLowers a function declaration.EeThis method allocates a new <code>HirId</code> for the given <code>NodeId</code>. \xe2\x80\xa6CkGenerate a hir expression representing an argument to a \xe2\x80\xa6CnPass this argument indirectly, by passing a (thin or wide) \xe2\x80\xa6AjSpecify path to Cargo.tomlEgReturns the <code>DefId</code> of the <code>manually_drop</code> lang item if it is \xe2\x80\xa6BoCrates marked with <code>#[doc(masked)]</code>.ChTurn reflinks (links with reference IDs) into normal \xe2\x80\xa6EeFor a given <code>Option&lt;T: Display&gt;</code>, returns a <code>Display</code> \xe2\x80\xa6CgTries to extract an inference variable from a type, \xe2\x80\xa6EhIf <code>Some</code>, enable the <code>measureme</code> profiler, writing results to \xe2\x80\xa60AfThe unexpected region.BgMerge a successor into this annotation.EgReturns the <code>DefId</code> of the <code>metadata_type</code> lang item if it is \xe2\x80\xa6CmMaps a macro argument token into use of the corresponding \xe2\x80\xa6CmReturns <code>mir::CastKind</code> from the given parameters.DhThis method copies <code>Place</code>\xe2\x80\x99s projection, add an element \xe2\x80\xa6EdThis is a \xe2\x80\x9cmonotonic <code>FxHashMap</code>\xe2\x80\x9d: A <code>FxHashMap</code> that, \xe2\x80\xa6CkConvert a non-generic crate item into an instance. This \xe2\x80\xa60CkThis creates a MovePath for a given place, returning an \xe2\x80\xa6ClTurn a mplace into a (thin or wide) mutable raw pointer, \xe2\x80\xa6CjReturns an iterator over all user-declared mutable locals.CjWhether there\xe2\x80\x99s anything to do for the cleanup path, \xe2\x80\xa6AjClosures and inline constsCkReturns a new cursor that borrows and inspects analysis \xe2\x80\xa6CkIntroduces a new temporary into the caller body that is \xe2\x80\xa6CjCreate a new constant that represents the given string \xe2\x80\xa60AlCreate a new coroutine type.DkAvoid this in favour of more specific <code>new_*</code> methods, where \xe2\x80\xa6CnCreate the initial fixup for printing an expression as the \xe2\x80\xa6CjCreates a new, parameterless DepNode. This method will \xe2\x80\xa60DkCreate a new thread id from a <code>u32</code> without checking if this \xe2\x80\xa6EdCreate a new <code>Interned</code> value. The value referred to <em>must</em> be \xe2\x80\xa6DjCreates a struct type <code>S</code> that can be used as an index with \xe2\x80\xa60CkReturns the \xe2\x80\x9cnext\xe2\x80\x9d universe index in order \xe2\x80\x93 this \xe2\x80\xa6000ChUnwraps and returns the value within, but only if it \xe2\x80\xa6CmReturns the inner value, but only if it contains no bound \xe2\x80\xa61010CjCoverage counters/expressions that are associated with \xe2\x80\xa6CiCalled when a node is examined by the depth-first search.CjNormalizes the source code and records the normalizations.AlResult of the normalization.000ChExtend a type error with extra labels pointing at \xe2\x80\x9c\xe2\x80\xa6DgInvoked when the node at depth <code>depth</code> completed without \xe2\x80\xa6CgThis provides access to the incremental compilation \xe2\x80\xa6ClIt sometimes happens that we want to turn an expectation \xe2\x80\xa6EcReturns whether <code>binder_ops</code> is a prefix of <code>occurrence_ops</code>.ChCombine all doc strings into a single value handling \xe2\x80\xa60CmLook up the name of a definition across crates. This does \xe2\x80\xa6CjEmit a lint at the appropriate level, with an optional \xe2\x80\xa60CgUsed to emit a lint-related diagnostic based on the \xe2\x80\xa6CkMIR after our optimization passes have run. This is MIR \xe2\x80\xa6000000BlOptimize the MIR and prepare it for codegen.EfCheck if <code>ty</code> is an <code>Option</code> and return its argument type if \xe2\x80\xa6EbReturns the <code>DefId</code> of the <code>Ordering</code> lang item if it is \xe2\x80\xa6BjThe text the link was original written as.BlUsed by <code>calculate_doc_coverage</code>.BiThe format that we output when rendering.CiNormally, whenever Rayon catches a panic, it tries to \xe2\x80\xa6DeDeprecated in favor of <code>ThreadPoolBuilder::panic_handler</code>.ClCustom closure, if any, to handle a panic that we cannot \xe2\x80\xa6BlThe <code>Span</code> of the parameter type.DiIndex offset into parameters. Depends on whether <code>Self</code> is \xe2\x80\xa6DgReturns <code>HirId</code> of the parent HIR node of node with this \xe2\x80\xa6DhThe normal module (<code>mod</code>) in which the expanded macro was \xe2\x80\xa6ClWhether the arguments were written in parenthesized form \xe2\x80\xa6ClPrints <code>(...)</code> around what <code>f</code> prints.0BdHelper macro for parsing custom MIR.DkParses an <code>if</code> expression (<code>if</code> token already eaten).DiParse the \xe2\x80\x9cbody\xe2\x80\x9d of a function. This can either be <code>;</code> \xe2\x80\xa6CkParses the parameter list and result type of a function \xe2\x80\xa6BoParses an <code>impl B0 + ... + Bn</code> type.DgThis method allows you to parse attributes <em>before</em> you have \xe2\x80\xa6AkParses <code>box pat</code>CjReturns a string literal if the next token is a string \xe2\x80\xa6CnParse a rustc version number written inside string literal \xe2\x80\xa60AiWhere to write crate-infoCkInitialize a single callee argument, checking the types \xe2\x80\xa6CgIf the expression is a path to a local, returns the \xe2\x80\xa6DfWe need to keep the <code>Class</code> for each element because it \xe2\x80\xa6ClPerforms the actual query with the canonicalized key \xe2\x80\x93 \xe2\x80\xa6BmThe minimum alignment of the pointee, if any.EgReturns the <code>DefId</code> of the <code>pointee_trait</code> lang item if it is \xe2\x80\xa6CiGet the pointer alignment in the default data address \xe2\x80\xa6C`The alignment of pointers for this address spaceCmTreat this value as a pointer and return the data pointer \xe2\x80\xa6BoNumber of bits in a pointer. Influences the \xe2\x80\xa6CdThe span of the position indicator. Includes any \xe2\x80\xa6DeLinker arguments that are passed <em>before</em> any user-defined \xe2\x80\xa6CgReturns a list of all type predicates (explicit and \xe2\x80\xa6DbReturns the (elaborated) <em>predicates</em> of the definition \xe2\x80\xa6000000CoReturns an iterator over the items which are <code>Some</code>.AjReturns all primary spans.0CbReport a link from a public item to a private one.CiAccess a field, at a point when the value\xe2\x80\x99s case is \xe2\x80\xa6CmOffset a pointer to project to a field of a struct/union. \xe2\x80\xa6CiCompute the offset and field layout for accessing the \xe2\x80\xa6EhConvenience wrapper around <code>projection_ty_core</code> for <code>PlaceElem</code>\xe2\x80\xa6CjThis is a callback from the driver that is called when \xe2\x80\xa6BmConvert a pointer with provenance into an \xe2\x80\xa6CmWhen a pointer is used for a memory access, this computes \xe2\x80\xa611Eh<code>pure_wrt_drop</code>, set by the (unsafe) <code>#[may_dangle]</code> attribute \xe2\x80\xa60CiStart profiling a query being blocked on a concurrent \xe2\x80\xa6Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6000000BcSee module-level doc comment above.DhStarts out equal to <code>depth</code> \xe2\x80\x93 if, during evaluation, we \xe2\x80\xa6CkParse a <code>timespec</code> struct and return it as a \xe2\x80\xa6CgRead a sequence of u16 until the first null terminator.EdIf <code>break_on_semi</code> is <code>Break</code>, then we will stop consuming \xe2\x80\xa6CnTake a value, which represents a (thin or wide) reference, \xe2\x80\xa6Bjthe <code>DefId</code> of the free region.0BnError reporting machinery for lifetime errors.CjCalls the callback with the \xe2\x80\x9crelease\xe2\x80\x9d clock of the \xe2\x80\xa6CkCalls the given closure with the \xe2\x80\x9crelease\xe2\x80\x9d clock of \xe2\x80\xa6CkWhen removing an explicit lifetime from a reference, we \xe2\x80\xa6CiEmits a region\xe2\x80\x99s label: index, universe, external name.DkAllocates a new local and replaces all references of <code>local</code> \xe2\x80\xa6CdRequest that the helper thread acquires a token, \xe2\x80\xa6B`Entry point to crate resolution.ChSearches the current set of local scopes for labels. \xe2\x80\xa6CaHandles paths that may refer to associated items.EhAttempts to resolve the <code>PlaceBuilder</code>. Returns <code>None</code> if this \xe2\x80\xa6BjUsed to render a <code>clean::Path</code>.ClReturns a mutable reference to the local that holds this \xe2\x80\xa6CkAdditional information about the action to be performed \xe2\x80\xa60CjReverse of the SCC constraint graph \xe2\x80\x93  i.e., an edge \xe2\x80\xa60EfLike <code>graph</code>, but constraints a reverse graph where <code>R1: R2</code> \xe2\x80\xa6BbRewrite the attributes of an item.CmTable storing the \xe2\x80\x9croot\xe2\x80\x9d tag for each allocation. The \xe2\x80\xa6mFeature gatesCjThe function has the <code>#[rustc_main]</code> attribute.CmThis crate is responsible for the part of name resolution \xe2\x80\xa6CkA version string that hopefully is always different for \xe2\x80\xa6CgTracks the rvalue scoping rules which defines finer \xe2\x80\xa60Cj\xe2\x80\x9csatisfy\xe2\x80\x9d an input with a given arg, removing both \xe2\x80\xa6ClMark the given tag as exposed. It was found on a pointer \xe2\x80\xa6DdIndicates that <code>place</code> should be dropped on exit from \xe2\x80\xa6CkReturns a RAII guard that will immediately emit a start \xe2\x80\xa6DiThis is true if we identified that this Ty (<code>?T</code>) is found \xe2\x80\xa6CmEncodes a node that was promoted from the previous graph. \xe2\x80\xa6CmThe number of previous compilation sessions. This is used \xe2\x80\xa60BhSet the current hyperlink of the writer.BjSet whether the text is underlined or not.BjIf true, hides the longer explanation textClWhether or not this will render as something meaningful, \xe2\x80\xa60BcUsed by <code>strip_private</code>.DfWhether to run the <code>calculate-doc-coverage</code> pass, which \xe2\x80\xa6CkShrinks the capacity of the map as much as possible. It \xe2\x80\xa6CkShrinks the capacity of the set as much as possible. It \xe2\x80\xa610101010ClTries to simplify a type by only returning the outermost \xe2\x80\xa6000DhAttempt to simplify this cfg by assuming that <code>assume</code> is \xe2\x80\xa6CiAsserts that there is a single column and returns the \xe2\x80\xa6BhIs the format <code>use a::{b,c}</code>?Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6DcShould only be called if <code>compute_size_estimate</code> has \xe2\x80\xa6DdA cached copy of the result of <code>MonoItem::size_estimate</code>.222222ChParse and throw away a parenthesized comma separated \xe2\x80\xa6CnList of 1-based line ranges which were annotated with skip \xe2\x80\xa6CgConverts a span (from a block) to a code snippet if \xe2\x80\xa6AjReturns the source callee.CkA list of source scopes; these are referenced by statementsCnThe vector of all scopes that we have created thus far; we \xe2\x80\xa6DoProvides the source string for the given <code>line</code> of <code>file</code>CiShould two consecutive tokens be printed with a space \xe2\x80\xa6CkChecks whether the span is from the root expansion or a \xe2\x80\xa6DjLike <code>span_lint</code>, but emits the lint at the node identified \xe2\x80\xa6CmGiven a supernode, finds the supernode that is the \xe2\x80\x9croot\xe2\x80\xa6CiSpawns an asynchronous FIFO job in <code>registry.</code>BlSets a custom function for spawning threads.BaClosure invoked to spawn threads.CmThe cause that will be returned on subsequent evaluations \xe2\x80\xa60CnRuns the codegen backend, after which the AST and analysis \xe2\x80\xa6BnSets a callback to be invoked on thread start.DeDeprecated in favor of <code>ThreadPoolBuilder::start_handler</code>.BgClosure invoked on worker thread start.AkStart the provided section.DgReturns the <code>DefId</code> of the static item that is currently \xe2\x80\xa60ClGet the type of the pointer to the static that we use in \xe2\x80\xa6ClSteal a previously stashed non-error diagnostic with the \xe2\x80\xa6CeStore buffer of each atomic object in this allocation0CnUpdate the memory cell data-race tracking for atomic store \xe2\x80\xa60BiGet whether this is strikethrough or not.CiStrip all private items from the output. Additionally \xe2\x80\xa6ClStrip private items from the point of view of a crate or \xe2\x80\xa6Cn<code>rustc</code> allows files to have a shebang, e.g. \xe2\x80\x9c\xe2\x80\xa6Ck\xe2\x80\xa6and if this is non-empty, one of these subcandidates \xe2\x80\xa6CcAdd a subdiagnostic from a type that implements \xe2\x80\xa6CnEach substitute can have multiple variants due to multiple \xe2\x80\xa6CfThe block that is branched to if the corresponding \xe2\x80\xa6ClReturns a suggested register class to use for this type. \xe2\x80\xa6CaWhether the target supports XRay instrumentation.CkSynthesizes a comment that was not textually present in \xe2\x80\xa6CnExtract the type with which we want to describe the tag of \xe2\x80\xa6CkUsed to generate cfg variables and apply features. Must \xe2\x80\xa6CiCollect target-specific options that should be set in \xe2\x80\xa60ClMark the given tag as exposed. It was found on a pointer \xe2\x80\xa6CkThe lifetime of this expression if it should be spilled \xe2\x80\xa6DjLifetime for temporaries as expected. This should be <code>None</code> \xe2\x80\xa6C`Hook on a thread join to update the implicit \xe2\x80\xa6CeReturns a <code>CamelCase</code> version of the inputCkRenders text as string suitable for a label in a .dot file.CbReturns JSON representation as accepted by the \xe2\x80\xa6CmGiven a universal region in scope on the MIR, returns the \xe2\x80\xa6BjSee UniversalRegionIndices::to_region_vid.EfConverts <code>r</code> into a local inference variable: <code>r</code> can either \xe2\x80\xa6DiReturn the immediate as a <code>ScalarInt</code>. Ensures that it has \xe2\x80\xa6CfReturns a <code>snake_case</code> version of the inputClPerforms a token equality check, ignoring syntax context \xe2\x80\xa6BbThe spacing for the current token.D`Returns <code>true</code> if this is an <code>auto trait</code>.CnIf there is more than one whitespace char at start or end, \xe2\x80\xa6DjA cheap, approximate check to avoid unnecessary <code>layout_of</code> \xe2\x80\xa6DkTries to move the iterator forward returning <code>true</code> if there \xe2\x80\xa6CkGive query the option for a simple fast path that never \xe2\x80\xa6AfDoes the equivalent ofDfThe entry point for folding. To fold a value <code>t</code> with a \xe2\x80\xa60000CkBuild a new constant that represents the given unsigned \xe2\x80\xa6DiRetrieve the discriminant stored for a place, or <code>None</code> if \xe2\x80\xa6AhCreate a new array type.BjMapping of non-scalar types to llvm types.CmCreates a new suffixed integer literal with the specified \xe2\x80\xa6CeCreates a new unsuffixed integer literal with the \xe2\x80\xa6DiAllows you to map the <code>value</code> of a canonical while keeping \xe2\x80\xa6000CmA stack of types left to process, and the recursion depth \xe2\x80\xa6ChA list of all tags that have been opened but not yet \xe2\x80\xa6CgCharacters and their corresponding confusables were \xe2\x80\xa6CkUnions together two variables, merging their values. If \xe2\x80\xa6CmA convenience function for matching on identifiers during \xe2\x80\xa6CkInformation so that error reporting knows what types we \xe2\x80\xa6CkUnstable (<code>-Z</code>) options to pass to the compiler.CmA list of labels as of yet unused. Labels will be removed \xe2\x80\xa6CoPanics if the <code>GlobalAlloc</code> does not refer to an \xe2\x80\xa6DnPanics if the <code>GlobalAlloc</code> is not <code>GlobalAlloc::VTable</code>CjCollect all the keywords in a given edition into a vector.CnThis function checks if the expression is from a series of \xe2\x80\xa6CbMeta-syntax validation logic of attributes for \xe2\x80\xa6BlMakes sure that a diagnostic is well formed.DiReturns <code>true</code> if a link could be generated from the given \xe2\x80\xa6CkReturns the values of this map in stable sort order (as \xe2\x80\xa6AoVariance diagnostic information0ClReturns a description of a variant of this abstract data \xe2\x80\xa6CfGiven a full link, parse it as an enum struct variant.CdDowncast to a particular variant of an enum or a \xe2\x80\xa60AgThe variant of the ADT.AmVariant containing the field.BlThe valid variant indices of this coroutine.00CmIf the type contains variants, returns the valid range of \xe2\x80\xa611BfIterate over the variants in this ADT.CnMapping of a vector index to a known set of thread clocks, \xe2\x80\xa6DhReturns the number of elements in <code>self</code> if it is an LLVM \xe2\x80\xa60CnJust pass the arguments to the linker as is. It is assumed \xe2\x80\xa6CmDetermines if a binding is relevant to the diagnostic and \xe2\x80\xa6DkCalls the corresponding method in <code>ResultsVisitor</code> for every \xe2\x80\xa60CnCalled when recursing into an enum variant. This gives the \xe2\x80\xa60CkVisits all the non-resumable and resumable waiters of a \xe2\x80\xa6ChSpan marked with the correct expansion and transparency.CkCache the resolved links so we can avoid resolving (and \xe2\x80\xa6DkWait until the latch is set. Executes local jobs if <code>is_job</code> \xe2\x80\xa6CkAwaits the caller on this latch by blocking the current \xe2\x80\xa6CjHandle the case where the current body contains a closure.DiThe <code>wasm32-wasip1</code> enables compiling to WebAssembly using \xe2\x80\xa6DfThe <code>wasm32-wasip2</code> target is the next evolution of the \xe2\x80\xa6CnA \xe2\x80\x9cbare wasm\xe2\x80\x9d target representing a WebAssembly output \xe2\x80\xa6CfThe webassembly type signature for the given function.CnWhether to link static library without throwing any object \xe2\x80\xa6DeCreates an empty <code>SsoHashMap</code> with the specified capacity.DeCreates an empty <code>SsoHashSet</code> with the specified capacity.BePre-allocates capacity for arguments.021212121CiThis span, but in a larger context, may switch to the \xe2\x80\xa6CnWhile we could manually expose manipulation of the decoder \xe2\x80\xa6FdReplaces <code>lo</code> and <code>hi</code> with those from <code>span</code>, but keep hygiene \xe2\x80\xa6BfReturns the domain size of the bitset.AjWrite a pointer to a placeDjWrite data to a host <code>Write</code> type, withthe bytes taken from \xe2\x80\xa6DfGenerates a value of <code>TypeId</code> for <code>ty</code> in-place.CnIf the register is an xmm/ymm/zmm register then return its \xe2\x80\xa6DkWhether this <code>Qualif</code> might be evaluated after the promotion \xe2\x80\xa6BnWe added a GLB/LUB \xe2\x80\x9ccombination variable\xe2\x80\x9d.BgPut the opening brace on the next line.lAllman styleBeK&amp;R style, Rust community defaultChThe accessed pointer is a (transitive) parent of the \xe2\x80\xa6F`The <code>&lt;&#39;a, A, B, C&gt;</code> in <code>foo::bar::baz::&lt;&#39;a, A, B, C&gt;</code>.Bk<code>&lt;args, constraints = ..&gt;</code>Ca<code>&lt;&#39;a, 32, B: Copy, C = u32&gt;</code>CkGo from <code>*const [T; N]</code> to <code>*const T</code>00CiSomething that can be converted into an expression to \xe2\x80\xa6F`Special action for <code>Yield</code>, <code>Call</code> and <code>InlineAsm</code> terminators.0CdThe \xe2\x80\x9cqualified self\xe2\x80\x9d of an associated item path.CkA newtype around an AST node that implements the traits \xe2\x80\xa6D`Lint for use of <code>async fn</code> in the definition of a \xe2\x80\xa6CiValid atomic fence orderings, subset of atomic::Ordering.0AbLLVMAtomicOrderingCbAn enum to represent the compiler-side view of \xe2\x80\xa60AbLLVMAtomicRmwBinOpCiValid atomic write orderings, subset of atomic::Ordering.0DkThe <code>bad_opt_access</code> lint detects accessing options by field \xe2\x80\xa6CfNumber of bytes to print per allocation hex dump line.CmDetails of an access to uninitialized bytes / bad pointer \xe2\x80\xa60CkData for a basic block, including a list of its statements.CdWe are just about to dump the given statement or \xe2\x80\xa6CkWhat kind of llvm bitcode section to embed in an object \xe2\x80\xa6ClThe transient state of the dataflow analyses used by the \xe2\x80\xa6AoThe asyncness of a trait bound.AoThe constness of a trait bound.0DoA type bound (e.g., <code>for&lt;&#39;c&gt; Foo: Send + Clone + &#39;c</code>).0CaA type is expected to comply with a set of boundsCgThe result of generating MIR for a pattern-matching \xe2\x80\xa6DhDerived obligation (i.e. theoretical <code>where</code> clause) on a \xe2\x80\xa600BeGeneral language calling conventions.BlThe <code>call_once_future</code> lang item.DhMemory allocated by <code>caller_location</code> intrinsic. Error if \xe2\x80\xa6000CaInvisible closing delimiter, produced by a macro.CjData must be immutable but not aliasable. This kind of \xe2\x80\xa60ChSome normal-ish compiler error occurred, and codegen \xe2\x80\xa6CjAdditional resources used by optimize_and_codegen (not \xe2\x80\xa6DhRepresents how a <code>CastKind::PointerCoercion</code> was constructed.0DjSee module-level docs of <code>rustc_monomorphize::collector</code> on \xe2\x80\xa6ClIterator over the \xe2\x80\x98payload\xe2\x80\x99 characters of a comment. \xe2\x80\xa6BfInformation needed to emit a constant.CkRepresents the <code>#[rustc_const_unstable]</code> and \xe2\x80\xa6CeRepresents <code>#[rustc_const_stable]</code> and \xe2\x80\xa601AoThe source of a constant value.CiRepresents a constraint that influences the inference \xe2\x80\xa60CiDescribes the set of all constructors for a type. For \xe2\x80\xa6CjReturns whether we should perform contract-checking at \xe2\x80\xa60Bjcfg!(contract_checks), but at codegen time0BkThe <code>coroutine_state</code> lang item.DkWhen <code>check_fn</code> is invoked on a coroutine (i.e., a body that \xe2\x80\xa6BkThe <code>coroutine_yield</code> lang item.ClCoverage information for a function, recorded during MIR \xe2\x80\xa6CkThe type of provenance in the compile-time interpreter. \xe2\x80\xa60BbThe list of passes run by default.BlAddition, but only overflow checked when \xe2\x80\xa6B`See <code>DebugStrictAdd</code>.CjDecorations are represented as a map from CSS class to \xe2\x80\xa6CgA visitor that determines which arguments have been \xe2\x80\xa6ChGiven generic arguments, could they be unified after \xe2\x80\xa6000C`A list of dependencies for a certain crate type.AoUsed deprecated skip attribute.B`The kind of compiler desugaring.AfLLVMRustDiagnosticKindBcSomething was divided by 0 (x / 0).0CmThis struct contains information about the doctest itself \xe2\x80\xa6Bl<code>Dst</code> is larger <code>Src</code>.BdThe destination type is uninhabited.DaReverse Mode, Compute derivatives for this &amp;T or *T input \xe2\x80\xa6CjThis makes locks panic if they are already held. It is \xe2\x80\xa6CmEarly lints work on different nodes - either on the crate \xe2\x80\xa60CiDuring MIR building, Drop terminators are inserted in \xe2\x80\xa6CgSignal we cannot find which should be the anonymous \xe2\x80\xa6CmThe embargo visitor, used to determine the exports of the \xe2\x80\xa6AoData given to the error handlerCfDuplicates after the first attribute will be an error.0CkDuplicates preceding the last instance of the attribute \xe2\x80\xa60CmThe operation will emit errors and lints. This is usually \xe2\x80\xa60CnWrapper struct which will emit the HTML-escaped version of \xe2\x80\xa6CmUnescaped character that was expected to be escaped (e.g. \xe2\x80\xa6AbEvaluation failed.00000BkThe <code>exchange_malloc</code> lang item.BjThe test binary was unable to be executed.EfUsed by various <code>Parser</code> methods such as <code>check_keyword</code> and \xe2\x80\xa6DlAn <code>unsafe</code> block. The <code>HirId</code> is the ID of the block.ChChecking that this expression can be assigned to its \xe2\x80\xa600CiA visitor that reports how each expression is being used.DiIf the <code>-Z force-unstable-if-unmarked</code> flag is passed then \xe2\x80\xa6CdThe version of JSON output that this code generates.CfThe version of JSON output that this crate represents.CkA filter around an iterator of predicates that makes it \xe2\x80\xa600000DhCrude way of getting back an <code>Expr</code> from a <code>Span</code>.BlIntegral type used to represent the bit set.DkTrait for contexts that want to be able to compute <code>FnAbi</code>s. \xe2\x80\xa6BnA function call where the callee is a pointer.DeA function call where the callee is not marked as <code>const</code>.C`A desugared <code>for _ in _ { .. }</code> loop.BkThe <code>format_argument</code> lang item.ClAllows for different backends to rustdoc to be used with \xe2\x80\xa6CeThis struct contains information regarding a free \xe2\x80\xa60DdWhether we are in some kind of desugaring like <code>?</code> or \xe2\x80\xa6CiTrait for processing the result of the stable hashing \xe2\x80\xa6BnA set of fundamental properties of a function.DkThe different settings that the <code>-Zfunction-return</code> flag can \xe2\x80\xa6CmResult from a generalization operation. This includes not \xe2\x80\xa6AlParsed command line options.AbA glob delegation.CmThere will be exactly one instance of the given MonoItem. \xe2\x80\xa6ClWhen evaluating a goal we also store the original values \xe2\x80\xa6000B`The result of evaluating a goal.110111CdA resizable bitset type with a dense representation.CjDoes this have any bound variables? Used to check if a \xe2\x80\xa6000DkDoes nothing as a lint pass, but registers some <code>Lint</code>s that \xe2\x80\xa60DoConstant containing interior mutability (<code>UnsafeCell&lt;T&gt;</code>). \xe2\x80\xa6CgAlways hide the suggested code but display the message.CkHide the suggested code when displaying this suggestion \xe2\x80\xa6DhThe <code>if_let_rescope</code> lint detects cases where a temporary \xe2\x80\xa6CkBits to shift to select the inactive threads (used with \xe2\x80\xa6DgIndicates whether the type has a <code>#[fundamental]</code> attribute.CfIndicates whether the type is <code>UnsafeCell</code>.AkA list of impl trait decls.Do<code>DefId</code> or parameter index (<code>ty::ParamTy.index</code>) of a \xe2\x80\xa6BiWe\xe2\x80\x99re proving a where-bound of an impl.00000000DkThis stripper discards all private import statements (<code>use</code>, \xe2\x80\xa6ClInformation for emitting suggestions and recovering from \xe2\x80\xa6DhThis type contains all the things within <code>InferCtxt</code> that \xe2\x80\xa60C`The current status of a one time initialization.CfThe macro that an inline assembly block was created by0CcInline asm operand type must be <code>Sized</code>.00CbSettings for <code>-Z instrument-xray</code> flag.DiAn analogue of the <code>Into</code> trait that\xe2\x80\x99s intended only for \xe2\x80\xa60CdThe program was invalid (ill-typed, bad MIR, not \xe2\x80\xa60GmNon <code>#</code> characters exist between <code>r</code> and <code>&quot;</code>, e.g. <code>r##~&quot;abcde&quot;##</code>CjThis is the initial value used when doing upvar inference.000EdThe <code>TyAndLayout</code>-wrapping type (or <code>TyAndLayout</code> itself), \xe2\x80\xa6CnGeneric infrastructure used to implement specific visitors \xe2\x80\xa6BkThe <code>legacy_receiver</code> lang item.CmConvenience helper for moving things around together that \xe2\x80\xa6DmWhen an invalid lifetime e.g. <code>&#39;2</code> should be reinterpreted \xe2\x80\xa6CmEverything is flattened to a single enum to make the json \xe2\x80\xa6DkThe <code>-C linker-features</code> components that can individually be \xe2\x80\xa6CgTrait implemented by lint types. This should not be \xe2\x80\xa60CmRecords the CFG locations where each region is live. When \xe2\x80\xa6Cn<code>$sysroot/share/locale/$locale</code> is not a directory.CfThe different settings that can be enabled via the \xe2\x80\xa6CgThe maximum supported number of lanes in a SIMD vector.BdParses macro arguments on macro def.BoHack in <code>src/librustc_ast/parse.rs</code>.DkThe keyword <code>macro</code> followed by a name and a token delimited \xe2\x80\xa6CdThe tokens <code>macro_rules!</code> were processed.AiA set of macro selectors.C`<code>#[macro_use]</code> attributes can either:CkThe suggestion may be what the user intended, but it is \xe2\x80\xa60ChExtend a lattice with a bottom value to represent an \xe2\x80\xa600CnCollect items that are mentioned. The goal of this mode is \xe2\x80\xa6CgUtility that deconstructs a MetaItem into usable parts.CjWindows supports handles without any read/write/delete \xe2\x80\xa6CmThe backend\xe2\x80\x99s way to give the crate store access to the \xe2\x80\xa6oMethod receiver00EbPart of <code>MinCaptureInformationMap</code>; List of <code>CapturePlace</code>s.0CmAllocation bytes that explicitly handle the layout of the \xe2\x80\xa60AbExtra memory kinds0CjA monotone clock used for <code>Instant</code> simulation.0CaTables mapping from a place to its MovePathIndex.CkAnnotation marking the first character of a fully shown \xe2\x80\xa6EdThe <code>non_fmt_panics</code> lint detects <code>panic!(..)</code> invocations \xe2\x80\xa6DdThe <code>non_snake_case</code> lint detects variables, methods, \xe2\x80\xa6CkRecords information about the resolution of a name in a \xe2\x80\xa6ClThe type has no constructors (not even empty ones). This \xe2\x80\xa60ClThis is the state the session will be in until the incr. \xe2\x80\xa6BmA let chain with the <code>||</code> operatorEaSays whether the <code>offset</code> field of <code>Pointer</code>s with this \xe2\x80\xa60CmUsed if you want to have pleasant experience when dealing \xe2\x80\xa60CjUsed for remapped captured lifetimes in an existential \xe2\x80\xa6BaFrom whence the opaque type came.AjRustfmt operations errors.Dc<code>let</code> is not valid and the source environment is not \xe2\x80\xa6DeThe <code>private_bounds</code> lint detects types in a secondary \xe2\x80\xa60CcThe <code>panic_const_gen_fn_none</code> lang item.BlThe <code>panic_in_cleanup</code> lang item.DhBreak bewtween two paragraphs (double <code>\\n</code>), not directly \xe2\x80\xa6CgRepresent how path separator conversion should be done.ClA <code>NameBinding</code> in the process of being resolved.DcWill be a <code>Self::Operand</code> once we get to its definition.BkTransition from one permission to the next.BcThe activation states of a pointer.CgWhether to permit a path to resolve to an enum variant.DfA <code>PlaceWithHirId</code> represents how a value is located in \xe2\x80\xa60CdPut the opening brace on the same line, if possible.DhThis trait is used to print attributes in <code>rustc_hir_pretty</code>.0EeDerives <code>PrintAttribute</code> for <code>AttributeKind</code>. This macro is \xe2\x80\xa6BjPrint the module, before running autodiff.DbThe iterator returned by <code>UnDerefer::iter_projections</code>.DjAlias for projections as they appear in <code>UserTypeProjection</code>\xe2\x80\xa60ChA partial, owned list of provenance to transfer into \xe2\x80\xa6DaRepresents <code>#[rustc_pub_transparent]</code> (used by the \xe2\x80\xa60Acx? calls x.branch()BdCannot read directory entries of \xe2\x80\xa6CbA FileLoader that uses std::fs to load real files.BkThe <code>receiver_target</code> lang item.C`A trait goal was satisfied by an impl candidate.00000000Ba<code>where &#39;a: &#39;r</code>00000BlGo from a fn-item type to a fn-pointer type.00EkRemove <code>r#</code> from identifier: <code>format!(&quot;{r#foo}&quot;)</code> -&gt; \xe2\x80\xa6ClThe representative region variable for an SCC, tagged by \xe2\x80\xa6Cm<code>##</code> or <code>#&quot;</code> in edition &lt; 2024.DlThis provides memory for the rest of the crate. The <code>&#39;ra</code> \xe2\x80\xa6DiA visitor over the results of an <code>Analysis</code>. Use this when \xe2\x80\xa60CiCollect all the returned expressions within the input \xe2\x80\xa6Df<code>#[clippy::msrv]</code> attributes are rarely used outside of \xe2\x80\xa6CkBits to shift to select the sleeping threads (used with \xe2\x80\xa6CnFor pointer-sized arguments arrays are faster than set/map \xe2\x80\xa6BjA Visitor for SCC annotation construction.CnA doctest scraped from the code, ready to be turned into a \xe2\x80\xa6DeThe obvious implementation of <code>SearchPath::files</code> is a \xe2\x80\xa6CjPer-session global variables: this struct is stored in \xe2\x80\xa6EeTransmutes a <code>*mut u8</code> into shallow-initialized <code>Box&lt;T&gt;</code>.000AoGrants shared read-only access.0CiThe target has a similar name as the name used by the \xe2\x80\xa6AoSee <code>simplify_type</code>.00DgA built-in implementation for the <code>Sized</code> trait. This is \xe2\x80\xa600FdWhich sizedness trait - <code>Sized</code>, <code>MetaSized</code>? <code>PointeeSized</code> is \xe2\x80\xa6000000000BfYield type must be <code>Sized</code>.00CmSnapshotParser is used to create a snapshot of the parser \xe2\x80\xa6DgEnforce that <code>a</code> is equal to or a subtype of <code>b</code>.0000CkAppend-only templates for sorted, deduplicated lists of \xe2\x80\xa6CkThe hash of the on-disk source file used for debug info \xe2\x80\xa6DjSplit debug-information is enabled by <code>-C split-debuginfo</code>, \xe2\x80\xa6AoThe available stability levels.0AoControls use of stack canaries.BfStacked Borrows, as implemented in \xe2\x80\xa60BeData corresponding to Stacked BorrowsCfStatically linked non position-independent executable.CeConditionally remove some of the VarDebugInfo in MIR.c\xe2\x80\xa600CnAbstraction over a message in a subdiagnostic (i.e. label, \xe2\x80\xa60DhSupertrait reference references <code>Self</code> an in illegal location0000DjThe <code>trivial_bounds</code> lint detects trait bounds that don\xe2\x80\x99t \xe2\x80\xa6CnMetadata about a target like the description or tier. Part \xe2\x80\xa6CmA recorded -Zopt_name=opt_value (or -Copt_name=opt_value) \xe2\x80\xa60CoWarnings encountered when parsing the target <code>json</code>.CjThe various kinds of terminators, representing ways of \xe2\x80\xa60ClMaps LLVM module identifiers to their corresponding LLVM \xe2\x80\xa6CnThe current set of vector clocks describing the state of a \xe2\x80\xa6CfCreates a pointer/reference to the given thread local.0CcAn expression taking a reference to a thread local.11CjAn error signaling that the requested thread doesn\xe2\x80\x99t \xe2\x80\xa6BeThere is no thread with the given ID.CgWhat to do with TLS allocations from terminated threadsCeA candidate for proving a trait or alias-relate goal.00000000BcThe mode that trait queries run in.DiA built-in implementation of <code>Upcast</code> for trait objects to \xe2\x80\xa600000000000BkThe <code>transmute_trait</code> lang item.BbThe <code>branch</code> lang item.CgThis borrow arose from method-call auto-ref. (i.e., \xe2\x80\xa60CjTrait that needs to be implemented by the higher-level \xe2\x80\xa60CjData shared between a \xe2\x80\x9ctypeck root\xe2\x80\x9d and its nested \xe2\x80\xa6DgThe <code>unused_imports</code> lint detects imports that are never \xe2\x80\xa60DkThe <code>unused_results</code> lint checks for the unused result of an \xe2\x80\xa6DgLint for items marked <code>pub</code> that aren\xe2\x80\x99t reachable from \xe2\x80\xa6DkThe link failed to resolve. <code>resolution_failure</code> should look \xe2\x80\xa6CnUsed in the probe that wraps normalizing the non-self type \xe2\x80\xa600000000CiHolds a dummy function instance along with its symbol \xe2\x80\xa6CjContext that provides information for usefulness checking.CfMarks its enclosing basic block with the ID of the \xe2\x80\xa6BbThe second half of a wide pointer.CbNumber of packed RWUs that fit into a single word.CjWASI module with a lifetime past the _initialize entry \xe2\x80\xa6BeA single predicate in a where-clause.0AnOne <code>where</code> clause.C`The target spec explicitly enables a list of \xe2\x80\xa6BaA result produced by the backend.BlThis resolved, but with the wrong namespace.Ckxorshift* is a fast pseudorandom number generator which \xe2\x80\xa6CmIf the register is an AArch64 vector register then return \xe2\x80\xa6CfA subset of a mir body used for const evaluability \xe2\x80\xa6ClLocations which activate borrows. NOTE: a given location \xe2\x80\xa60CnThe number of threads in the thread pool which are running \xe2\x80\xa6DeRecords <code>region</code> as being live at all the control-flow \xe2\x80\xa6DbAdds all the control-flow points to the values for <code>r</code>.CmAdd the given pointer-length pair to the \xe2\x80\x9cdata\xe2\x80\x9d range \xe2\x80\xa6CnAdd options making relocation sections in the produced ELF \xe2\x80\xa6CgAdd library search paths used at runtime by dynamic \xe2\x80\xa6CmIf there is a suggestion to emit, add a diagnostic to the \xe2\x80\xa6Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6000000CnCalled after analysis. Return value instructs the compiler \xe2\x80\xa60BgReturns an array of all the components.CkContains the successors for all the Sccs, concatenated. TheBhGet all tool attributes of a definition.BnReturn all tool attributes of this definition.1EmReturns <code>None</code> if the first <code>col</code> chars of <code>s</code> contain a \xe2\x80\xa6CmTakes a provided value, and allocates it in the arena (if \xe2\x80\xa6ClWrites the node to the current dep-graph and allocates a \xe2\x80\xa6ChThis crate needs an allocator and either provides it \xe2\x80\xa69999999AiReport an anchor failure.BdPre-interned values of the form: \xe2\x80\xa60CnComes up with an \xe2\x80\x9cat least\xe2\x80\x9d guesstimate for the type\xe2\x80\x99\xe2\x80\xa6CkFormat that archives should be emitted in. This affects \xe2\x80\xa6EeReplaces any <code>@file</code> arguments with the contents of <code>file</code>, \xe2\x80\xa60DeProduces, for each argument, a <code>Value</code> pointing at the \xe2\x80\xa6CkReturns a mutable slice of locals corresponding to this \xe2\x80\xa6CnWhen present, indicates what argument number this variable \xe2\x80\xa600CiFor each arm of the input, whether that arm is useful \xe2\x80\xa60EhReturns <code>Some(expander)</code> for a macro usable as a <code>LegacyBang</code>; \xe2\x80\xa6DkCombine this typing environment with the given <code>value</code> to be \xe2\x80\xa6CnGets the \xe2\x80\x9cauto\xe2\x80\x9d assertion on pre-validated attr, along \xe2\x80\xa6C`The caller must have flooded <code>place</code>.BdPlace to which the borrow was stored0EcEmits an <code>assume</code> that the <code>val</code> of pointer type is non-null.0BgValidate AST before lowering it to HIR.EbReturns the <code>DefId</code> of the <code>async_fn</code> lang item if it is \xe2\x80\xa6CjThis crate handles the user facing autodiff macro. For \xe2\x80\xa6CjWe now check the #[rustc_autodiff] attributes which we \xe2\x80\xa6AgThe unescaped backtick.DnContent that will be included inline between <code>&lt;body&gt;</code> and \xe2\x80\xa6EeReturns the <code>DefId</code> of the <code>begin_panic</code> lang item if it is \xe2\x80\xa6DgHolds a byte position of <code>|</code> at the beginning of the arm \xe2\x80\xa6BnCreate a new binder with the given bound vars.CiNumber of region binders we have passed through while \xe2\x80\xa6BfChecks if the block is part of a cycleBbExtra data for the Borrow Tracker.B`Global data for borrow tracking.CiDetermines if Stacked Borrows or Tree Borrows is enabled.BoGlobal state of the borrow tracker, if enabled.1320BaPlace from which we are borrowing0EdSets up the drops for breaking from <code>block</code> due to an <code>if</code> \xe2\x80\xa6CmWe need an identifier or integer, but the next token is a \xe2\x80\xa6ClBuffer of diagnostics to be reported. A mixture of error \xe2\x80\xa6CdCGU names should fulfill the following requirements:DkTakes the conditional expression of <code>assert!</code> and then wraps \xe2\x80\xa6AgByte character literal.CmReturns the unescaped string value if the current literal \xe2\x80\xa6CiAlways 1, 2, or 4. Always as small as possible, while \xe2\x80\xa6BiCalculate the destructor of a given type.C`Constructs an expression that calls an intrinsicCiDirectly process an intrinsic without pushing a stack \xe2\x80\xa60CeSet of function-call locations to include as examplesCkCall the native host function, with supplied arguments. \xe2\x80\xa6DhReturns <code>true</code> if the token can appear at the start of an \xe2\x80\xa60DgReturns <code>true</code> if the token can appear at the start of a \xe2\x80\xa6DhIdentify some cases where <code>as_ref()</code> would be appropriate \xe2\x80\xa6CnEqual parameters will have the same name. Computed Lazily. \xe2\x80\xa6DkCast one of the immediates from an <code>OperandValue::Immediate</code> \xe2\x80\xa6DhImplementation of the <code>#[cfg_accessible(path)]</code> attribute \xe2\x80\xa6CoPath resolution logic for <code>#[cfg_accessible(path)]</code>.CjPossibly translate the current token to an associative \xe2\x80\xa6DiChecks if <code>#[autodiff]</code> is applied to an item other than a \xe2\x80\xa6CkCan a function with this ABI be called with a rust call \xe2\x80\xa6ClChecks that <code>#[coverage(..)]</code> is applied to a \xe2\x80\xa6AnChecks use <code>x.use</code>.CfKill locals that are fully moved and have not been \xe2\x80\xa6Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6000000CfWarns against some misuses of <code>#[must_use]</code>ClChecks that <code>#[optimize(..)]</code> is applied to a \xe2\x80\xa6CmUtility for adding a check for read/write on every sized, \xe2\x80\xa6DbCheck whether <code>r_a &lt;= r_b</code> is found in the relation.BdHelper function to compare two ABIs.DhCheck that the given <code>caller_fn_abi</code> matches the expected \xe2\x80\xa6BlUnsafety-check this <code>LocalDefId</code>.000000DeNon-fatally assert that <code>tts</code> is empty. Note that this \xe2\x80\xa6DhCreate an <code>ExprKind::Ret</code> that is optionally wrapped by a \xe2\x80\xa6CgReturns the \xe2\x80\x9cchoice regions\xe2\x80\x9d for a given member \xe2\x80\xa6DoStores the <code>R1..Rn</code> regions for <em>all</em> sets. For any given \xe2\x80\xa6CnClears variant subtags of the <code>LanguageIdentifier</code>.0ClReturns the set of registers which are clobbered by this \xe2\x80\xa6CjData race clock for writers. Tracks the happens-before \xe2\x80\xa6AhClose all unclosed tags.CmThe <code>hir_id</code> of the closure argument being checkedAnDefId of the closure/coroutineAdDefId of the closureDhGiven the <code>DefId</code> and args a closure, creates the type of \xe2\x80\xa6BhApplies reborrowing for <code>Pin</code>CjPerforms [unsized coercion] by emulating a fulfillment \xe2\x80\xa6CnFor every coercion cast we add the HIR node ID of the cast \xe2\x80\xa60Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6000000CjAfter expansion is complete, go and check upper bounds \xe2\x80\xa6DjParses code with <code>f</code>. If appropriate, it records the tokens \xe2\x80\xa6BdThe end of the line to be displayed.DgDoes <code>expr</code> need parentheses when printed in a condition \xe2\x80\xa6CiWake up some thread (if there is any) sleeping on the \xe2\x80\xa6CnConfigures a child process to have access to this client\xe2\x80\x99\xe2\x80\xa6EfReturns <code>true</code> if all the values in <code>other</code> are contained in \xe2\x80\xa6EoReturns <code>true</code> if all the lines between <code>lo</code> and <code>hi</code> from \xe2\x80\xa6DiUsed by <code>Lift</code> to check whether this slice is allocated in \xe2\x80\xa6CdDrops that happen on the <code>continue</code> path.FdCopy <code>count*size_of::&lt;T&gt;()</code> many bytes from <code>*src</code> to <code>*dst</code>.CjCoroutine drop glue. This field is populated after the \xe2\x80\xa6DaWhether this is <code>async</code>, <code>gen</code>, or nothing.DgReturns <code>Some(coroutine_kind)</code> if the node pointed to by \xe2\x80\xa6CiIf this is a coroutine then record the type of source \xe2\x80\xa6111111AbCreate all parentsDkGenerate a new TLS key with the given destructor. <code>max_size</code> \xe2\x80\xa6CjTracks the current behavior of the CTFE engine when an \xe2\x80\xa60BcStart position of the current line.DhReturns the current <code>WorkerThread</code> if it\xe2\x80\x99s part of this \xe2\x80\xa6CnInternal function to translate between an encoded span and \xe2\x80\xa6CjTo be able to compare pointers with null, and to check \xe2\x80\xa60CkChecks if the conditions for a deadlock holds and if so \xe2\x80\xa6BoWhich kind of debuginfo is used by this target?CkDeclares the extern \xe2\x80\x9cC\xe2\x80\x9d main function for the entry \xe2\x80\xa60AgDeclare a global value.CiWe import passes via this macro so that we can have a \xe2\x80\xa6AcDeclare a function.CiDecode an expansion from the metadata of a foreign crate.CcGets the span for the identifier of the definition.000000CaGet an English description for the item\xe2\x80\x99s kind.DgTraits added on all bounds by default, excluding <code>Sized</code> \xe2\x80\xa6CjRequires that the two types unify, and prints an error \xe2\x80\xa6CcReturns the path to a session\xe2\x80\x99s dependency graph.DhThis is a callback from <code>rustc_query_system</code> as it cannot \xe2\x80\xa60EdEnd-user visible description of the <code>field</code>nth field of <code>base</code>CnWrite to stdout lint command options, together with a list \xe2\x80\xa60CdWhether to ask rustc to describe the lints it knows.DkEnd-user visible description of <code>place</code> if one can be found. \xe2\x80\xa6EbReturns the <code>DefId</code> of the <code>destruct</code> lang item if it is \xe2\x80\xa6ClWhether dynamic linking can export TLS globals. Defaults \xe2\x80\xa6CjWrites a documentation block containing only the first \xe2\x80\xa6B`Locations where drops may occur.CjTo allocate the result of <code>self.ctor_sub_tys()</code>CmA flattened list of all edge targets in the graph, stored \xe2\x80\xa60EhReturns the <code>DefId</code> of the <code>eh_personality</code> lang item if it is \xe2\x80\xa6Fc\xe2\x80\x9cElaborates\xe2\x80\x9d a drop of <code>place</code>/<code>path</code> and patches <code>bb</code>\xe2\x80\x99s \xe2\x80\xa6DjThis elaborates a single drop instruction, located at <code>bb</code>, \xe2\x80\xa6CmEmit a lint from a lint struct (some type that implements \xe2\x80\xa6DgEmit a lint at <code>span</code> from a lint struct (some type that \xe2\x80\xa60CeCurrent body, or <code>None</code> if outside a body.0CfEncodes a ty:Ty name, including its crate and path \xe2\x80\xa6BgIndex to the end of the literal snippetCjMakes a valid string literal from a string by escaping \xe2\x80\xa6EeEvaluate a cfg-like condition (with <code>any</code> and <code>all</code>), using \xe2\x80\xa60DjReturns <code>true</code> if emulation happened. Here we implement the \xe2\x80\xa6BcEvaluates the stability of an item.DkRuns the interpretation logic for the given <code>mir::Statement</code> \xe2\x80\xa6C`Evaluates a type system constant returning a \xe2\x80\xa6Cfinclude! : parse the given file as an expr This is \xe2\x80\xa6AfLoad a built-in targetClIf the given word is not a keyword, signals an error. If \xe2\x80\xa6CePrint diagnostics to explain why values are borrowed.BjWhether to explain the reason to the user.0DjWhether the user explicitly set <code>-C link-self-contained</code> on \xe2\x80\xa6ClReturns an iterator of expansions that created the given \xe2\x80\xa6BiReturn a list of all exposed allocations.Be<code>&amp;[expr1, expr2, ...]</code>EfCompile <code>expr</code>, storing the result into <code>destination</code>, which \xe2\x80\xa6CmExtracts a string literal from the macro expanded version \xe2\x80\xa6BkAdds <code>obligations</code> to the stack.BmMapping extern static names to their pointer.0DiSimilar to <code>paths</code>, but only holds external paths. This is \xe2\x80\xa6ClGets the extra data to put in each output filename for a \xe2\x80\xa6000000CjExtracts the DefId corresponding to this DepNode. This \xe2\x80\xa6CmRemoves a single waiter from the list of waiters. This is \xe2\x80\xa6C`Creates a new unsuffixed floating-point literal.0ClProduces a MemPlace that works for ZST but nothing else. \xe2\x80\xa6ClReturns an error to be reported if rerunning the type op \xe2\x80\xa6Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6000000CiReturns a dtor, its argument and its index, if one is \xe2\x80\xa6CmTruncated hash of the bytes in <code>filenames_buffer</code>.C`Iterate over the definitions of the given crate.BlThis is always <code>ProbeKind::Root</code>.0000DbAfter we finished evaluating this is moved into <code>kind</code>.1111EcFind the position of a field named <code>ident</code> in <code>base_def</code>, \xe2\x80\xa6DkThis function calls the <code>visit_ty</code> method for the parameters \xe2\x80\xa6DfFind a gated cfg determined by the <code>pred</code>icate which is \xe2\x80\xa60DoChecks if the specified <code>local</code> is used as the <code>self</code> \xe2\x80\xa6DdEquivalent to <code>range.iter().find(|i| !self.contains(i))</code>.CmRecursively expand this (possibly-nested) or-pattern into \xe2\x80\xa6EhReturns the <code>DefId</code> of the <code>fn_once_output</code> lang item if it is \xe2\x80\xa6DiCallback invokes for each free region. The <code>DebruijnIndex</code> \xe2\x80\xa60DdWhether the <code>Self</code> type is disallowed from mentioning \xe2\x80\xa600000000ClUsed to trap when a specific edge is added to the graph. \xe2\x80\xa6Dc<code>{}</code> or <code>{:.5}</code> or <code>{:-^20}</code>, etc.CkFormat the given snippet. The snippet is expected to be \xe2\x80\xa6CiA single version number to be used in the future when \xe2\x80\xa6E`Recovers a <code>Token</code> from an <code>Ident</code>. This creates a raw \xe2\x80\xa6CnBecause we tamper with the spans context, this information \xe2\x80\xa6DhReturns <code>true</code> if this span comes from any kind of macro, \xe2\x80\xa6CiGet atomic access to a <code>&amp;mut [u64]</code> slice.EeReturns the <code>DefId</code> of the <code>from_output</code> lang item if it is \xe2\x80\xa6EcConstruct a singleton range. <code>x</code> must be a <code>Finite(_)</code> value.CbConverts a token literal into a meta item literal.BoConverts literal token into a semantic literal.1DdConstructs a <code>Config</code> from the toml file specified at \xe2\x80\xa6EhCompute permission for <code>Box</code>-like type (<code>Box</code> always, and also \xe2\x80\xa6EcReturns the <code>DefId</code> of the <code>poll</code> lang item if it is defined.CaLifetimes in the <code>for&lt;&gt;</code> closureBiUsed for Higher-Rank Trait Bounds (HRTBs)000CkObtain the size and alignment of an allocation, even if \xe2\x80\xa6EeReturns the <code>DefId</code> of the <code>get_context</code> lang item if it is \xe2\x80\xa6BdCompute and validate the crate name.DiObtains per-namespace resolutions for <code>use</code> statement with \xe2\x80\xa6CbReturn mutable reference to the value at an index.C`Iterates over the lang items in the given crate.CnReturns the lang items defined in another crate by loading \xe2\x80\xa6000000ChTraverses and collects all the lang items in all crates.AmGets the last error variable.CiThis returns the lint level for the given lint at the \xe2\x80\xa60CiReturns the time it took to parse the source files in \xe2\x80\xa6ClInternal helper function to determine the allocation and \xe2\x80\xa6CbGet a shard with a pre-computed hash value. If \xe2\x80\xa6BhGet the stack size of the worker threadsDiSafe wrapper for <code>LLVMGetValueName2</code> Needs to allocate the \xe2\x80\xa6CjCreates a dynamic vtable for the given type and vtable \xe2\x80\xa6DgSee documentation on the <code>ptr_guaranteed_cmp</code> intrinsic. \xe2\x80\xa60CoEither <code>&quot;)&quot;</code> or <code>&quot;&quot;</code>.DjExecutes <code>f</code> and captures any panic, translating that panic \xe2\x80\xa6CcProcess command line options. Emits messages as \xe2\x80\xa60BjDid the use statement have any attributes?BeTrue if there are any bound variables0000CjThis checks whether a given type is known to implement \xe2\x80\xa6DmReturns <code>true</code> if <code>params</code> has <code>impl Trait</code>.CmReturns true if none of this structure\xe2\x80\x99s tables contain \xe2\x80\xa6CmReturns whether the allocation has provenance anywhere in \xe2\x80\xa6CjDoes this function header have any qualifiers or is it \xe2\x80\xa6B`Has the given thread terminated?CnWhether the head pattern is a branch (see definition of \xe2\x80\x9c\xe2\x80\xa6BoOffset at which we render headings. E.g. if \xe2\x80\xa6CkWhen true, we do not display the note telling people to \xe2\x80\xa6DhReturns the <code>HirId</code> that corresponds to the definition of \xe2\x80\xa6DbIf <code>true</code>, HTML source code pages won\xe2\x80\x99t be generated.CeCreates a new unsuffixed integer literal with the \xe2\x80\xa600EeImplements <code>LintPass for $ty</code> with the given list of <code>Lint</code> \xe2\x80\xa60DiGiven an <code>impl_id</code>, return the trait it implements. Return \xe2\x80\xa6EdThe <code>#[linkage = &quot;...&quot;]</code> attribute on foreign items and the \xe2\x80\xa6CeResolutions for import nodes, which have multiple \xe2\x80\xa60CkAn import will be inserted into this map if it has been \xe2\x80\xa6DjCreates a \xe2\x80\x9cfork-join\xe2\x80\x9d scope <code>s</code> and invokes the closure \xe2\x80\xa60CgCreates a scope that spawns work into this thread-pool.CiMaps from an InferredIndex to the term for that variable.CmCreates a <code>Shape</code> with a virtually infinite width.CjThe code in this module gathers up all of the inherent \xe2\x80\xa6CnOn-demand query: yields a vector of the inherent impls for \xe2\x80\xa6DhMaps a <code>DefId</code> of a type to a list of its inherent impls. \xe2\x80\xa6000000c\xe2\x80\xa6EeThis is the <code>LocalDefId</code> of the <code>use</code> statement if the item \xe2\x80\xa6ClGets the argument type at the given offset. For closures \xe2\x80\xa6CnInsert an impl into this set of children without comparing \xe2\x80\xa60CaReturns true if the character is inside a commentEdSame as <code>typeck</code> but <code>inspect</code> is invoked on evaluation of \xe2\x80\xa6CjReturns the list of instances considered \xe2\x80\x9cused\xe2\x80\x9d in \xe2\x80\xa6CkRemembers which int2ptr casts we have already warned about.0CeThis is used as a map between the address of each \xe2\x80\xa6DiIntern an allocation. Returns <code>Err</code> if the allocation does \xe2\x80\xa6EgReturns those indices that are true in rows <code>a</code> and <code>b</code>. This \xe2\x80\xa6EeReturns the <code>DefId</code> of the <code>into_future</code> lang item if it is \xe2\x80\xa6CjObtain the constituents of this pointer. Note that the \xe2\x80\xa6BeConverts generic args to a type list.0CaRetrieve the plain function name of an intrinsic.CnRetrieve the plain intrinsic name of an instance if it\xe2\x80\x99s \xe2\x80\xa61DcA type that produces an <code>OperandValue::Ref</code> when loaded.0EcIf <code>true</code>, then this trait has the <code>#[rustc_coinductive]</code> \xe2\x80\xa6CkIndicate that the argument is consecutive, in the sense \xe2\x80\xa6DoReturns <code>true</code> if this <code>DefId</code> refers to the implicit \xe2\x80\xa6FbReturns <code>true</code> if it is a sugared doc comment (<code>///</code> or <code>//!</code> \xe2\x80\xa60DgReturns <code>true</code> if the commenting style is for documentation.EdReturns <code>true</code> if this is a <code>Downcast</code> projection with the \xe2\x80\xa6ChChecks if the given expression is the else clause of \xe2\x80\xa6CbChecks whether a block contains no statements, \xe2\x80\xa6CcReturn whether this kind always require evaluation.ClEval-always queries do not track their dependencies, and \xe2\x80\xa6110CeChecks if the given expression performs an unsafe \xe2\x80\xa6EaReturns <code>true</code> if this type is <code>#[fundamental]</code> for the \xe2\x80\xa6EhIf <code>true</code>, then this trait has the <code>#[fundamental]</code> attribute. \xe2\x80\xa6DbTrue if <code>c</code> is valid as a non-first character of an \xe2\x80\xa6DiReturns <code>true</code> if the token is an identifier whose name is \xe2\x80\xa6EaChecks if any parent node of <code>HirId</code> has <code>#[cfg(test)]</code> \xe2\x80\xa6CkReturns true if the given node has been marked as green \xe2\x80\xa6CnReturns <code>true</code> if the token is the integer literal.DfReturns <code>true</code> if the JSON output format is enabled for \xe2\x80\xa6DgReturns <code>true</code> when the outermost type cannot be further \xe2\x80\xa6000ChWhether the target toolchain is like macOS\xe2\x80\x99s. Only \xe2\x80\xa6CoReturns whether the <code>lld</code> linker feature is enabled.CmA loop header is a node that dominates one or more of its \xe2\x80\xa6CiIs this an invisible open delimiter at the start of a \xe2\x80\xa6C`This is a \xe2\x80\x9cmodule\xe2\x80\x9d in name resolution sense.Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6000000CfReturns whether this is a <code>FooWithOverflow</code>FaReturns <code>true</code> if <code>param_def_id</code> matches the <code>bounded_ty</code> of \xe2\x80\xa6FdReturns <code>true</code> if <code>param_def_id</code> matches the <code>lifetime</code> of this \xe2\x80\xa6DeReturns true if the specified <code>HirId</code> is the top-level \xe2\x80\xa6CiWhether the ADT lacks fields. Note that this includes \xe2\x80\xa6AgIs a macro placeholder.CkDoes this body use generic parameters. This is used for \xe2\x80\xa6CgDetermine whether a dependency should be considered \xe2\x80\xa6CmReturns whether or not the crate with CrateNum \xe2\x80\x98cnum\xe2\x80\x99 \xe2\x80\xa6000000ChIndicates this is a \xe2\x80\x9cprivate\xe2\x80\x9d dependency for the \xe2\x80\xa6CjWhether the type is succinctly representable as a type \xe2\x80\xa6EbReturns <code>true</code> if <code>subscope</code> is equal to or is lexically \xe2\x80\xa6CdWhether this makes sense to suggest in a diagnostic.0CjReturns true if and only if the underlying writer must \xe2\x80\xa6EcReturns <code>true</code> if <code>def_id</code> refers to a trait alias (i.e., \xe2\x80\xa6CkWhether the original arm had a guard. This is inherited \xe2\x80\xa6ChReturns <code>true</code> if this is an uninhabited typeDfReturns <code>true</code> if this is <code>UnsafeCell&lt;T&gt;</code>.CmCreates a new suffixed integer literal with the specified \xe2\x80\xa6CgIterates through intervals stored in the set, in order.EbReturns the <code>DefId</code> of the <code>iterator</code> lang item if it is \xe2\x80\xa6CmJoins multiple symbols with \xe2\x80\x9c::\xe2\x80\x9d into a path, e.g. \xe2\x80\x9c\xe2\x80\xa6AnA jump threading optimization.DjReturns the <em>non-transitive</em> set of known <code>outlives</code> \xe2\x80\xa6CkPrevious popped <code>rib</code>, only used for diagnostic.CnLinker arguments that are unconditionally passed after any \xe2\x80\xa6CgDetermine how the borrow was later used. First span \xe2\x80\xa6DjHelper for lazily initialized <code>alloc_extra.sync</code> data: this \xe2\x80\xa6DoHelper function to get the <code>TyAndLayout</code> of a <code>libc</code> typeBiThe number of lifetimes in the parameter.BcCalled for <code>StorageLive</code>0DfReturns the <code>BytePos</code> of the beginning of the current line.AhCreate a static archive.CiThe error guarantee from all emitted lint errors. The \xe2\x80\xa6CdGet the search patterns to use for the given literalCiThe entry point to parse the CSS rules. Every time we \xe2\x80\xa6Eh<code>loan_issued_at(origin, loan, point)</code> indicates that the <code>loan</code>\xe2\x80\xa60Di<code>loan_killed_at(loan, point)</code> when some prefix of the path \xe2\x80\xa60BoTurn a local in the current frame into a place.BnThe locations where the local is used, if any.EfMap from MIR <code>Location</code> to <code>LocationIndex</code>; created when MIR \xe2\x80\xa6CkThe table that maps Polonius points to locations in the \xe2\x80\xa6BcAllocate the lock-file and lock it.B`Locks a given session directory.BjDesugar <code>ExprForLoop</code> from: \xe2\x80\xa6DiDesugar <code>ExprKind::Try</code> from: <code>&lt;expr&gt;?</code> into:EfReturn the pair of the lowered <code>generics</code> as <code>hir::Generics</code> \xe2\x80\xa6DkLowers a <code>let</code> expression that appears in a suitable context \xe2\x80\xa6CmLower a lifetime from the HIR to our internal notion of a \xe2\x80\xa6CmLowers the kinds of \xe2\x80\x9cexpression\xe2\x80\x9d that can appear in a \xe2\x80\xa6CnLower a type parameter from the HIR to our internal notion \xe2\x80\xa6CfOptions for rendering Markdown in the main body of \xe2\x80\xa60ClGenerate a label for a generic argument which can\xe2\x80\x99t be \xe2\x80\xa6CmConstruct the mapping while swapping out unused stuff out \xe2\x80\xa6CjAdjust the provenance of the main pointer (metadata is \xe2\x80\xa60CfMark a machine allocation that was just created as \xe2\x80\xa6EbMark all <code>Waiting</code> nodes as <code>Success</code>, except those that \xe2\x80\xa6CjMark a previously blocked Rayon worker thread as unblocked00EhReturns <code>true</code> if the file given as <code>self.input</code> is a Markdown \xe2\x80\xa6DiReturns the length of the longest LEB128 encoding for <code>T</code>, \xe2\x80\xa6DkThe largest alignment explicitly requested with <code>repr(align)</code>\xe2\x80\xa6Di<code>self[to] |= values[from]</code>, essentially: that is, take all \xe2\x80\xa6BhSpecify message-format: short|json|humanClGet the meta item list, <code>#[attr(meta item list)]</code>DgGets a list of inner meta items from a list <code>MetaItem</code> type.CnReturns a list of meta items if the attribute is delimited \xe2\x80\xa61BbIndex of the file inside metadata.DdCreates a slice containing every test like so: &amp;[&amp;test1, \xe2\x80\xa6BnWhat sorting mode to use for module pages. \xe2\x80\xa6CkThis flag indicates whether listings of modules (in the \xe2\x80\xa6DkTraversal of a <code>Body</code> that tries to avoid unreachable blocks \xe2\x80\xa6CkAdds a left margin to every line but the first, given a \xe2\x80\xa6CnSet to true once the first additional thread has launched, \xe2\x80\xa6EdConvenience method to create the <code>&amp;mut *&lt;expr&gt;</code> suggestion. \xe2\x80\xa6DkReturns the mutex data stored at the address that <code>mutex_ptr</code>\xe2\x80\xa6DjIf <code>Some</code>, the attribute is allowed to be a name/value pair \xe2\x80\xa60BjString containing the named arguments nameCaGet the corresponding native library from the \xe2\x80\xa6000000CjWhether a macro with these arguments needs a semicolon \xe2\x80\xa60BjQuery backing <code>Ty::needs_drop</code>.000000DhReturns true if function of type <code>ty</code> needs location argumentBhCreate a new allocation, i.e. a new treeCkCreate a new data-race detector for newly allocated memory.CkCreate a new constant that represents the given boolean \xe2\x80\xa60DgCreates a new <code>Diag</code> with an already constructed diagnostic.DhConstructs a <code>RegionKind::ReError</code> region and registers a \xe2\x80\xa6CmCreates a new coverage info builder, but only if coverage \xe2\x80\xa6D`Constructs a <code>TyKind::Error</code> type and registers a \xe2\x80\xa6BeLike Ty::new_error but for constants.CmCreate a new vector clock containing all zeros except for \xe2\x80\xa6CjThis is used as a memory address when a new pointer is \xe2\x80\xa6E`This range <em>may</em> contain <code>untagged_variant</code> or uninhabited \xe2\x80\xa6CoIf <code>true</code>, Context::init will not emit shared files.DjUsed in conjunction with <code>priority_list</code> to create physical \xe2\x80\xa6CmEmit a lint at the appropriate level for a hir node, with \xe2\x80\xa6DiFinds the one field that is not a 1-ZST. Returns <code>None</code> if \xe2\x80\xa6C`Permission for the non-frozen part of the range.CeLocations of characters removed during normalization.CbThe total number of universal region variables \xe2\x80\xa6CmThis is mainly for easy compatibility with emscripten. If \xe2\x80\xa6DnReturns <strong>exclusive</strong> upper bound on object size in bytes, in \xe2\x80\xa6DhContainer types and field indices of <code>offset_of!</code> expressions0ClThe function to call when the stack ran empty, to figure \xe2\x80\xa6DkReturns true if the set of borrowers of <code>borrowed</code> living at \xe2\x80\xa6DbReturns the narrowest scope that encloses <code>id</code>, if any.BjLook up the name and span of a definition.CmIf the provided DefId is a method in a trait impl, return \xe2\x80\xa6CnEnsures a value is in the entry by inserting the result of \xe2\x80\xa6DjVerify a valid ordered list start (e.g. <code>1.</code>) and parse it. \xe2\x80\xa6CgReturns the outgoing edges of a given node, not its \xe2\x80\xa6CgGet the lang item that is invoked to print a static \xe2\x80\xa6EhReturns the <code>DefId</code> of the <code>panic_location</code> lang item if it is \xe2\x80\xa6BhCalled to trigger a non-unwinding panic.0EhReturns the <code>DefId</code> of the <code>panic_nounwind</code> lang item if it is \xe2\x80\xa6CkReturns the panic strategy for this compile session. If \xe2\x80\xa6BkPanic strategy: \xe2\x80\x9cunwind\xe2\x80\x9d or \xe2\x80\x9cabort\xe2\x80\x9dCnThis gives access to a fresh parallel guard in the closure \xe2\x80\xa60DiIf <code>include_nonconstraining</code> is false, returns the list of \xe2\x80\xa6ClSet of param indexes for type params that are in the type\xe2\x80\xa6000000ChTrue if the parent is private, meaning the dependent \xe2\x80\xa6DiParse links. <code>can_be_def</code> indicates that a link definition \xe2\x80\xa6EhParses <code>cfg_attr(pred, attr_item_list)</code> where <code>attr_item_list</code> \xe2\x80\xa6BgParses an experimental fn contract (\xe2\x80\xa6DfParse <code>box expr</code> - this syntax has been removed, but we \xe2\x80\xa6EmParses <code>for await? &lt;src_pat&gt; in &lt;src_expr&gt; &lt;src_loop_block&gt;</code> \xe2\x80\xa6CiParses a <code>let $pat = $expr</code> pseudo-expression.BoParse an expression if the token can begin one.ChParses an expression, subject to the given restrictions.CcParses a set of optional generic type parameter \xe2\x80\xa6EdParses a <code>mod &lt;foo&gt; { ... }</code> or <code>mod &lt;foo&gt;;</code> item.CnThis is for boolean options that don\xe2\x80\x99t take a value, and \xe2\x80\xa6CgUse this for any boolean option that lacks a static \xe2\x80\xa6ChParses whether polonius is enabled, and if so, which \xe2\x80\xa6EaParses a statement macro <code>mac!(args)</code> provided a <code>path</code> \xe2\x80\xa6DeProcess the matcher positions of <code>cur_mps</code> until it is \xe2\x80\xa6EdMatches <code>typaram = IDENT (</code>?<code> unbound)? optbounds ( EQ ty )?</code>.AnParses a <code>UseTree</code>.CkThe number of references at the head of the pattern\xe2\x80\x99s \xe2\x80\xa6CkThe path from the highest cycle head to this goal. This \xe2\x80\xa6BdGets the layout of a type at a path.CjExtract string if found at current position with given \xe2\x80\xa6CjIndicates whether the peer has lost data when the file \xe2\x80\xa6ChApply the effect of an access to one location, includingBeMap the per-node and per-location \xe2\x80\xa6CaApply the transition to the inner PermissionPriv.ClDispatch handler depending on the kind of access and its \xe2\x80\xa6CmIf present, playground URL to use in the \xe2\x80\x9cRun\xe2\x80\x9d button \xe2\x80\xa6CnDetermines if the target always requires using the PLT for \xe2\x80\xa6CmSometimes we get point-indices back from bitsets that may \xe2\x80\xa6ChGet the pointer index in the default data address space.ClThe size of the value a pointer can be offset by in this \xe2\x80\xa6BlShould the Polonius input facts be computed?DgLinker arguments that are unconditionally passed <em>after</em> any \xe2\x80\xa6CbThe span of the precision formatting flag (for \xe2\x80\xa6EhLabeled spans for <code>&amp;</code>s, <code>&amp;mut</code>s, and binding modifiers \xe2\x80\xa60DgReturns the <code>Size</code> for primitive types (bool, uint, int, \xe2\x80\xa6CmAppends a representation of an entity with a normal path, \xe2\x80\xa6ChPrivacy errors are delayed until the end in order to \xe2\x80\xa6DiReport cycles between all <code>Success</code> nodes, and convert all \xe2\x80\xa6DkGenerates a new place by appending <code>more_projections</code> to the \xe2\x80\xa60DjProjects multiple fields at once. See <code>Self::project_field</code> \xe2\x80\xa6CaA pass that promotes borrows of constant rvalues.CiIf this frame is protecting any tags, they are listed \xe2\x80\xa6CjAll currently protected tags. We add tags to this when \xe2\x80\xa6CkStore the provenance for each byte in the range, with a \xe2\x80\xa6CiStart profiling a query provider. Profiling continues \xe2\x80\xa6CkThis module contains the code to instantiate a \xe2\x80\x9cquery \xe2\x80\xa60Ed<code>sm.range_is_empty(r)</code> == <code>sm.range(r).is_empty()</code>, but is \xe2\x80\xa6CkReturns all ptr-sized provenance in the given range. If \xe2\x80\xa6CnThis \xe2\x80\x9craw\xe2\x80\x9d table doesn\xe2\x80\x99t include the working dir, so \xe2\x80\xa6EeThinking of <code>x R y</code> as an edge <code>x -&gt; y</code> in a graph, this \xe2\x80\xa6DgRead data from a host <code>Read</code> type, store the result into \xe2\x80\xa6CjRead an immediate from a place, asserting that that is \xe2\x80\xa6EhParses a <code>_umtx_time</code> struct. Returns <code>None</code> if the underlying \xe2\x80\xa6DeIf this grows the allocation, <code>init_growth</code> determines \xe2\x80\xa6DdNumber of jumps along the <code>Receiver::Target</code> chain we \xe2\x80\xa6EbReturns the <code>DefId</code> of the <code>receiver</code> lang item if it is \xe2\x80\xa6ClReexport chain linking this module child to its original \xe2\x80\xa6DgGet the mutability of the reference or <code>None</code> when not a \xe2\x80\xa6FiReturns <code>&quot;&amp;&quot;</code> or <code>&quot;&amp;mut &quot;</code> depending on the mutability.000000EfRequires that <code>ty</code> must implement the trait with <code>def_id</code> in \xe2\x80\xa6000CiRegister obligations that must hold in order for this \xe2\x80\xa600000000ClThis is a callback from the driver that is called when we\xe2\x80\xa6BjHelper method for register_early/late_passClThe options given to rustdoc that could be relevant to a \xe2\x80\xa6CmBuild a textual representation of an unevaluated constant \xe2\x80\xa60ChGets the rendered value of the specified constant or \xe2\x80\xa6000000DfIf set to <code>true</code>, this will make future incompatibility \xe2\x80\xa60CmWhether to report privacy errors or silently return \xe2\x80\x9cno \xe2\x80\xa6CmWhen reporting a lifetime that is implicit, we expand the \xe2\x80\xa6CcThe representative Region Variable Id for this SCC.CfThe maximum depth required while evaluating this goal.BdCollects the candidates for merging.C`Attempts to resolve the given import, returning:C`Performs a depth-first search, starting from \xe2\x80\xa6CnThis query borrow-checks the MIR to (further) ensure it is \xe2\x80\xa6BmGenerate files suitable for use with GraphvizCmExport the rustc_internal APIs. Note that this module has \xe2\x80\xa6nVarious checksCnIf this rvalue supports a user-given type annotation, then \xe2\x80\xa6CiThe current \xe2\x80\x9csafety context\xe2\x80\x9d. This notably tracks \xe2\x80\xa6AmGet LLVM sanitize attributes.CnSaves and writes the <code>DepGraph</code> to the file system.CaSaves and writes the DepGraph to the file system.BfMapping of scalar types to llvm types.CmBase of the scrutinee place. Used to distinguish bindings \xe2\x80\xa6CmEncodes a node that exists in the previous graph, but was \xe2\x80\xa6AmSets the last error variable.BfSet the Permission stored in this ItemDaSafe wrapper for <code>LLVMSetValueName2</code> from a byte sliceDkReturns <code>true</code> if any of the output types require codegen or \xe2\x80\xa6ClAny local definition that may call something in its body \xe2\x80\xa6ChSignal handler for rustc Primarily used to extract a \xe2\x80\xa6CkReturns tokens that are likely to be typed accidentally \xe2\x80\xa6CmSingle imports that may define the name in the namespace. \xe2\x80\xa6CkAsserts that the witness contains a single pattern, and \xe2\x80\xa6CgGets a snippet of the indentation of the line of a spanEhGiven that we are performing <code>test</code> against <code>test_place</code>, this \xe2\x80\xa6CfPrints the span with a note above it. This is like \xe2\x80\xa6DiExtracts the source surrounding the given <code>Span</code> using the \xe2\x80\xa6CkReturns printable, human readable form of <code>Span</code>ClReturns printable, human readable form of <code>Span</code>.DhReturn <code>true</code> if the variant (i.e. value of this type) is \xe2\x80\xa6E`Returns a closure that will return <code>&quot;&quot;</code> when called the \xe2\x80\xa6ChStarts a new snapshot. That snapshot must eventually \xe2\x80\xa6BcGet a pointer to a global variable.ClReturns an enum indicating whether this operation can be \xe2\x80\xa6CjCompare two values of type <code>&amp;str</code> using \xe2\x80\xa6BdReturns the type of the struct tail.000DeIf present, this <code>Parser</code> is not parsing Rust code but \xe2\x80\xa6CnReturns true if and only if the underlying writer supports \xe2\x80\xa6CiChecks if we can use colors in the current output stream.BjAs symbol_from, with an explicit endpoint.CkAttempts to obtain a \xe2\x80\x9clocal\xe2\x80\x9d job \xe2\x80\x93 typically this \xe2\x80\xa6ChGets the location of the terminator for the given block.ChReturn the PointIndex for the block start of this index.ClThis method turns the parameters of a DepNodeConstructor \xe2\x80\xa60ClConvert diagnostic arguments (a rustc internal type that \xe2\x80\xa6EkReturns a mutability <code>m</code> such that an <code>&amp;m T</code> pointer could be \xe2\x80\xa6ElConverts this <code>AttrTokenStream</code> to a plain <code>Vec&lt;TokenTree&gt;</code>. \xe2\x80\xa6CbReturns whether the feature may be toggled via \xe2\x80\xa6DoGiven a trait <code>trait_id</code>, return all known <code>impl</code> blocks.000000CcReturns <code>true</code> if this is a trait alias.DeIf the given <code>DefId</code> is an associated item of a trait, \xe2\x80\xa6ChGiven the generic parameters for the requested impl, \xe2\x80\xa60EhReturns the <code>DefId</code> of the <code>transmute_opts</code> lang item if it is \xe2\x80\xa6EcIf either <code>Self::try_as_constant</code> as <code>Self::try_as_place</code> \xe2\x80\xa6CnTry to constant evaluate the instance into a constant with \xe2\x80\xa6DkTries to move the iterator forward returning <code>true</code> if there \xe2\x80\xa6CkChecks whether there is already a value for this key in \xe2\x80\xa60DfTo type-check <code>base_expr[index_expr]</code>, we progressively \xe2\x80\xa6C`Try to convert a literal into an interned stringBoTry to mark a node index for the node dep_node.DkThis tries to atomically mark a node green and assign <code>index</code>\xe2\x80\xa6CgIf $e throws an error matching the pattern, throw a \xe2\x80\xa6DdLower a <code>hir::Ty</code> to a <code>rustc_middle::ty::Ty</code>.CmA heuristic to tell whether an expression\xe2\x80\x99s type can be \xe2\x80\xa6EcReturns the <em>hidden type</em> of the opaque type given by <code>DefId</code> \xe2\x80\xa6000000CkGets the type-checking results for the current body. As \xe2\x80\xa6000CeCreates a new unsuffixed integer literal with the \xe2\x80\xa600CmWhen you only access the range containing valid data, you \xe2\x80\xa6CbPut the blocked thread into the enabled state. \xe2\x80\xa6EeVersion of <code>unexpected</code> that \xe2\x80\x9creturns\xe2\x80\x9d any type in the <code>Ok</code>EeAdds the bits from <code>with</code> to the bits from row <code>write</code>, and \xe2\x80\xa6DfIf this is <code>Some(id)</code>, then the actual current stack is \xe2\x80\xa60ChThis implements \xe2\x80\x9canonymous\xe2\x80\x9d sockets, that do not \xe2\x80\xa6CjChecks if each element in the first slice is contained \xe2\x80\xa6AkUnused externs of the crateCbAll the (so far) unused imports, grouped path listCjCasts a trait reference into a reference to one of its \xe2\x80\xa60BhUpdates the <code>environ</code> static.Dd<code>use</code> injections are delayed for better placement and \xe2\x80\xa6CmCreates a new suffixed integer literal with the specified \xe2\x80\xa6ClA faster version of the validation pass that only checks \xe2\x80\xa6CiPut a valtree into memory and return a reference to that.CmDebug information pertaining to user variables, including \xe2\x80\xa600Ea<code>var_defined_at(var, point)</code> when the variable <code>var</code> is \xe2\x80\xa60Ef<code>var_dropped_at(var, point)</code> when the variable <code>var</code> is used \xe2\x80\xa60ClWhich of the above fields are in each variant. Note that \xe2\x80\xa60ClAll traits that are visible within the crate graph (i.e. \xe2\x80\xa6EcVisit the right-hand-side of a <code>&amp;&amp;</code>. Used for if-let chains. \xe2\x80\xa6Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6000000DjGiven a trait <code>trait_ref</code>, iterates the vtable entries that \xe2\x80\xa6ClBlock until latch is set, then resets this lock latch so \xe2\x80\xa6DkReturns <code>true</code> if this session\xe2\x80\x99s target will use SEH-based \xe2\x80\xa6ChProduce a warning instead of an error when reporting \xe2\x80\xa6CkConstruct a pattern that matches everything that starts \xe2\x80\xa6CnLoads the current context and calls a function with it. Do \xe2\x80\xa6CkCreate a node when we force-feed a value into the query \xe2\x80\xa6CiPrints the span with some help above it. This is like \xe2\x80\xa6CfPrints the span with a note above it. This is like \xe2\x80\xa6BaWrite a graphviz DOT of the graphClHelper function to write a sequence of u16 with an added \xe2\x80\xa6CkChange to be generic on Write for testing. If we have a \xe2\x80\xa6EcThe <code>array_into_iter</code> lint detects calling <code>into_iter</code> on \xe2\x80\xa60DkConfigures the precedence of attributes with the same <code>PATH</code> \xe2\x80\xa6CmThis is just a guess at the average length of a URL part, \xe2\x80\xa6EhLike <code>Add</code>, but returns <code>(T, bool)</code> of both the wrapped result \xe2\x80\xa60CiWe just dumped the terminator for a block but not the \xe2\x80\xa6CdPredicate required for an alias projection to be \xe2\x80\xa600000000DjThe <code>impl_</code> contains data that\xe2\x80\x99s used to figure out if an \xe2\x80\xa6BjAbort in case errors are already reported.0ChEncodes a user\xe2\x80\x99s type ascription. These need to be \xe2\x80\xa60CjSpecifies whether rendering directly implemented trait \xe2\x80\xa6CjA field or associated item from self type suggested in \xe2\x80\xa6Bf\xe2\x80\x9cDiscriminant\xe2\x80\x9d of an AST fragment.Bi<code>-Zunpretty=ast-tree,expanded</code>BkThe <code>AsyncGenPending</code> lang item.EfAn <code>AttrTokenStream</code> is similar to a <code>TokenStream</code>, but with \xe2\x80\xa6ChContext created once, for example as part of the ast \xe2\x80\xa6DjAn <code>AttributeParser</code> is a type which searches for syntactic \xe2\x80\xa61DhStruct containing the results of <code>prepare_bcb_counters_data</code>.CeIllegal move due to attempt to move from behind a \xe2\x80\xa6CfThe target of an expression that breaks out of a scopeDfThe list of default passes run when <code>--doc-coverage</code> is \xe2\x80\xa6ClThe crate root is always assigned index 0 by the AST Map \xe2\x80\xa60Di<code>rustc_driver::main</code> installs a handler that will set this \xe2\x80\xa6BkPossible ways the given goal can be proven.00000ClHolds all of the relevant data for when unwinding hits a \xe2\x80\xa60BmDetails of why a pointer had to be in-bounds.0EmSame as <code>BinaryOp</code>, but yields <code>(T, bool)</code> with a <code>bool</code> \xe2\x80\xa60A`Stroustrup styleCm<code>&lt;[FnMut/Fn closure] as FnOnce&gt;::call_once</code>.0000000AgLLVMRustCodeGenOptLevelCkThe frontend has finished generating everything for all \xe2\x80\xa6EnEncodes that we have to coerce <em>from</em> the <code>a</code> type to the <code>b</code> \xe2\x80\xa6000CcRepresents <code>#[rustc_coherence_is_core]</code>.0EaImagine you have a function <code>F: FnOnce(&amp;[T]) -&gt; R</code>, plus an \xe2\x80\xa60000CkError derived when checking an impl item is compatible with00ChActual LTO type we end up choosing based on multiple \xe2\x80\xa6Bf<code>ConcreteFailure(o, a, b)</code>:00CnIn a list of passes, a pass that may or may not need to be \xe2\x80\xa6EfInterned types generally have an <code>Outer</code> type and an <code>Inner</code> \xe2\x80\xa60ChEnsures that a const generic argument to a parameter \xe2\x80\xa600000Dk<code>[const]</code> bounds for a given item. This is represented using \xe2\x80\xa60CnVisits MIR nodes, performs const propagation and runs lint \xe2\x80\xa6CjThe construct graph organizes the constraints by their \xe2\x80\xa6BnOptions determining the output behavior of \xe2\x80\xa6AnThe layout of coroutine state.0BlThe <code>coroutine_resume</code> lang item.BlThe <code>coroutine_return</code> lang item.CnIn the case of a coroutine created as part of an async/gen \xe2\x80\xa6CkContains information needed during codegen, obtained by \xe2\x80\xa6DeIndividual flag values controlled by <code>-Zcoverage-options</code>.CmA thread\xe2\x80\x99s CPU affinity mask determines the set of CPUs \xe2\x80\xa6Dd<code>CurrentDepGraph</code> stores the dependency graph for the \xe2\x80\xa6BkThe kind of goal we\xe2\x80\x99re currently proving.BgThe default pattern of files to format.AcLLVMDLLStorageClassCkThe type for a closure that gets invoked when the Rayon \xe2\x80\xa6CdNormalizes, and deeply normalizes in the new solver.000CiSignifies that the compiler died due to a delayed bug \xe2\x80\xa6BfRelease in which an API is deprecated.0CgNone of the above \xe2\x80\x93 generic/unspecific inbounds test.0AgLLVMRustDiagnosticLevelBmThe <code>dispatch_from_dyn</code> lang item.DjLint for expressions of the form <code>--x</code> that can be confused \xe2\x80\xa6CkA trait that determined how DropTree creates its blocks andC`Can\xe2\x80\x99t go from shared pointer to unique pointerAkThe size of dst is overflowCgDynamically linked non position-independent executable.BmThe <code>eh_catch_typeinfo</code> lang item.AfOptions for encode_ty.CkThe input could be broken but a newline is present that \xe2\x80\xa6ClThe places have the same type, and are either completely \xe2\x80\xa6DnUseful type to use with <code>Result&lt;&gt;</code> indicate that an error \xe2\x80\xa60BkThe type of diagnostics output to generate.Bh<code>-Zunpretty=expanded,hygiene</code>DfMust match the layout of <code>LLVMRustCoverageExpansionRegion</code>.BoExtern type field with an indeterminate offset.0AoError E0433: failed to resolve.BdRepresents an open file description.CbContext given to every attribute parser during \xe2\x80\xa6CnA fake read injected into a match guard to ensure that the \xe2\x80\xa60Bafor _ in x {} calls x.into_iter()EhFake read of the scrutinee of a <code>match</code> or destructuring <code>let</code> \xe2\x80\xa60Di<code>#[rustc_force_inline]</code> functions must be inlined and must \xe2\x80\xa6000CnA path which is treated as ambiguous. Once a path has this \xe2\x80\xa6000BeAn item in <code>extern</code> block.BlAn item within an <code>extern</code> block.Bg<code>type</code>s from an extern blockBdA piece of a format template string.B`The arguments to format_args!().BlThe <code>format_arguments</code> lang item.BmThe <code>format_unsafe_arg</code> lang item.DjA guard holding shared access to a <code>FreezeLock</code> which is in \xe2\x80\xa60BjA trait engine using the new trait solver.0BbA type that is a function pointer.DaA function pointer type, e.g. <code>fn(u32) -&gt; u32</code>, \xe2\x80\xa6CjParse the front matter of a function pointet type. For \xe2\x80\xa6DiImplementation of a <code>Future</code> trait by one of the coroutine \xe2\x80\xa600CaHelper struct for the delayed construction of \xe2\x80\xa6BjOne generic parameter accepted by an item.ChMaps \xe2\x80\x9cglobal\xe2\x80\x9d (per-CGU) file ID numbers to their \xe2\x80\xa6CnDoes this have any binders with bound vars (e.g. that need \xe2\x80\xa6000AlDoes this have placeholders?000BeDoes this have <code>Inherent</code>?000DcThe suggestion contains placeholders like <code>(...)</code> or \xe2\x80\xa60CgControls what data we do or do not hash. Whenever a \xe2\x80\xa6DkThe <code>improper_ctypes</code> lint detects incorrect use of types in \xe2\x80\xa6CgIndicates whether the type is <code>PhantomData</code>.CkAn internal constraint derived from an illegal universe \xe2\x80\xa60DkDerived obligation (i.e. <code>where</code> clause) on an user-provided \xe2\x80\xa600CnHolds data on the current incremental compilation session, \xe2\x80\xa6CiStore an indirect return value to an operand local place.DaActual type should be inherited from <code>DefId</code> signatureClThe target spec requests that the self-contained mode is \xe2\x80\xa6DhGiven the current context(caller and callee <code>FnKind</code>), it \xe2\x80\xa6AoAn inline const is modeled like0CiPackages the kind of error we got from the const code \xe2\x80\xa60ClA partially ordered set that has a least upper bound for \xe2\x80\xa600CeFor generic cases like inline-assembly, modules, etc.DhThe <code>linker_messages</code> lint forwards warnings from the linker.0CiPotential candidate for an undeclared or out-of-scope \xe2\x80\xa6CgThe parameter representation of late-bound function \xe2\x80\xa60CnTrait for contexts that want to be able to compute layouts \xe2\x80\xa6ClComputes if an opaque type requires a lifetime parameter \xe2\x80\xa6CmWhether let chains are allowed on all editions, or it\xe2\x80\x99s \xe2\x80\xa6ClLet expressions are not permitted in this context, so it \xe2\x80\xa6CmLinker flavors available externally through command line (\xe2\x80\xa6CkThis struct represents a lint expectation and holds all \xe2\x80\xa6AiHow a lint level was set.CaInput argument for <code>tcx.lit_to_const</code>.CaContextual state for the type-liveness coroutine.CkThe maximum number of bytes that we\xe2\x80\x99ll allocate space \xe2\x80\xa6BiMaximum number of suggestions to be shownCmMetadata header which includes <code>METADATA_VERSION</code>.0CeTrait for callbacks handling asynchronous machine \xe2\x80\xa60ClA trait for machine-specific errors (or other \xe2\x80\x9cmachine \xe2\x80\xa60CgWe passed through a <code>macro_rules!</code> statementDjThe scope introduced by a <code>macro_rules!</code> macro. This starts \xe2\x80\xa6EhNames introduced by <code>#[macro_use]</code> attributes on <code>extern crate</code>\xe2\x80\xa6CjThe state of the main thread. Implementation detail of \xe2\x80\xa6DjAn RAII read lock guard returned by <code>RwLockReadGuard::map</code>, \xe2\x80\xa6DhA struct like <code>Markdown</code> that renders the markdown with a \xe2\x80\xa6BiA branch in the output of match lowering.BbA live-variable dataflow analysis.0CjThere is not enough memory (on the host) to perform an \xe2\x80\xa60CnArguments of a method: the receiver and all the additional \xe2\x80\xa6CnWhether extra span comments are included when dumping MIR, \xe2\x80\xa6CeA little trait that\xe2\x80\x99s useful to be inherited by \xe2\x80\xa60BbDescription of an elided lifetime.BlExpected 1 char, but more than 1 were found.EhLike <code>Mul</code>, but returns <code>(T, bool)</code> of both the wrapped result \xe2\x80\xa60BoUser error: <code>[std#x#y]</code> is not validCkDoes this have infer/placeholder/param, free regions or \xe2\x80\xa6CeRecords a possibly-private value, type, or module \xe2\x80\xa6CgIntermediate format to store the hir id of the root \xe2\x80\xa6CbSee the comment on <code>ParserReplacement</code>.CmA macro nonterminal, known in documentation as a fragment \xe2\x80\xa6BlThe layout of the type is not yet supported.EfMatching <code>dyn Trait</code> with a supertrait of <code>Trait</code>. The index \xe2\x80\xa600FiA type like <code>Box&lt;Foo&lt;&#39;a&gt; + &#39;b&gt;</code> is WF only if <code>&#39;b: &#39;a</code>.00CnThe reason why we incurred this obligation; used for error \xe2\x80\xa600ChRepresents a bound for an opaque we are checking the \xe2\x80\xa600C`An overloaded autoderef step, representing a \xe2\x80\xa6DcAn implicit call to <code>Deref(Mut)::deref(_mut)</code> before \xe2\x80\xa6ChManually overrides the code that the supervisor will \xe2\x80\xa6DiThe <code>path_statements</code> lint detects path statements with no \xe2\x80\xa6CmInformation about trait and type parents is tracked while \xe2\x80\xa6CnTracks bindings resolved within a pattern. This serves two \xe2\x80\xa6CdThe syntax location of a given pattern. Used for \xe2\x80\xa6BiThe <code>new_unchecked</code> lang item.BhCommon capabilities of placeholder kinds000CjPointer related casts that are done by coercions. Note \xe2\x80\xa60ChA pointer coercion. More information can be found in \xe2\x80\xa6ClThis struct holds the data needed to create the Polonius \xe2\x80\xa6BlRepresents <code>#[proc_macro_derive]</code>0CnThe projection cache. Unlike the standard caches, this can \xe2\x80\xa600CeAn unevaluated const coming from an associated const.0000DgWhen attempting to resolve <code>&lt;T as TraitRef&gt;::Name</code> \xe2\x80\xa6ClThe \xe2\x80\x9cextra\xe2\x80\x9d information a pointer has over a regular \xe2\x80\xa60CmWhen getting the AllocId of a pointer, some extra data is \xe2\x80\xa60CjTracks \xe2\x80\x98side effects\xe2\x80\x99 for a particular query. This \xe2\x80\xa6BjDescription of a frame in the query stack.CnCasting raw pointer or function pointer to an integer. Not \xe2\x80\xa6BiA non-layout error is reported elsewhere.DbA lifetime predicate (e.g., <code>&#39;a: &#39;b + &#39;c</code>).0D`Combines a <code>FreeRegionMap</code> and a <code>TyCtxt</code>.BiA byte offset relative to file beginning.BkSomething was \xe2\x80\x9cremainded\xe2\x80\x9d by 0 (x % 0).0Cganon consts used as the length of a repeat expr are \xe2\x80\xa6000ClThe impl should replace existing impls [X1, ..], because \xe2\x80\xa6CcExtension trait used to conveniently convert to \xe2\x80\xa6CdInformation needed for running a bundle of doctests.CeUnderlying implementation of <code>RustString</code>.DhSee the <code>rvalue_candidates</code> field for more information on \xe2\x80\xa6EgThe <code>stable_features</code> lint detects a <code>feature</code> attribute that \xe2\x80\xa60DfThe <code>static_mut_refs</code> lint checks for shared or mutable \xe2\x80\xa6CmWhen performing resolution, it is typically the case that \xe2\x80\xa600CnA reference to the SelfProfiler. It can be cloned and sent \xe2\x80\xa6CgWrite the discriminant for a variant to the enum Place.BgAppears on <code>SetDiscriminant</code>1AmGrants shared mutable access.0CbThe impl is a specialization of an existing child.ClVarious parts of MIR building introduce temporaries that \xe2\x80\xa6BgReturn type must be <code>Sized</code>.00AjTrack which names to skip.CkCreates a string slice corresponding to the specified span.CeHelper struct to render all source code to HTML pagesCgThe source file lines in difference list form. This \xe2\x80\xa6EdUsed to construct a <code>SourceMap</code> with <code>SourceMap::with_inputs</code>.CmA fixed-column-size, variable-row-size 2D bit matrix with \xe2\x80\xa6AkThe size of src is overflowBkProtected against any kind of invalidation.EhLike <code>Sub</code>, but returns <code>(T, bool)</code> of both the wrapped result \xe2\x80\xa60CdThe origin of a <code>r1 &lt;= r2</code> constraint.0BlA <code>yield</code> point in the coroutine.CmA struct representing a macro definition in \xe2\x80\x9clowered\xe2\x80\x9d \xe2\x80\xa6CiRepresents a thing that maps token trees to Macro ResultsCcTarget modifiers - abi or exploit mitigations flagsBiDetails of premature program termination.0CiThis is the summary or index data part of the ThinLTO \xe2\x80\xa6AcLLVMThreadLocalModeCgCompiler-generated accessor for thread locals which \xe2\x80\xa60000000CkImplement this for types that can be turned into stable \xe2\x80\xa6DfA trait ascription type, which is <code>impl Trait</code> within a \xe2\x80\xa6DfWhat to do when a node is examined or becomes <code>Settled</code> \xe2\x80\xa6DhThe <code>unexpected_cfgs</code> lint detects unexpected conditional \xe2\x80\xa60EaThe <code>unreachable_pub</code> lint triggers for <code>pub</code> items not \xe2\x80\xa6DcThe <code>unused_features</code> lint detects unused or unknown \xe2\x80\xa60DiThe <code>unused_must_use</code> lint detects unused result of a type \xe2\x80\xa6BeError E0426: use of undeclared label.CjData must be immutable but not aliasable. This kind of \xe2\x80\xa60AaError code: E0541D`A marker trait specifying that <code>Self</code> can consume \xe2\x80\xa6CbGo from a safe fn pointer to an unsafe fn pointer.00BaSupport marking impl as unstable.00000EhUsed by both <code>UnusedParens</code> and <code>UnusedBraces</code> to prevent code \xe2\x80\xa6CkIndicates that the landing pad is finished and that the \xe2\x80\xa60CmA builder that allows efficiently and easily constructing \xe2\x80\xa6AaValidation error.0CmThe file was present, but compiled with a different rustc \xe2\x80\xa6CjThe user mandated a version and the current version of \xe2\x80\xa6AlWriting to read-only memory.0DcWe don\xe2\x80\x99t own or consume a <code>T</code>, but we can produce one.CkThis excludes delayed bugs. Used for early aborts after \xe2\x80\xa6EdRegisters <code>from</code> as an entry point to this drop tree, at <code>to</code>.ChAdd a link script embedded in the target, if applicable.CdIf true, add the new const (the promoted) to the \xe2\x80\xa6BgAdd a trait bound for <code>did</code>.DkAdd a global value to a list to be stored in the <code>llvm.used</code> \xe2\x80\xa6DkAdjust allocation from the ones in <code>tcx</code> to a custom Machine \xe2\x80\xa6CfCalled after expansion. Return value instructs the \xe2\x80\xa60CjCalled immediately after a stack frame got popped, but \xe2\x80\xa60CjGives the machine a chance to detect more misalignment \xe2\x80\xa60ClThis is used to check that we are not leaving references \xe2\x80\xa6CiRetrieve all items in the local crate that have a MIR \xe2\x80\xa6CiRetrieve all items of the local crate that have a MIR \xe2\x80\xa60ChThis module is responsible for managing the absolute \xe2\x80\xa6B`Ptr-int-cast module global data.0CmAllocates the elements of this iterator into a contiguous \xe2\x80\xa6DkDirectly returns an <code>Allocation</code> containing an absolute path \xe2\x80\xa6CnDetermines whether or not allow_two_phase_borrow is set on \xe2\x80\xa6CiThe list of unicode scripts allowed to be used in the \xe2\x80\xa60CjChecks if a span is \xe2\x80\x9cinternal\xe2\x80\x9d to a macro in which \xe2\x80\xa6ChReport an ambiguity error, where there were multiple \xe2\x80\xa6DcAccording to <code>rustc_resolve</code>, these links are ambiguous.AhAnalysis starting point.CmAnnotate the first argument and return type of a function \xe2\x80\xa6CfIs this a single line, multiline or multiline span \xe2\x80\xa6Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6000000CiRead from AnonSocket and return the number of bytes read.CnApplies overrides for codegen fn attrs. These often have a \xe2\x80\xa6DfReturns the set of inference variables contained in <code>args</code>.CiInterpret these generic args as the args of an inline \xe2\x80\xa60DkLike <code>tcx.local_def_id_to_hir_id()</code>, but skips calling it on \xe2\x80\xa6CkReturns an rvalue suitable for use until the end of the \xe2\x80\xa6CcPossibly \xe2\x80\x9cdeserialize\xe2\x80\x9d the attribute into a \xe2\x80\xa6C`The caller must have flooded <code>place</code>.ClWhen inside the LHS of an assignment to a field, this is \xe2\x80\xa6DkBuild a (possibly empty) <code>href</code> attribute (a key-value pair) \xe2\x80\xa6CiMaps from a trait/impl item to the trait/impl item \xe2\x80\x9c\xe2\x80\xa6000000EgReturns the <code>DefId</code> of the <code>AsyncGenReady</code> lang item if it is \xe2\x80\xa6BoThe available depth of a given goal, immutable.CkEquivalent setting as RUST_BACKTRACE on encountering an \xe2\x80\xa6BkWhich style to use for printing backtraces.01CiFind the first stack frame that is within the current \xe2\x80\xa6ClStatement index of Eq/Ne assignment that can be removed. \xe2\x80\xa6CdGenerates a string from the operator and both sides.ChDoes this bitwise operation change <code>out_vec</code>?CnThe number of threads which are blocked in user code. This \xe2\x80\xa6CfReturns the bool if <code>self</code> is a boolean \xe2\x80\xa60ClThe set of locals that are borrowed at some point in the \xe2\x80\xa60BnSet of SSA locals that are immutably borrowed.0CkReturns the return type; it always return first element \xe2\x80\xa6AjType of the constant valueDjBuilds a \xe2\x80\x9ccall\xe2\x80\x9d shim for <code>instance</code>. The shim calls the \xe2\x80\xa6AlBuilds the dependency graph.DfReturns <code>true</code> if there is a reason to build the dep graph.BhBuild a drop tree for a breakable scope.CnMinimum number of bits in #[repr(C)] enum. Defaults to the \xe2\x80\xa6CjMinimum size of #[repr(C)] enums (default c_int::BITS, \xe2\x80\xa6CdReturns the count and total width of the list items.EfReturns the <code>DefId</code> of the <code>call_ref_future</code> lang item if it \xe2\x80\xa6CcCaller location propagated if this function has \xe2\x80\xa6BdCan the current token begin a bound?DkLow-level cast helper function. Converts an apfloat <code>f</code> into \xe2\x80\xa6CjControls whether alignment of memory accesses is being \xe2\x80\xa6AlControls alignment checking.01BmWhether to check alignment during evaluation.0CfRuns various checks on <code>#[doc]</code> attributes.DdThis function confirms that the <code>Drop</code> implementation \xe2\x80\xa6CcChecks, and emits an error when a stability (or \xe2\x80\xa60DjChecks if <code>#[link_name]</code> is applied to an item other than a \xe2\x80\xa6ClChecks the name of a lint for its existence, and whether \xe2\x80\xa6BdChecks the attributes in the module.000000CmPerform monomorphization-time checking on this item. This \xe2\x80\xa6000000DgChecks if <code>#[no_mangle]</code> is applied to a function or static.AkType check a slice pattern.BbChecks a pointer for misalignment.ClWhether or not to check for recursive opaque types. This \xe2\x80\xa6BiChecks if an item is stable or error out.CmHelper function used inside shims of foreign functions to \xe2\x80\xa6DiChecks that <code>doc(test(...))</code> attribute contains only valid \xe2\x80\xa6CnFIXME: Move this check out of typeck, since it\xe2\x80\x99ll easily \xe2\x80\xa6CjIn a type definition, we check that to ensure that the \xe2\x80\xa6De<code>hir_id</code>s that has been checked. This is used to avoid \xe2\x80\xa6DiModifies the MIR patch so that the drop flag of <code>path</code> (if \xe2\x80\xa6CiRepresents the maximum calling capability of the closure.000000000CiGiven a reference to a closure type, extracts all the \xe2\x80\xa6BhCodegen options to hand to the compiler.CiThe main worker for the string comparison intrinsics, \xe2\x80\xa6CnSearches all nodes reachable from the current start nodes. \xe2\x80\xa6CnBuilds a hashmap that maps from the universal regions that \xe2\x80\xa6CfComputes the (non-lexical) regions from the input MIR.CfEvaluates a constant without providing any generic \xe2\x80\xa6EfReturns the <code>DefId</code> of the <code>const_panic_fmt</code> lang item if it \xe2\x80\xa6AjCache of constant strings,DeThe SCC computed from <code>constraints</code> and the constraint \xe2\x80\xa6CkAccess to the SCC constraint graph. This can be used to \xe2\x80\xa61CiConstruct MIR for an item that has had errors in type \xe2\x80\xa6BdSimulates consumption of an operand.CiWhether this rib kind contains generic parameters, as \xe2\x80\xa6EeReturns <code>true</code> if <code>sup_region</code> contains all the CFG points thatDkReturns <code>true</code> if <code>expr</code> contains a return expressionDeDetermines the result of a <code>NullaryOp::ContractChecks</code> \xe2\x80\xa60CfTries to convert a macro use into a short hand try \xe2\x80\xa6DiDrops that need to be done on paths to the <code>CoroutineDrop</code> \xe2\x80\xa6EfReturns the <code>DefId</code> of the <code>coroutine_state</code> lang item if it \xe2\x80\xa6EcReturns the <code>DefId</code> of the <code>coroutine</code> lang item if it is \xe2\x80\xa6EfReturns the <code>DefId</code> of the <code>coroutine_yield</code> lang item if it \xe2\x80\xa6CmReturns the number of chars and bytes that match from the \xe2\x80\xa6BmRetrieve all functions defined in this crate.0CmGets the hash for the host proc macro. Used to support -Z \xe2\x80\xa6000000ClGets a map with the variances of every item in the local \xe2\x80\xa6000000CgFor each coverage span extracted from MIR, create a \xe2\x80\xa6CiThis allows us to recover when the user forget to add \xe2\x80\xa6DiWhether the path from <code>head</code> to the current stack entry is \xe2\x80\xa6G`Each binding (<code>ref mut var</code>/<code>ref var</code>/<code>mut var</code>/<code>var</code>, where the \xe2\x80\xa6CnAll of the identifiers (items) declared by this node. This \xe2\x80\xa6CeDecodes an <code>AllocId</code> in a thread-safe way.CnImplements a map from integer indices to data. Rather than \xe2\x80\xa6AoGets the number of definitions.CbThis function checks if sysroot is found using \xe2\x80\xa6DjWhether or not to emit <code>uwtable</code> attributes on functions if \xe2\x80\xa6C`The span where the hidden type was instantiated.EcReturns the <code>DefId</code> of the <code>deref_mut</code> lang item if it is \xe2\x80\xa6CfThe type <code>T::Deref</code> we are dereferencing to0CnReturns the compiler desugaring that created this span, or \xe2\x80\xa6CmDo not emit code that uses the \xe2\x80\x9cred zone\xe2\x80\x9d, if the ABI \xe2\x80\xa6CbReturns the type of the discriminant of this type.BhGet the discriminant type for this type.0CnReturns the DropIdx for the innermost drop if the function \xe2\x80\xa6BcPerform the actual borrow checking.CbDocument items that have <code>doc(hidden)</code>.DjWhether to document hidden items. This is stored in <code>Cache</code> \xe2\x80\xa6CmCreates one-half of the drop ladder for a list of fields, \xe2\x80\xa6BkDo not call this query directly: invoke \xe2\x80\xa6000000ChWhether dynamic linking is available on this target. \xe2\x80\xa6CjConsume a sequence produced by a metavar expansion, if \xe2\x80\xa6DkWhether the linker is instructed to add a <code>GNU_EH_FRAME</code> ELF \xe2\x80\xa6DjStart elaborating <code>Sized</code> - reqd during coherence checking, \xe2\x80\xa6000AmEmit a structured diagnostic.BnThe entry point for the diagnostics generationEhFor every potentially drop()-touched region <code>region</code> in <code>local</code>\xe2\x80\xa6EbEmit <code>loan_killed_at</code> and <code>cfg_edge</code> facts at the same time.CgEmit facts needed for move/init analysis: moves and \xe2\x80\xa6BiEmulates a call to a <code>DynSym</code>.ClEncode a node that was promoted from the previous graph. \xe2\x80\xa6CnEnsure that either this query has all green inputs or been \xe2\x80\xa6ClCreates a nested evaluation context that shares the same \xe2\x80\xa6BcThe list of all EpollEventInterest.0ClProduce \\x escapes for non-ASCII, and use \\x rather than \xe2\x80\xa6CcIdentify all locals that are not eligible for SROA.CgEvaluates a constant and turns it into a type-level \xe2\x80\xa6CfEvaluate a constant and convert it to a type level \xe2\x80\xa6000000CgReturns all locals with projections that have their \xe2\x80\xa6CcPushes a pattern onto the column, expanding any \xe2\x80\xa6DiParse and expand a single <code>cfg_attr</code> attribute into a list \xe2\x80\xa6CjReturns span for the macro which originally caused the \xe2\x80\xa6CkReturns span for the macro which originally caused this \xe2\x80\xa60CcReturns the current expansion kind\xe2\x80\x99s description.DbPanics if called on any type other than <code>Box&lt;T&gt;</code>.CgParses a single lifetime <code>&#39;a</code> or panics.FeExplain why <code>if</code> expressions without <code>else</code> evaluate to <code>()</code> and \xe2\x80\xa6DaWrap the given <code>expr</code> in a terminating scope using \xe2\x80\xa6CiThe unexpected expr\xe2\x80\x99s precedence (used in match arm \xe2\x80\xa6CgGet the search patterns to use for the given expressionEdThe span of the <code>extern</code> in an <code>extern { ... }</code> block, if any.BhTry to find a crate with the given name.BgRetrieve a list of all external crates.0DiMaps <code>crate_id</code> of items to a crate name and html_root_url \xe2\x80\xa6DhLater on moved through <code>clean::Crate</code> into <code>cache</code>CnOnly here so that they can be filtered through the rustdoc \xe2\x80\xa6CmIf this is true, then the feature is enabled, but we need \xe2\x80\xa6CnCan only be fed before queries are run, and is thus exempt \xe2\x80\xa6CkStack of paths to files loaded by out-of-line module items,DcFill the current <code>CheckCfg</code> with all the well known cfgsDkRemove attributes from <code>normal</code> that should not be inherited \xe2\x80\xa6CfFilters the set of candidates to remove those that \xe2\x80\xa6ClPerforms final import resolution, consistency checks and \xe2\x80\xa6CmThe \xe2\x80\x9ctop-most\xe2\x80\x9d (ie. least specialized) specialization \xe2\x80\xa6000DkGiven a <code>hir::Block</code>, get the span of its last expression or \xe2\x80\xa60CmLook at all the associated functions without receivers in \xe2\x80\xa6EgGiven the span of <code>some_macro!(args);</code>, gives the span of <code>(</code> \xe2\x80\xa6EfFinds the closest descendant of <code>self</code> for which <code>f</code> returns \xe2\x80\xa6DhChecks if the given <code>lookup</code> identifier is similar to any \xe2\x80\xa6DeImplements the <code>fluent_messages</code> macro, which performs \xe2\x80\xa6DiFormat the message arguments for the <code>assert(cond, msg..)</code> \xe2\x80\xa6Aadon\xe2\x80\x99t override!DfCall <code>emit</code> function with every artifact type currently \xe2\x80\xa6ClReturns a list of all <code>extern</code> blocks of a crate.000000BjThe list of foreign modules in this crate.EfReturns the <code>DefId</code> of the <code>format_argument</code> lang item if it \xe2\x80\xa6DiPre-interned <code>Infer(ty::FreshFloatTy(n))</code> for small values \xe2\x80\xa6DeProduces a <code>Tree</code> which represents a sequence of bytes \xe2\x80\xa6BdCreate a new type from a given kind.CkFor each FRU expression, record the normalized types of \xe2\x80\xa60CkConvenience helper to make a constant that refers to the fnCkWe only want this function to type-check, since we will \xe2\x80\xa6ClReturn the <code>extra</code> field of the given allocation.CbReturns the binder information of a meta-variable.CaGet an \xe2\x80\x9cOS\xe2\x80\x9d thread ID for the current thread.CmReturns the time it took to go from the parsed AST to the \xe2\x80\xa6DkThe token is an identifier, but not <code>_</code>. We prohibit passing \xe2\x80\xa6DcReturn the name of the provided <code>Ty</code> (that must be a \xe2\x80\xa6CnGet the number of threads that will be used for the thread \xe2\x80\xa6CmGets the parent expression, if any \xe2\x80\x93- this is useful to \xe2\x80\xa6CbCheck the provisional cache for any result for \xe2\x80\xa6DhTakes a pointer that is the first chunk of a <code>TypeId</code> and \xe2\x80\xa6CmGets the string for an explicit self declaration, e.g. \xe2\x80\x9c\xe2\x80\xa6DjAttempts to get a handle to the source text. Returns <code>None</code> \xe2\x80\xa6BaGet the name of the given thread.ChGet the thread name for the thread with the given index.BhClosure to compute the name of a thread.CcDecodes all trait impls in the crate (for rustdoc).EfReturns the <code>DefId</code> of the <code>global_alloc_ty</code> lang item if it \xe2\x80\xa6CfStarts the worker threads (if that has not already \xe2\x80\xa6EgGiven a <code>Span</code>, return a span ending in the closest <code>{</code>. This \xe2\x80\xa6ClGrabs the access that caused a segfault and logs it down \xe2\x80\xa6EfDoes <code>#[derive(...)]</code> attribute with the given <code>ExpnId</code> have \xe2\x80\xa6FdIf <code>ty</code> is known to have a <code>iter</code> or <code>iter_mut</code> method, returns \xe2\x80\xa6DcReturns <code>true</code> if any of the span labels is displayable.0Cg<code>true</code> if we ate a <code>where</code> token.EhGiven that <code>other_ty</code> is the same as a type argument for <code>name</code>\xe2\x80\xa6Bg1-based, character offset in self.text.DiReturns an iterator of the <code>DefId</code>s for all body-owners in \xe2\x80\xa6AgAll items in the crate.000000CkGets the attributes on the crate. This is preferable to \xe2\x80\xa6CmReturns an iterator for the nodes in the ancestor tree of \xe2\x80\xa6CmHIR ty lowering: Lowers type-system entities from the HIR \xe2\x80\xa6DdAdditional data used for decoding <code>HygieneData</code> (e.g. \xe2\x80\xa6CeCreates a new unsuffixed integer literal with the \xe2\x80\xa6ClReturns a boolean indicating whether the specified crate \xe2\x80\xa6BaThe implementations of the trait.CkNumber of implicit inputs \xe2\x80\x93 notably the \xe2\x80\x9cenvironment\xe2\x80\x9dBkThe resolution of <code>module_path</code>:EgUsed to detect possible <code>if let</code> written without <code>let</code> and to \xe2\x80\xa6CfThis flag indicates whether source links should be \xe2\x80\xa6CdIncrement the happens-before clock at a known index.CiIncrement the vector clock at a known index this will \xe2\x80\xa6EcReturns the <code>DefId</code> of the <code>index_mut</code> lang item if it is \xe2\x80\xa6CjMaps from the node id of an item to the first inferred \xe2\x80\xa6CmIf the provided DefId is a method in a trait impl, return \xe2\x80\xa6Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6000000CmThe phase at which this MIR should be \xe2\x80\x9cinjected\xe2\x80\x9d into \xe2\x80\xa6BgInline literals into the format string.AdIndex into input_vecAaGet the instance.0DjSame as <code>Self::instantiate</code>, but if there is no generics to \xe2\x80\xa6DhThe <code>#[instruction_set(set)]</code> attribute. Indicates if the \xe2\x80\xa6CnReturns the path suitable for reading from the file system \xe2\x80\xa60BdAll intra-doc links resolved so far.CbA random string generated per invocation of rustc.0DdReturns <code>true</code> if all possible numbers are valid, i.e \xe2\x80\xa6DlIs <code>def_id</code> of <code>assert!</code> or <code>debug_assert!</code>ClReturns whether registers in this class can only be used \xe2\x80\xa6EoIf the type is a <code>Coroutine</code>, <code>Closure</code>, or <code>CoroutineClosure</code>EgReturns <code>true</code> if <code>def_id</code> refers to a closure, coroutine, or \xe2\x80\xa6BoChecks if the given expression is a call to \xe2\x80\xa6DiReturns <code>true</code> if this is a foreign item (i.e., linked via \xe2\x80\xa6BgReturns whether this is a foreign item.0DfReturns true if a given Macro <code>DefId</code> is a format macro \xe2\x80\xa6DhWhether this coercion is written with an <code>as</code> cast in the \xe2\x80\xa6DkReturns <code>true</code> if this instance is instantiable - whether it \xe2\x80\xa6FeReturns <code>true</code> if the token is a given keyword, <code>kw</code> or if <code>case</code>\xe2\x80\xa6CjWhether a target toolchain is like Android, implying a \xe2\x80\xa6CjWhether the target toolchain is like Solaris\xe2\x80\x99s. Only \xe2\x80\xa6CmWhether the target is like Windows. This is a combination \xe2\x80\xa6DjReturns <code>true</code> if the commenting style cannot span multiple \xe2\x80\xa6DcReturns <code>true</code> if the lint is allowed in the current \xe2\x80\xa6EgReturns whether the <code>loan_idx</code> is live at the given <code>location</code>\xe2\x80\xa6EfWhen using <code>-Zpolonius=next</code>, returns whether the <code>loan_idx</code> \xe2\x80\xa6CjIs this a pre-parsed expression dropped into the token \xe2\x80\xa6DiReturns <code>true</code> if this place context represents a use that \xe2\x80\xa6CiReturns whether the \xe2\x80\x9cnext\xe2\x80\x9d version of polonius is \xe2\x80\xa6ClReturns true if the terminator itself is assumed to have \xe2\x80\xa6ClIf true, this node\xe2\x80\x99s execution count can be assumed to \xe2\x80\xa6DgReturns <code>true</code> if this is <code>PhantomData&lt;T&gt;</code>.DiSimilar to <code>Ty::is_primitive</code>, but also considers inferred \xe2\x80\xa6DhReturns <code>true</code> if the line with the given line number was \xe2\x80\xa6CnHas a replacement of this block\xe2\x80\x99s terminator been queued \xe2\x80\xa6DgChecks if the method call given in <code>expr</code> belongs to the \xe2\x80\xa6EeReturns <code>true</code> if <code>def_id</code> refers to a definition that does \xe2\x80\xa6CjReturns <code>true</code> if this type can be left uninit.DcReturns <code>true</code> if the token is a keyword used in the \xe2\x80\xa60DhReturns <code>true</code> if the mono item is user-defined (i.e. not \xe2\x80\xa6AfCheck if write locked.CmType metadata identifiers (using Itanium C++ ABI mangling \xe2\x80\xa6CnReturns an iterator over the items in the map in insertion \xe2\x80\xa6DhReturns an iterator over each <code>CoroutineSavedLocal</code> along \xe2\x80\xa6DbA jobserver reference which we pass on to <code>GlobalCtxt</code>.CnA jobserver reference used to release then acquire a token \xe2\x80\xa60ClGets a jobserver reference which is used to release then \xe2\x80\xa6ClReturns the landing/cleanup pad wrapper around the given \xe2\x80\xa6CnReturns a shape for the last argument which is going to be \xe2\x80\xa6B`The width of the last line in s.CgSpan of the last opening brace seen, used for error \xe2\x80\xa6CmThis is public because it is used by Aquascope to analyze \xe2\x80\xa6CjThe range of distances from the root of what\xe2\x80\x99s being \xe2\x80\xa6CfEnvironment variables to be removed for the linker \xe2\x80\xa6ChArguments supported by both underlying linker and cc \xe2\x80\xa6ClConvenience function for creating a literal operand, one \xe2\x80\xa6BcNumber of words per each live node.ClEach expansion should have an associated expansion data, \xe2\x80\xa6CeEagerly populated map of all local macro definitions.DhIf the local is only used once in <code>visitable</code> returns the \xe2\x80\xa6CkLocale resources for diagnostic messages - a string the \xe2\x80\xa60CiLooks up source information about a <code>BytePos</code>.EaType-check <code>*oprnd_expr</code> with <code>oprnd_expr</code> type-checked \xe2\x80\xa6ClLooks up the file\xe2\x80\x99s (1-based) line number and (0-based \xe2\x80\xa6EbType-check <code>*base_expr[index_expr]</code> with <code>base_expr</code> and \xe2\x80\xa6DfEquivalent to a <code>lookup_path</code> after splitting the input \xe2\x80\xa6DlLower a <code>hir::ConstArg</code> to a (type-level) <code>ty::Const</code>.EaDesugar <code>ExprKind::Yeet</code> from: <code>do yeet &lt;expr&gt;</code> into:CiLower an opaque type (i.e., an existential impl-Trait \xe2\x80\xa6DgLower a slice pattern of form <code>[pat_0, ..., pat_n]</code> into \xe2\x80\xa6CgEvaluate the scrutinee and add the PlaceMention for it.CfThis pass lowers calls to core::slice::len to just \xe2\x80\xa6BmIs Apple\xe2\x80\x99s CPU subtype <code>arm64e</code>sClReturns an iterator of macro expansions that created the \xe2\x80\xa6DcShow macro backtraces. (rustc: see <code>-Z macro-backtrace</code>)Clname of macro that was applied (e.g., \xe2\x80\x9cfoo!\xe2\x80\x9d or \xe2\x80\x9c#[\xe2\x80\xa6ClA set of pairs corresponding to modules, where the first \xe2\x80\xa6B`Creates zero or more impl items.AoCreate a fake nullary function.CnMakes the projection type for the named associated type in \xe2\x80\xa6DiReturns LLVM\xe2\x80\x99s <code>coverage::CovMapVersion::CurrentVersion</code> \xe2\x80\xa6CnWhether to generate a table of contents on the output file \xe2\x80\xa6CmReturns the maximum number of threads that Rayon supports \xe2\x80\xa6EmKeep inline and reference links <code>[]</code>, but skip autolinks <code>&lt;&gt;</code> \xe2\x80\xa6CkTries to extract an inference variable from a type or a \xe2\x80\xa60CkWhen a non-atomic access happens on a location that has \xe2\x80\xa6CjFurther items that were mentioned in this function and \xe2\x80\xa6CjDetermines how or whether the MergeFunctions LLVM pass \xe2\x80\xa6CiThe metadata loader used to load rlib and dylib metadata.0CmChanges underlying storage from array to hashmap if array \xe2\x80\xa6Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6000000DiLike <code>Terminator::successors</code> but tries to use information \xe2\x80\xa6B`This machine\xe2\x80\x99s monotone clock.0DjThe size at which the <code>large_assignments</code> lint starts being \xe2\x80\xa6000CjSpans for move size lints already emitted. Helps avoid \xe2\x80\xa6CfLocations of multi-byte characters in the source code.BcChecks validity of naked functions.BiId of the last visited negated expressionCiDefault initial permission of an unprotected interior \xe2\x80\xa6DjCreates a new <code>SourceFile</code>. If a file already exists in the \xe2\x80\xa6CnA user type annotation with additional bounds that need to \xe2\x80\xa6CkCreates a fresh region variable with the next available \xe2\x80\xa60DkWhether to disable the default <code>extern crate my_crate;</code> when \xe2\x80\xa6Bk\xe2\x80\x9cnot a function, impl block, or module\xe2\x80\x9dCmReturn the number of uses if a local that are not \xe2\x80\x9cDeref\xe2\x80\xa6BjNumber of region variables created so far.0ChReturns the maximum value for the given numeric type \xe2\x80\xa6ChReturns the minimum value for the given numeric type \xe2\x80\xa6ClStack of open delimiters and their spans. Used for error \xe2\x80\xa6CjSanity check to ensure that we open and close sections \xe2\x80\xa6DgPlace of the RHS of the =, or the subject of the <code>match</code> \xe2\x80\xa6DgIf the <code>def_id</code> is an associated type that was desugared \xe2\x80\xa6CmThe block to branch to if the guard or a nested candidate \xe2\x80\xa6CjThe block to branch to if this arm had a guard and the \xe2\x80\xa6Dh<code>ctxt.outer_expn_data()</code> is equivalent to but faster than \xe2\x80\xa6ChThe name of the output object file. Used for setting \xe2\x80\xa6DkTries to tell whether <code>param</code> resolves to something certain, \xe2\x80\xa6DhThe <code>Span</code> for the tokens in the previous macro expansion \xe2\x80\xa6DjReturns parent HIR node of node with this <code>hir_id</code>. Returns \xe2\x80\xa6EaParses a single argument in the angle arguments <code>&lt;...&gt;</code> of a \xe2\x80\xa6CfParses an inner part of an attribute (the path and \xe2\x80\xa6EgMatches <code>attribute = # ! [ meta_item ]</code>. <code>inner_parse_policy</code> \xe2\x80\xa6DhConverts strings provided as <code>--check-cfg [specs]</code> into a \xe2\x80\xa6D`Parse a codeblock. Accounts for &gt;3 backticks and language \xe2\x80\xa6E`Parse a const argument, e.g. <code>&lt;3&gt;</code>. It is assumed the angle \xe2\x80\xa6C`Parses constness: <code>const</code> or nothing.CmParses a source module as a crate. This is the main entry \xe2\x80\xa6DkParses the condition of a <code>if</code> or <code>while</code> expression.EcParses an <code>else { ... }</code> expression (<code>else</code> token already \xe2\x80\xa6DiParses <code>loop { ... }</code> (<code>loop</code> token already eaten).CiParse <code>&quot;do&quot; &quot;yeet&quot; expr?</code>.BjParses an element of a struct declaration.DiParses the parameter list of a function, including the <code>(</code> \xe2\x80\xa6CeParses a statement, including the trailing semicolon.EdParses an <code>async move? {...}</code> or <code>gen move? {...}</code> expression.AkParses an enum declaration.AnParses an implementation item.BmParses one of the items allowed by the flags.ChParse the next token tree of the input looking for a \xe2\x80\xa6AoParse a meta item per RFC 1559.ChParse <code>&amp;pat</code> / <code>&amp;mut pat</code>.EgParses <code>ident</code> or <code>ident @ pat</code>. Used by the copy foo and ref \xe2\x80\xa6FdParses the range pattern end form <code>&quot;..&quot; | &quot;...&quot; | &quot;..=&quot; ;</code>.BeParse a buffer with specified contextEhRead the content of a <code>stable</code>/<code>rustc_const_stable</code> attribute, \xe2\x80\xa6EbParses a <code>try {...}</code> expression (<code>try</code> token already eaten).ClParses a function pointer type (<code>TyKind::FnPtr</code>).CdResolutions for nodes that have a single resolution.0CjStores the types which were implicitly dereferenced in \xe2\x80\xa60CjRepresents the place matched on by a deref pattern\xe2\x80\x99s \xe2\x80\xa6CkChecks for common cases of \xe2\x80\x9ccatchall\xe2\x80\x9d patterns that \xe2\x80\xa6CgReturns the type of value that this pattern matches \xe2\x80\xa6EcIf <code>Self.kind</code> is <code>ExprKind::DropTemps(expr)</code>, drill down \xe2\x80\xa6CkThe borrowck rules for proving disjointness are applied \xe2\x80\xa6CjHelper function for checking if places conflict with a \xe2\x80\xa60CaGet the pointer size in a specific address space.AmResults of Polonius analysis.CdShould we run Polonius and collect the output facts?DkProduces an iterator which iterates over <code>range</code> in reverse, \xe2\x80\xa6Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6000000CkThe probability of the active thread being preempted at \xe2\x80\xa6000CgSimplified version of the corresponding function in \xe2\x80\xa6hReturns:CcSuggest a different start or end of an inline code.D`Add a primary message. See <code>Diag::primary_message()</code>.DiLike <code>print_def_path</code>, but for <code>DefPathData::Impl</code>.DdPrints an <code>IntRange</code> to a string for diagnostic purposes.BlPrint extra text if the tag has a protector.CjConverts a repr(simd) value into an array of the right \xe2\x80\xa6BjWhich provenance to use for int2ptr casts.BgThe provenance to use for int2ptr casts1CgReturns the type of metadata for (potentially wide) \xe2\x80\xa6DfPush a <code>_</code>-terminated base 62 integer, using the format \xe2\x80\xa60CmPushes another start node onto the stack. If the node has \xe2\x80\xa6CdHelper for pushing to <code>self.suggestions</code>.DdTries to tell whether a <code>QPath</code> resolves to something \xe2\x80\xa6BcRecord a query in-memory cache hit.DiNormalize <code>value</code> in the context of the inference context, \xe2\x80\xa60CdReturns all byte-wise provenance in the given range.EaReturns the <code>DefId</code> of the <code>RangeTo</code> lang item if it is \xe2\x80\xa6ClProc macro descriptions for this crate, if it\xe2\x80\x99s a proc \xe2\x80\xa6AmRead bytes from a byte slice.ClUtility function used to read an allocation data into an \xe2\x80\xa6CaThis function takes in ready list and returns \xe2\x80\xa6EfReturns the <code>DefId</code> of the <code>receiver_target</code> lang item if it \xe2\x80\xa6CmIf we started proving this as a result of trying to prove \xe2\x80\xa600000000000DfThe recursion limit (cached from <code>tcx.recursion_limit(())</code>)00000CjThe maximum recursion limit for potentially infinitely \xe2\x80\xa6000DmSome simple reductions like <code>{ return }</code> =&gt; <code>return</code>EiReturns <code>true</code> if the region <code>r</code> contains the point <code>p</code>.DjThe scope for variables bound in this <code>let</code>; it covers this \xe2\x80\xa6ChRemoves an impl from this set of children. Used when \xe2\x80\xa60De<code>codegen_static</code> will sometimes create a second global \xe2\x80\xa6AkRender md_text as markdown.E`Transforms a <code>DenseBitSet&lt;Local&gt;</code> that contains only locals \xe2\x80\xa6DhIf <code>Some</code>, we will report the current stack every N basic \xe2\x80\xa6CiReport the current instruction being executed every N \xe2\x80\xa601DfReturn a string representing the <code>#[repr]</code> attribute if \xe2\x80\xa6ClConstants that are required to evaluate successfully for \xe2\x80\xa6ClUsed to assemble the required_consts list while building \xe2\x80\xa6DeReturns <code>true</code> if the LLVM version of this instance is \xe2\x80\xa6CkResets the diagnostic error count as well as the cached \xe2\x80\xa6CgResolve instance for a closure with the requested type.BiResolve a closure with the expected kind.1DkResolve paths inside the <code>#[derive(...)]</code> attribute with the \xe2\x80\xa6ClResolves all imports for the crate. This method performs \xe2\x80\xa6DkResolve bindings in a pattern. <code>apply_pattern_bindings</code> must \xe2\x80\xa6CkResolve regions, using the deep normalizer to normalize \xe2\x80\xa60BdResolves regions and reports errors.CiIf present, suffix added to CSS/JavaScript files when \xe2\x80\xa6CkSuffix to add on resource files (if suffix is \xe2\x80\x9c-v2\xe2\x80\x9d \xe2\x80\xa6ChExecutes a retagging operation for a single pointer. \xe2\x80\xa60Ei<em>Return</em> to the given <code>target</code> basic block. Do <em>not</em> use for \xe2\x80\xa6BkA vector reused in Self::compress() and \xe2\x80\xa6DgIf the macro backtrace of <code>span</code> has a macro call at the \xe2\x80\xa6CnDiagnostics only: the \xe2\x80\x98root\xe2\x80\x99 obligation which resulted \xe2\x80\xa6AmConstruction of MIR from HIR.CnReturns all rustc command line options, including metadata \xe2\x80\xa6BmSupport code for encoding and decoding types.AiOptions passed to rustfmtCkThis module analyzes crates to find call sites that can \xe2\x80\xa6CmCaches the results of trait selection. This cache is used \xe2\x80\xa6000EgSet <code>style</code> for <code>line</code>, <code>col_start..col_end</code> range if:CkSet the name of the current thread. The buffer must not \xe2\x80\xa6BaSet the name of the given thread.BeSet the vector to the all-zero vectorCjSets up the callbacks in prior crates which we want to \xe2\x80\xa60ClSetups the dependency graph by loading an existing graph \xe2\x80\xa60CeRender the stability, deprecation and portability \xe2\x80\xa6DiAssuming <code>expected</code> is a reference type, determine whether \xe2\x80\xa6ChWhen an entity with a given name is not available in \xe2\x80\xa6CbBuilds the <code>type defined here</code> message.BnSignals to waiters that the query is complete.ClIf set, this flag causes us to skip the \xe2\x80\x98leak check\xe2\x80\x99 \xe2\x80\xa6ChGiven a test, we partition the input candidates into \xe2\x80\xa6CkReturns the source span \xe2\x80\x93 this is either the supplied \xe2\x80\xa6CmCheck whether span is followed by some specified expected \xe2\x80\xa6Al<code>Span</code> of an itemAm<code>Span</code> of an item.CgPrints out a message with a suggested edit of the code.EeGiven a <code>Span</code>, gets a shorter one until <code>predicate</code> yields \xe2\x80\xa6DjReturns the source snippet as <code>String</code> corresponding to the \xe2\x80\xa6DhGiven a <code>Span</code>, tries to get a shorter span ending before \xe2\x80\xa6CgSpawns an asynchronous task on every thread in this \xe2\x80\xa60DjSpawns a job into every thread of the fork-join scope <code>self</code>\xe2\x80\xa601CeHow to handle split debug information, if at all. \xe2\x80\xa6ChReturns the StableCrateId identifying the crate this \xe2\x80\xa6DiThe <code>stable_crate_id</code> is constructed out of the crate name \xe2\x80\xa6011BjImplements \xe2\x80\x9cStacked Borrows\xe2\x80\x9d.  See \xe2\x80\xa6DiIf <code>Some</code>, we are evaluating the initializer of the static \xe2\x80\xa60CiList of globals for static variables which need to be \xe2\x80\xa6DgSlice of the source text spanning from <code>start</code> until the endCnReturns the deeply last field of nested structures, or the \xe2\x80\xa6CnFor each node, stores the single supernode that all of its \xe2\x80\xa60ChWhen encountering an fn-like type, try accessing the \xe2\x80\xa6DgWe tried to apply the bound to an <code>fn</code> or closure. Check \xe2\x80\xa6DjIf possible, suggest replacing <code>ref</code> with <code>ref mut</code>.DmEmit special messages for unresolved <code>Self</code> and <code>self</code>.DhA convenient alternative to <code>try_super_fold_with</code> for use \xe2\x80\xa60000CnReturns a list of supported types for this register class, \xe2\x80\xa6BeCan this trait be derived for unions?DkComputes how to write the tag of a given variant of enum <code>ty</code>\xe2\x80\xa6CgComputes the tag (if any) for a given type and variant.000000DiIf <code>item</code> is an attribute invocation, remove the attribute \xe2\x80\xa6CgOptions to be set in <code>cfg(target_features)</code>.EbThe <code>#[target_feature(enable = &quot;...&quot;)]</code> attribute and the \xe2\x80\xa6BoSet of enabled features for the current target.0CkDeclares Rust\xe2\x80\x99s target feature names for each target. \xe2\x80\xa6DfA list of features valid for use in <code>#[target_feature]</code> \xe2\x80\xa6DkReturns the scope when the temp created by <code>expr_id</code> will be \xe2\x80\xa6CdCached terminate upon unwinding block and its reasonCfThis is the most subtle part of the match lowering \xe2\x80\xa6CkLowers a condition in a way that ensures that variables \xe2\x80\xa6CkSaving the ThinLTO buffer for embedding in the object file.DhConverts a region inference variable into a <code>ty::Region</code> thatCnThis method is supposed to be used in error messages, so it\xe2\x80\xa6CjConverts the scalar to produce a machine-pointer-sized \xe2\x80\xa60DjConvert <code>self</code> directly into a <code>TokenStream</code> object.0DjPrint the token precisely, without converting <code>$crate</code> into \xe2\x80\xa60DhGiven a type, return all trait impls in scope in <code>module</code> \xe2\x80\xa6DbReturns <code>true</code> if this is an <code>unsafe trait</code>.0000EfReturns the <code>DefId</code> of the <code>transmute_trait</code> lang item if it \xe2\x80\xa6DgLike <code>lookahead</code>, but skips over token trees rather than \xe2\x80\xa6DiConverts a <code>ConstArg</code> in an unambiguous position to one in \xe2\x80\xa6DfConverts a <code>Ty</code> in an unambiguous position to one in an \xe2\x80\xa6FcIf <code>index</code> is a <code>Value::Constant</code>, return the <code>Constant</code> to be \xe2\x80\xa6DhConvert a scalar into a structured <code>Handle</code>. Structurally \xe2\x80\xa6CeTry expanding the macro. Returns the index of the \xe2\x80\xa6CnObtains current value for key without any pointer chasing; \xe2\x80\xa6AlGets an instance for a path.FdMakes an <code>OwnedSlice</code> out of an <code>owner</code> and a <code>slicer</code> function \xe2\x80\xa6DgReturns the origin of the type variable identified by <code>vid</code>.0CgNaked fns can only have trivial binding patterns in \xe2\x80\xa6CeCreates a new unsuffixed integer literal with the \xe2\x80\xa6CgThe raw string literal, with no escaping or processing.EfSets the value of the key <code>a_id</code> to <code>b</code>, attempting to merge \xe2\x80\xa6CiMap universe indexes to information on why we created it.0Fj<code>src</code> is a <em>pointer to</em> a <code>source_ty</code>, and in <code>dest</code> we should \xe2\x80\xa6CkStack of active unwind payloads for the current thread. \xe2\x80\xa6Ei<em>Unwind</em> to the given <code>target</code> basic block. Do <em>not</em> use for \xe2\x80\xa6BjWhether we should use a coloured terminal.ClIf the function we\xe2\x80\x99re checking is a closure, then we\xe2\x80\x99\xe2\x80\xa6DiSpans of all <code>#[macro_use]</code> arguments with arguments, used \xe2\x80\xa6CkReturns the list of template modifiers that can be used \xe2\x80\xa6CeAllows the caller to mutate the valid range. This \xe2\x80\xa6CdReturn a <code>VariantDef</code> given a variant id.CfAll consts are treated as ambiguous consts for the \xe2\x80\xa6CjResolve the lifetimes inside the opaque type, and save \xe2\x80\xa6EgUnary <code>!</code> expressions inside an <code>if</code> condition are lowered by \xe2\x80\xa6BmIndicates which visualizer type this targets.CgThe vtable that was actually referenced by the wide \xe2\x80\xa6000EeWaits for <code>wait_signal</code>. If <code>init_cont</code>, it will first do a \xe2\x80\xa6CkInvoke the appropriate delegate calls for anything that \xe2\x80\xa6DaIndicates whether <code>make_global</code> was called on this \xe2\x80\xa60BeValidity checking for weak lang items0CmThe available whitespace in the left that can be consumed \xe2\x80\xa6BnConstructs a new identifier with a dummy span.CmMerge the lints specified by any lint attributes into the \xe2\x80\xa60BiAvoids running any queries during prints.0BiAppends a labeled span to the diagnostic.DjVersion of <code>push_start_node</code> that is convenient for chained \xe2\x80\xa6CkWraps a block expression in parentheses to ensure valid \xe2\x80\xa6BhWrites the aggregate to the destination.BmWrites the given stream of bytes into memory.fSafetyAmWrite an immediate to a placeClWrite out a human-readable textual representation of the \xe2\x80\xa6Di<code>offset</code> is relative to this allocation reference, not the \xe2\x80\xa6CnOverwrites all provenance in the given range with wildcard \xe2\x80\xa6Dc<code>#[rustc_allocator_zeroed]</code>: a hint to LLVM that the \xe2\x80\xa6DkThe <code>asm_sub_register</code> lint detects using only a subset of a \xe2\x80\xa60BjThe address space (of the target) is full.0ChA non-static method handling the entire enum at once \xe2\x80\xa6ClSpecializing on this trait is allowed because all of the \xe2\x80\xa6BoThe <code>async_drop_in_place</code> lang item.BlThe <code>AsyncGenFinished</code> lang item.CnThis must be passed to allow getting directory handles. If \xe2\x80\xa6CiThe impl was inserted as a new child in this group of \xe2\x80\xa6CjStruct used during mir borrowck to collect bodies with \xe2\x80\xa6CkReplaces the escaping bound vars (late bound regions or \xe2\x80\xa6CoProvides context to a closure called by <code>broadcast</code>.0CnA builtin implementation for some specific traits, used in \xe2\x80\xa600CiList of places that are written to after a successful \xe2\x80\xa60CjThe anonymous region corresponds to a region where the \xe2\x80\xa6CkInformation about a canonical variable that is included \xe2\x80\xa60000ClControls how we canonicalize \xe2\x80\x9cfree regions\xe2\x80\x9d that are \xe2\x80\xa6CmWhether we\xe2\x80\x99re canonicalizing a query input or the query \xe2\x80\xa6DiWe previously captured all of <code>x</code>, but now we capture some \xe2\x80\xa6BhStruct returned by <code>split()</code>.0000DbImplementation of a <code>Fn</code>-family trait by one of the \xe2\x80\xa600CjGo from a non-capturing closure to an fn pointer or an \xe2\x80\xa6CiGo from a non-capturing closure to a fn pointer or an \xe2\x80\xa60CjWe\xe2\x80\x99re proving an trait goal for a coinductive trait, \xe2\x80\xa6CkDo not display this suggestion in the cli output, it is \xe2\x80\xa6DiUsed with <code>OnUnimplementedCondition::matches_predicate</code> to \xe2\x80\xa6CmGiven a set of spans representing statements initializing \xe2\x80\xa6CgInstructs the const eval interpreter to increment a \xe2\x80\xa60BmThe CTFE machine has some custom error kinds.0C`Constant initializer must evaluate successfully.00000EhSometimes fallback to <code>!</code>, but mainly fallback to <code>()</code> so that \xe2\x80\xa6BaThe <code>Break</code> lang item.EoAlias for <code>DirectedGraph</code> + <code>StartNode</code> + <code>Predecessors</code> + \xe2\x80\xa6CeThe MIR is a special kind of closure that returns \xe2\x80\xa6CkThis is a coroutine-closure, which is a special sugared \xe2\x80\xa6CjThe anonymous type of a closure. Used to represent the \xe2\x80\xa600000ClA type representing the types stored inside a coroutine. \xe2\x80\xa600000DfSuccessfully-parsed value of a <code>#[coverage(..)]</code> attribute.0CfGenerates and stores coverage counter and coverage \xe2\x80\xa6BnVersion for the format of the crate-info file.DjA reference to <code>CrateMetadata</code> that can also give access to \xe2\x80\xa6DjThe <code>double_negations</code> lint detects expressions of the form \xe2\x80\xa6CmFIXME: false negatives (i.e. the lint is not emitted when \xe2\x80\xa6CfImplements <code>fmt::Debug</code> by deferring to \xe2\x80\xa60DgAn extension to <code>fmt::Debug</code> for data that can be better \xe2\x80\xa60CkValues and patterns can be represented as a constructor \xe2\x80\xa6EdMaps between a <code>Location</code> and a <code>PointIndex</code> (and vice versa).CdRepresents <code>#[rustc_deny_explicit_impl]</code>.0BfAn entry in the <code>depr_map</code>.CiA \xe2\x80\x9cdepth-first search\xe2\x80\x9d iterator for a directed graph.BmThe <code>discriminant_kind</code> lang item.C`How to show whether a location has been accessedBjSigned division overflowed (INT_MIN / -1).0CkA set of constraints that need to be satisfied in order for00AlThe layout of dst is unknownEeTrait definition <code>DepNode</code>s. Extra <code>DepNode</code>s for functions \xe2\x80\xa6AnA marker trait returned by \xe2\x80\xa60CeEpollReadyEvents reflects the readiness of a file \xe2\x80\xa6DfEvaluation is known to be ambiguous \xe2\x80\x93 it <em>might</em> hold for \xe2\x80\xa600000CjThe result of trait evaluation. The order is important \xe2\x80\xa600000BfThe final result of evaluating a goal.CmA helper for recording costly arguments to self-profiling \xe2\x80\xa6CaThe test binary exited with a non-zero exit code.ChPattern obtained by converting a constant (inline or \xe2\x80\xa6ChOnly peel reference types. This is used for explicit \xe2\x80\xa6ClResolve doc links on exported items only for crate types \xe2\x80\xa6Eg<code>ExternAbi</code> is in <code>rustc_abi</code>, which doesn\xe2\x80\x99t have access to \xe2\x80\xa6BoIndicates where an external crate can be found.CkFunction information extracted from HIR by the coverage \xe2\x80\xa6DcThe <code>ffi_unwind_calls</code> lint detects calls to foreign \xe2\x80\xa60CdThe literal failed to be escaped, take a look at \xe2\x80\xa6CnAll Integers must be Const, but these are used to mark the \xe2\x80\xa6CiThis is a marker for a fatal compiler error used with \xe2\x80\xa600CjAn emitter that does nothing when emitting a non-fatal \xe2\x80\xa6CjThis visitor contains the bulk of the logic for this lint.ClDescribes the contents of the fingerprint generated by a \xe2\x80\xa6CmIdentifier of a Fluent message. Instances of this variant \xe2\x80\xa6CmIdentifier for a Fluent message (with optional attribute) \xe2\x80\xa610CkWhere a format parameter is being used in the format stringClResult of formatting a snippet of code along with ranges \xe2\x80\xa6DkA guard holding mutable access to a <code>FreezeLock</code> which is in \xe2\x80\xa60CmDistinguish between functional part of code and comments, \xe2\x80\xa6C`TypeVisitor that looks for uses of GATs like \xe2\x80\xa6CiExtra global state, available to the memory access hooks.DgGuarded string literal prefix: <code>#&quot;</code> or <code>##</code>.ClDoes this have any region that \xe2\x80\x9cappears free\xe2\x80\x9d in the \xe2\x80\xa6000CnDoes this the item (from the item rib scope) allow generic \xe2\x80\xa6Biwhen two higher-ranked types are compared0CmLike <code>WhereClauseinExpr</code>, but indexes into the \xe2\x80\xa600ChIndicates whether the type is <code>ManuallyDrop</code>.ChIndicates whether the type is <code>UnsafePinned</code>.DkContext of <code>impl Trait</code> in code, which determines whether it \xe2\x80\xa6ClRepresents what type of implicit self a function has, if \xe2\x80\xa6CkA free importable items suggested in case of resolution \xe2\x80\xa6DjIndicates which variants are inactive at a <code>SwitchInt</code> edge \xe2\x80\xa6CkUsed to configure inference contexts before their creation.0ClThe target spec requests that the self-contained mode is \xe2\x80\xa6AhInline assembly operand.BeThe <code>into_iter</code> lang item.ElA value read from the <strong>Jobs Event Counter</strong>. See the <code>README.md</code>\xe2\x80\xa6DiWe designate an <code>init`` field in all primitives. If </code>init` \xe2\x80\xa6CgCreate the specified uniqued inline asm string. See \xe2\x80\xa6B`language function has wrong type00CcEmbed the original path as well as its remapped \xe2\x80\xa6DfAn accumulator over a TokenTree to be used with <code>fold</code>. \xe2\x80\xa6CjMetadata encoding version. N.B., increment this if you \xe2\x80\xa6DeThe <code>must_not_suspend</code> lint guards against values that \xe2\x80\xa60B`<code>main</code> has wrong type00DjAn RAII write lock guard returned by <code>RwLockWriteGuard::map</code>\xe2\x80\xa6DgA tuple struct like <code>Markdown</code> that renders the markdown \xe2\x80\xa6CmA possibly infinite integer. Values are encoded such that \xe2\x80\xa6CjRepresents a <code>R0 member of [R1..Rn]</code> constraintCgPer-byte vector clock metadata for data-race detection.ClHolder struct for passing results from MIR typeck to the \xe2\x80\xa6CkDetermine which side of the version-sort comparison had \xe2\x80\xa6D`This is for compatibility with the regular <code>Visitor</code>.DjThe <code>named_asm_labels</code> lint detects the use of named labels \xe2\x80\xa6DeThe <code>non_ascii_idents</code> lint detects non-ASCII identifiers.DiThe <code>noop_method_call</code> lint detects specific calls to noop \xe2\x80\xa6EhA <code>ParseResult</code> where the <code>Success</code> variant contains a mapping \xe2\x80\xa6CbRepresents the processed prefix of a nested macro.Bino \xe2\x80\x9c-unwind\xe2\x80\x9d variant can be used hereDeAn attribute that is not a macro; e.g., <code>#[inline]</code> or \xe2\x80\xa6CjThis doesn\xe2\x80\x99t initialize the variable on panic (and a \xe2\x80\xa6CjValues of this type, or this particular value, are not \xe2\x80\xa60ClOperator-Assign traits like <code>LangItem::AddAssign</code>BcOpaque return type of this function00DhOwning pointer to an <code>OperandBundle</code> that will dispose of \xe2\x80\xa6DgThe <code>panic_const_add_overflow</code> lang item. Constant panic \xe2\x80\xa6BnThe <code>panic_bounds_check</code> lang item.CdThe <code>panic_const_div_overflow</code> lang item.CdThe <code>panic_const_mul_overflow</code> lang item.CdThe <code>panic_const_neg_overflow</code> lang item.CdThe <code>panic_const_rem_overflow</code> lang item.CdThe <code>panic_const_shl_overflow</code> lang item.CdThe <code>panic_const_shr_overflow</code> lang item.CdThe <code>panic_const_sub_overflow</code> lang item.CnA (possibly open) boundary of a range pattern. If present, \xe2\x80\xa6CmData extracted from a pattern that doesn\xe2\x80\x99t affect which \xe2\x80\xa6CkDifferent ways that the PE Format can decorate a symbol \xe2\x80\xa6CdA \xe2\x80\x9cplaceholder\xe2\x80\x9d that represents \xe2\x80\x9cany const\xe2\x80\x9d.0000000CmA single integer representing a <code>ty::Placeholder</code>.DgThis <code>Item</code> was popped from the borrow stack. The string \xe2\x80\xa60CjRuns at the end of \xe2\x80\x9canalysis to runtime\xe2\x80\x9d lowering, \xe2\x80\xa6EmE.g. <code>impl Trait + use&lt;&#39;_&gt;</code>, <code>impl Trait + use&lt;&#39;a&gt;</code>BfPrecomputed layouts of primitive types0CbThe core data structure when building proof trees.BlThe public API to interact with proof trees.0CkCannot deallocate because some tag in the allocation is \xe2\x80\xa6CjStore detailed instant events, including timestamp and \xe2\x80\xa6BlThe <code>RangeToInclusive</code> lang item.CfComparing raw pointers for equality. Not currently \xe2\x80\xa6CaEncountered a pointer where we needed an integer.C`Encountered a pointer where we needed raw bytes.10Ck\xe2\x80\x9cRegion-bound pairs\xe2\x80\x9d tracks outlives relations that \xe2\x80\xa60CeDenotes the source of a region that is named by a \xe2\x80\xa6CmSome type parameter was instantiated with the given type, \xe2\x80\xa60CgMaps the id of each bound variable reference to the \xe2\x80\xa6DhThe shorthand encoding uses an enum\xe2\x80\x99s variant index <code>usize</code>AhLLVMRustSanitizerOptionsDnFilter only the <code>[const]</code> bounds which are <em>also</em> in the \xe2\x80\xa6BgCast of thin to wide raw ptr (e.g., \xe2\x80\xa6CeA slice or array is WF only if <code>T: Sized</code>.00AlThe layout of src is unknownBkHashing result of <code>SipHasher128</code>CbDiscard existing groups, and create new groups forFcEncodes that <code>a</code> must be a subtype of <code>b</code>. The <code>a_is_expected</code> \xe2\x80\xa6000DkThe <code>SymbolExportInfo</code> of a symbols specifies symbol-related \xe2\x80\xa6AiKind of exported symbols.CjIf this part of two syntax contexts is equal, then the \xe2\x80\xa6DjDiagnostics emitted by <code>DiagCtxtInner::emit_diagnostic</code> are \xe2\x80\xa6CnParsed Data layout for a target, which contains everything \xe2\x80\xa6BhExtra metadata associated with a thread.AlThe join status of a thread.CcWhich format to use for <code>-Z time-passes</code>DgA <code>Visitor</code> that propagates qualifs between locals. This \xe2\x80\xa6DaA <code>Visitor</code> that defines the transfer function for \xe2\x80\xa6CkStack of nodes left to explore in a tree traversal. See \xe2\x80\xa6BeThe <code>from_yeet</code> lang item.DjThe <code>unnameable_types</code> lint detects types for which you can \xe2\x80\xa60DfThe <code>unreachable_code</code> lint detects unreachable code paths.0DkThe <code>unused_lifetimes</code> lint detects lifetime parameters that \xe2\x80\xa60DjThe <code>unused_variables</code> lint detects variables which are not \xe2\x80\xa60CmAn unevaluated (potentially generic) constant used in the \xe2\x80\xa6BcAn unevaluated anonymous constants.0CjAn unevaluated (potentially generic) constant used in MIR.0212121ChTable of unification keys and their values. You must \xe2\x80\xa6BdAn unknown help topic was requested.BeError E0767: use of unreachable labelDjOperators which can be used to interconvert <code>unsafe</code> binder \xe2\x80\xa6ChForbids using the <code>#[feature(...)]</code> attributeCmThe output of checking a match for exhaustiveness and arm \xe2\x80\xa6ChValidated assembly arguments, ready for macro expansion.CmExtra information about why we ended up with a particular \xe2\x80\xa60000000000CeInformation about a single field of the top-level \xe2\x80\xa6CdIterator which breaks an identifier into various \xe2\x80\xa6B`Module imported from WebAssemblyC`Kind of spaces to put before <code>where</code>.BdAn equality predicate (unsupported).DaAn equality predicate (e.g., <code>T = int</code>); currently \xe2\x80\xa6Bl<code>Vec::with_capacity(slice.len())</code>Cl<code>FatalError</code> is explicitly not <code>Send</code>.BoThe \xe2\x80\x9csleep state\xe2\x80\x9d for an individual worker.BbWraps a value in an unsafe binder.0DdConstruct an unsafe binder, e.g. <code>wrap_binder(&amp;ref)</code>.CjIndicates whether this run of the compiler is actually \xe2\x80\xa600EdReturns the <code>DefId</code> of the <code>add_assign</code> lang item if it is \xe2\x80\xa6DfThe goal of this function is to apply the <code>DocFragment</code> \xe2\x80\xa6CjAdd externally loaded source. If the hash of the input \xe2\x80\xa6BcThe number of variants in this ADT.0DiCalculates the affine transformation <code>right * left + imm8</code> \xe2\x80\xa6CnCalled immediately after an \xe2\x80\x9cimmediate\xe2\x80\x9d local variable \xe2\x80\xa60CmCalled immediately after a stack frame got pushed and its \xe2\x80\xa60CfCheck if a constant only contains uninitialized bytes.CmIterator that yields all source files referred to by this \xe2\x80\xa6CkThe spans we will use to report where an allocation was \xe2\x80\xa60CmAdditional dotfiles (files or directories starting with a \xe2\x80\xa60CmList of prefixes to allow when determining whether an item\xe2\x80\xa60CfHow are we relating <code>a</code> and <code>b</code>?CkAfter we generalize this type, we are going to relate it toBmThe variance of a place in the given context.BoAmbiguity errors are delayed for deduplication.CkWhile typechecking a body, we need to be able to define \xe2\x80\xa600ChWrite to AnonSocket based on the space available and \xe2\x80\xa6Cma flag set to true when we perform any unifications; this \xe2\x80\xa6EgSame as <code>apply</code>, but returns <code>None</code> if self contains a module \xe2\x80\xa6CfApply attributes to a function declaration/definition.DbTargets the ARMv4T, with code as <code>a32</code> code by default.FaReturns <code>true</code> if <code>param_def_id</code> matches the <code>bounded_ty</code> of \xe2\x80\xa6ClReturns an operand suitable for use until the end of the \xe2\x80\xa6ClThis is a hack because Miri needs a way to visit all the \xe2\x80\xa6DiThis is used when constructing a compound <code>Place</code>, so that \xe2\x80\xa6CkThis pass is only used for the UNIT TESTS and DEBUGGING \xe2\x80\xa6CnHelper function used inside the shims of foreign functions \xe2\x80\xa6CjWe visit the body in reverse postorder, to ensure each \xe2\x80\xa6CnAn associated type binding (i.e., associated type equality \xe2\x80\xa6CiCollects the associated items defined on a trait or impl.000000BiGet all associated items of a definition.C`Retrieve all associated items from a definition.1DfFinds item with name <code>item_ident</code> defined in impl/trait \xe2\x80\xa6ClWhether a definition or declaration can be assumed to be \xe2\x80\xa6CnReturns the types assumed to be well formed while \xe2\x80\x9cinside\xe2\x80\xa6000000EdReturns the <code>DefId</code> of the <code>async_drop</code> lang item if it is \xe2\x80\xa6ClThis is called before trying to match next MatcherLoc on \xe2\x80\xa6CjCalled just before the frame is removed from the stack \xe2\x80\xa60CnA list of thread ids blocked because the buffer was empty. \xe2\x80\xa6BnA list of thread ids blocked on eventfd::read.CkThe current set of breakable scopes. See module comment \xe2\x80\xa6FbBuilds a <code>Clone::clone</code> shim for <code>self_ty</code>. Here, <code>def_id</code> is \xe2\x80\xa6BjBuild the unwind and coroutine drop trees.ChConstructs the projection needed to access a Box\xe2\x80\x99s \xe2\x80\xa6CjHow should the binding mode and expected type be adjusted?EgReturns the <code>DefId</code> of the <code>call_once_future</code> lang item if it \xe2\x80\xa6DdConstructs an expression that calls the <code>unreachable</code> \xe2\x80\xa6CgSplit camel case string into a vector of its componentsDbReturns index of the first camel-case component of <code>s</code>.CfReturns the index of the character after the first \xe2\x80\xa6CgWould <code>parse_pat_ident</code> be appropriate here?ChUsed for ambiguous method call error reporting. Uses \xe2\x80\xa6EdReturns the <code>DefId</code> of the <code>Break</code> lang item if it is defined.CfCheck if the given assoc item is accessible in the \xe2\x80\xa6AeChecks any attribute.CjEmits a lint for function reference arguments bound by \xe2\x80\xa6BhType check a <code>let</code> statement.DmChecks <code>#[doc(inline)]</code>/<code>#[doc(no_inline)]</code> attributes.C`Checks a potentially overloaded binary operator.CgCheck field access expressions, this works for both \xe2\x80\xa6EeCheck if a given field <code>ident</code> declared at <code>field_decl</code> has \xe2\x80\xa6CnCheck if a function\xe2\x80\x99s argument types and result type are \xe2\x80\xa6ChChecks if the lint is gated on a feature that is not \xe2\x80\xa6EbFeature gate <code>impl Trait</code> inside <code>type Alias = $type_expr;</code>.BgLook for live drops in a const context.DiChecks if <code>#[may_dangle]</code> is applied to a lifetime or type \xe2\x80\xa6DiEmits an error at the given <code>span</code> if an expression cannot \xe2\x80\xa6DjCheck whether predicates on the specializing impl (<code>impl1</code>) \xe2\x80\xa6ClThis module handles checking if the span given is from a \xe2\x80\xa6CnA best effort attempt to create an error for a mismatching \xe2\x80\xa6CkCheck if the given pointer points to live memory of the \xe2\x80\xa6CmChecks if a given identifier is snake case, and reports a \xe2\x80\xa6CoChecks well-formedness of tail calls (<code>become f()</code>).000000CmOnce regions have been propagated, this method is used to \xe2\x80\xa6DiReturns <code>true</code> if we should use the more precise live drop \xe2\x80\xa6BmRemove all provenance in the reference range.BiRemove all provenance in the given place.C`Remove all provenance in the given memory range.Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6000000DkGenerate the <code>CodegenFnAttrs</code> for an item (identified by the \xe2\x80\xa6DlReturns the <code>CodegenFnAttrs</code> for the item at <code>def_id</code>.000000DkProcesses a <code>Coerce</code> predicate from the fulfillment context. \xe2\x80\xa60CiStores a value into the atomic integer if the current \xe2\x80\xa60BoTotal time spent compiling all merged doctests.CmThe purpose of this ABI is to match the C ABI (aka clang) \xe2\x80\xa6CmCompute the hash for the HIR of the full crate. This hash \xe2\x80\xa6DbPerforms cfg-expansion on <code>stream</code>, producing a new \xe2\x80\xa6CjThe tag on which the error was triggered. On protector \xe2\x80\xa6CfTag that triggered the error (not the tag that was \xe2\x80\xa6CbCompute the conditions that need to hold for a \xe2\x80\xa6000000DgReturns the origin of the const variable identified by <code>vid</code>0ClThe constraint-set, but in graph form, making it easy to \xe2\x80\xa60CfChecks whether a type recursively contains any closureCgReturns <code>true</code> if text contains any comment.DhCallers should prefer <code>AllocMap::contains_key</code> when it is \xe2\x80\xa60E`Returns <code>true</code> if the node pointed to by <code>def_id</code> is a \xe2\x80\xa6CnReturns layout of a coroutine. Layout might be unavailable \xe2\x80\xa6CdThe layout of a coroutine. Produced by the state \xe2\x80\xa6EgReturns the <code>DefId</code> of the <code>coroutine_resume</code> lang item if it \xe2\x80\xa6EgReturns the <code>DefId</code> of the <code>coroutine_return</code> lang item if it \xe2\x80\xa6EhChecks for the nearest <code>#[coverage(off)]</code> or <code>#[coverage(on)]</code> \xe2\x80\xa6000000CgQuery implementation for <code>coverage_attr_on</code>.CkCoverage information collected from THIR/MIR during MIR \xe2\x80\xa6DiProvides direct access to the <code>CoverageOptions</code> struct, so \xe2\x80\xa6ClAttempts to open a file where we should dump a given MIR \xe2\x80\xa6DgNote that this is <em>untracked</em> and should only be used within \xe2\x80\xa6ClIf the binding refers to a tuple struct constructor with \xe2\x80\xa6CjThe current enclosing (non-closure) function (used for \xe2\x80\xa6CaSet a callback to be invoked on current deadlock.AlClosure invoked on deadlock.DjInclude the <code>debug_assertions</code> flag in dependency tracking, \xe2\x80\xa600B`See <code>DebugStrictAdd</code>.0CbReturn the set of locals that appear in debuginfo.CkDeclares the bindings of the given patterns and returns \xe2\x80\xa6CkHelper macro to let us redeclare gimli\xe2\x80\x99s constants as \xe2\x80\xa6AiDeclare an entry FunctionClObtain the arguments of the intrinsic based on its name. \xe2\x80\xa6DeConvenience function to <em>deeply</em> normalize during wfcheck. \xe2\x80\xa6DiDeeply normalizes <code>value</code>, replacing all aliases which can \xe2\x80\xa6DeDeeply normalize all aliases in <code>value</code>. This does not \xe2\x80\xa601CnReturns the type of given definition instantiated with the \xe2\x80\xa60ClReturns the default fallback which is used when there is \xe2\x80\xa6CiReturns the default modifier for this register and an \xe2\x80\xa6ChA map of the default settings (values are as for DOM \xe2\x80\xa6DfDereference a pointer operand to a place using <code>layout</code> \xe2\x80\xa6EdReturns the <code>DefId</code> of the <code>deref_pure</code> lang item if it is \xe2\x80\xa6C`Returns the diagnostic items defined in a crate.000000AkDetecting diagnostic items.ChTraverse and collect the diagnostic items in the currentChWidth of output buffer to truncate errors appropriately.DkThe list of disallowed names to lint about. NB: <code>bar</code> is not \xe2\x80\xa60ClThe list of disallowed types, written as fully qualified \xe2\x80\xa60EdReturns the <code>DefId</code> of the <code>div_assign</code> lang item if it is \xe2\x80\xa6CkReturns the DropIdx for the innermost drop for dropline \xe2\x80\xa6CfThe list of words this lint should not consider as \xe2\x80\xa60D`Document items that have lower than <code>pub</code> visibility.DkWhether to document private items. This is stored in <code>Cache</code> \xe2\x80\xa6DfReturns the subpath of downcasting <code>path</code> to one of its \xe2\x80\xa6CbCap lint level specified by a driver specifically.0EgReturns the <code>DefId</code> of the <code>drop_in_place</code> lang item if it is \xe2\x80\xa6CmEats a keyword, optionally ignoring the case. If the case \xe2\x80\xa6EfEat the or-pattern <code>|</code> separator. If instead a <code>||</code> token is \xe2\x80\xa6ClInvoked to create the lifetime argument(s) for an elided \xe2\x80\xa6CjEmits a mermaid flowchart of the CFG blocks and edges, \xe2\x80\xa6ClIf the current crate is a proc-macro, returns early with \xe2\x80\xa6Dg<code>enabled_lang_features</code> + <code>enabled_lib_features</code>.0DeAs a local identifier, a <code>CrateNum</code> is only meaningful \xe2\x80\xa6CmEncodes a predicate using the Itanium C++ ABI with vendor \xe2\x80\xa6ClWhether to enforce the validity invariant for a specific \xe2\x80\xa60CiEnters a tracing::info_span only if the \xe2\x80\x9ctracing\xe2\x80\x9d \xe2\x80\xa6AhShortand for calling \xe2\x80\xa6CgAllows enabling/disabling tracing calls from within \xe2\x80\xa60CiEquates two values returning the nested goals without \xe2\x80\xa6DiErases regions from <code>ty</code> to yield a new type. Normally you \xe2\x80\xa6000000CdEvaluate a static\xe2\x80\x99s initializer, returning the \xe2\x80\xa6CkEvaluate a place with the goal of reading from it. This \xe2\x80\xa6DmHelper function to get a <code>windows</code> constant as a <code>u32</code>.DmHelper function to get a <code>windows</code> constant as a <code>u64</code>.ClAttempts to evaluate the expression and returns both the \xe2\x80\xa6CnCaches the results of trait evaluation. This cache is used \xe2\x80\xa6000DeComputes the evaluation result of <code>op</code>, discarding any \xe2\x80\xa6AmIs well known names activated0ClPerform transformations to text. This splits paragraphs, \xe2\x80\xa6Ck#test_case is used by custom test authors to mark tests \xe2\x80\xa6CnWe expand the autodiff macro to generate a new placeholder \xe2\x80\xa6DhMaps the indices in the <code>compatibility_matrix</code> columns to \xe2\x80\xa6Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6000000ClThis classification determines whether various syntactic \xe2\x80\xa6CfChecks if this expression is a successfully parsed \xe2\x80\xa6EhReturns the type of <code>expr</code>, considering any <code>Adjustment</code> entry \xe2\x80\xa6CmA different sort of visitor for walking fn bodies. Unlike \xe2\x80\xa6CkRemember expressions that have already been created (or \xe2\x80\xa6CiReserve enough space to insert the value at the right \xe2\x80\xa6De<code>CrateNum</code> resolutions of <code>extern crate</code> items.CiCache of where external crate documentation can be found.CkLazily populated cache of macro definitions loaded from \xe2\x80\xa6BfMap for \xe2\x80\x9cextra\xe2\x80\x9d function pointers.0DdReconstruct the history relevant to <code>error_offset</code> by \xe2\x80\xa6CnFor a given output filename, return the actual name of the \xe2\x80\xa6CiThe file table in encoded form (possibly compressed), \xe2\x80\xa6ClFilter to only the supertraits of trait predicates, i.e. \xe2\x80\xa6000EfFinds the arguments of an <code>assert!</code> or <code>debug_assert!</code> macro \xe2\x80\xa6CmFinds all statements that assign directly to local (i.e., \xe2\x80\xa6CjRecursively walk statements backwards from this bb\xe2\x80\x99s \xe2\x80\xa6EhTraverses the given ty (either a <code>ty::Ty</code> or a <code>ty::GenericArg</code>\xe2\x80\xa6BaThe width of the first line in s.CgA flag that indicates that we should do round robin \xe2\x80\xa6BjRound Robin scheduling with no preemption.10EfAssign <code>value</code> to the discriminant of <code>place</code> and all places \xe2\x80\xa6CmThis inherent method takes priority over the trait method \xe2\x80\xa6EeCompute a <code>FnAbi</code> suitable for indirect calls, i.e. to <code>fn</code> \xe2\x80\xa60000000Aadon\xe2\x80\x99t override!CkEnsures that a place is in memory, and returns where it is.EgReturns the <code>DefId</code> of the <code>format_arguments</code> lang item if it \xe2\x80\xa6CiSome errors do string formatting even if the error is \xe2\x80\xa6ChThe length of each fragment in the encoded template, \xe2\x80\xa6DhThe trait predicate from <code>obligation</code> but \xe2\x80\x9cfreshened\xe2\x80\x9d \xe2\x80\xa6DcUsually, tree traversals have an <code>AccessKind</code> and an \xe2\x80\xa6BbConvert from a bits value exactly.0000000000000000000000000000CeThis takes into account <code>RUSTC_BOOTSTRAP</code>.DjCreates an <code>ArgKind</code> from the expected type of an argument. \xe2\x80\xa6EgReturns the <code>DefId</code> of the <code>from_residual</code> lang item if it is \xe2\x80\xa6DhCreates an unevaluated const from a <code>DefId</code> for a const item.DgGiven some operation <code>op</code> that manipulates types, proves \xe2\x80\xa6DhWalks the MIR adding to the set of <code>used_mut</code> locals that \xe2\x80\xa6CnReturns true if this unwind action is code generated as an \xe2\x80\xa6CkStart profiling a generic activity. Profiling continues \xe2\x80\xa6DhGiven a closure\xe2\x80\x99s <code>DefId</code>, return the given name of the \xe2\x80\xa6CmHelper function to obtain a global (tcx) allocation. This \xe2\x80\xa6CkIterates over all the stability attributes in the given \xe2\x80\xa6DeObtains resolution for a lifetime with the given <code>NodeId</code>.CkRetrieve the list of local crates that should have been \xe2\x80\xa6CmGets the source file, and range in the file, of the given \xe2\x80\xa6CkGets a store buffer associated with an atomic object in \xe2\x80\xa6CiGet the synchronization primitive associated with the \xe2\x80\xa6CeWhether this feature is globally enabled for this \xe2\x80\xa6CnMethod to handle <code>existing_footnotes</code> increment \xe2\x80\xa6Cl\xe2\x80\x9cFree\xe2\x80\x9d regions in this context means that it has any \xe2\x80\xa60000DhSignals whether this <code>PathSegment</code> has generic arguments. \xe2\x80\xa6oUsed in testingEoReturns <code>true</code> if <code>local</code> is <code>HasMutInterior</code> at the given \xe2\x80\xa6EhOption for <code>cfg(target_has_reliable_f16)</code>, true if <code>f16</code> basic \xe2\x80\xa6CjFlag indicating whether #thread_local is available for \xe2\x80\xa6CiAdd a help message attached to this diagnostic with a \xe2\x80\xa6CjGenerate a suggestion for an expression with the given \xe2\x80\xa6CnWhen on an if expression, a match arm tail expression or a \xe2\x80\xa6DhGet a representation of this <code>id</code> for debugging purposes. \xe2\x80\xa6AfThe items in a module.000000CmGives access to the HIR node\xe2\x80\x99s parent for the HIR owner \xe2\x80\xa6000000DfSame as <code>hir</code>, but first walks the span up to the given \xe2\x80\xa6CnA block control flow could conceptually jump to, but won\xe2\x80\x99\xe2\x80\xa60CjChecks whether a type implements a trait. The function \xe2\x80\xa6CjOther target features which are implied by this target \xe2\x80\xa6D`Start an if-then scope which tracks drop for <code>if</code> \xe2\x80\xa6CdReturns the path for a given filename within the \xe2\x80\xa60CjTy nodes in this map are in TypeNoBounds position. Any \xe2\x80\xa6CiThe number of threads that are not actively executing \xe2\x80\xa6CaWhether or not the output includes private items.CkInherent impls which do not follow the normal coherence \xe2\x80\xa6Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6000000CnBased on the given line, determine if the next line can be \xe2\x80\xa6CeEach offset in this vector indicates one level of \xe2\x80\xa6BlInfer predicates for the items in the crate.ChThe main entry point for creating a new stack frame: \xe2\x80\xa6CkPush a job into each thread\xe2\x80\x99s own \xe2\x80\x9cexternal jobs\xe2\x80\x9d \xe2\x80\xa6Bn(def_id, renamed) -&gt; (res, local_import_id)ChThe instance this source scope was inlined from, if any.CnReturns a mutable slice of inner locals for this function. \xe2\x80\xa6EcCopies <code>source</code> to <code>target</code>, including all tracked places \xe2\x80\xa6CnInserts a presorted range of elements into the map. If the \xe2\x80\xa6CjLow-level method that assigns a value to a place. This \xe2\x80\xa6CkKeeps track of whether we are inside of function/method \xe2\x80\xa6ClInstalls a panic hook that will print the ICE message on \xe2\x80\xa60DfInterns a predicate. (Use <code>mk_predicate</code> instead, where \xe2\x80\xa6ClReturns the found enum creations and which checks should \xe2\x80\xa6CiEmits errors for literal expressions that are invalid \xe2\x80\xa6FhThis is the <code>&lt;=</code> relation; that is, if <code>a: b</code>, then <code>b &lt;= a</code>, \xe2\x80\xa6CdDebug helper: determines if the tree contains a tag.DgReturns <code>true</code> if the commenting style can span multiple \xe2\x80\xa6DhReturns <code>true</code> if this is a built-in arithmetic operation \xe2\x80\xa6EfReturns <code>true</code> if an environment variable from <code>env!</code> is one \xe2\x80\xa6CiReturn true if any evaluation of this constant always \xe2\x80\xa6D`Returns whether the given expression is an <code>else if</code>.EgReturns <code>true</code> if the provided <code>def_id</code> is an entrypoint to a \xe2\x80\xa6CmChecks whether the given expression is a constant literal \xe2\x80\xa6DbReturns <code>true</code> if we are actually building the full \xe2\x80\xa6Dhtrue if <code>def_id</code> is the function we are calling, false if \xe2\x80\xa6CmWe indicate whether this is a function call, since we can \xe2\x80\xa6ClReturns true if the generic type is a trait and is being \xe2\x80\xa6CmChecks whether the given expression is a constant integer \xe2\x80\xa6DjReturns whether any of the given keywords are <code>dist</code> tokens \xe2\x80\xa6CkThis rib forbids referring to labels defined in upwards \xe2\x80\xa6CmChecks if the current token is a integer or float literal \xe2\x80\xa6DcChecks if the type is <code>core::mem::ManuallyDrop&lt;_&gt;</code>DhReturns <code>true</code> if this is <code>ManuallyDrop&lt;T&gt;</code>.CiAre we at a block from a metavar (<code>$b:block</code>)?Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6000000AmWhether this a never pattern.0DiIf <code>false</code>, this terminator cannot be chained into another \xe2\x80\xa62222222DjIf the given predicate is the trait <code>fmt::Pointer</code>, returns \xe2\x80\xa6CjChecks if the specified expression is a built-in range \xe2\x80\xa6DkReturns <code>true</code> if this is a reference to a variable bound in \xe2\x80\xa6DjReturns <code>Some</code> if this is a reference to a static item that \xe2\x80\xa6EgChecks if a <code>Res</code> refers to a constructor of a <code>LangItem</code> For \xe2\x80\xa6DjReturns <code>true</code> if the given pattern is \xe2\x80\x9cshort\xe2\x80\x9d. A short \xe2\x80\xa6CmReturns true for reserved identifiers used internally for \xe2\x80\xa6DeReturns <code>true</code> if the target of this projection always \xe2\x80\xa6DmChecks if <code>fn_def_id</code> has a <code>#[test]</code> attribute appliedDhReturns <code>true</code> if this is <code>UnsafePinned&lt;T&gt;</code>.DjThis is the source of truth for the <code>is_user_relevant</code> flag \xe2\x80\xa6DgIndicates whether a <code>Frame</code> is part of a workspace-local \xe2\x80\xa60DeReturns <code>true</code> if this variable is a named variable or \xe2\x80\xa6CeCreates a new unsuffixed integer literal with the \xe2\x80\xa6CkThe given item was invalidated \xe2\x80\x93 check its protectors \xe2\x80\xa6Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6000000CkIterate over the projections in evaluation order, i.e., \xe2\x80\xa60CjIterates over the projections of a place and its deref \xe2\x80\xa6EcLike <code>join_path_syms</code>, but for <code>Ident</code>s. This function is \xe2\x80\xa6De<code>true</code> if we only want regions that are known to be \xe2\x80\x9c\xe2\x80\xa6CiGet last error variable as a place, lazily allocating \xe2\x80\xa6Cmsingle-variant enums are just structs, if you think about \xe2\x80\xa6CjMapping between names and their (possibly in-progress) \xe2\x80\xa6BnThe first to be removed from the original textBhThe line number in the original version.1EhLinks a block outside the drop tree, <code>from</code>, to the block <code>to</code> \xe2\x80\xa6CnProduce the linker command line containing linker path and \xe2\x80\xa6C`The liveness data we recorded during MIR typeck.BoFix up an input value to work around LLVM bugs.BcLoads source file as a binary blob.DdLoads a <code>QuerySideEffect</code> created during the previous \xe2\x80\xa6CmLoad a side effect associated to the node in the previous \xe2\x80\xa6Bn<code>loaded_from_disk=</code> attribute valueCeEagerly populated map of all local non-block modules.CnThe list of fluent resources, used for lints declared with \xe2\x80\xa6BbSearch for the configuration file.0CoLooks up debug source information about a <code>BytePos</code>.EcLooks up the key in <code>self.data</code> via <code>slice::binary_search()</code>.Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6000000DnResolves a def path like <code>vec::Vec</code> with the base <code>std</code>.ClLiterals are eagerly converted to a constant, everything \xe2\x80\xa6CkLowers a block directly to an expression, presuming that itBmDesugar <code>&lt;expr&gt;.await</code> into:AfLowers intrinsic callsDeLower the bindings, guards and arm bodies of a <code>match</code> \xe2\x80\xa6ChThe entrypoint of the matching algorithm. Create the \xe2\x80\xa6CkGenerate a hir expression for a format_args placeholder \xe2\x80\xa6BaCreates zero or more trait items.EgRecursive function called until <code>cond_expr</code> and <code>fmt_str</code> are \xe2\x80\xa6CmReuses the span but adds information like the kind of the \xe2\x80\xa6AoRelate the goal and assumption.CeThe main match algorithm. It begins with a set of \xe2\x80\xa6AhLint level at the match.CmMaximum integer size in bits that this target can perform \xe2\x80\xa6DkDon\xe2\x80\x99t use this field; instead use the <code>.max_atomic_width()</code>\xe2\x80\xa6CcThe maximum number of bool fields a struct can have0CjThe maximum number of bounds a trait can have to be linted0CkTries to extract an inference variable from a constant, \xe2\x80\xa6EdReturns the <code>DefId</code> of the <code>meta_sized</code> lang item if it is \xe2\x80\xa6CmMinimum integer size in bits that this target can perform \xe2\x80\xa6DkDon\xe2\x80\x99t use this field; instead use the <code>.min_atomic_width()</code>\xe2\x80\xa6BiThe minimum alignment for global symbols.BmReturns literal value of a const as a string.DhMaps DefId\xe2\x80\x99s that have an associated <code>mir::Body</code> to the \xe2\x80\xa6000000AiLowers a cast expression.CfConverts a modifier into LLVM\xe2\x80\x99s equivalent modifier.CjA somewhat inefficient routine to obtain the name of a \xe2\x80\xa6CcWhether the value will be moved before it\xe2\x80\x99s used.EdReturns the <code>DefId</code> of the <code>mul_assign</code> lang item if it is \xe2\x80\xa6CmLook up all native libraries this crate depends on. These \xe2\x80\xa6000000EoIf <code>ty.needs_async_drop(...)</code> returns <code>true</code>, then <code>ty</code> is \xe2\x80\xa6CgConstructs a new initial state. It has neither been \xe2\x80\xa6CfDefault initial permission of a reborrowed mutable \xe2\x80\xa6CfCreates a new source scope, nested in the current one.ElCreates a <code>&amp;mut Context&lt;&#39;_&gt;</code> <code>Ty</code> with erased lifetimes.EgReturns the <code>DefId</code> of the <code>new_unchecked</code> lang item if it is \xe2\x80\xa6BlThe counter for generating new region names.ClAsserts this is a struct or union and returns its unique \xe2\x80\xa6CiThe non-glob binding for this name, if it is known to \xe2\x80\xa6CfHelper for <code>non_local_upper_bounds</code> and \xe2\x80\xa6CkWhether a read access should be performed on the non-frozenCgVerbatim access to any non-selflike arguments, i.e. \xe2\x80\xa6DkNormalizes the ranges so that the invariants for <code>FileLines</code> \xe2\x80\xa6CnOffset the value by the given amount, replacing the layout \xe2\x80\xa60Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6000000DkGiven the id of some node in the AST, finds the <code>LocalDefId</code> \xe2\x80\xa6DhGiven some item <code>binding_item</code>, check if this region is a \xe2\x80\xa6CkThe end of this SourceFile within the source_map of its \xe2\x80\xa6EeGiven a region <code>R</code>, iterate over all regions <code>R1</code> such that \xe2\x80\xa6ChReturn the filenames where output artefacts shall be \xe2\x80\xa6000000CnThis field is only used for the JSON output. If it\xe2\x80\x99s set \xe2\x80\xa6CjThis is a callback from the driver that is called just \xe2\x80\xa6DeIf <code>Some</code>, overrides the return code with the given value.EgReturns the <code>DefId</code> of the <code>panic_in_cleanup</code> lang item if it \xe2\x80\xa6ClThe trait predicate of the parent obligation that led to \xe2\x80\xa600CfGets the name of the item the expression is in, if \xe2\x80\xa6CgParses (possibly empty) list of generic arguments / \xe2\x80\xa6CoParses a type following an <code>as</code> cast. Similar to \xe2\x80\xa6AhParses associated items.CkParses the rest of a block expression or function body. \xe2\x80\xa6CjParse backtick-wrapped inline code. Accounts for &gt;1 \xe2\x80\xa6E`Parse a constant item with the prefix <code>&quot;const&quot;</code> already \xe2\x80\xa6DiAssuming we have just parsed <code>.</code>, continue parsing into an \xe2\x80\xa6AoParses a block or unsafe block.FnParse <code>&quot;break&quot; ((&#39;label (:? expr)?) | expr?)</code> with <code>&quot;break&quot;</code> \xe2\x80\xa6BhParses <code>ident (COLON expr)?</code>.CdParse an indexing expression <code>expr[...]</code>.EhParses a <code>match ... { ... }</code> expression (<code>match</code> token already \xe2\x80\xa6G`Parses <code>x..y</code>, <code>x..=y</code>, and <code>x..</code>/<code>x..=</code>. The other two variants \xe2\x80\xa6EnParses a <code>while</code> or <code>while let</code> expression (<code>while</code> token \xe2\x80\xa6BkParse <code>&quot;yield&quot; expr?</code>.CbParses an item macro, e.g., <code>item!();</code>.EeParses <code>unsafe? auto? trait Foo { ... }</code> or <code>trait Foo = Bar;</code>.BfParses <code>union Foo { ... }</code>.C`Parses mutability (<code>mut</code> or nothing).CdParses the value of a single <code>-l</code> option.EeParse an optional language identifier, e.g. <code>en-US</code> or <code>zh-CN</code>.CgUse this for any numeric option that lacks a static \xe2\x80\xa6CkUse this for any string option that lacks a static default.mNumbered listBkParses the fields of a struct-like pattern.DkParse a struct (\xe2\x80\x9crecord\xe2\x80\x9d) pattern (e.g. <code>Foo { ... }</code> or \xe2\x80\xa6AdParses simple paths.ClReturns the parsed optional self parameter and whether a \xe2\x80\xa6ClParses a sequence, including only the closing delimiter. \xe2\x80\xa6ClThe simplest kind of patterns: data within start and end \xe2\x80\xa6DdReturn <code>(match, residual)</code> to end of line. The EOL is \xe2\x80\xa6BjParses a single token tree from the input.EhParses a <code>TokenTree</code> that must be of the form <code>{ /* ... */ }</code>, \xe2\x80\xa6DdParses a type in restricted contexts where <code>+</code> is not \xe2\x80\xa6ClParses a <code>type</code> alias with the following grammar:FdParses <code>pub</code> and <code>pub(in path)</code> plus shortcuts <code>pub(crate)</code> for \xe2\x80\xa6CaQueues the replacement of a block\xe2\x80\x99s terminator.CmWarning: This field may only be used by rustdoc. Using it \xe2\x80\xa6CmReturns the trailing return type in the given path, if it \xe2\x80\xa6ClReturns true if the expression is a path to a local with \xe2\x80\xa6CePeels off all references on the type. Returns the \xe2\x80\xa6ChOptional path to persist the doctest executables to, \xe2\x80\xa6CfWhen unwinding is initiated, we have to store this \xe2\x80\xa6CfReturns whether this place can possibly escape the \xe2\x80\xa6CfGet the pointer alignment in a specific address space.BkReturns amount of already consumed symbols.CgObjects to link before and after all other object code.CkReturns true if formatting next_line_rhs is better on a \xe2\x80\xa6CnUsed to determine the representative of a component in the \xe2\x80\xa6DdIf <code>self</code> is a primitive, return its <code>Symbol</code>.DgAppends a representation of a crate name, e.g. <code>std</code>, or \xe2\x80\xa6ChGiven name and kind search for the assoc item in the \xe2\x80\xa6BiWhether or not this is a proc-macro crateCmAs we do the cycle check, we invoke this callback when we \xe2\x80\xa6DkIf we expect <code>lhs ?= A</code>, we have an opportunity if we assume \xe2\x80\xa6AoDowncasting to an enum variant.jSubslicingAfCache for projections.CnThis method will return tuple of projection stack and root \xe2\x80\xa6DiMaps the indices in the <code>compatibility_matrix</code> rows to the \xe2\x80\xa6ClAttempts to prune a stacktrace to omit the Rust runtime, \xe2\x80\xa6ClTurning a \xe2\x80\x9cmaybe pointer\xe2\x80\x9d into a proper pointer (and \xe2\x80\xa6CaGet the search patterns to use for the given pathBnReturns the path to a session\xe2\x80\x99s query cache.ClImplements a map from allocation ranges to data. This is \xe2\x80\xa6CnWhether we\xe2\x80\x99ve reached a fixpoint when evaluating a cycle \xe2\x80\xa6CjRead the contents of a potentially non-UTF-8 file into \xe2\x80\xa6CnDetect races for non-atomic read operations at the current \xe2\x80\xa6CkUtility function used to read an allocation data into a \xe2\x80\xa6CkRead a sequence of wchar_t until the first null terminator.CjRecord impl args in the proof tree for later access by \xe2\x80\xa6DbRecover on the syntax <code>do catch { ... }</code> suggesting \xe2\x80\xa6DbIf encountering <code>x.use()</code>, consumes and emits an error.D`Recover on <code>not expr</code> in favor of <code>!expr</code>.DeReturns access to the value of <code>r</code> for debugging purposes.ClReturns a \xe2\x80\x9cpretty\xe2\x80\x9d string value of the region. Meant \xe2\x80\xa6CiRegister an expansion which has been decoded from the \xe2\x80\xa6CdThis lint should give no warning and have no effect.CmThis lint has been renamed; warn about using the new name \xe2\x80\xa6DiTools registered with <code>#![register_tool]</code> and used by tool \xe2\x80\xa6CcCollects the list of all tools registered using \xe2\x80\xa6000000CmRelate the two args for the given item. The default is to \xe2\x80\xa6000000000CjRelocation model to use in object file. Corresponds to \xe2\x80\xa6EdReturns the <code>DefId</code> of the <code>rem_assign</code> lang item if it is \xe2\x80\xa6DgRender <code>input</code> (e.g., \xe2\x80\x9cfoo.md\xe2\x80\x9d) into an HTML file in \xe2\x80\xa6CnRenders the configuration for long display, as a long HTML \xe2\x80\xa6DcReplaces all regions appearing in <code>value</code> with fresh \xe2\x80\xa6CkReport a data-race found in the program. This finds the \xe2\x80\xa6CjChecks whether a type is representable or infinitely sized000000CjReturns the nightly feature that is required to toggle \xe2\x80\xa6DhWhether or not to unconditionally <code>uwtable</code> attributes on \xe2\x80\xa6CjObtains a new allocation ID that can be referenced but \xe2\x80\xa6CiLocation where the borrow reservation starts. In many \xe2\x80\xa60CnResolve an instance from the given function definition and \xe2\x80\xa60DiNames that were used to load the crates via <code>extern crate</code> \xe2\x80\xa6ClReplace <code>self</code> with <code>snapshot.parser</code>.ClPotential vector indices that could be re-used on thread \xe2\x80\xa6ChType inference occasionally gives us opaque types in \xe2\x80\xa6DkReturns a tuple containing the <code>Duration</code> of the compilation \xe2\x80\xa6CgReturns a range of bytes for each code block in the \xe2\x80\xa6DjThe <code>rustc_ast_passes</code> crate contains passes which validate \xe2\x80\xa6C`HIR pretty-printing is layered on top of AST \xe2\x80\xa6CiA support library for macro authors when defining new \xe2\x80\xa6CgSupport for serializing the dep-graph and reloading it.BiSanitizers support for the Rust compiler.DiThis method is called right before call <code>Self::item</code>. This \xe2\x80\xa6CnProtect a place so that it cannot be used any more for the \xe2\x80\xa6CdPrevent new suggestions from being added to this \xe2\x80\xa6CmAll <code>SyntaxContexts</code> for which we have written \xe2\x80\xa6ClSwap out the underlying dcx once we acquire the user\xe2\x80\x99s \xe2\x80\xa6EdReturns the <code>DefId</code> of the <code>shl_assign</code> lang item if it is \xe2\x80\xa6CnWhether we should normalize using the new solver, disabled \xe2\x80\xa6BlShow the memory layout of types in the docs.0EdReturns the <code>DefId</code> of the <code>shr_assign</code> lang item if it is \xe2\x80\xa6DeReturns the <code>fn</code> pointer type representing the closure \xe2\x80\xa6000CmThe point of this function is to lower generics and types \xe2\x80\xa6CcReturns <code>false</code> if an error was emitted.CbSet of reference patterns that match against a \xe2\x80\xa60DhReorders the entries of all <code>Value::Object</code> nested within \xe2\x80\xa6CmRestores the invariant that or-patterns must be sorted to \xe2\x80\xa6DeEnsures that an error is printed. See <code>Level::DelayedBug</code>.ChChecks if the start and the end of the span\xe2\x80\x99s text \xe2\x80\xa6CmPrints out a message with multiple suggested edits of the \xe2\x80\xa6CcSplit DWARF is enabled in LLVM by checking that \xe2\x80\xa6ChReturns the path for the Split DWARF file - this can \xe2\x80\xa6DeBreaks out the major components of an <code>--extern</code> argument.AlThe interned StableCrateIds.CjUsed to conditionally output the TokenStream for tests \xe2\x80\xa6ClStashes a diagnostic for possible later improvement in a \xe2\x80\xa6ClAn optional path to use as the location of static files. \xe2\x80\xa6CkOptional path string to be used to load static files on \xe2\x80\xa6CjString to prepend to the name of every static library. \xe2\x80\xa6CiString to append to the name of every static library. \xe2\x80\xa6CmList of bound vars that remain unsubstituted because they \xe2\x80\xa6CfSet of locals that have live storage while at this \xe2\x80\xa6CdFor every suspending block, the locals which are \xe2\x80\xa6DbThis module contains implementations of the <code>Lift</code>, \xe2\x80\xa6EdReturns the <code>DefId</code> of the <code>sub_assign</code> lang item if it is \xe2\x80\xa6BiTests whether <code>r_a &lt;= r_b</code>.F`Returns <code>self</code> if <code>self</code> is not the dummy span, and <code>other</code> \xe2\x80\xa6ClThe stack of successors: as we visit a node, we mark our \xe2\x80\xa6CeReturns a reasonable digit group size for this radix.CnReturns a suggested template modifier to use for this type \xe2\x80\xa6Bostarting part of the gradually built suggestionCnProvides a default visit for a recursive type of interest. \xe2\x80\xa60000CgThe semantic (unescaped) representation of the literal.ClLink this to a taintable context so that emitting errors \xe2\x80\xa6EfFinds the <code>BasicBlock</code> to which this <code>SwitchInt</code> will branch \xe2\x80\xa6AaTarget modifiers.CnProtect a place so that it cannot be used any more for the \xe2\x80\xa6AhCalculates two booleans.CmLoad the vector index used by the given thread as well as \xe2\x80\xa6BmConverts a number to a disambiguator (see \xe2\x80\xa6ChConvert a Rust feature name to an LLVM feature name. \xe2\x80\xa6ClConverts a MIR pass name into a snake case form to match \xe2\x80\xa6CjApplies any path prefix substitution as defined by the \xe2\x80\xa6CkHow many (multi-call) callsites have we inlined for the \xe2\x80\xa6ChThese are simple counters that are for profiling and \xe2\x80\xa6DiThis is a callback from <code>rustc_errors</code> as it cannot access \xe2\x80\xa6EhGiven the <code>DefId</code> of an impl, returns the <code>DefId</code> of the trait \xe2\x80\xa6CnA set that stores for each local whether it is \xe2\x80\x9ctransient\xe2\x80\xa6ClThe transition recorded by this event only occurred on a \xe2\x80\xa6EfTransmutes a single scalar value <code>imm</code> from <code>from_scalar</code> to \xe2\x80\xa6CiWhether to generate trap instructions in places where \xe2\x80\xa6CjIf Some, the Nth error-level diagnostic is upgraded to \xe2\x80\xa6ClIf there is more than one whitespace char at start, trim \xe2\x80\xa6CnDefine the name or return the existing binding if there is \xe2\x80\xa6CmGets an instance for a path; fails gracefully if the path \xe2\x80\xa6CjGet the values inside the ValTree as a slice of bytes. \xe2\x80\xa6CkReturns the tuple type representing the upvars for this \xe2\x80\xa60ClThe upvars captured by the closure. Remains an inference \xe2\x80\xa600110001100000011000DkGets a <code>Ty</code> representing the <code>LangItem::OrderingEnum</code>Bo<em>Typed</em> copy for non-overlapping places.0Bo<em>Typed</em> swap for non-overlapping places.0CkReturns a type metadata identifier for the specified FnAbi.CnReturns a type metadata identifier for the specified FnAbi \xe2\x80\xa6CmReturns a KCFI type metadata identifier for the specified \xe2\x80\xa6DhProduces the same value as <code>Self::trunc</code> (and defaults to \xe2\x80\xa6000CmThe raw, un-split format string literal, with no escaping \xe2\x80\xa6CkComputes the data range of this union type: which bytes \xe2\x80\xa6Di<code>universal_region(origin)</code> \xe2\x80\x93 this is a \xe2\x80\x9cfree region\xe2\x80\x9d \xe2\x80\xa60DiTurn a place with a <code>dyn Trait</code> type into a place with the \xe2\x80\xa6CjA pass that propagates the unreachable terminator of a \xe2\x80\xa6EeReturns the <code>DefId</code> of the <code>unsafe_cell</code> lang item if it is \xe2\x80\xa6CiThis name is kind of confusing: Most unstable options \xe2\x80\xa600CiCalled when unwinding reached a state where execution \xe2\x80\xa60Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6000000DeReturns <code>true</code> if we should use block indent style for \xe2\x80\xa6EdReturns the <code>DefId</code> of the <code>use_cloned</code> lang item if it is \xe2\x80\xa6CeCreates a new unsuffixed integer literal with the \xe2\x80\xa6DjThis function checks the data at <code>val</code> to be runtime-valid. \xe2\x80\xa6CiValidates a raw string literal. Used for getting more \xe2\x80\xa6CmVisits self by adding a scope and handling recursive walk \xe2\x80\xa6CfHandle closures/coroutines/inline-consts, which is \xe2\x80\xa6AaDon\xe2\x80\x99t override!BkVisit the leaf candidates in reverse order.CjEmits a lint for function reference arguments bound by \xe2\x80\xa6ChExtension trait method to visit types in unambiguous \xe2\x80\xa6CfReturns the base type for HIR references and pointers.CeWell known names (only used for diagnostics purposes)0BdA list of where predicates (e.g. \xe2\x80\xa6BkThe span of the whole match, if applicable.DjAllows access to the current <code>ImplicitCtxt</code> in a closure if \xe2\x80\xa60DjFor flavors with an <code>Lld</code> component, ensure it\xe2\x80\x99s enabled. \xe2\x80\xa6EfLike <code>LocalDecl::new</code>, but takes a <code>SourceInfo</code> instead of a \xe2\x80\xa6ClCalls the given function with the source text referenced \xe2\x80\xa6CkLabels all the given spans with the provided label. See \xe2\x80\xa6BlWrite the first N fields of the given place.CmWrite out a human-readable textual representation for the \xe2\x80\xa6BgPrints local variables in a scope tree.EgThe <code>async_fn_in_trait</code> lint detects use of <code>async fn</code> in the \xe2\x80\xa6AnABI-incompatible return types.0AoRelative position of the accessDmIndicates that a <code>impl Drop for Adt</code> is <code>const</code> or not.00000000CnEither an argument for a generic parameter or a constraint \xe2\x80\xa6ClLint for potential usages of async closures and async fn \xe2\x80\xa6C`The <code>async_fn_kind_helper</code> lang item.C`The <code>async_fn_kind_upvars</code> lang item.C`The <code>async_fn_once_output</code> lang item.ChA template that the attribute input must match. Only \xe2\x80\xa60DfThe <code>binary_asm_labels</code> lint detects the use of numeric \xe2\x80\xa6CjFor byte strings there are no bytes that cannot occur. \xe2\x80\xa6ClA view of an underlying graph that has been augmented to \xe2\x80\xa6CbA slice/array index projection went out-of-bounds.0DjLints that are buffered up early on in the <code>Session</code> before \xe2\x80\xa60DgThe <code>confusable_idents</code> lint detects visually confusable \xe2\x80\xa6AoCanonical user type annotation.0CeA path that has been canonicalized along with its \xe2\x80\xa6C`extremely constrained barely-C ABI for TrustZone0BfA list of lint levels used in codegen.DhInformation for <code>CoerceUnsized</code> impls, storing information weEhCollect usages of the <code>param_def_id</code> and <code>Res::SelfTyAlias</code> in \xe2\x80\xa6DjWhether or not to recover a <code>a, b</code> when parsing patterns as \xe2\x80\xa60CkIterator over an alternating sequence of functional and \xe2\x80\xa6BmPublic API for querying compiler information.EaNon-generic helper for implementing <code>FromIterator&lt;TokenTree&gt;</code>\xe2\x80\xa6CgUsage of generic parameters is forbidden in various \xe2\x80\xa6CmWhether to continue exploring the children recursively or \xe2\x80\xa6DeCorresponds to struct <code>llvm::coverage::CounterExpression</code>.CiThe crate variances map is computed during typeck and \xe2\x80\xa6Cf(new_tag, new_perm, (alloc_id, base_offset, orig_tag))0AiLLVMRustDebugEmissionKindCgParameter attributes that can only be determined by \xe2\x80\xa60ClWhether we should define opaque types or just treat them \xe2\x80\xa600ChWhether we\xe2\x80\x99re currently in HIR typeck or MIR borrowck.CaDeprecation status of attributes known by Clippy.CnThe constituent parts of a type level constant of kind ADT \xe2\x80\xa6BaFormatting of the tree structure.AgPretty-printing detailsCnContains a doctest information. Can be converted into code \xe2\x80\xa6D`The type of a <code>CoerceMany</code> that is storing up the \xe2\x80\xa6DcTrait for types that <code>Diag::emit</code> can return as a \xe2\x80\x9c\xe2\x80\xa60ClWhat needs to be done after emulating an item (a shim or \xe2\x80\xa60BmInformation about an enabled library feature.0CkA folder used to remove any entry points (like fn main) \xe2\x80\xa6DnThis op is for <code>&amp;mut</code> borrows in the trailing expression of \xe2\x80\xa6CnCTFE failed to evaluate the constant in some unrecoverable \xe2\x80\xa6GfE.g. <code>&amp;&#39;_ Type</code>, <code>ContainsLifetime&lt;&#39;_&gt;</code>, <code>impl Trait + &#39;_</code>, \xe2\x80\xa6ClNew-typed boolean indicating whether explicit late-bound \xe2\x80\xa6CmHelper trait, for encoding to, and decoding from, a fixed \xe2\x80\xa6Bi<code>static</code>s from an extern blockDiStores AST <code>FormatArgs</code> nodes for use in late lint passes, \xe2\x80\xa6BnThe <code>format_placeholder</code> lang item.AlThe signature of a function.CmGeneralizes repr(C) user-defined type for extern function \xe2\x80\xa6AcBounds on generics.0CmOptions that apply to all doctests in a crate or Markdown \xe2\x80\xa6CcDoes this have <code>ConstKind::Unevaluated</code>?000BiDoes this have <code>Free</code> aliases?000BgDoes this have <code>Projection</code>?000CbUnlike <code>has_escaping_bound_vars</code> or \xe2\x80\xa6DdThe derived implementation of <code>HashStable_Generic</code> on \xe2\x80\xa6DkRequirements for a <code>StableHashingContext</code> to be used in this \xe2\x80\xa600000DeThe <code>internal_features</code> lint detects unstable features \xe2\x80\xa6CoThe <code>invalid_from_utf8</code> lint checks for calls to \xe2\x80\xa6DkThe <code>invalid_html_tags</code> lint detects invalid HTML tags. This \xe2\x80\xa6DdA temporary created during evaluating <code>if</code> predicate, \xe2\x80\xa6EaFound a <code>Self: Sized</code> bound where <code>Self</code> is a trait object.ChPosition in which <code>impl Trait</code> is disallowed.CjAn item to be included in an import library. This is a \xe2\x80\xa6AiInside a commented stringCiThe combined undo log for all the various unification \xe2\x80\xa6ClDescribes how a monomorphization will be instantiated in \xe2\x80\xa6CmA call to an intrinsic that is just not const-callable at \xe2\x80\xa60CkWalks the whole crate in DFS order, visiting each item, \xe2\x80\xa6DbImplementation of an <code>Iterator</code> trait by one of the \xe2\x80\xa600BeReport unused externs in event streamAmMethod <code>DepNode</code>s.DiThe <code>large_assignments</code> lint detects when objects of large \xe2\x80\xa60DhSimilar to <code>librustc_privacy::EmbargoVisitor</code>, but also takesCbA lifetime is expected to outlive other lifetimes.CeMake headings links with anchor IDs and build up TOC.DhThe different values <code>-C link-self-contained</code> can take: a \xe2\x80\xa6DiThe different values that <code>-C linker-features</code> can take on \xe2\x80\xa6DjEach lint expectation has a <code>LintExpectationId</code> assigned by \xe2\x80\xa6CiThis is the maximum size we will hash at a time, when \xe2\x80\xa6CkInsert rustc arguments at the beginning of the argument \xe2\x80\xa6CkThe suggestion is definitely what the user intended, or \xe2\x80\xa60DiBinding produced by a <code>macro_rules</code> item. Not modularized, \xe2\x80\xa6CdRepresents <code>#[rustc_macro_transparency]</code>.0CnA trait object, all of whose components are markers (e.g., \xe2\x80\xa600000CcThis struct is a hack to workaround unstable of \xe2\x80\xa6CfIntermediate format to store information needed to \xe2\x80\xa6CmThe test failed to compile (as expected) but the compiler \xe2\x80\xa6CaGo from a mut raw pointer to a const raw pointer.00AmDo not allow struct literals.DkConstant containing an ADT that implements non-const <code>Drop</code>. \xe2\x80\xa6CjSuggest a new type parameter name for diagnostic purposes.CjWhether parentheses may be omitted from a type without \xe2\x80\xa6BnRepresents <code>#[no_implicit_prelude]</code>0DjAllows building up an <code>OperandRef</code> by setting fields one at \xe2\x80\xa6Ak<code>A: &#39;region</code>000ClThe length of an SIMD type exceeds the maximum number of \xe2\x80\xa60DkThe <code>private_doc_tests</code> lint detects code samples in docs of \xe2\x80\xa6DkThe <code>private_macro_use</code> lint detects private macros that are \xe2\x80\xa60BoThe <code>panic_cannot_unwind</code> lang item.CjAn iterator that walks up the ancestor tree of a given \xe2\x80\xa6BkA path like <code>Foo(A, B) -&gt; C</code>.CmIndicates a range of tokens that should be replaced by an \xe2\x80\xa6ChPaths (relative to the doc root) and their pre-merge \xe2\x80\xa6CiInformation about the origin expression of a pattern, \xe2\x80\xa600CjWhen checking if a place conflicts with another place, \xe2\x80\xa60BlA placeholder (e.g., instantiated from a \xe2\x80\xa6CiA \xe2\x80\x9cplaceholder\xe2\x80\x9d that represents \xe2\x80\x9cany region\xe2\x80\x9d. \xe2\x80\xa60000000EhA (kinda) newtype of <code>RegionVid</code> so we can implement <code>Atom</code> on \xe2\x80\xa60CmPolarity for a trait predicate. May either be negative or \xe2\x80\xa60000CjA protector was triggered due to an invalid transition \xe2\x80\xa6CfSomething that uniquely identifies a query invocation.DdThe <code>redundant_imports</code> lint detects imports that are \xe2\x80\xa60CeNumber of variants to reserve in coroutine state. \xe2\x80\xa60BoThe <code>range_inclusive_new</code> lang item.DaSignals whether parsing a type should recover <code>-&gt;</code>.GhWhen casting <code>&amp;&#39;a T</code> to an <code>&amp;&#39;b Trait</code> object, relating <code>&#39;a</code> to \xe2\x80\xa60BkSigned remainder overflowed (INT_MIN % -1).0DeRemoves <code>Drop</code> terminators whose target is known to be \xe2\x80\xa6CmThis pass looks for MIR that always copies the same local \xe2\x80\xa6Da<code>[expr; N]</code> requires <code>type_of(expr): Copy</code>.00BoRepresents <code>#[rustc_builtin_macro]</code>.0DhPrivate fields of <code>RustcPatCtxt</code>, separated out to permit \xe2\x80\xa6CmAfter a closure impl has selected, its \xe2\x80\x9coutputs\xe2\x80\x9d were \xe2\x80\xa600BiArgument type must be <code>Sized</code>.00CeRepresents <code>#[rustc_std_internal_symbol]</code>.0BfWhich case a StorageDeadOrDrop is for.CgThe accessed pointer is a (transitive) child of the \xe2\x80\xa6ClA folder that strips out items that do not belong in the \xe2\x80\xa6CkThe SymbolExportLevel of a symbols specifies from which \xe2\x80\xa6DgThe <code>type_alias_bounds</code> lint detects bounds in type aliases.DgSafe <code>#[target_feature]</code> functions are not assignable to \xe2\x80\xa6000C`An access to a thread-local <code>static</code>.AnAccessing thread local statics0DkUsed to create a new <code>ThreadPool</code> or to configure the global \xe2\x80\xa6Cn\xe2\x80\xa6we found multiple sources of information and couldn\xe2\x80\x99t \xe2\x80\xa6BdMore than 255 <code>#</code>s exist.CgNumeric character escape is too short (e.g. \xe2\x80\x98\\x1\xe2\x80\x99).CnError E0323, E0324, E0325: mismatch between trait item and \xe2\x80\xa6BfSyntax used to declare a trait object.BfParameters that Tree Borrows can take.0ClHelper for InferCtxt::ty_or_const_infer_var_changed (see \xe2\x80\xa60ChCollect the list of aliased types and their aliases. \xe2\x80\xa6EaThe <code>unstable_features</code> lint detects uses of <code>#![feature]</code>.DkThe <code>unused_allocation</code> lint detects unnecessary allocations \xe2\x80\xa6DhThe <code>unused_attributes</code> lint detects attributes that were \xe2\x80\xa60CnDo not perform self type erasure for attaching a secondary \xe2\x80\xa6BfThe program caused undefined behavior.0DdThe test is marked <code>should_panic</code> but the test binary \xe2\x80\xa6CnAn unsized type was found in a location where a sized type \xe2\x80\xa60BnLLVM has other types that we do not wrap here.CmError information for when the program did something that \xe2\x80\xa60CjExtracts variances for regions contained within types. \xe2\x80\xa6CnInformation needed for building a <code>DW_TAG_variant</code>:CmThe ID for the artificial struct type describing a single \xe2\x80\xa6B`Derived obligation for WF goals.00DkLike <code>WhereClause</code>, but also identifies the expression which \xe2\x80\xa600Bd<code>Vec::with_capacity(123)</code>CdGet a mutable borrow of the currently active thread.CcGet a shared borrow of the currently active thread.EeAdds <code>target_feature = &quot;...&quot;</code> cfgs for a variety of platform \xe2\x80\xa6EfAdd a <code>experimental_default_bounds</code> bound to the <code>bounds</code> if \xe2\x80\xa6CkAdd arbitrary \xe2\x80\x9cpre-link\xe2\x80\x9d args defined by the target \xe2\x80\xa6ClAdditional bounds required of any type parameters of the \xe2\x80\xa6ClTuple containing the types of closure captures after the \xe2\x80\xa6CnCalled immediately after an \xe2\x80\x9cimmediate\xe2\x80\x9d local variable \xe2\x80\xa60CkGets an iterator over all predicates which apply to the \xe2\x80\xa6ChWhen rustdoc is running, provide a list of all known \xe2\x80\xa6DgCreates an <code>Allocation</code> only from information within the \xe2\x80\xa60CmThis module contains methods that assist in checking that \xe2\x80\xa6CmFalse to indicate that adjustments should not be applied. \xe2\x80\xa6CkReverses specialization. Given a witness obtained after \xe2\x80\xa6DdReverses specialization by <code>ctor</code>. See the section on \xe2\x80\xa6CjFind the largest integer with the given alignment or less.DdDepending on the kind of <code>InstanceKind</code>, the MIR body \xe2\x80\xa6CmFor each arm, a set of indices of arms above it that have \xe2\x80\xa60DcTargets the ARMv5TE, with code as <code>a32</code> code by default.CcCreates a static <code>JobRef</code> from this job.EfReturns the <code>DefId</code> of the <code>AsyncGenPending</code> lang item if it \xe2\x80\xa6CdLoad the internal atomic memory cells if they exist.DoUsed to generate new <code>AttrId</code>s. Every <code>AttrId</code> is unique.CjAdd a new set of predicates to the caller_bounds of an \xe2\x80\xa6CmEmit an error when encountering two or more variants in a \xe2\x80\xa6CcCalled before a basic block terminator is executed.0BbDEPRECATED LINT: BLACKLISTED_NAME.0CmA list of thread ids blocked because the buffer was full. \xe2\x80\xa6BoA list of thread ids blocked on eventfd::write.CaThe liveness data computed during MIR typeck: \xe2\x80\xa6CeThe regions that outlive free regions are used to \xe2\x80\xa6ChAdds the flags/depth from a set of types that appear \xe2\x80\xa6DkReturns true if the set of borrowers of <code>borrowed</code> living at \xe2\x80\xa6CmTrack information about the usefulness of branch patterns \xe2\x80\xa6CnThe destination of the loop/block expression itself (i.e., \xe2\x80\xa6DiBuilds drops for <code>pop_scope</code> and <code>leave_top_scope</code>.CbpsABI-mandated alignment for a vector type, if anyChCheck if the source is call expression and the first \xe2\x80\xa6CoReturns <code>true</code> if this pass can be overridden by \xe2\x80\xa6DgReturns <code>true</code> if the token can appear at the start of a \xe2\x80\xa6CmIf false, warning-level lints are suppressed. (rustc: see \xe2\x80\xa6CnCanonicalizes the goal remembering the original values for \xe2\x80\xa6CgThe span of the use resulting in capture kind Check \xe2\x80\xa6CcReturns <code>false</code> if an error was emitted.CjReturns CLI inconsistencies to emit errors: individual \xe2\x80\xa6CkCheck some basic consistency of the current target. For \xe2\x80\xa6DeChecks if <code>#[export_name]</code> is applied to a function or \xe2\x80\xa6EfType check assignment expression <code>expr</code> of form <code>lhs = rhs</code>. \xe2\x80\xa6DiThis ensures that items can only be <code>unsafe</code> (or unmarked) \xe2\x80\xa6Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6000000ClChecks that parameters don\xe2\x80\x99t use patterns. Mirrors the \xe2\x80\xa6DhChecks <code>rhs</code> as part of the RHS of a macro definition and \xe2\x80\xa6ClChecks if the referenced source text satisfies the given \xe2\x80\xa6DdValidate that <code>ProjectionCandidate</code>s created for this \xe2\x80\xa64444444CjGiven an floating-point operation and a floating-point \xe2\x80\xa6BdClear excess bits in the final word.DjWe don\xe2\x80\x99t want to directly use <code>ty_to_string</code> for closures \xe2\x80\xa6CjContains the data for evaluating the effect of feature \xe2\x80\xa60BjObtain the actual discriminant of a value.CnSets the discriminant for a new value of the given case of \xe2\x80\xa6ClCalculates the value that needs to be stored to mark the \xe2\x80\xa6DdTransmutes the <code>src</code> value to the destination type by \xe2\x80\xa6")
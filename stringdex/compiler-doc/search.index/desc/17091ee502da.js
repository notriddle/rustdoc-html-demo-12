rd_("AlThe compiler is targeting C.Ak<code>malloc</code> memory.0Aopresumed C ABI for the platform0Ag<code>#[repr(C)]</code>EbCan be specified as <code>extern &quot;C&quot;</code> or, as a shorthand, just \xe2\x80\xa6D`Construct a <code>P&lt;T&gt;</code> from a <code>T</code> value.CjA pointer type that uniquely owns a heap allocation of \xe2\x80\xa6CdThe set of candidates we are considering in this \xe2\x80\xa6DhA helper macro to <code>unwrap</code> a result except also print out \xe2\x80\xa6CnTime as an offset in seconds from <code>Timings::start</code>.ChUnwrap a <code>Result</code> with a useful panic message2CjThis field is not yet used. This field can be set to a \xe2\x80\xa6BjThe version of <code>.cargo-ok</code> fileBbThe schema version for this entry.Abthir::ExprKind::Asn<code>@</code>0CmInvoke the linker via a C/C++ compiler (e.g. on most unix \xe2\x80\xa6CjA platform-specific C compiler invocation builder. The \xe2\x80\xa60BjLinker is called through a C/C++ compiler.DjThe search graph does not simply use <code>Interner</code> directly to \xe2\x80\xa6000o<code>==</code>BgThe <code>==</code> operator (equality)DmArguments of a key-value attribute: <code>#[attr = &quot;value&quot;]</code>.n<code>=</code>21022ClTest for equality with value, possibly after an unsizing \xe2\x80\xa6BiA function declaration (<code>fn</code>).AgAn associated function.AcA foreign function.FmE.g., <code>fn foo()</code>, <code>fn foo(&amp;self)</code>, or <code>extern &quot;Abi&quot; fn foo()</code>.0AnThe <code>Fn</code> lang item.CiConstructor function automatically created by a tuple \xe2\x80\xa6EgThe <code>async</code>/<code>gen</code> block generated as the body of an async/gen \xe2\x80\xa6AfFunctions and methods.BmAn associated function with an optional body.ChAn associated function implementation with the given \xe2\x80\xa6AgA function declaration.8AbCall to a const fnClA function that gets called. We don\xe2\x80\x99t necessarily know \xe2\x80\xa611AbGarbage collector.CjThe <code>&gt;=</code> operator (greater than or equal to)Ab<code>&gt;=</code>111BmThe <code>&gt;</code> operator (greater than)Aa<code>&gt;</code>1011Bn<code>Id</code> is a Graphviz <code>ID</code>.AdA direct lint targetBaAn opaque identifier for an item.CfAn <code>if</code> expression without <code>let</code>DcAn <code>if</code> block, with an optional <code>else</code> block.CfAn <code>if</code> block, with an optional else block.AnAn <code>if</code> expression.DlTest whether a <code>bool</code> is <code>true</code> or <code>false</code>.CiError from IO. Mostly from reading the tarball to upload.Ab<code>&lt;=</code>CgThe <code>&lt;=</code> operator (less than or equal to)1000Aa<code>&lt;</code>BjThe <code>&lt;</code> operator (less than)10100o<code>!=</code>BkThe <code>!=</code> operator (not equal to)1000AiDo not run any doc tests.AiDon\xe2\x80\x99t retag any fields.BfDo not perform any kind of validation.10CbAll other positions (path expr, method, use tree).CmIgnore all alignment requirements. This is mainly used in \xe2\x80\xa60CjWe are not allowed to retry macro expansion as a fatal \xe2\x80\xa6AfDon\xe2\x80\x99t feed the type.AhHandle the item normallyAj<code>-Copt-level=0</code>0CjUse this variant when whatever you are converting with \xe2\x80\xa6DeNo, don\xe2\x80\x99t declare <code>let</code> bindings, because the caller \xe2\x80\xa6DcNo, don\xe2\x80\x99t emit <code>StorageLive</code>. The caller has taken \xe2\x80\xa6CdNo, don\xe2\x80\x99t schedule drops. The caller has taken \xe2\x80\xa6CnWe aren\xe2\x80\x99t performing any capturing - this is the default \xe2\x80\xa65AnDon\xe2\x80\x99t do any LTO whatsoever.Af<code>-C lto=no</code>Ee<code>-C instrument-coverage=no</code> (or <code>off</code>, <code>false</code> etc.)fDo notBhDon\xe2\x80\x99t collapse debuginfo for the macroAjContains the success value0000000000000AgLoading was successful.01111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111EgAn assignment op (e.g. <code>a += b</code>), or a binary op (e.g. <code>a + b</code>\xe2\x80\xa6EaAn or-pattern <code>A | B | C</code>. Invariant: <code>pats.len() &gt;= 2</code>.BiThe <code>||</code> operator (logical or)0CgA list of patterns where only one needs to be satisfied2n<code>|</code>fA OR BAmThe <code>||</code> operator.EcAn or-pattern, e.g. <code>p | q</code>. Invariant: <code>pats.len() &gt;= 2</code>.2222kOr-pattern.0CjAn or-pattern context, e.g., <code>p_0 | ... | p_n</code>.AeUnwind to this block.A`Everything else.ClSubject is a type, typically a type parameter, but could \xe2\x80\xa6BnA type. Supports pointers, Self, and literals.CkThe ID of a regular type as it shows up at the language \xe2\x80\xa6BjRepresents a type in the <code>HIR</code>.CkExpected the binding to have the given type, but it was \xe2\x80\xa6CcEquivalent to <code>ty::Infer(ty::TyVar(_))</code>.BeSome kind of type inference variable.0BhUse the type of the provided definition.ClUse this rather than <code>TyKind</code>, whenever possible.22BhThis constant came from the type system.02AfThe type of a pattern.544344CjFree-form case. Only for errors that are never caught! \xe2\x80\xa60ChHistorical baseline for when this abstraction was added.BeV1 is the original resolver behavior.01CdA more compact format, more amenable to avoiding \xe2\x80\xa6BaV2 adds the new feature resolver.01DkA format that explicitly lists a <code>version</code> at the top of the \xe2\x80\xa6AnV3 changes version preferences01Di<code>SourceId</code> URL serialization is aware of URL encoding. For \xe2\x80\xa60CjUnstable. Will collect a certain amount of changes and \xe2\x80\xa60DjReturns the path to the <code>ar</code> archive utility for the target \xe2\x80\xa6CdCreate project, relative to <code>paths::root</code>CjA nice interface for working with the infcx. The basic \xe2\x80\xa6EfReturns a transparent wrapper for <code>TyCtxt</code> which uses <code>span</code> \xe2\x80\xa61AiGet the background color.CeReturns the path to the C compiler for the target \xe2\x80\xa6ChConstruct a new platform-specific C compiler invocation.0ChMake bootstrap to behave as it\xe2\x80\x99s running on the CI \xe2\x80\xa60CjObtain the const on the RHS of an assoc const equality \xe2\x80\xa6BnContext used to evaluate constant expressions.000AlThe late context of the lintCjThe parse context, gives access to the session and the \xe2\x80\xa6CnThis module contains the functionality to convert from the \xe2\x80\xa6CnSupport for deserializing configuration via <code>serde</code>CjThe deserializer, used to actually deserialize a Value \xe2\x80\xa6BaDownload endpoint for all crates.AkServe the download endpointAnA simple disk usage estimator.CgDetermines the disk usage of all files in the given \xe2\x80\xa60Dd2023-05: We found that using <code>equivalent</code> rather than \xe2\x80\xa6AfResult when lhs == rhsBfMakes <code>expected == actual</code>.BmCompares two spans to see if they\xe2\x80\x99re equal.1FcReturns <code>true</code> if and only if this <code>Span</code> and <code>other</code> have the \xe2\x80\xa6CkGeneral management of file descriptors, and support for \xe2\x80\xa6AiGet the foreground color.ClMisc filesystem related helpers for use by bootstrap and \xe2\x80\xa6AkFile and file system accessCmThis module manages how the incremental compilation cache \xe2\x80\xa6BbThe fs handle we are working with.CdSupport for garbage collecting unused files from \xe2\x80\xa6ChTrack cache usage and \xe2\x80\x9cgarbage collect\xe2\x80\x9d unused filesCgPerforms garbage collection based on the given options.AhResult when lhs &lt; rhsBeMust not be <code>NegInfinity</code>.BnIdentifier to associate benchmark results withDbUnique reference to the report for the <code>--id</code> CLI flag.ClThe job id that this state is associated with, used when \xe2\x80\xa6BeThe package that we\xe2\x80\x99re downloading.ClSet the identifier used for referencing this argument in \xe2\x80\xa6Dg<code>SourceId</code> this source corresponds to, inferred from the \xe2\x80\xa6BcThe Package ID Spec of the package.DgMust be equal to <code>CRATE_NODE_ID</code> after the crate root is \xe2\x80\xa6BoId of the variant (not the constructor, see \xe2\x80\xa6AcPath resolution id.BeGets the identifier of this registry.Bcnode that produced the work-productCdUsed for internal tracking of the internal constant.DjThe ID of the <code>UseTree</code> that imported this <code>Import</code>.ClUsed to overwrite the resolution with the suggestion, to \xe2\x80\xa6BoReturns an opaque identifier for this registry.CkThe number that appears in the footnote reference and list.CkThe unique identifier of this item. Can be used to find \xe2\x80\xa6AcThe ID of the type.DkThe ID of the item being imported. Will be <code>None</code> in case of \xe2\x80\xa6CgInput, input file path and output file path to this \xe2\x80\xa60BlGets the address of the instruction pointer.CgInitialize as <code>format</code> or <code>Error</code>DbThis module contains all the defined keyword <code>Symbol</code>s.BeMust not be <code>PosInfinity</code>.AhResult when lhs &gt; rhsAcMarkdown formatter.DjUsed when <code>State.initialized = false</code>. Should have the same \xe2\x80\xa6CjReturns <code>None</code> if this is <code>Res::Err</code>CeGets the <code>LintId</code> for a <code>Lint</code>.0CmDetermines the category for a given expression. Note that \xe2\x80\xa6BaRespond OK without doing anythingDbHelper creating a fully enabled <code>LinkSelfContained</code> \xe2\x80\xa6CjCode related to processing overloaded binary and unary \xe2\x80\xa6ChWhether to add or subtract the value of the node\xe2\x80\x99s \xe2\x80\xa6oEither Eq or NeBbIs this an increment or decrement?F`Produces a new <code>Tree</code> accepting either <code>self</code> or <code>other</code> as \xe2\x80\xa6DhOS name to use for conditional compilation (<code>target_os</code>). \xe2\x80\xa6CnThis pretty-printer is a direct reimplementation of Philip \xe2\x80\xa6EkReturns a <code>Span</code> that would enclose both <code>self</code> and <code>end</code>.BnUtil methods for <code>rustc_middle::ty</code>CjA mini version of ast::Ty, which is easier to use, and \xe2\x80\xa6CfObtain the type on the RHS of an assoc ty equality \xe2\x80\xa6CmGet the type for constants, assoc types, type aliases and \xe2\x80\xa6CgType annotation, if any (otherwise the type will be \xe2\x80\xa6CjThe hidden type we\xe2\x80\x99re remapping. Useful for diagnostics.CnThe type of the pattern, to be checked against the type of \xe2\x80\xa6DjReturns the type of this <code>Place</code> after all projections have \xe2\x80\xa6BeType after the projection is applied.C`Type which must match the generic <code>G</code>CjThe generic type containing the generic parameter that \xe2\x80\xa6000CeDefines how the compiler represents types internally.CmReturns the type of this field. The resulting type is not \xe2\x80\xa6CmThe type variable that represents the value of the opaque \xe2\x80\xa6EaReturns the <code>Ty</code> corresponding to this <code>Instance</code>, with \xe2\x80\xa6444BfReturns the type of this inline const.87AgThe type of this local.CmType of the original user variable. This cannot contain a \xe2\x80\xa6AiThe type of the constant.AkThe possibly inferred type.AkThe type of this expressionEeThe type of the function. This is often a <code>FnDef</code> or a <code>FnPtr</code>.33AmType of the referenced place.CmThe descriptor string representing the name of the format \xe2\x80\xa6BfType of the place under investigation.AfThe type of the place.AfGet the constant type.AnRetrieve the type of this Adt.B`Retrieve the type of this field.CmReturn the generic argument type if applicable, otherwise \xe2\x80\xa6AbThe constant type.DhConversion of internal Rust compiler <code>ty</code> items to stable \xe2\x80\xa6BdReturns the type of this crate item.CmGet the instance type with generic instantiations applied \xe2\x80\xa6BjReturn the type of this static definition.CmReturn the type of this operation for the given input Ty. \xe2\x80\xa60CdGet the type of an operand relative to the local \xe2\x80\xa6CiResolve down the chain of projections to get the type \xe2\x80\xa6CmGet the expected type after applying this projection to a \xe2\x80\xa6AkGet the type of this place.CjThe generic type containing the generic parameter that \xe2\x80\xa6C`Type which must match the generic <code>G</code>111DcA <code>Tree</code> whose layout matches that of a <code>u8</code>.CnMap of installed package id to the set of binary names for \xe2\x80\xa6ClCore logic responsible for determining what it means for \xe2\x80\xa6AoThe workspace the build is for.0CfConsumes all whitespace characters until the first \xe2\x80\xa6AjAll of the primitive typesChUnwinding is just not possible given the ABI of this \xe2\x80\xa60CjThe ABI (Application Binary Interface) used by a function.BfThe <code>+</code> operator (addition)AoThe <code>add</code> lang item.111ChAlgebraic data types (ADT). For example: structures, \xe2\x80\xa600ClThe second field is the variant index. It\xe2\x80\x99s equal to 0 \xe2\x80\xa60CgAn ADT constructor, e.g. <code>Foo {x: 1, y: 2}</code>.222CcRepresents <code>cargo::rustc-link-arg=FLAG</code>.0CmA generic placeholder for \xe2\x80\x9cdepends on everything run by \xe2\x80\xa6mAll included.AdOpt in all packages.01BgFormat every packages and dependencies.BnAll groupings should have their items ordered.CmDoesn\xe2\x80\x99t stop until it returns the base case (a Local or \xe2\x80\xa6CkIndicates that a type constraint should always be true. \xe2\x80\xa6BkAll predicates may be implied by the trait.BoVisits all nested things, including item-likes.BdAll scopes with the given namespace.AoResolve doc links on all items.BiGenerate stack canaries in all functions.DgTrue if all predicates are true, like <code>on(all($a, $b, $c))</code>.CiIntersection of a list of configuration requirements, \xe2\x80\xa6BeA choice between alternative layouts.CbThe <code>&amp;&amp;</code> operator (logical and)0Ab<code>&amp;</code>gA AND BBeThe <code>&amp;&amp;</code> operator.1111DeTrue if any predicate is true, like <code>on(any($a, $b, $c))</code>.ChUnion of a list of configuration requirements, i.e., \xe2\x80\xa6CaError from API response containing JSON field \xe2\x80\xa6CkThe abstract representation of a command line argument. \xe2\x80\xa6BkA generic argument for a generic parameter.AhType or const parameter.C`The value is derived from a positional argument.CmWhen we fail during method argument checking, try to find \xe2\x80\xa6AbFunction argument.ChAn argument of non-tuple type. Parameters are (name, ty)BcABIs relevant to 32-bit Arm targets0AhAn arm of a \xe2\x80\x98match\xe2\x80\x99.DdRepresents a single arm of a <code>match</code> expression, e.g. \xe2\x80\xa6AiA <code>match</code> arm.AkThe <code>asm!</code> macro00ChRepresents <code>cargo::rustc-link-arg-bins=FLAG</code>.0EhBox. <code>unpin</code> indicates the absence of any pinned data. <code>global</code>\xe2\x80\xa6AkA <code>box</code> pattern.0BlA <code>box &lt;value&gt;</code> expression.AdLinker tool for BPF.CkFor bugs in the compiler. Manifests as an ICE (internal \xe2\x80\xa6lA cfg value.CaA cfg expression, like <code>cfg(windows)</code>.1DeThe parsed <code>--cfg</code> options that define the compilation \xe2\x80\xa60CnA generic configuration option, e.g., <code>test</code> or \xe2\x80\xa6CnPassed in on the command line. A path is attached when the \xe2\x80\xa6DeLoaded due to a request from the global cli arg <code>--config</code>1jComparisonEfThe <code>&lt;=&gt;</code> operator (three-way comparison, like <code>Ord::cmp</code>)0DfDefinition having a unique ID (<code>DefId</code>), corresponds to \xe2\x80\xa60AgAny module with a name.111111B`A visibility node in the layout.AbA definition node.3DfA feature enabling a dependency with <code>dep:dep_name</code> syntax.BfThe <code>/</code> operator (division)AoThe <code>div</code> lang item.111AcBuild documentation0BcDocument with <code>rustdoc</code>.AbDocument packages.10n<code>.</code>0BhAn unsized <code>dyn Trait</code> object0000Bm<code>-Zfix-edition=end=$INITIAL,$NEXT</code>ClChild requests that we stop monitoring and pass over the \xe2\x80\xa6AaMissing ` at end.ChA snapshot of the environment variables available to \xe2\x80\xa6kEnd Of FilemEnd of input.AhContains the error value000CjThe operation was an error, and it should not be tried \xe2\x80\xa611AlA literal with syntax error.222CnPlaceholder for a pattern that wasn\xe2\x80\x99t syntactically well \xe2\x80\xa6CmPlaceholder for an expression that wasn\xe2\x80\x99t syntactically \xe2\x80\xa6CjPlaceholder for a literal that wasn\xe2\x80\x99t well-formed in \xe2\x80\xa6CePlaceholder for a kind that has failed to be defined.3666BhFailed to parse a stabilization version.CmFailed to parse a deprecation version, or the deprecation \xe2\x80\xa60DfName resolution failed. We use a dummy <code>Res</code> variant so \xe2\x80\xa6ClA placeholder for a pattern that wasn\xe2\x80\x99t well formed in \xe2\x80\xa60CaA placeholder for an expression that wasn\xe2\x80\x99t \xe2\x80\xa6CePlaceholder for a type that has failed to be defined.5<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<3333333<<<<<<<<<<<<<3<CbAn <code>f16</code> bitcast to a <code>u16</code>.AdAn <code>f32</code>.AdAn <code>f64</code>.CkDo a full-crate-graph (inter-crate) LTO with \xe2\x80\x9cfat\xe2\x80\x9d LTO.Ag<code>-C lto=fat</code>mRun cargo fix0AfThe binder is present.AdBinder is specified.cGAT0000Dh<code>feature(generic_const_exprs)</code> anon consts are allowed to \xe2\x80\xa6000CgTOML representation of how the GCC build is configured.CjTarball containing a prebuilt version of the libgccjit \xe2\x80\xa6AlA specific <code>gcc</code>.0EoAn <code>async</code> block (<code>async move { ... }</code>), or a <code>gen</code> block (\xe2\x80\xa6Cn<code>gen</code>, which returns an <code>impl Iterator</code>.DnAn explicit <code>gen</code> block or the body of a <code>gen</code> function.AaA git repository.AkDependency from a git repo.11ChUnix-like linker with GNU extensions (both naked and \xe2\x80\xa6ClOptions that print the HIR, i.e. <code>-Zunpretty=hir</code>CdRepresents some newtyped <code>usize</code> wrapper.00BfRepresents a <code>fn x(self);</code>.BbAn integer\xe2\x80\x99s bit representation.B`The raw bytes of a simple value.CgCheck alignment on the actual physical integer address.0DiThe <code>bool</code> is the signedness of the <code>Integer</code> type.BdAn integer literal (<code>1</code>).DiIntegral type variable <code>?I</code> (that can only be unified with \xe2\x80\xa60CoA primitive signed integer type. For example, <code>i32</code>.Ea<code>12_u8</code>, <code>0o100</code>, <code>0b120i99</code>, <code>1f32</code>.21CjVarious types that are represented as ints and handled \xe2\x80\xa6237753323232EfRepresents a unit of <code>Work</code> with a <code>Freshness</code> for caller to \xe2\x80\xa6DgA <code>Job</code> is used to advertise work for other threads that \xe2\x80\xa6DiThe <code>Key</code> trait controls what types can legally be used as \xe2\x80\xa60CdUse the lld linker, either the system lld or the \xe2\x80\xa6BhLTO/ThinLTO postlink optimization stage.CmThe length of the repetition at a particular depth, where \xe2\x80\xa6ChYields the length of the place, as a <code>usize</code>.0EcTest that the length of the slice is <code>== len</code> or <code>&gt;= len</code>.AlLength of an array or slice.22AfA local (let) binding.DfA <code>let pat = expr</code> expression that is only semantically \xe2\x80\xa6BcA local (<code>let</code>) binding.BkA <code>let $pat = $expr</code> expression.AkA <code>let</code> binding.EgSpecial expression representing the <code>let</code> part of an <code>if let</code> \xe2\x80\xa6jA literal.CoA literal (e.g., <code>1</code>, <code>&quot;foo&quot;</code>).A`A literal token.221CaA literal string which should directly be emittednLinker is LLD.C`A source code location used for error reporting.CnPossible ways to run rustc and request various parts of LTO\xe2\x80\xa60BcThe link-time-optimization setting.DcThis is what the <code>LtoCli</code> values get mapped to after \xe2\x80\xa6BaMaximum value the index can take.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000Distable <code>min_const_generics</code> anon consts are not allowed to \xe2\x80\xa6000EbPartial mapping from <code>Place</code> to <code>PlaceIndex</code>, where some \xe2\x80\xa6BbMaximum value (with SSE semantics)AfTurn on max heuristicsBbMinimum value (with SSE semantics)CiUsed for function signatures, and constant and static \xe2\x80\xa6Ak<code>-Zunpretty=mir</code>BhA module declaration (<code>mod</code>).iA module.CcA path with generic arguments disallowed, e.g., \xe2\x80\xa6BlThe <code>*</code> operator (multiplication)AoThe <code>mul</code> lang item.111BjRepresents a <code>fn x(mut self);</code>.AlNo restriction on mutabilityBbData is mutable and not aliasable.000BhThe <code>-</code> operator for negationAoThe <code>neg</code> lang item.111Ag<code>Vec::new()</code>CkThis origin is used for the inference variables that we \xe2\x80\xa6CnDefault: include extra comments in NLL MIR dumps only. Can \xe2\x80\xa61CmNo-op. Useful for deleting instructions without affecting \xe2\x80\xa60CaThe <code>!</code> operator for logical inversionAoThe <code>not</code> lang item.1BcMutability restricted to immutable.22BkNegation, like <code>on(not($pred))</code>.CoNegates a configuration requirement, i.e., <code>not(x)</code>.CkAny decimal or hexadecimal digit depending on the location.DdA general number used in a <code>printf</code> formatting directive.AhA specific, fixed value.CaLiteral constant <code>1</code>, for convenience.AmThe second field, at index 1.BcValue for one as the integral type.CnLTO has been explicitly listed as \xe2\x80\x9coff\xe2\x80\x9d. This means no \xe2\x80\xa60BeExplicitly no LTO, disables thin-LTO.BoPrints only the frame that the error occurs in.0AlThe default value: disabled.ChSplit debug-information is disabled, meaning that on \xe2\x80\xa6AgTurn off any heuristicsDhIn the usual case, a <code>HirId</code> for an identifier maps to at \xe2\x80\xa6Cj1.x.y. When specified, rustfmt will format in the same \xe2\x80\xa6CjDiscard existing groups, and create a single group for \xe2\x80\xa6CgUse one <code>use</code> statement including all items.2AkPrelink optimization stage.CmAn option that takes a value, and cannot appear more than \xe2\x80\xa6CjThe trait implementation should be compatible with the \xe2\x80\xa6DeThe search pattern to look for. Used by <code>span_matches_pat</code>A`A match pattern.DhPattern types like <code>pattern_type!(u32 is 1..=)</code>, which is \xe2\x80\xa6CfPattern types (<code>pattern_type!(u32 is 1..)</code>)CmA pattern newtype. Takes any type and restricts its valid \xe2\x80\xa600EhThe same as <code>Expr</code>, but may be followed by a <code>:</code>. For example, \xe2\x80\xa6AhA user-provided pattern.BiPaths in path patterns <code>Path</code>.333BlA pattern type, e.g. <code>u32 is 1..</code>BlProgram database files (such as on Windows).EnA pinned borrow, <code>&amp;pin const $expr</code> or <code>&amp;pin mut $expr</code>. The \xe2\x80\xa6AoThe <code>pin</code> lang item.1jA pointer.CmA raw pointer (<code>*const T</code> or <code>*mut T</code>).DeA place referring to a value allocated in the <code>Memory</code> \xe2\x80\xa6DcA raw pointer (i.e., <code>*const T</code> or <code>*mut T</code>).mRaw pointers.44AkLinker tool for Nvidia PTX.EkA raw borrow, <code>&amp;raw const $expr</code> or <code>&amp;raw mut $expr</code>. The \xe2\x80\xa6CeA raw string, like <code>r##&quot;foo&quot;##</code>.1AgRetagging raw pointers.0AdApproximation of 1/xBiWe use this to create a forever-red node.kA referenceCiA reference pattern (e.g., <code>&amp;mut (a, b)</code>).EoA normal borrow, <code>&amp;$expr</code> or <code>&amp;mut $expr</code>. The resulting type \xe2\x80\xa6Db<code>move</code> or <code>use</code> keywords were not specified.DkA reference (<code>&amp;&#39;a T</code> or <code>&amp;&#39;a mut T</code>).AlAppears in a reference type.lA reference.CmA reference to the actual operand. The data is guaranteed \xe2\x80\xa6546EaA reference (i.e., <code>&amp;&#39;a T</code> or <code>&amp;&#39;a mut T</code>).CgA reference; a pointer with an associated lifetime. \xe2\x80\xa60AjConverts from T to &amp;T.1CgCreates a reference of the indicated kind to the place.0jReferencesB`The type is <code>&amp;T</code>.10BaCreates a reference to the place.05AaA reference node.66BlRepresents a normalized comparison operator.BeThe <code>%</code> operator (modulus)AoThe <code>rem</code> lang item.111BcThe resolution of a path or export.CmA <code>return</code>, with an optional value to be returned.0CjFrom a specific revision. Can be a commit hash (either \xe2\x80\xa600AeA single local scope.BfRun tools contained in this repository0DhLTO is run for this rustc, and it\xe2\x80\x99s <code>-Clto=foo</code>. If the \xe2\x80\xa60Dj<code>TyCtxt</code> (and related cache datastructures) can\xe2\x80\x99t be move \xe2\x80\xa6mLatch is set.ClA scalar or a scalar pair local with a single definition \xe2\x80\xa6BaA sequence of successive layouts.BlA collection of individual paths or aliases.0CfWhen encountered, store the associated value(s) in \xe2\x80\xa6BoThe <code>&lt;&lt;</code> operator (shift left)AoThe <code>shl</code> lang item.111C`The <code>&gt;&gt;</code> operator (shift right)AoThe <code>shr</code> lang item.111ChBuild the standard library, placing output in the \xe2\x80\x9c\xe2\x80\xa6DhBuild a standard library for the given <code>target</code> using the \xe2\x80\xa6A`A single string.BhA <code>String</code> (e.g., \xe2\x80\x9cabc\xe2\x80\x9d).EoA string literal or any <code>&amp;str</code> - <code>panic!(&quot;message&quot;)</code> or \xe2\x80\xa6EdA string literal (<code>&quot;foo&quot;</code>). The symbol is unescaped, and so \xe2\x80\xa6BdNon-translatable diagnostic message.000CkThe pointee of a string slice. Written as <code>str</code>.Cd<code>&quot;abc&quot;</code>, <code>&quot;abc</code>11DmString literals. Strings are not quite the same as <code>&amp;[u8]</code> \xe2\x80\xa60AoLoad source code from a string.333BeA &amp;str chunk in the version sort.BiThe <code>-</code> operator (subtraction)AoThe <code>sub</code> lang item.111BhThe string representation of the symbol.kFrom a tag.00DdThis describes tags that the <code>TaggedRef</code> struct can hold.CfMemory for thread-local statics. This memory may leak.0AoA (recursive) table of contentsBfA try expression (<code>expr?</code>).AoThe <code>Try</code> lang item.BjA tuple (e.g., <code>(a, b, c, d)</code>).BhA tuple (<code>(A, B, C, D,...)</code>).1BiA tuple (<code>(A, B, C, D, ...)</code>).Cl2.x.y. When specified, rustfmt will format in the latest \xe2\x80\xa60BbType and extended type qualifiers.AaAn arbitrary URL.DePrecise capturing syntax: <code>impl Sized + use&lt;&#39;a&gt;</code>CnA use expression (<code>x.use</code>). Span is of use keyword.Ak<code>use |x| y + x</code>.BjA use declaration item (<code>use</code>).AhA <code>use</code> item.2BoAn use expression (e.g., <code>var.use</code>).Dh<code>use foo::bar::*;</code> or <code>use foo::bar::baz as quux;</code>Acthir::ExprKind::UseBnUse of value, generating a clone function callAlYields the operand unchanged10ClForces its contents to be treated as a value expression, \xe2\x80\xa611D`<code>use&lt;&#39;a, T&gt;</code> precise-capturing bound syntaxAmA <code>use</code> statement.DgAn import of 1 or more items into scope, using the <code>use</code> \xe2\x80\xa602ClThis constant cannot go back into the type system, as it \xe2\x80\xa60CmIdentifier WITH a preceding dollar sign, which means that \xe2\x80\xa6AmInfer the value of the const.0EfThis is a binding for a non-<code>self</code> binding, or a <code>self</code> that \xe2\x80\xa6111AfAn array of constants.Aj<code>vec![a, b, c]</code>BgABIs relevant to Windows or x86 targets0BiRun normal tests and doc tests (default).AaRetag all fields.0CgOnly in types, since RTN is denied later during HIR \xe2\x80\xa6BkDon\xe2\x80\x99t emit an unstable error for the itemE`Yes, declare <code>let</code> bindings as normal for <code>if</code> conditions.BmYes, emit <code>StorageLive</code> as normal.CmYes, the relevant functions should also schedule drops as \xe2\x80\xa6AgWe are capturing tokensAg<code>-C lto=yes</code>Dn<code>-C instrument-coverage</code> or <code>-C instrument-coverage=yes</code>B`Collapse debuginfo for the macroAlAlways <code>RustCall</code>0DgThe <code>abi</code> defines how this data is passed between functions.DfConversion of internal Rust compiler <code>rustc_target</code> and \xe2\x80\xa6ClABI name to distinguish multiple ABIs on the same OS and \xe2\x80\xa6333AmThe ABI used by the function.AnAdd dependencies to a manifestCeExtend <code>Arg</code> with <code>ArgExt</code> dataCmExtend <code>Command</code> with <code>CommandExt</code> dataAkAdds record to the counter.BmAdds a source config with an associated name.Eb<em>(<code>git2</code>)</em> Add all files in the working directory to the git \xe2\x80\xa6CgWhen a tag is used, we call this function to add or \xe2\x80\xa6DnIndicate that <code>a &lt; b</code> (where <code>&lt;</code> is this relation)AoCombine two summaries together.CfClean the entire build directory (not used by default)Clapply to all appropriate files, not just those that have \xe2\x80\xa610BnAll headers, including explicit headers above.BjGet a flags value with all known bits set.000000000000000000000000000DfCreates a <code>FileLines</code> that contains all lines in all files.EbProduces a <code>Tree</code> where each of the trees in <code>trees</code> are \xe2\x80\xa6ElConvenience method to create the <code>&lt;lhs&gt; &amp;&amp; &lt;rhs&gt;</code> suggestion.ChUse this function to merge the certainty of multiple \xe2\x80\xa6CiCreates a pair of param-env and value for use in queries.EcReturns success if both <code>self</code> and <code>other</code> succeed, while \xe2\x80\xa62222CaCreates a default MacResult that can be anything.FkReturns <code>true</code> if any of <code>Trait</code>, <code>?Trait</code> or <code>!Trait</code> were \xe2\x80\xa60ClAPI endpoint for the registry. This is what\xe2\x80\x99s actually \xe2\x80\xa6BfIf set, config.json includes \xe2\x80\x98api\xe2\x80\x99AgAdds a host rustc flag.CdAdds an argument to the list of valid possibilities.Cc(chainable) Adds <code>arg</code> to the args list.0Bb<code>IntoIterator</code> argumentCmGeneric command argument provider. Prefer specific helper \xe2\x80\xa600000000000000000CmHandles the next argument. If the argument is an argfile, \xe2\x80\xa6BnAdd an argument. See <code>Diag::arg()</code>.DfArm a <code>DropBomb</code>. If the value is dropped without being \xe2\x80\xa6BhPrepare a suggestion from an expression.BeThe Rust abstract syntax tree module.ClAuxiliary crates that should be built and made available \xe2\x80\xa60CaLLVM-frontend specific AVR calling convention \xe2\x80\xa6ClRange of the bad memory that was encountered. (Might not \xe2\x80\xa60BoMostly static information about the build task.0AgPath to a debug binary.BlCharacter repeated to make the lower border.BjRing-buffer of tokens and calculated sizesCkEither a name of the next metavariable, a separator, or \xe2\x80\xa6DfA macro for triggering an ICE. Calling <code>bug</code> instead of \xe2\x80\xa6lRaise a bug.CjPath to / name of the Microsoft Console Debugger (CDB) \xe2\x80\xa6Dk<code>cfg</code> information extracted from <code>rustc --print=cfg</code>.DhGets the list of <code>cfg</code>s printed out from the compiler for \xe2\x80\xa6BiAll the target <code>Cfg</code> settings.2BfConfigure the compilation environment.CnThe compiler code necessary to support the cfg! extension, \xe2\x80\xa6CaRoutines for manipulating the control-flow graph.Aocfg and check-cfg configurationD`The representation of a <code>#[doc(cfg(...))]</code> attribute.CmLLVM Control Flow Integrity (CFI) and cross-language LLVM \xe2\x80\xa6DiCreate a new custom <code>Command</code>. This should be preferred to \xe2\x80\xa6CmCompares two given types, eliding parts that are the same \xe2\x80\xa6AlThe (1-based) column number.AlThe (0-based) column offset.DjDefault CPU to pass to LLVM. Corresponds to <code>llc -mcpu=$cpu</code>\xe2\x80\xa6CnCow-Vec-Str: Cow&lt;\xe2\x80\x99static, [Cow&lt;\xe2\x80\x99static, str&gt;]&gt;AnThe current working directory.BfThe current working directory of cargoCi(chainable) Sets the current working directory of the \xe2\x80\xa6BfThe directory to run the program from.10BeReturn the current working directory.CgReturns the path to the C++ compiler for the target \xe2\x80\xa6CnConstruct a new platform-specific CXX compiler invocation. \xe2\x80\xa60AeThe field definition.CfAn ID used to get the instance definition from the \xe2\x80\xa6CiA <code>Tree</code> consisting only of a definition node.CmThe number of items that have been drained (removed) thus \xe2\x80\xa6CnEditable representation of a <code>[dependencies]</code> entryBbAdds a normal dependency. Example:BfReturn dependency information, if any.BaDependency info about this crate.C`Changes this to <code>[dev-dependencies]</code>.CnThe depth-first number of this node in the search graph \xe2\x80\x93\xe2\x80\xa6Cinext \xe2\x80\x9cdepth first number\xe2\x80\x9d to issue \xe2\x80\x93 just a counterCiThe <code>DefId</code> of the struct, enum or union item.BoThe <code>DefId</code> of the destructor method1Abonly run doc tests0BgDocumentation generation for bootstrap.11AcFetch the doc path.ChThe directory for rustdoc output: <code>$root/doc</code>DjWhether docs should be built for the target via <code>cargo doc</code> \xe2\x80\xa6BgMain method for <code>cargo doc</code>.BgWhether to just clean the doc directory01AeThe destination type.0BoThe too-large referent of the destination type.CjThe current destination folder of where HTML artifacts \xe2\x80\xa6BnRoot destination to place all HTML output intoClConsumes a token \xe2\x80\x98tok\xe2\x80\x99 if it exists. Returns whether \xe2\x80\xa6CeThe visitor must have an <code>InterpCx</code> in it.0CaElse block for a <code>let...else</code> binding.DiThe upper bound of the range, or <code>None</code> for ranges such as \xe2\x80\xa6CiA pointer to the end of the allocated area. When this \xe2\x80\xa6BcA pointer to the end of free space.BoThe end byte index into <code>init_mask</code>.0CkCreates an empty span pointing to directly after this span.ClOne indexed Line and Column of the last character of the \xe2\x80\xa6CkAdd an env var to the cargo command instance. Note that \xe2\x80\xa6CdEnvironment variables to set in the rustdoc process.CjAdditional environment variables to run the compiler with.10CmThe list of environment variables we found that the rustc \xe2\x80\xa6CmReturns all environment variables as an iterator, keeping \xe2\x80\xa6AnEnvironment variable snapshot.CdA snapshot of the process\xe2\x80\x99s environment variables.Ci(chainable) Sets an environment variable for the process.ChAny environment variables that should be set for the \xe2\x80\xa610CmThe host environment snapshot to use as basis for what is \xe2\x80\xa60B`Specify an environment variable.00000000000000000ChEnvironment name to use for conditional compilation (\xe2\x80\xa6CaGets a reference to the underlying stderr writer.AfCMAKE_EXE_LINKER_FLAGSDiGiven an executable called <code>name</code>, return the filename for \xe2\x80\xa6Af<code>$name$EXE</code>DeThe <code>extern</code> keyword and corresponding ABI string, if any.AnThe table of file descriptors.0DcBindings to the LLVM-C API (<code>LLVM*</code>), and to our own \xe2\x80\xa6CbHigh-level overview of how <code>fix</code> works:BkDetermines how a pointer should be printed.0CjCustom formatting traits used when outputting Graphviz \xe2\x80\xa60BaDisplay a JSON value as a string.AfWrites serialized JSONAdThe function itself.DiThis module defines the <code>Gcc</code> struct, which represents the \xe2\x80\xa6BlCompilation of native dependencies like GCC.CbReturns the executable name for a GCC compiler \xe2\x80\xa6AkConstruct a gcc invocation.0BePath to / name of the GDB executable.CjRetrieves a reference to the interned value associated \xe2\x80\xa6CkRetrieves a cached result for the given step, if available.BhGets the build output for the given key.AlRetrieves a config variable.AmAccess an <code>ArgExt</code>BaAccess an <code>CommandExt</code>BgGets the cache associated with the key.AoLike <code>HashMap::get</code>.EgReturns an AST <code>FormatArgs</code> node if a <code>format_args</code> expansion \xe2\x80\xa6DaReturns the list of <code>DefId</code>s that the path resolves toCdRead-only lookup (avoid read-acquiring the RefCell).BiIf it exists, the index this key maps to.BjGet the value at this index, if it exists.DfImplementation detail for <code>InterpCx::get_env_var</code>. This \xe2\x80\xa6CmImplementation detail for <code>InterpCx::get_env_var</code>.AaRead-only lookup.0AnGet the inner value if frozen.CaReturns the item in the map with the given index.CjReturns a reference to the value corresponding to the key.CmReturns a reference to the value in the set, if any, that \xe2\x80\xa6DgGets the <code>FluentValue</code> at the <code>key</code> if it exists.021CmGiven the metadata, extract out the value at a particular \xe2\x80\xa632CeReturns the initialization state at the specified \xe2\x80\xa6BdGet the provenance of a single byte.CcReturns the dataflow state at the current location.CnRetrieve the value stored for a place, or \xe2\x8a\xa4 if it is not \xe2\x80\xa6BhRead a span and record that it was read.CnIndex into a JSON array or map. A string index can be used \xe2\x80\xa6BfReturns the current thread-local value:9:9CnTry to fetch a cached result, checking the recursion limit \xe2\x80\xa6CfMight return parts that are duplicate with ones in \xe2\x80\xa6DjPrepares <code>BootstrapCommand</code> that runs git inside the source \xe2\x80\xa6BoEnable support for shallow git fetch operationsBkThe real git status check starts from here.AgGit repo for dependencyoRepository URL.BcHome of the <code>GitSource</code>.AmA git source. Value is a URL.AcGit Testing SupportAgGlobal value numbering.AoHandlebars template processing.BhParses a desugared <code>for</code> loopCmParses an <code>if</code> expression without <code>let</code>BhParses an <code>if let</code> expressionCkParses an <code>if</code> or <code>if let</code> expressionDkReturns the arguments of the <code>vec!</code> macro if this expression \xe2\x80\xa6BjParses a desugared <code>while</code> loopBnParses a desugared <code>while let</code> loopCkHigher a <code>hir</code> range to something similar to \xe2\x80\xa6DkConvenience function around <code>hir_opt</code> for suggestions with a \xe2\x80\xa6CeHIR datatypes. See the rustc dev guide for more info.BbICH - Incremental Compilation HashFjIterate over <code>Arg</code> and <code>ArgGroup</code> <code>Id</code>s via <code>ArgMatches::ids</code>.BdThe current list of used header IDs.AmId handling for rustdoc-json.ClThe index of the item that will be inspected by the next \xe2\x80\xa6DjThe index into <code>TtParser::locs</code>, which represents the \xe2\x80\x9cdot\xe2\x80\xa6AbThe variant index.CcThe \xe2\x80\x9cuntyped\xe2\x80\x9d variant of <code>ConstInt</code>.0ClThe integer type for an enum descriminant, if explicitly \xe2\x80\xa6BkSee <code>Job</code> and <code>Work</code>.BcJob management (mostly for windows)AhGets the underlying key.BcThe current key being deserialized.A`The opaque type.BjReturns a reference to this entry\xe2\x80\x99s key.CeReturns the number of remaining packages to be built.AoLike <code>HashMap::len</code>.BoHow many keys/index pairs are currently active.CjReturns the number of universal regions created in any \xe2\x80\xa6CcGet the length of a slice/string/array stored here.0BjReturns the number of keys created so far.oNumber of SCCs,CmReturns the total number of nodes in the forest that have \xe2\x80\xa6BjReturns the number of elements in the map.BjReturns the number of elements in the set.CkLength of this annotation as displayed in the stderr output21BcHow many elements are in the table.00032CgThe number of targets including <code>otherwise</code>.4343CkThe stringified expression that is the length of the array.AnThe left side of the equation.BlWhether or not this is a library dependency.C`If set, the artifact should also be a dependencyFeReturns the <code>MetaItemLit</code> if <code>self</code> is a <code>MetaItemInner::Literal</code>\xe2\x80\xa60BmThe absolute value of the resultant constant.00DeIf this is <code>Right</code>, we are not currently executing any \xe2\x80\xa60DhUse the <code>log</code> crate to log a hopefully helpful message in \xe2\x80\xa6CkMap of the LTO-status of each unit. This indicates what \xe2\x80\xa60BlThis flag enables LTO in the specified form.AeSpecify LTO settings.CiCalculates the flavor of LTO to use for this compilation.CkComputes the least-upper-bound, or mutual supertype, of two0CkComputes the least-upper-bound, or mutual supertype, of \xe2\x80\xa6AcMan-page formatter.FoConverts a <code>Secret&lt;T&gt;</code> to a <code>Secret&lt;U&gt;</code> by applying <code>f</code> to the \xe2\x80\xa6CgMapping <code>Local -&gt; its possible borrowers</code>0CgStores pointers to the environment variables. These \xe2\x80\xa6BaStores the environment variables.fSafetyCnMap from early/late params of the impl to identity regions \xe2\x80\xa6DiThis module used to contain a type called <code>Map</code>. That type \xe2\x80\xa6CnLocation-indexed (BasicBlock for outer index, index within \xe2\x80\xa6ClThis map only contains values that are not <code>\xe2\x8a\xa5</code>.ClMap from cache key to the provisionally evaluated thing. \xe2\x80\xa6AnA macro to create a FxHashMap.DkThis module implements declarative macros: old <code>macro_rules</code> \xe2\x80\xa6DkUsed when there is no <code>State</code>. Should have the same width as \xe2\x80\xa6CmThis is an incomplete implementation of mmap/munmap which \xe2\x80\xa6CnThis follows the pattern in src/shims/unix/mem.rs: We only \xe2\x80\xa6CnMIR datatypes and passes. See the rustc dev guide for more \xe2\x80\xa6DiConversion of internal Rust compiler <code>mir</code> items to stable \xe2\x80\xa6DhIndex of the \xe2\x80\x9cmove out\xe2\x80\x9d that we found. The <code>MoveData</code> canEdReturn a <code>Group</code> guard for a <code>Step</code> that is built for each \xe2\x80\xa6AlIf the constant is negative.00DkCreates a new set of build configuration from the <code>flags</code> on \xe2\x80\xa6EaCalls <code>Builder::cargo</code> and <code>Cargo::configure_linker</code> to \xe2\x80\xa6DiCreate compilers for a <code>rustc_private</code> tool with the given \xe2\x80\xa6AjCreates a new empty cache.ClCreates a new <code>BuildStamp</code> for a given directory.AlCreates a new blank internerC`Parses all config files to learn about build \xe2\x80\xa6DeLearns the information of target platform from <code>rustc</code> \xe2\x80\xa6ChCreates a build script dependency information from a \xe2\x80\xa6AgCreates a unit of work.ChCalculate the paths for build output, lock the build \xe2\x80\xa6CeCreates a new shell (color choice and verbosity), \xe2\x80\xa6BhCreates a new unstable features context.CcCreates a package from a manifest and its location.DhCreates a <code>EncodableSourceId</code> that always encodes URL params.CmCreates a <code>SourceId</code> object from the kind and URL.CmCreates a new workspace given the target manifest pointed \xe2\x80\xa6ChCreates a new Intermediate Workspace Root configuration.BnCreates a new <code>GlobalCacheTracker</code>.BhCreates a new <code>ProfileMaker</code>.DhGiven a package dependency graph, creates a <code>PublishPlan</code> \xe2\x80\xa6BoConstructs a filter from underlying primitives.Bfconstructor to build a new ignore fileDeRuns the compiler at <code>path</code> to learn various pieces of \xe2\x80\xa6AnCreates a new config instance.CkCreates a new blank configuration key which is ready to \xe2\x80\xa6DeCreate a new <code>Env</code> from process\xe2\x80\x99s environment variables.BgCreates a new <code>CacheLocker</code>.BcCreates a queue with a given bound.EgCreates a new <code>Progress</code> with the <code>ProgressStyle::Percentage</code> \xe2\x80\xa6BdCreate a new dependency with a name.BjSpecify dependency by version requirement.AoSpecify dependency from a path.BcSpecify dependency from a git repo.B`Reference to a Dependency Table.CaCreate a new <code>Arg</code> with a unique name.CbCreates a new instance of an <code>Command</code>.BlCreates a new counter with an initial value.BoCreates a new dependency queue with 0 packages.ChCreates a new filesystem to be rooted at the given path.CnInvoked with an absolute path to a directory that contains \xe2\x80\xa6CgCreates a new source which is walked recursively to \xe2\x80\xa6CjCreates a source of a registry. This is a inner helper \xe2\x80\xa6CeCreates an empty registry index at <code>path</code>.CjCreates a new instance of the on-disk index cache manager.BnCreates a local registry at <code>root</code>.DaCreates a Git-rebased remote registry for <code>source_id</code>.DbCreates a HTTP-rebased remote registry for <code>source_id</code>.AeCreates an empty map.DfLike <code>SourceConfigMap::empty</code> but includes sources from \xe2\x80\xa6CiCreates a git source for the given <code>SourceId</code>.DiCreates an instance of <code>GitCheckout</code>. This doesn\xe2\x80\x99t imply \xe2\x80\xa6C`Creates an instance for a remote repository URL.AjCreates a replaced source.DgCreates a new <code>ProcessBuilder</code> with the given executable \xe2\x80\xa6BcCreate project in <code>root</code>DbCreate a new <code>Project</code> in a git <code>Repository</code>DjCreates a new package builder. Call <code>publish()</code> to finalize \xe2\x80\xa63BhCreates a new <code>ProcessError</code>.AfValidated package nameAgValidated registry nameAfValidated profile nameAfValidated feature nameAhValidated path base nameBdReturns ADT variants ordered by sizeCnCreates the evaluation context from the lint context. This \xe2\x80\xa6CkTakes ownership of the source file handle if the source \xe2\x80\xa6BbBuilds a <code>ParenHelper</code>.AkCreates an empty allocator.CkCreates a new stack with an initial tag. For diagnostic \xe2\x80\xa6EeConstruct a new <code>Stack</code> using the passed <code>Item</code> as the root \xe2\x80\xa6CmInformation for a new node. By default it has no name and \xe2\x80\xa6BlCreate a new tree, with only a root pointer.CcCreate a new clock based on the availability of \xe2\x80\xa6ClCreate a new set of clocks representing memory allocated \xe2\x80\xa6CjCreate a new global state, setup with just thread-id=0 \xe2\x80\xa6DhCreates a new <code>RangeMap</code> for the given size, and with the \xe2\x80\xa6AiCreate a new MiriMachine.BnConstruct a bare <code>diff</code> invocation.DjConstruct a new <code>rustc</code> invocation. This will automatically \xe2\x80\xa6CoConstruct a new <code>rustdoc</code> invocation with target \xe2\x80\xa6EbConstruct a new <code>llvm-readobj</code> invocation with the <code>GNU</code> \xe2\x80\xa6DgConstruct a new <code>llvm-profdata</code> invocation. This assumes \xe2\x80\xa6DhConstruct a new <code>llvm-filecheck</code> invocation. This assumes \xe2\x80\xa6DkConstruct a new <code>llvm-objdump</code> invocation. This assumes that \xe2\x80\xa6DfConstruct a new <code>llvm-ar</code> invocation. This assumes that \xe2\x80\xa6DfConstruct a new <code>llvm-nm</code> invocation. This assumes that \xe2\x80\xa6DiConstruct a new <code>llvm-bcanalyzer</code> invocation. This assumes \xe2\x80\xa6DhConstruct a new <code>llvm-dwarfdump</code> invocation. This assumes \xe2\x80\xa6DkConstruct a new <code>llvm-pdbutil</code> invocation. This assumes that \xe2\x80\xa6DfConstruct a new <code>llvm-as</code> invocation. This assumes that \xe2\x80\xa6DgConstruct a new <code>llvm-dis</code> invocation. This assumes that \xe2\x80\xa6DkConstruct a new <code>llvm-objcopy</code> invocation. This assumes that \xe2\x80\xa6ChConstruct a new platform-specific C compiler invocation.EbConstruct a <code>gcc</code> invocation. This assumes that <em>a</em> suitable \xe2\x80\xa6EcConstruct a new <code>clang</code> invocation. <code>clang</code> is not always \xe2\x80\xa6CnTraverses the constraints and returns the indexed graph of \xe2\x80\xa6CjCreates a new region inference context with a total of \xe2\x80\xa6ChCreates a new set of \xe2\x80\x9cregion values\xe2\x80\x9d that tracks \xe2\x80\xa6CfCreates a \xe2\x80\x9cdependency graph\xe2\x80\x9d where each region \xe2\x80\xa60DjCreates a new and fully initialized <code>UniversalRegions</code> that \xe2\x80\xa6CkCreates an uninitialized builder for an instance of the \xe2\x80\xa6CaBy default a <code>SpanGuard</code> does nothing.AmCreates a new atomic integer.DeCreates a new worker local where the <code>initial</code> closure \xe2\x80\xa6DeCreates a registry which can hold up to <code>thread_limit</code> \xe2\x80\xa6FaCreates a new <code>SnapshotVec</code>. If <code>L</code> is set to <code>()</code> then most \xe2\x80\xa6BaCompute SCCs without annotations.CfCreates a new jobserver initialized with the given \xe2\x80\xa6BiCreates an empty <code>SsoHashMap</code>.BiCreates an empty <code>SsoHashSet</code>.DjCreates a new <code>Svh</code> given the hash. If you actually want to \xe2\x80\xa6C`Tags <code>pointer</code> with <code>tag</code>.BaCreates a new empty argument map.CjCreate a new color specification that has no colors or \xe2\x80\xa61CkConstructs a syntax extension with the given properties \xe2\x80\xa6CcCreates an <code>Id</code> named <code>name</code>.CnConstruct an empty collection of lang items and no missing \xe2\x80\xa6CmBuilds a new DefPathHash with the given StableCrateId and \xe2\x80\xa6CfAdds a root definition (no parent) and a few other \xe2\x80\xa6CnComputes the stable ID for a crate with the given name and \xe2\x80\xa6CdConverts an identifier to the corresponding segment.AkPanics if n &gt;= u32::MAX.CkThe usual case; collect the set of expressions dynamically.CgCreates the ExprUseVisitor, configuring it with the \xe2\x80\xa6CjConstructs a new, empty <code>IndexVec&lt;I, T&gt;</code>.DhCreates a new bitset with a given <code>domain_size</code> and chunk \xe2\x80\xa6DbCreates a new <code>rows x columns</code> matrix, initially empty.CiCreates a new empty sparse bit matrix with no rows or \xe2\x80\xa6EeConstruct <code>ClosureArgs</code> from <code>ClosureArgsParts</code>, containing \xe2\x80\xa6DnConstruct <code>CoroutineArgs</code> from <code>CoroutineArgsParts</code>, \xe2\x80\xa6BiCreates an empty <code>SsoHashMap</code>.BiCreates an empty <code>SsoHashSet</code>.DaRuns the <code>MemDecoder</code> validation and if it passes, \xe2\x80\xa643DkAvoid using this in favour of more specific <code>new_*</code> methods, \xe2\x80\xa6CgConstruct a trait environment with the given set of \xe2\x80\xa6BfCreates a new <code>VariantDef</code>.BfCreates a new <code>AdtDefData</code>.DfCreates an <code>AutoBorrowMutability</code> from a mutability and \xe2\x80\xa6DcConstructs an <code>AssociatedItems</code> map from a series of \xe2\x80\xa687DnConstruct <code>InlineConstArgs</code> from <code>InlineConstArgsParts</code>.CnCreates a new <code>LocalDecl</code> for a temporary, mutable.DkTry to create an Allocation of <code>size</code> bytes, panics if there \xe2\x80\xa6CiCreates switch targets from an iterator of values and \xe2\x80\xa6DgCreates a new <code>OnDiskCache</code> instance from the serialized \xe2\x80\xa6EeCreates a <code>FlatPat</code> containing a simplified <code>MatchPairTree</code> \xe2\x80\xa6DgThe <code>always_alive</code> set is the set of locals to which all \xe2\x80\xa6ChReturns a map that only tracks places whose type has \xe2\x80\xa6CiCreates a new disjoint-set forest containing the keys \xe2\x80\xa6BfReturns a new DeduceReadOnly instance.AkCreates a new, empty patch.CnDetermines which locals are used &amp; unused in the given \xe2\x80\xa6CmCreates a new parser for the given unescaped input string \xe2\x80\xa6CjConstructs a new, empty <code>IndexVec&lt;I, T&gt;</code>.CnBuild a new matrix from an iterator of <code>MatchArm</code>s.DdReturns an empty <code>TokenStream</code> containing no token trees.DgCreates a new <code>Group</code> with the given delimiter and token \xe2\x80\xa6DjCreates a new <code>Punct</code> from the given character and spacing. \xe2\x80\xa6EfCreates a new <code>Ident</code> with the given <code>string</code> as well as the \xe2\x80\xa6EdCreates a new diagnostic with the given <code>level</code> and <code>message</code>.CkBuild a constant. Note that this should only be used by \xe2\x80\xa6AoConstructs a <code>Body</code>.CjCreate a new SwitchTargets from the given branches and \xe2\x80\xa6AhCreates a new query job.CnComputes the stable ID for a crate with the given name and \xe2\x80\xa6AaUsed for testing.0BmCreate a new limit from a <code>usize</code>.CjBuilds a new ExpnHash with the given StableCrateId and \xe2\x80\xa6CmBuilds a new DefPathHash with the given StableCrateId and \xe2\x80\xa64DhThe most general <code>IdentPrinter</code> constructor. Do not use this.CeConstructs a new identifier from a symbol and a span.ChAvoid this except for things like deserialization of \xe2\x80\xa60ClPass using one or more values of the given type, without \xe2\x80\xa6CmThis defines the \xe2\x80\x9cdefault ABI\xe2\x80\x9d for that type, that is \xe2\x80\xa6CnCreates and returns a valid rayon thread pool builder, but \xe2\x80\xa6C`Creates and return a valid rayon thread pool \xe2\x80\xa6DiUnsafe: caller asserts that <code>data</code> will remain valid until \xe2\x80\xa6DgCreates a new spin latch that is owned by <code>thread</code>. This \xe2\x80\xa6CfCreates the base of a new scope for the given registryCmDeprecated in favor of <code>ThreadPoolBuilder::build</code>.DeCreates a new worker local where the <code>initial</code> closure \xe2\x80\xa6EeConstruct <code>ClosureArgs</code> from <code>ClosureArgsParts</code>, containing \xe2\x80\xa6DnConstruct <code>CoroutineArgs</code> from <code>CoroutineArgsParts</code>, \xe2\x80\xa6BiCreates an empty <code>SsoHashMap</code>.BiCreates an empty <code>SsoHashSet</code>.BbCreates a new fulfillment context.2143DjWraps a <code>rustc_span::Span</code>. In case this span is the result \xe2\x80\xa6A`See struct docs.CkTakes as argument the source code to HTML-ify, the rust \xe2\x80\xa6CoCreate a new buffer, with a limit of <code>length_limit</code>.AgCreate an empty buffer.DcCreates a <code>CodeFix</code> with the source of a file to modify.CaCreate a new data container from a slice of bytesCnParse comma separated attributes list. Return rust only if \xe2\x80\xa6EhCreates a new <code>ItemizedBlock</code> described with the given <code>line</code>. \xe2\x80\xa6BgCreates a new <code>ModResolver</code>.ChCreates a new <code>FormatReportFormatterBuilder</code>.BjThe entry point of the NLL borrow checker.DgThe bitwise negation (<code>!</code>) of the bits in a flags value, \xe2\x80\xa6000000000000000000000000000AiReturns the current time.CjThe current time, used to improve performance to avoid \xe2\x80\xa6DjAll calls to <code>Instant::now</code> go through this wrapper method. \xe2\x80\xa6CePath to a npm executable. Used for rustdoc GUI tests.CkGet one element from the iterator. Returns None if none \xe2\x80\xa6AmThe minimum representable tagCiAbstraction for interfacing to the different registry \xe2\x80\xa6ChConcrete error types for all operations which may be \xe2\x80\xa6C`The stack of Kleene operators (outermost first).ClThe stack of Kleene operators (outermost first) where we \xe2\x80\xa6DaSpecify default optimization level <code>-O</code> (alias for \xe2\x80\xa6AaOption enum value0CaGets a reference to the underlying stdout writer.ClTidy check to enforce rules about platform-specific code \xe2\x80\xa6Aj<code>for</code> loop itemBiThe pattern the field is destructured to.BnMatch arm pattern, e.g. <code>10</code> in \xe2\x80\xa61DjIf this pattern and the optional guard matches, then <code>body</code> \xe2\x80\xa6CkThe pattern that appears in the parameter list, or None \xe2\x80\xa6DkAs explained in <code>crate::usefulness</code>, values and patterns are \xe2\x80\xa6CgInformation about available targets, which files to \xe2\x80\xa6DjRewinds this <code>ConfigKey</code> back to the state it was at before \xe2\x80\xa6CiPops an item from the queue, blocking if the queue is \xe2\x80\xa6BnAttempt to pop an element from the work queue.DhCalled after <code>push</code> when the scope of a set of attributes \xe2\x80\xa6BkRe-insertion position for inert attributes.ClThe absolute offset within the source_map of the current \xe2\x80\xa6DdThe relative offset of the character in the <code>SourceFile</code>.0BnPointer to the allocation contents. Invariant:0BmA pointer to the next object to be allocated.DaThe pointer can be a pure integer, with the <code>None</code> \xe2\x80\xa6CeStores the result of a computation step in the cache.BbAssociates the value with the key.CcReturns true if this successfully put into the map.AnThe raw, unparsed package fileB`Consume all following arguments.BiIs this a raw ident: <code>r#async</code>0DjRemove default <code>filters</code> from this <code>expected</code> resultCdReturns inner <code>llvm::TargetMachine</code> type.BkThe unnormalized type provided by the user.BkThe SemVer requirement for this dependency.AlThe resolution for the path.0CfResolution result corresponding to the item. Local \xe2\x80\xa6AjWhat the link resolved to.ClThe return block from the original call to <code>try</code>.0AiThe expected return type.CjThe layout, type, and the way a value is returned from \xe2\x80\xa6AjSpecify a specific git revAdSelect specific rev.AaThe git revision.Dj<code>std::fs</code> wrappers and assorted filesystem-related helpers. \xe2\x80\xa6AoThe right side of the equation.CbThe random number generator used for resolving \xe2\x80\xa60AoA weak random number generator.CfPrimary function to implement <code>Step</code> logic.Anwhether to execute run-* testsBeBuild-and-run steps for in-repo toolsAcLints the compiler.FdInvoke <code>rustbook</code> for <code>target</code> for the doc book <code>name</code> from the \xe2\x80\xa6BeBuilds the book and associated stuff.CmGenerates all standalone documentation as compiled by the \xe2\x80\xa6CmGenerates HTML release notes to include in the final docs \xe2\x80\xa6CeGenerate shared resources used by other pieces of \xe2\x80\xa6BkCompile all standard library documentation.BaGenerates compiler documentation.0000000000CjGenerates the HTML rendered error-index by running the \xe2\x80\xa6AfBuilds the rustc book.AjBuilds the reference book.FeRuns the <code>linkchecker</code> tool as compiled in <code>stage</code> by the <code>host</code> \xe2\x80\xa6FcRuns the <code>cargotest</code> tool as compiled in <code>stage</code> by the <code>host</code> \xe2\x80\xa6DgRuns <code>cargo test</code> for <code>cargo</code> packaged with Rust.BnRuns <code>cargo test</code> for rust-analyzerBiRuns <code>cargo test</code> for rustfmt.BfRuns <code>cargo test</code> for miri.BcTests <code>cargo miri test</code>.BmRuns <code>cargo test</code> for compiletest.BhRuns <code>cargo test</code> for clippy.B`Runs the <code>tidy</code> tool.CbRuns <code>cargo test</code> for run-make-support.BnRuns <code>cargo test</code> for build_helper.DcExecutes the <code>compiletest</code> tool to run a suite of tests.D`Runs the documentation tests for a book in <code>src/doc</code>.ClRuns the error index generator tool to execute the tests \xe2\x80\xa6ClRuns all unit tests plus documentation tests for a given \xe2\x80\xa6DbRuns <code>distcheck</code>, which is a collection of smoke tests:AnTests the build system itself.CbTests the Platform Support page in the rustc book.CkTests that the lint examples in the rustc book generate \xe2\x80\xa6CfEnsure the version placeholder replacement tool buildsDjCompiles the <code>rust_test_helpers.c</code> library which we used in \xe2\x80\xa6BeCompile LLVM for <code>target</code>.BgCompile Enzyme for <code>target</code>.BdCompile LLD for <code>target</code>.BcBuilds sanitizer runtime libraries.BjBuild crtbegin.o/crtend.o for musl target.AaBuild libunwind.aAoExecutes the vendoring process.DjCompile GCC (specifically <code>libgccjit</code>) for <code>target</code>.AcCheck the compiler.BgBuilds a tool in <code>src/tools</code>AlBuilds the standard library.CgLink all libstd rlibs/dylibs into the sysroot location.CiBuilds and prepare startup objects like rsbegin.o and \xe2\x80\xa6AdBuilds the compiler.C`Same as <code>std_link</code>, only for librustcDjReturns the sysroot that <code>compiler</code> is supposed to use. For \xe2\x80\xa6CoPrepare a new compiler from the artifacts in <code>stage</code>CfBuilds the <code>rust-docs</code> installer component.CkBuilds the <code>rust-docs-json</code> installer component.CgBuilds the <code>rustc-docs</code> installer component.CgBuilds the <code>rust-mingw</code> installer component.CcCreates the <code>rustc</code> installer component.EaCopies debugger scripts for <code>target</code> into the <code>sysroot</code> \xe2\x80\xa6CmCreates a tarball of (degenerate) save-analysis metadata, \xe2\x80\xa6CeCreates the <code>rust-src</code> installer componentB`Creates the plain source tarballClCreates a combined installer for the specified target in \xe2\x80\xa6CnUses <code>clap_complete</code> to generate shell completions.AiChecks tool state status.CnRun the command, while printing stdout and stderr. Returns \xe2\x80\xa6CkExecute a command and return its output. Note: Ideally, \xe2\x80\xa6Anwhether to execute run-* testsoExecutes a job.ClConsumes this job by running it, returning the result of \xe2\x80\xa6CkExplicitly enable or disable running of the target test \xe2\x80\xa6CeRun the constructed command and assert that it is \xe2\x80\xa600000000000000000BmRun a built binary and make sure it succeeds.CfInstantiate and run the compiler with the provided \xe2\x80\xa6CiExecutes the main loop for this thread. This will not \xe2\x80\xa6ChRoutine to compute the strongly connected components \xe2\x80\xa6CgReturns the SCC to which a node <code>r</code> belongs.CcThe method name and its generic arguments, e.g. \xe2\x80\xa6CdText that separates permissions on different ranges.AdThe separator token.EbProduces a <code>Tree</code> where each of the trees in <code>trees</code> are \xe2\x80\xa6Bboverride options in bootstrap.toml0CiShould only be called by <code>FormatArgsCollector</code>GkCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is \xe2\x80\xa60000000CnUpdates the element at the given index. The old value will \xe2\x80\xa61AhSets the key value pair.0BbSets the <code>index</code>th bit.333CmSets the table value if it is not default. ATTENTION: For \xe2\x80\xa6444444BlSets the latch and resumes all waiters on it555555BaSet the latch, signalling others.CnSet the latch. If this returns true, the owning thread was \xe2\x80\xa6BcSets the current thread-local value8888CbImplements sha256 SIMD instructions of x86 targetsCkGenerate a left-shift. Both operands must have the same \xe2\x80\xa60AfUrl that was attemptedChEverything related to checking the signature of shim \xe2\x80\xa6CdInstantiated method signature, i.e., it has been \xe2\x80\xa6BhExtracts the signature from the closure.ClReturns the \xe2\x80\x9ccoroutine signature\xe2\x80\x9d, which consists of \xe2\x80\xa6101010CiInformation about the function signature, or declaration.AnThe signature of the function.Bepath to the root of the rust checkout0BnRoot path to the <code>src</code> directories.BhThe complete debugger visualizer source.AhSource text to tokenize.AiThe complete source code.A`The source type.0B`The referent of the source type.CmThe crate\xe2\x80\x99s name, <em>not</em> the name it\xe2\x80\x99s imported as.ClWe denote as \xe2\x80\x9cSSA\xe2\x80\x9d the set of locals that verify the \xe2\x80\xa6ClObtain a standard library for the given target that will \xe2\x80\xa6DkWhether a target has the <code>std</code> library. This is usually true \xe2\x80\xa6CaDeclare an expected value from within Rust sourceDbThis module contains <code>TyKind</code> and its major components.CeThe intersection of a source flags value with the \xe2\x80\xa600AmRegion that must be outlived.0111111CmConvenience function for internal use, clients should use \xe2\x80\xa6BiMakes <code>expected &lt;: actual</code>.333333333333333033DmChecks whether <code>expected</code> is a subtype of <code>actual</code>: \xe2\x80\xa644BbThe region SUP must outlive SUB\xe2\x80\xa60DmMakes <code>actual &lt;: expected</code>. For example, if type-checking a \xe2\x80\xa60DoChecks whether <code>expected</code> is a supertype of <code>actual</code>: \xe2\x80\xa6CkCalculation and management of a Strict Version Hash for \xe2\x80\xa6DfThis module contains all the defined non-keyword <code>Symbol</code>s.AjSpecify a specific git tagAdSelect specific tag.lThe git tag.Dc<em>(<code>git2</code>)</em> Create a new tag in the git repositoryBjThe pointers the permission is granted to.AdThe tag in question.AeThe tag of this node.AcBorrow Tracker tag.0AbRetrieves the tag.DjCompresses and packages a list of <code>ArchiveFile</code>s and writes \xe2\x80\xa6ClThe results of the type checker, from rustc. The span in \xe2\x80\xa600000BaType context we\xe2\x80\x99re checking in.0B`The current <code>TyCtxt</code>.0jTLS state.0AoImplement thread-local storage.CnAllows access to the Rayon\xe2\x80\x99s thread local value which is \xe2\x80\xa6CnThe TLV at the scope\xe2\x80\x99s creation. Used to set the TLV for \xe2\x80\xa6CmThe directory for temporary data of integration tests and \xe2\x80\xa6AkTable-of-contents creation.BlCharacter repeated to make the upper border.A`The top element.DjCalls the given callback, and returns a <code>RetryResult</code> which \xe2\x80\xa6ChFIXME: #67062 has details about why this is sub-optimal.AkThe sequence of token treesBhRelates two types using a given lattice.ClGlobally-unique id used to track usefulness at the level \xe2\x80\xa60CjThe URL that we\xe2\x80\x99re downloading from, cached here for \xe2\x80\xa6AeGets this source URL.oThe source URL.CjStore the server URL without the protocol prefix (sparse+)AlURL to download the content.AkURL to a remote repository.AoGets the remote repository URL.01AaFile url for rootBdThe base URL used for relative URLs.BfThe inner value that was deserialized.0CoThe value of this store. <code>None</code> means uninitialized.jThe value.CgThe location and extra runtime properties of the place.DfBit representation of the discriminant (e.g., <code>-1i8</code> is \xe2\x80\xa6ChRetrieve an environment variable and add it to build \xe2\x80\xa6DeHelpers to gather the VCS information for <code>cargo package</code>.CmA list of candidates that definitely apply to the current \xe2\x80\xa6CmThe visibility of the variant. Syntactically accepted but \xe2\x80\xa6AgVisibility of the item.C`Used when <code>State.initialized = true</code>.ChReturns the zero-sized valtree: <code>Branch([])</code>.CeAn anonymous region parameter for a given fn (&amp;T)000mCommand line.CnWhat the user typed, if it doesn\xe2\x80\x99t match anything we can \xe2\x80\xa6AnA token-based attribute macro.BgAn attribute macro <code>#[foo]</code>.0DkIf build scripts are disabled or enabled. If true, <code>build.rs</code>\xe2\x80\xa6BhIdentifier that is used for auto traits.BjAuto-detect based on the raw source input.CaAutomatically use color, if supported by terminal10CkNumber of least-significant bits in the return value of \xe2\x80\xa6n<code>!</code>BbA token-based function-like macro.1BaA bang macro <code>foo!()</code>.0Aa<code>..x</code>.CkA struct expression with a \xe2\x80\x9cbase\xe2\x80\x9d, an expression of \xe2\x80\xa6CiBase of numeric literal encoding according to its prefix.1CiThe right-hand side body, with metavar references and \xe2\x80\xa6CnThe body of a function, closure, or constant value. In the \xe2\x80\xa6ClLifetimes introduced by a fn are scoped to the call-site \xe2\x80\xa6C`The lowered representation of a single function.CfThe rustc_public\xe2\x80\x99s IR representation of a single \xe2\x80\xa60CiTrue = \xe2\x80\x9cFat\xe2\x80\x9d LTO False = rustc default (no args), \xe2\x80\xa6Bh<code>true</code> or <code>false</code>.CjA boolean literal (<code>true</code>, <code>false</code>).CcIn the LLVM-C API, boolean values are passed as \xe2\x80\xa6CiThe primitive boolean type. Written as <code>bool</code>.00hBooleansiBooleans.10AjRepresents a JSON boolean.333BmThe operator is both left-associative and \xe2\x80\xa6BdBoth case and digit-letter confusionBhA byte char (<code>b&#39;f&#39;</code>).Fj<code>b&#39;a&#39;</code>, <code>b&#39;\\\\&#39;</code>, <code>b&#39;&#39;&#39;</code>, <code>b&#39;;</code>ChA range of byte values (including an uninit byte value).lA byte node.CdEnum of supported arguments to external C functions.Di<code>#[cold]</code>: a hint to LLVM that this function, when called, \xe2\x80\xa6EnA C String (<code>c&quot;foo&quot;</code>). Guaranteed to only have <code>\\0</code> at the \xe2\x80\xa6B`The <code>CStr</code> lang item.Cf<code>c&quot;abc&quot;</code>, <code>c&quot;abc</code>A`A function call.0DeRoughly speaking, evaluates the <code>func</code> operand and the \xe2\x80\xa6AfDestination of a call.1CnA function call. Method calls and overloaded operators are \xe2\x80\xa6DfCall <code>__rust_probestack</code> whenever stack needs to be probed.FdWhatever to ignore case (<code>fn</code> vs <code>Fn</code> vs <code>FN</code>) or not. Used for \xe2\x80\xa6ChOnly case differences (e.g., \xe2\x80\x9chello\xe2\x80\x9d vs \xe2\x80\x9cHello\xe2\x80\x9d)o<code>as</code>BgA cast (e.g., <code>foo as f64</code>).0CePerforms essentially all of the casts that can be \xe2\x80\xa60EcA cast: <code>&lt;source&gt; as &lt;type&gt;</code>. The type we cast to is the \xe2\x80\xa6AmEnum variant comparison type.BcPass the argument after casting it.33DgPass the argument after casting it. See the <code>CastTarget</code> \xe2\x80\xa6Clrepresents: a shared reference to interior mutable data. \xe2\x80\xa6ClA single <code>char</code> (e.g., <code>&#39;a&#39;</code>).BoA character literal (<code>&#39;a&#39;</code>).CnThe primitive character type; holds a Unicode scalar value \xe2\x80\xa6Ff<code>&#39;a&#39;</code>, <code>&#39;\\\\&#39;</code>, <code>&#39;&#39;&#39;</code>, <code>&#39;;</code>11111CnError from API response which didn\xe2\x80\x99t have pre-programmed \xe2\x80\xa6BmAssociates a normal region of code with a \xe2\x80\xa6B`Represents <code>#[cold]</code>.0AiClippy lint configuration0BhFile being copied from another location.BaPass a copy of the given operand.0B`The <code>copy</code> lang item.BkCreates a value by loading the given place.AoConsumed as part of an operand.1CeRefers to the struct or enum variant\xe2\x80\x99s constructor.CkImplicit constructor for a unit or tuple-like struct or \xe2\x80\xa6De<code>Ctor</code> refers to the constructor of an enum variant or \xe2\x80\xa6AcUse of a const ctor0330AcError from libcurl.CgThe default address space, corresponding to data space.CgThe cache is out of date. Returned data should be used.CjA container that allows easily replacing chunks of its \xe2\x80\xa6AbA dead allocation.0ClThis local is not currently alive, and cannot be used at \xe2\x80\xa6CkThe value is already dead at the drop location, no drop \xe2\x80\xa6BoLocal declaration. Example: <code>let x;</code>BfFully recursively validate references.0CoFrom the RFC: \xe2\x80\x9cA <em>deep</em> access means that all data \xe2\x80\xa6CiA shared (deep) borrow. Data must be immutable and is \xe2\x80\xa60AhDeep init, even on panicCmAffect all nested drop flags in addition to the top-level \xe2\x80\xa622AoError if  warnings are emitted.DfThe <code>deny</code> level will produce an error and stop further \xe2\x80\xa60ClWe cannot use the item because it is unstable and we did \xe2\x80\xa6CcBy default, tidy always warns against style issues.CiUsed for emitting structured error messages and other \xe2\x80\xa60CmA child process exited or was killed; if we have a return \xe2\x80\xa6CmChecks if a diff can be generated. If so, rustfmt outputs \xe2\x80\xa60AlBuild distribution artifacts0ClBuild the tool so that it can be attached to the sysroot \xe2\x80\xa6CgThis obligation, along with its subobligations, are \xe2\x80\xa6CkAccess is Deep only when there is a Drop implementation \xe2\x80\xa6B`The <code>drop</code> lang item.ChThe behavior of this statement differs significantly \xe2\x80\xa6BeA type that has its drop shim called.nBeing dropped.2CkForward Mode, Compute derivatives for this input/output \xe2\x80\xa6CbEmscripten Compiler Frontend, a wrapper around \xe2\x80\xa6CcWhat value should be passed to <code>--emit</code>?BgAn enum definition (<code>enum</code>).EgAn enum definition, e.g., <code>enum Foo&lt;A, B&gt; { C&lt;A&gt;, D&lt;B&gt; }</code>.AeAn <code>enum</code>.BaAn <code>enum</code> declaration.0o<code>==</code>AkImmediately stop bootstrap.DjTrailing brace in any other expression, such as <code>a + B {}</code>. \xe2\x80\xa6nAn expression.AoA literal, const block or path.BaExpr without trailing semi-colon.21CjAn expression without a trailing semi-colon (must have \xe2\x80\xa6BgUnevaluated non-const-item, used by \xe2\x80\xa600AbA THIR expression.BhAn expression with a trailing semicolon.ChIn some contexts, notably in expressions, paths with \xe2\x80\xa6DaExpression paths <code>path</code>, with optional parent context.444CdAn <code>f128</code> bitcast to a <code>u128</code>.ChRunning the program must make it exit with a regular \xe2\x80\xa6CjAn immutable, aliasable borrow that is discarded after \xe2\x80\xa6000CmA unique id for file descriptions. While we could use the \xe2\x80\xa6EhThe same as <code>TyCtxtFeed</code>, but does not contain a <code>TyCtxt</code>. Use \xe2\x80\xa60AmLoaded from a file from disk.AmLoad source code from a file.CkAn option that does not take a value, and cannot appear \xe2\x80\xa6D`Represents a <code>MetaWord</code> in an <code>on</code>-filter.BnA condition like <code>on(crate_local)</code>.CgA type alias that actually checks its trait bounds. \xe2\x80\xa60000CaPrints a backtrace with all possible information.0B`E.g. <code>Path&lt;T&gt;</code>.CkEmit control-flow protection for both branches and returns.BdDerive fully-featured implementationAj<code>use prefix::*</code>BkGlob import, e.g., <code>use foo::*</code>.DhA goal is a statement, i.e. <code>predicate</code>, we want to prove \xe2\x80\xa600000CmJump to the next block in the caller, or cause UB if None \xe2\x80\xa60CeBlock has one successor; we continue execution there.0CjWhen encountered, display <code>Command::print_help</code>BjA message suggesting how to fix something.oA help message.0AgPrint the help message.CgInstalls <code>src/etc/pre-push.sh</code> as a Git hookBgLibraries originating from proc-macros.CjAttached to a unit that is compiled for the \xe2\x80\x9chost\xe2\x80\x9d \xe2\x80\xa60AjHuman-readable HTML report0nDoing nothing.AlNo available work was found.0B`See <code>VerifyIfEq</code> docs0AbAn implementation.CaTrait bounds in <code>impl</code> type. E.g., \xe2\x80\xa6hAn impl.BeRepresents an impl block declaration.DiAn implementation, e.g., <code>impl&lt;A&gt; Trait for Foo { .. }</code>.AdA user written impl.00000000CcMetadata about implementations for a type or trait.AkAn <code>impl</code> block.00CjUsed when build configurations continue working as before.DgLocal declaration with an initializer. Example: <code>let x = y;</code>Dk<code>Init</code> represents a point in a program that initializes some \xe2\x80\xa6Ae8-bit signed integer.DkBest generated by <code>into</code>. This is generally exprs that cause \xe2\x80\xa6BiAn item in the per-location borrow stack.0AcAn item definition.0gAn itemA`An item binding.AmA user-defined callable item.0000000AdA user defined item.CaWe passed through an item scope. Disallow upvars.CeThis rib acts as a barrier to forbid reference to \xe2\x80\xa6CnAnything with a source location and set of attributes and, \xe2\x80\xa6ClAnything that can hold documentation - modules, structs, \xe2\x80\xa6CeUse one <code>use</code> statement per imported item.ChThe thread tried to join the specified thread and is \xe2\x80\xa60B`Machine-readable JSON (unstable)0kJSON outputCbError from seriailzing the request payload and \xe2\x80\xa6AdEmit structured JSONDkOutput that\xe2\x80\x99s consumed by other tools such as <code>rustfix</code> or \xe2\x80\xa61B`Represents any valid JSON value.CkWrites the resulting diffs in a JSON format. Returns an \xe2\x80\xa60CdJust a subset of Cargo targets based on names given.0ChFilter for keep using Package ID from previous lockfile.BdKeep the function return unmodified.CkKinds of sources a <code>PackageRegistry</code> has loaded.Bh<code>struct@</code> or <code>f()</code>Djlibc static library (e.g. on <code>musl</code>, <code>wasi</code> targets)C`used when parsing attributes during ast lowering0CkAll scopes with the given namespace, used for partially \xe2\x80\xa6AgOne of the stored sets.Efintegers, <code>bool</code>, <code>char</code> are represented as scalars. See the \xe2\x80\xa60Gn<code>(...)</code>, <code>Foo(...)</code>, <code>Foo{...}</code>, or <code>Foo</code>, where <code>Foo</code> is a variant \xe2\x80\xa6ClSkip deallocating backing memory of thread-local statics \xe2\x80\xa6BaThe operator is left-associative.ClShift left, logically (shift in zeros) \xe2\x80\x93 same as shift \xe2\x80\xa6Ad<code>{:&lt;}</code>B`The operator is left-associativeAj<code>-Copt-level=1</code>00EeA trait implemented for all <code>X&lt;&#39;a&gt;</code> types that can be safely \xe2\x80\xa600000CkControls whether a line will be hidden or shown in HTML \xe2\x80\xa6CmCreates a toolchain link for stage1 using <code>rustup</code>BhFoo or simple anchor &lt;www.foo.com&gt;CmThe name of the symbol + the span of the annotation which \xe2\x80\xa6CaA link to an item. Content should not be escaped.AoSpecification of a single lint.0DjAn adapter for <code>MirLint</code>s that implements <code>MirPass</code>.oList meta item.Ej<code>List&lt;T&gt;</code> is a bit like <code>&amp;[T]</code>, but with some critical \xe2\x80\xa60CkA normal, live local. Mostly for convenience, we re-use \xe2\x80\xa6DiLLVM bitcode linker that can be used as a <code>self-contained</code> \xe2\x80\xa6ChTOML representation of how the LLVM build is configured.BmA lock which only uses synchronization if \xe2\x80\xa6EhConditionless loop (can be exited with <code>break</code>, <code>continue</code>, or \xe2\x80\xa6EgA conditionless loop (can be exited with <code>break</code>, <code>continue</code>, \xe2\x80\xa6B`A <code>loop { .. }</code> loop.AoA <code>loop</code> expression.CiReport, and also exit with failure status for deny/forbidCj+, -, etc \xe2\x80\x93 takes equal types, produces same type as \xe2\x80\xa6ChInstrument for MC/DC. Mostly a superset of condition \xe2\x80\xa6CiThe unsized payload (e.g. length for slices or vtable \xe2\x80\xa60BoBuild and run some test suites <em>in Miri</em>0Ao<code>miri_alloc</code> memory.0CeRegion variables created for ill-categorized reasons.CmSome built-in impl we don\xe2\x80\x99t need to differentiate. This \xe2\x80\xa60CgNot well classified or should be obvious from the span.11CmOther types of desugaring that did not come from the HIR, \xe2\x80\xa602122CnWe\xe2\x80\x99ve proven the trait goal by something which is is not \xe2\x80\xa64333233BeMemory mapped directly by the program0EiA trivial wrapper for <code>memmap2::Mmap</code> (or <code>Vec&lt;u8&gt;</code> on WASM).BjThe various \xe2\x80\x9cmodes\xe2\x80\x9d of invoking Cargo.Aj<code>-Copt-level=2</code>00CnCreates a value by performing loading the place, just like \xe2\x80\xa6AoConsumed as part of an operand.1EeTracks the current MSRV from <code>clippy.toml</code>, <code>Cargo.toml</code> or \xe2\x80\xa6ChMSVC-style linker for Windows and UEFI, LLD supports it.BiFile name of <code>RegistryConfig</code>.CgA descriptive name for this analysis. Used only for \xe2\x80\xa60BjA named cfg value, like <code>unix</code>.ChA named platform, like <code>x86_64-apple-darwin</code>.1BnThe valid names of the <code>on</code> filter.ChThe value is derived from the \xe2\x80\x9cnext\xe2\x80\x9d unconverted \xe2\x80\xa6CdIn-tree prototype, extending the NLL infrastructure.ClA map from an element to a subtrie where all the sets in \xe2\x80\xa6CdA node in the borrow tree. Each node is uniquely \xe2\x80\xa6CmA node in the specialization graph is either an impl or a \xe2\x80\xa6BcLint level was set by an attribute.111AeNot a CI environment.AjDon\xe2\x80\x99t remove any symbolsiNo value.0jNo output.CfNone of the groupings should have their order checked.B`The operator is not associative.AgDo not check alignment.BdNo data race detection will be done.1AoThe operator is not associativeBi<code>module::StructName { field }</code>BjNo trailing <code>..</code> or expression.BdNo explicit extern keyword was used.BcThis function is not an entrypoint.CmImplicit or Explicit () return type, so a special case of \xe2\x80\xa6AdNothing created yet.Cl<code>Sized</code> types or unsized <code>extern type</code>0AeNo confusion detected>>AnNo restriction on the genericsCkA struct expression where all the fields are explicitly \xe2\x80\xa6CkRepresents when a function does not have a self argument orCiDo not visit any nested things. When you add a new \xe2\x80\x9c\xe2\x80\xa6ClNo additional information - this is the default. We will \xe2\x80\xa6000AoThe type must be parenthesized.111CgThe default. Specializing on this trait is not allowed.DaFor terminators that have no successor, like <code>return</code>.0iNo value.700000000000000000000000000000000000000000000000000000000000000000000000CeWe know that the <code>drop</code> here has no effectDiWe did not eat anything (i.e. the current token is not <code>|</code> \xe2\x80\xa6Dk<code>\xe2\x88\x85 ... \xe2\x88\x85</code> An invisible delimiter, that may, for example, \xe2\x80\xa633AdDo not strip at all.BeDo not enable control-flow protectionCn<code>#[derive(Debug)]</code> and <code>{:?}</code> are no-opsAiDo not resolve doc links.AnDon\xe2\x80\x99t emit any stack probes.B`Disable stack canary generation.====B`Marks the absence of a modifier.hNothing.CjNever parsed, but used as a placeholder for langs that \xe2\x80\xa6BdA message giving additional context.gA note.0CkWe use this for most things when incr. comp. is turned off.AmRepresents a JSON null value.CkA chunk that is all ones; we don\xe2\x80\x99t represent the ones \xe2\x80\xa6AcOnly run doc tests.BlOnly includes a subset of all Cargo targets.0CnAn \xe2\x80\x9copen\xe2\x80\x9d drop is one where only the fields of a value \xe2\x80\xa6o<code>||</code>CeThe single path of the attribute this parser accepts.CkA pair of immediate LLVM values. Used by wide pointers too.CcPass a pair\xe2\x80\x99s elements directly in two arguments.0ClA piece of one of the shared artifacts for documentation \xe2\x80\xa6CaPass on the input binding mode and expected type.BmA single pass over the cleaned documentation.mA local path.DgDefined in a <code>.cargo/config</code>, includes the path to the file.0AmDependency from a local path.22CfA \xe2\x80\x9cPath\xe2\x80\x9d is essentially Rust\xe2\x80\x99s notion of a name.CgA possibly qualified path pattern. Unqualified path \xe2\x80\xa6DgVariable reference, possibly containing <code>::</code> and/or type \xe2\x80\xa6DkA path (<code>module::module::...::Type</code>), optionally \xe2\x80\x9cqualified\xe2\x80\xa6DoA path, e.g., <code>::std::option::Option::&lt;i32&gt;</code> (global). Has \xe2\x80\xa6Ea<code>mod::mod::Type&lt;[lifetime], [Params...]&gt;</code>, including a plain \xe2\x80\xa6CcA representation optimized for a small path graphs.AoRepresents <code>#[path]</code>0DeA <code>Path</code> is essentially Rust\xe2\x80\x99s notion of a name; for \xe2\x80\xa6DnE.g. <code>ContainsLifetime</code>, <code>ContainsLifetime&lt;&gt;</code>, \xe2\x80\xa6El<strong>Note:</strong> Currently this is only used for bare const params (<code>N</code> \xe2\x80\xa6CaA path pattern for a unit struct/variant or a \xe2\x80\xa6CnPath to a definition, possibly containing lifetime or type \xe2\x80\xa6DiA path to a type definition (<code>module::module::...::Type</code>), \xe2\x80\xa6CeThe type representing paths that can be moved out of.B`Any token that can start a path.CjCrate is implicitly loaded by a path resolving through \xe2\x80\xa6BeA named type, which could be a trait.CnA constant that is just a path (i.e., referring to a const \xe2\x80\xa6ClA type that has a simple path to it. This is the kind of \xe2\x80\xa6CbPeel off all immediate reference types. If the \xe2\x80\xa6ClPerform profiling and benchmarking of the compiler using \xe2\x80\xa60AhThe <code>+</code> flag.n<code>+</code>1B`The <code>Poll</code> lang item.BbCharacter class preceding this oneAbA non-empty stack.CnThe ID of the theoretical expansion that generates freshly \xe2\x80\xa6BhThe user is attempting to fetch a crate.AnStandard unsynchronized write.BeA read occurred on this memory range.DdFrom the RFC: \xe2\x80\x9cA <em>read</em> means that the existing data may beB`Represents <code>#[repr]</code>.0Ad<code>#[repr]</code>AoA rest pattern <code>..</code>.Bl<code>module::StructName { field, ..}</code>A`<code>..</code>.DhIndicates that <code>[workspace]</code> was present and the members were0AnFormat the root packages only.C`The root inference context while proving a goal.0000DjNo expansion, aka root expansion. Only <code>ExpnId::root()</code> has \xe2\x80\xa61111ChTOML representation of how the Rust build is configured.Ba<code>__rust_alloc</code> memory.0lthat\xe2\x80\x99s us!0Aj<code>#[repr(Rust)]</code>ClThe default ABI, but that can also be written explicitly \xe2\x80\xa6Dd<code>safe</code> an item is explicitly marked as <code>safe</code>.BhExpected and actual outputs are the sameAeIdentical statements.CkSBOM (Software Bill of Materials pre-cursor) file (e.g. \xe2\x80\xa60DkStrongly connected components (SCC) of a graph. The type <code>N</code> \xe2\x80\xa6B`Expr with a trailing semi-colon.n<code>;</code>CjAn expression with a trailing semi-colon (may have any \xe2\x80\xa61ChA set containing, at most, one known element. If two \xe2\x80\xa6AjA compiler generated shim.AhEnum for the sign flags.Aj<code>#[repr(simd)]</code>AhSize of a type in bytes.An<code>#[optimize(size)]</code>0Aj<code>-Copt-level=s</code>0nSize in bytes.1BkNothing created yet, and nothing should be.BbSome value of type <code>T</code>.0CjFormat packages that are specified by the command line \xe2\x80\xa6AaHas been created.22222222222222222222222222222222222222222222222222222222222222222222222222D`We know that the <code>drop</code> here will invoke a destructor33CgA region of source code, along with macro expansion \xe2\x80\xa6AbA compressed span.0DgSmall wrapper around <code>rustc_span::Span</code> that adds helper \xe2\x80\xa6AgA range of source code.CfData that should replace a particular range of the \xe2\x80\xa6n<code>*</code>EaA statement. No <code>attrs</code> or <code>tokens</code> fields because each \xe2\x80\xa6lA statement.ClThe root frame of the stack: nowhere else to jump to, so \xe2\x80\xa60ChA helper type to build suggestion correctly handling \xe2\x80\xa6AoTwo arguments should be swapped0B`The <code>sync</code> lang item.CfItems are placed horizontally if sufficient space, \xe2\x80\xa6CiUser-declared variable binding or compiler-introduced \xe2\x80\xa6CfEither a type or a constant, usually stored as the \xe2\x80\xa6AnBuild and run some test suites0AmTest with <code>rustc</code>.CbBuild test binaries, e.g., <code>cargo test</code>CiRepresents <code>cargo::rustc-link-arg-tests=FLAG</code>.210DiA test to perform to determine which <code>Candidate</code> matches a \xe2\x80\xa6BbRaw text to include in the output.AhEmit human readable textCmNo metadata attached, ie pointer to sized type or foreign \xe2\x80\xa6CeDo a full-crate-graph (inter-crate) LTO with ThinLTO.Ah<code>-C lto=thin</code>AlA container for a THIR body.BgThe accessed pointer is the current oneBo<code>{This}</code> or <code>{TraitName}</code>EaRuns <code>src/tools/tidy</code> and <code>cargo fmt --check</code> to detect \xe2\x80\xa6CkDescribes the number of vertices discovered at the time \xe2\x80\xa6CmConfiguration specific for some tool, e.g. which features \xe2\x80\xa6ClMulti-segment custom attribute living in a \xe2\x80\x9ctool module\xe2\x80\xa6DkThe lint is from a tool. The <code>LintId</code> will be returned as if \xe2\x80\xa60CjTree structure with both parents and children since we \xe2\x80\xa60BmA tree-based representation of a type layout.BhInclude the library, fail if not present0iInhabited0000CjThe target spec explicitly enables self-contained linking.AkAccepts all configurations.C`<code>Bar</code> in <code>Foo&lt;Bar&gt;</code>.DjA type ascription (e.g., <code>builtin # type_ascribe(42, usize)</code>\xe2\x80\xa6AcAn associated type.ClA type ascription (e.g., <code>x: Foo</code>). See RFC 3307.CgAn associated type with (possibly empty) bounds and \xe2\x80\xa62oA foreign type.ClIn other contexts, notably in types, no ambiguity exists \xe2\x80\xa6B`Any token that can start a type.AmType paths <code>Path</code>.ClRustdoc\xe2\x80\x99s representation of types, mostly based on the \xe2\x80\xa6gA type.A`A type argument.AiDenotes a type parameter.2DaA primitive unsigned integer type. For example, <code>u32</code>.00000oUnary operator.0BhAll information needed to define a unit.0mUnit variant.AdFor () return types.oA unit variant.AeAlternative behavior:DgQuery key was <code>()</code> or equivalent, so fingerprint is just \xe2\x80\xa6BkA struct with no fields and no parentheses.CkBasic Unix-like linker for \xe2\x80\x9cany other Unix\xe2\x80\x9d targets \xe2\x80\xa6AkForce CR (<code>\\n</code>).0AoRepresents <code>#[used]</code>0CmUsed for tracking import use types which will be used for \xe2\x80\xa6CcA user-defined local variable or function parameterCmSpecified by the user. In this case we try fairly hard to \xe2\x80\xa60BaResponse body was not valid utf8.A`Output warnings.AfGive a default warningDfThe <code>warn</code> level will produce a warning if the lint was \xe2\x80\xa60BeSpaces around \xe2\x80\x9c = \xe2\x80\x9c and \xe2\x80\x9c + \xe2\x80\x9cBoRepresents a wildcard pattern (<code>_</code>).CeRepresents a wildcard pattern (i.e., <code>_</code>).BcA wildcard pattern: <code>_</code>.C`A non-user-provided wildcard, created during \xe2\x80\xa6oWord meta item.AgThe basic unit of work.BgThe user is attempting to yank a crate.GlA <code>do yeet</code> (aka <code>throw</code>/<code>fail</code>/<code>bail</code>/<code>raise</code>/whatever), with an \xe2\x80\xa6CaLiteral constant <code>0</code>, for convenience.BfLLVM\xe2\x80\x99s <code>0</code> address space.AhZero value of the index.00000000000FcA <code>Counter</code> of kind <code>Zero</code>. For this counter kind, the <code>id</code> is \xe2\x80\xa6111111111111BdValue for zero as the integral type.2222222222222222222222222222222222222222222222222222222222222222222222222222CnMarker indicating that dropping the arena causes its owned \xe2\x80\xa6DkConvenience method to create the <code>&amp;&lt;expr&gt;</code> suggestion.CdThe base address in memory where an access occurred.ClReturns the absolute address the pointer points to. Only \xe2\x80\xa6DkWhether the <code>rendered</code> field of rustc diagnostics embed ansi \xe2\x80\xa60AeSpecify architecture.CmArchitecture to use for ABI considerations. Valid options \xe2\x80\xa6DiProgram arguments (<code>Option</code> because we can only initialize \xe2\x80\xa6BfArguments passed to <code>main</code>.1Afarguments for the tool0CeArguments needed to pass to rustdoc to run this test.0CkAdds multiple arguments to the list of valid possibilities.CnAdditional command-line arguments passed to the credential \xe2\x80\xa6Cm(chainable) Adds multiple <code>args</code> to the args list.BkA list of arguments to pass to the program.10CiCommand-line arguments passed to the interpreted program.0CnGeneric command arguments provider. Prefer specific helper \xe2\x80\xa600000000000000000CmType/lifetime parameters attached to this path. They come \xe2\x80\xa6CjThe comma separated parts in the <code>&lt;...&gt;</code>.BiThe arguments, e.g. <code>a, b, c</code>.CiGets just the args parser, without caring about the path.DiReturns the args of the <code>DefiningTy</code>. These are equivalent \xe2\x80\xa6CnThe interned event arguments to be recorded in the generic \xe2\x80\xa65BlThe generic arguments for this path segment.C`The parameters of the associated or opaque item.CmLifetime and type parameters from the enclosing function, \xe2\x80\xa6C`The parameters of the associated or opaque type.120BkThe args for the item as given by the user.ClGeneric parameters from the enclosing item, concatenated \xe2\x80\xa64120CmArguments the function is called with. These are owned by \xe2\x80\xa6000BeThe arguments passed to the function.AkThe types of each argument.ChThe generic arguments for this definition. The first \xe2\x80\xa6CfGet the arguments this instance was instantiated with.CmThe type, layout, and information about how each argument \xe2\x80\xa6:98:98:89CmThe current set of parameter instantiations for expanding \xe2\x80\xa6DfThe arguments <em>have</em> to contain an arg for the self type if \xe2\x80\xa6CcArguments provided to the associated type/constant.AnGeneric arguments to the type.BgThe list of each argument on this type.CfThe generic arguments provided to the associated type.CjGenerate an arithmetic right-shift. Both operands must \xe2\x80\xa60CaFunctions dealing with attributes and meta items.CiThe metadata of the attribute associated with this entry.BaFormat attributes and meta items.B`Registry authentication support.BdPerforms automatic garbage cleaning.DaConstruct a bare <code>rustc</code> invocation with no flags set.CbBare <code>rustdoc</code> invocation, no args set.BmThe name of the base artifact to be compared.BjSpecify a named base for a path dependencyAlThe path base, if using one.AoCodegen the MIR to the LLVM IR.C`The \xe2\x80\x9coutermost\xe2\x80\x9d place that holds this value.0BoThe base, e.g. <code>Foo {x: 1, ..base}</code>.ClGet the base target options, unversioned LLVM target and \xe2\x80\xa6EhAll regions of <code>ty</code> must be of kind <code>ReVar</code> and must represent \xe2\x80\xa6DeThe path at <code>binding_place</code> is a binding that is being \xe2\x80\xa6FdBinds the pattern variable <code>br</code> to <code>value</code>; returns an <code>Err</code> if \xe2\x80\xa6AnSet of binary names installed.BoAuxiliary crates that should be compiled as \xe2\x80\xa6CkTidy check to ensure that there are no binaries checked \xe2\x80\xa6AnGet the underlying bits value.000000000000000000000000000BnThe primary crate data - binary metadata blob.Aj<code>for</code> loop bodyAl<code>while</code> loop bodyCjMatch arm body. Omitted if the pattern is a never pattern.BlA mir body that contains region identifiers.BnThe MIR for the function called on this frame.0ChThe expression the arm evaluates to if this arm matches.BjReturns the body this analysis was run on.BhReturn the body of an item if available.CnRetrieves the body of the closure definition. Returns None \xe2\x80\xa6CkRetrieves the body of the coroutine definition. Returns \xe2\x80\xa6AlGet the body of an Instance.B`Get whether this is bold or not.DaA <code>Tree</code> representing the layout of <code>bool</code>.EcChecks if the two <code>Option</code>s are both <code>None</code> or some equal \xe2\x80\xa60AlMoves to the next character.B`Advance the parser by one token.BaConsumes this work by running it.CfThe function to be invoked when the callback is fired.0An\xe2\x80\x9cFinally codegen the call\xe2\x80\x9d0CmManages calling a concrete function (with known MIR body) \xe2\x80\xa6BhCode for type-checking cast expressions.AgConsistent breaking boxCiVarious <code>--cfg</code> flags to pass to the compiler.0CaMapping of source name to the toml configuration.DkList of <code>cfg</code> flags to hand to the compiler. Always includes \xe2\x80\xa6DeA <code>Tree</code> whose layout matches that of a <code>char</code>.Aaclip unused bytesCnID of this crate, from the current compilation session\xe2\x80\x99s \xe2\x80\xa6DeIndicates which crate this <code>SourceFile</code> was imported from.AoThe exit status of the process.0A`The code itself.CaAdd an error code. See <code>Diag::code()</code>.ClThe error code (e.g. \xe2\x80\x9cE1234\xe2\x80\x9d), if the diagnostic has \xe2\x80\xa6Eh<code>None</code> for <code>ObligationCauseCode::Misc</code> (a common case, occurs ~\xe2\x80\xa6ClContains the doctest processed code without the wrappers \xe2\x80\xa6CkThe range in the markdown that the code within the code \xe2\x80\xa65Ai<code>if</code> conditionDe<code>if</code> condition that is maybe a <code>let</code> expressionBbConnection to the SQLite database.AcThe ABI convention.BhThe calling convention of this function.BkCopies a file from one location to another.DgA wrapper around <code>std::fs::copy</code> which includes the file \xe2\x80\xa60EgThe value found at <code>place</code> is being copied. <code>diag_expr_id</code> is \xe2\x80\xa6CgAn expected cost for building this package. Used to \xe2\x80\xa60CmIf this is unit or tuple-variant/struct, then this is the \xe2\x80\xa6Dk<code>DefId</code> that identifies the variant\xe2\x80\x99s constructor. If this \xe2\x80\xa6CnInformation about where the macro came from, if this piece \xe2\x80\xa6CjThis function is used as a fast path when decoding the \xe2\x80\xa6CnActual downloaded data, updated throughout the lifetime of \xe2\x80\xa6Cmthe data is augmented by the insertion time. This insures \xe2\x80\xa6BfInformation about the network request.AoManifest contents as TOML data.3CaThe <code>data</code> argument for that callback.CnThe mapping data. Thanks to Vec we get both fast accesses, \xe2\x80\xa6BaThe data stored for this element.0EdOriginal data retrieved from <code>epoll_event</code> during <code>epoll_ctl</code>.DiThe data retrieved from <code>epoll_event</code>. libc\xe2\x80\x99s data field \xe2\x80\xa64CnThe data for this key. None is used to represent NULL. (We \xe2\x80\xa6BiFields and constructor id of the variant.CaThe path leading from the crate root to the item.1C`The data that we will serialize and deserialize.EgThe first <code>size</code> bytes of <code>data</code> are the value. Do not try to \xe2\x80\xa60CfAlthough this claims to be a zero-length array, in \xe2\x80\xa6CkInfo about the drop to be performed at this node in the \xe2\x80\xa6BkReturns the extra data stored in a pattern.BaExtra data to store in a pattern.0EfNew data to insert at the <code>start</code> position of the <code>original</code> \xe2\x80\xa6BlSet of points that define the current local.Adclippy lints to deny0AmFingerprints of dependencies.AdFetch the deps path.CkThe directory with rustc artifacts: <code>$dest/deps</code>CjReturns a filtered set of dependencies for the given unit.CiReturns the dependencies for a package, filtering out \xe2\x80\xa6CkThe deps map is a mapping of dependency name to list of \xe2\x80\xa6CnAll kinds of direct dependencies of the package, including \xe2\x80\xa6C`Checks the licenses of third-party dependencies.CnA detailed description to show to the user why the process \xe2\x80\xa60C`Description of the lint or the issue it detects.0CdFetch the destination path for final artifacts  (\xe2\x80\xa6EcThe final artifact destination: <code>$root/debug</code> (or <code>release</code>).ClThe return place from the original call to <code>try</code>.0EnWhy the <code>Option</code>? It is always <code>Some</code> until the <code>Diag</code> is \xe2\x80\xa60ClThe difference between original and normalized string at \xe2\x80\xa6BcThe table of directory descriptors.0DjThis module defines the <code>Dist</code> struct, which represents the \xe2\x80\xa6CmImplementation of the various distribution aspects of the \xe2\x80\xa6BcLink to the unstable documentation.CnThis is a markdown formatted string that will be used when \xe2\x80\xa6CmThe full markdown docstring of this item. Absent if there \xe2\x80\xa6CjCleanup to be done if the coroutine is dropped at this \xe2\x80\xa6000CeDrops and async drops related logic for coroutine \xe2\x80\xa6CnWhich block to jump to if the coroutine is dropped in this \xe2\x80\xa6CjWhen leaving, we need to flush all pending data to not \xe2\x80\xa6ChEmit the body using the provided name for the signature.BiA handle on curl easy mode for http callsAl<code>else</code> expression0BlSpecify type(s) of output files to generate.0CkAnnotate the provided diagnostic with information about \xe2\x80\xa6B`Emit and consume the diagnostic.BgWhat kind of artifact we\xe2\x80\x99re emitting.CeOn Rust 2024, this emits a hard error. On earlier \xe2\x80\xa6AdEmit the diagnostic.BdAttempts to evaluate the expression.CkMain evaluator loop and setting up the initial stack frame.ChEvaluate the link-eval virtual forest, providing the \xe2\x80\xa6AhCommand Execution ModuleDjIn case of an <code>Err</code>, Cargo will not continue with the build \xe2\x80\xa6CiRuns the process, waiting for completion, and mapping \xe2\x80\xa6BnExecutes a program inside a running container.1ClThis shim makes sure that calls only get executed if the \xe2\x80\xa6EaInvokes <code>build_helper::util::detail_exit</code> with <code>cfg!(test)</code>BhThe expansion produced by the macro callChSimple constant folding: Insert an expression, get a \xe2\x80\xa6CkReturns the expression inside the yield expression, if any.CnAn expression at the end of the block without a semicolon, \xe2\x80\xa6A`The \xe2\x80\x9cvalue\xe2\x80\x9d.AjType checking expressions.BjThe expression whose value is being castedBkRendered expression of the RHS of the rangeBmThe trailing expression of the block, if any.BgThe expression on which use is applied.CaThe expression being evaluated in this statement.CnBuilds MIR from expressions. As a caller into this module, \xe2\x80\xa6AjThe unexpected expression.00DkWill be <code>None</code> in the case of cross-crate reexports, and may \xe2\x80\xa6CnThe stringified expression of this constant. Note that its \xe2\x80\xa6BnThe expression that produced the discriminant.CaThe stringified expression for the initial value.Chlocal queue used for <code>spawn_fifo</code> indirectionCfThis is the <code>.rs</code> file that is being fixed.C`Returns the underlying file handle of this lock.AkAdds a file to the project.CcDeclare an expected value for an assert from a fileBlAdds a file to be copied into the container.AmAdd a file to the repository.AkAdds a file to the package.A`Source file nameBkInformation about the original source file.Cnthe (0-indexed) column in the file, counted in characters, \xe2\x80\xa6CnThe path to the source file in which this span occurs, for \xe2\x80\xa6BfInformation about the original source.DgThe fill character. E.g. the <code>.</code> in <code>{:.&gt;10}</code>.CfOptionally specified character to fill alignment with.CgFinds any known set of conflicts, if any, where all \xe2\x80\xa6DaFind all uses of (including assignments to) a <code>Local</code>.BlGiven a key, returns the (current) root key.CbLocates the given place, if it exists in the tree.CmReturns the \xe2\x80\x9croot\xe2\x80\x9d key of the disjoint-set containing \xe2\x80\xa6EbFlips polarity by turning <code>Positive</code> into <code>Negative</code> and \xe2\x80\xa6000CmA folding traversal mechanism for complex data structures \xe2\x80\xa6BdThe type that the impl block is for.CiForks the inference context, creating a new inference \xe2\x80\xa60AoReturns the argument unchangedlConverts an <code>u64</code> into an <code>AtomicU64</code>.1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111DhConvert the finalized state of a <code>StableHasher</code> and constructjConvert 32-bit floating point number to <code>Value::Number</code>, or \xe2\x80\xa6BlConvert boolean to <code>Value::Bool</code>.CjConvert <code>String</code> to <code>Value::String</code>.CcConvert string slice to <code>Value::String</code>.6CkConvert copy-on-write string to <code>Value::String</code>.CjConvert <code>Number</code> to <code>Value::Number</code>.CmConvert map (with string keys) to <code>Value::Object</code>.ChConvert a <code>Vec</code> to <code>Value::Array</code>.BmConvert a slice to <code>Value::Array</code>.CdConvert <code>()</code> to <code>Value::Null</code>.DjConvert 64-bit floating point number to <code>Value::Number</code>, or \xe2\x80\xacThe function that\xe2\x80\x99s being called.000A`The common case.CgThe feature that must be enabled to use this operation.EgFeature gate the given <code>span</code> under the given <code>feature</code> which \xe2\x80\xa6D`Cargo configuration information. See <code>GlobalContext</code>.fConfigAbThe cargo context.01DgReturns the <code>GlobalContext</code> this workspace is associated \xe2\x80\xa63BnConfiguration information for cargo operationsBnConfiguration information for Cargo operationsBiThe context to get the shell to print to.CnLocal reference to <code>GlobalContext</code> for convenience.Ce<code>GlobalContext</code> reference for convenience.0DdReturns the <code>GlobalContext</code> this source config map is \xe2\x80\xa6C`Inserts <code>elem</code> into the state vector.0CmFor a given pair of regions (R1, R2), maps to a region R3 \xe2\x80\xa6DkReturns an iterator of paths within <code>Project::root</code> matching \xe2\x80\xa6CkThe goal we\xe2\x80\x99ve evaluated. This is the input goal, but \xe2\x80\xa60EcIn the <code>origin</code> block, push a <code>goto -&gt; target</code> terminator.A`Grows the arena.DcReturns the hash listed for a specified <code>PackageId</code>. \xe2\x80\xa6CjThis hash is used to deterministically pick a query to \xe2\x80\xa6ClGet the object ID of the HEAD commit from the underlying \xe2\x80\xa6CiThe current HEAD commit of the underlying Git repository.CjThis is a priority queue that tracks the time when the \xe2\x80\xa6DhReturns a list of <code>(&lt;option-name&gt;, &lt;help-text&gt;)</code>.DfSets the description of the argument for short help (<code>-h</code>).CgAdd a help message attached to this diagnostic. See \xe2\x80\xa6Cl\xe2\x80\x9ccoverage attribute can be applied to a function (with \xe2\x80\xa6EeCreates a new <code>Diagnostic</code> with the given <code>message</code> at the spanDeAdds a new child diagnostic message to <code>self</code> with the \xe2\x80\xa6BlDo not display the argument in help message.DjSpecifies that this <code>subcommand</code> should be hidden from help \xe2\x80\xa6CfGets the user\xe2\x80\x99s Cargo home directory (OS-dependent).BoPath to the current test\xe2\x80\x99s <code>$HOME</code>Aehost targets to build0AgThe target host triple.CnThe target directory layout for the host (and target if it \xe2\x80\xa61DgA target for <code>build.rs</code> or any of its dependencies, or a \xe2\x80\xa6CgThe host triple (arch-platform-OS), this comes from \xe2\x80\xa6AdHost platform tuple.BfThe base URL for issuing API requests.BgThe URL to put in the <code>href</code>DeThe id of an anchor within the page (without a <code>#</code> prefix)BdConfigures libcurl\xe2\x80\x99s http handles.AiInconsistent breaking boxCkInformation about the given target platform, learned by \xe2\x80\xa6BjImplementation of <code>cargo info</code>.Dd<code>CaptureKind</code> and expression(s) that resulted in such \xe2\x80\xa60CjInformation collected from typeck, including spans for \xe2\x80\xa6DhThis field initially stores a <code>QueryStackDeferred</code> during \xe2\x80\xa6CiContains information that needs to be saved and reset \xe2\x80\xa6CgCalled after a rustc process invocation is prepared \xe2\x80\xa6CbInitializes a Git repository at <code>path</code>.Dk<em>(<code>git2</code>)</em> Initialize a new repository at the given path.ChSetup a local psuedo-crates.io <code>TestRegistry</code>C`Initializer expression to set the value, if any.CmSets up any state required for the renderer. When this is \xe2\x80\xa6BaCalls <code>U::from(self)</codemSee docs in build/expr/mod.rseTries to find the associated item that implements \xe2\x80\xa6CkThe associated item described by this <code>LeafDef</code>.10100DkThe <code>DefId</code> of the item which we are collecting opaque types \xe2\x80\xa6CmRenders a single non-module item. This means no recursive \xe2\x80\xa6CnInserts an item into the index. This should be used rather \xe2\x80\xa6BeReturns an iterator over all entries.CmProvides read-only iteration over everything in the given \xe2\x80\xa6CjThis function exists for priroda to be able to iterate \xe2\x80\xa6BfYield a set of contained flags values.00000000BdIterate over elements, sorted by keyCnReturns an iterator over the items in the map in insertion \xe2\x80\xa6CiAn iterator visiting all key-value pairs in arbitrary \xe2\x80\xa6CmAn iterator visiting all elements in arbitrary order. The \xe2\x80\xa6ClIterate over a tuple of the key an <code>FluentValue</code>.0CnNote: Do you really want to use this? Often you know which \xe2\x80\xa6ChIterates over the indices of set bits in a sorted order.CkIterates through all the columns set to true in a given \xe2\x80\xa60BcUnderlying iterator over the words.965999996599BlReturns an iterator over the switch targets.::::::::76::76:CfReturns the number of parallel jobs that have been \xe2\x80\xa6Banumber of jobs to run in parallel0BhNumber of rustc jobs to run in parallel.0CaGets the number of jobs specified for this build.DiLike <code>Path::join</code>, creates a new filesystem rooted at this \xe2\x80\xa6DiShutdown the server thread and wait for it to stop. <code>Drop</code> \xe2\x80\xa6BnThink: <code>iter.any(/* is certain */)</code>EcJoin two <code>Certainty</code>s preserving their <code>DefId</code>s (if any). \xe2\x80\xa6CkDefines the \xe2\x80\x98join\xe2\x80\x99 of provenance: what happens when \xe2\x80\xa60CkComputes the least upper bound of two elements, storing \xe2\x80\xa600DiCreates a new span encompassing <code>self</code> and <code>other</code>.DfTakes two closures and <em>potentially</em> runs them in parallel. \xe2\x80\xa60EeExecute <code>oper_a</code> and <code>oper_b</code> in the thread-pool and return \xe2\x80\xa6ChJoins the elements of all the worker locals into one VecCnrender the documentation in JSON format in addition to the \xe2\x80\xa60CcThese structs are a subset of the ones found in \xe2\x80\xa6CkCollects statistics and emits suite/test events as JSON \xe2\x80\xa6BmSpecify json messages printed by the compilerAjA JSON emitter for errors.AhRustdoc\xe2\x80\x99s JSON backendCaLLVM Kernel Control Flow Integrity (KCFI) and \xe2\x80\xa6Bdpthreads-style thread-local storage.0AmIterate over the keys, sortedCiAn iterator visiting all keys in arbitrary order. The \xe2\x80\xa6BjFields used for Hash, and PartialEq trait.11CjDefines the set of legal keys that can be used in queries.22C`Removes <code>elem</code> from the state vector.0BhWhat to build or what action to perform.CkWhether this compilation unit is for the host or target \xe2\x80\xa6FdIs this a <code>--bin bin</code>, <code>--lib</code>, <code>--example ex</code>? Serialized as a \xe2\x80\xa6A`The source kind.AcType of dependency.C`A kind of target (e.g., lib, bin, example, \xe2\x80\xa6).CmThe dependency kind. \xe2\x80\x9cdev\xe2\x80\x9d, \xe2\x80\x9cbuild\xe2\x80\x9d, and \xe2\x80\x9cnormal\xe2\x80\xa6mKind of macroCiWhat kind of message we expect (e.g., warning, error, \xe2\x80\xa6DfWhat kind of position this is. See <code>FormatArgPositionKind</code>.ClThe \xe2\x80\x9csemantic\xe2\x80\x9d representation of the literal lowered \xe2\x80\xa6AkWhat kind of borrow this is0AgThe fragment specifier.AhA syntax extension kind.AgKind of elided lifetimeAkSemantics of this lifetime.5CbDefines the kind of access made by the projection.CjReturns the closure kind for this closure; only usable \xe2\x80\xa60EfGets the inner <code>ty::Binder&lt;&#39;tcx, PredicateKind&lt;&#39;tcx&gt;&gt;</code>.2Abkind of expressionBnWhether this is a value Drop or a StorageDead.BkExtra information about this initializationDkThe kind of pattern it is: fixed-length <code>[x, y]</code> or variable \xe2\x80\xa6AkRetrieve the constant kind.0AbThe constant kind.AeThe type of instance.D`<code>true</code> if this borrow arose from method-call auto-ref0DhWhat kind of module this is, because this may not be a <code>mod</code>.CnHow the lifetime was introduced, to have the correct space \xe2\x80\xa6CjThe kind of this expansion - macro or compiler desugaring.DkThe <code>ty::LateParamRegionKind</code> corresponding to the anonymous \xe2\x80\xa6==CmInformation about this item that is specific to what kind \xe2\x80\xa6CaWhether this item is a struct, trait, macro, etc.EcThe representation, e.g. <code>#[repr(C)]</code>, <code>#[repr(transparent)]</code>CdThe kind of the struct (e.g. unit, tuple-like or \xe2\x80\xa6CbWhether the variant is plain, a tuple-like, or \xe2\x80\xa6CdThe kind of the parameter and data specific to a \xe2\x80\xa6EhHow this macro is supposed to be called: <code>foo!()</code>, <code>#[foo]</code> or \xe2\x80\xa6BnNone = run all extra checks for the given langCmThis arg is the last, or final, positional argument (i.e. \xe2\x80\xa6BeImplementation of the late lint pass.Ck\xe2\x80\x9cLate resolution\xe2\x80\x9d is the pass that resolves most of \xe2\x80\xa6BmLibrary search paths to hand to the compiler.ChThe current line being written. Once a line break is \xe2\x80\xa6AjThe (1-based) line number.CjThe one-indexed line of the source file where the span \xe2\x80\xa61AoIndex of line, starting from 0.DcThis is called on the returned <code>CodegenResults</code> from \xe2\x80\xa60BiThe original link written in the markdownCjEmit a lint from a const-eval situation, with a backtrace.ClEmit a lint at the appropriate level, with no associated \xe2\x80\xa60CiThis pass statically detects code which has undefined \xe2\x80\xa6CiRuns several rustdoc lints, consolidating them into a \xe2\x80\xa6BdAsserts that this MetaItem is a listCkShould we tell the user to write a list when they didn\xe2\x80\x99t?DjIf <code>Some</code>, the attribute is allowed to take a list of items \xe2\x80\xa60AnLinked list of specifications.EeGet the backend <code>BasicBlock</code> for a MIR <code>BasicBlock</code>, either \xe2\x80\xa6DjThis module defines the <code>Llvm</code> struct, which represents the \xe2\x80\xa6BmCompilation of native dependencies like LLVM.AjLoads the on-disk reports.EeLoads the <code>Source</code> for a given <code>SourceId</code> to this registry, \xe2\x80\xa6DjCreates an implementation of <code>Source</code> corresponding to this \xe2\x80\xa6CoCreate an <code>InstallTracker</code> from information on disk.ClDiscovers packages inside this source if it hasn\xe2\x80\x99t yet \xe2\x80\xa60CkLoads the JSON for a specific named package from the index.EdRead the general concept for <code>load()</code> on <code>RegistryData::load</code>.CoGets the <code>Source</code> for a given <code>SourceId</code>.BfLoads a value from the atomic integer.BfCode to load the dep-graph from files.CnLoad and return the current value of the various counters. \xe2\x80\xa6BgSee <code>PackageRegistry::lock</code>.CkThis function is used to transform a summary to another \xe2\x80\xa6AlA lock on the package cache.CmAcquires a lock with the given mode, possibly blocking if \xe2\x80\xa6nThe file lock.CaThis module implements a lock which only uses \xe2\x80\xa6EbThis lock protects writes to the <code>data</code> and <code>frozen</code> fields.0BhBindings to acquire a global named lock.CeSets the long version of the argument without the \xe2\x80\xa6CnReturns a list of all files and directories underneath the \xe2\x80\xa6CkGenerate a logical right-shift. Both operands must have \xe2\x80\xa60CmFor a given pair of regions (R1, R2), maps to a region R3 \xe2\x80\xa6AoRuns the credential interactionCnLogic for transforming the raw code given by the user into \xe2\x80\xa6BnThink: <code>iter.all(/* is certain */)</code>CaExtracts the MetaItem from inside this Attribute.BaGet the metadata of a wide value.ClMetadata for unsized places. Interpretation is up to the \xe2\x80\xa61ClThe metadata field of the reference. This is a \xe2\x80\x9ctarget \xe2\x80\xa6000CkMiscellaneous builder routines that are not specific to \xe2\x80\xa6CmMiscellaneous type-system utilities that are too small to \xe2\x80\xa6CgThe \xe2\x80\x9cmode\xe2\x80\x9d this unit is being compiled for. See \xe2\x80\xa6CkThe Unix mode for the file. Note that when extracted on \xe2\x80\xa6EaThe <code>TestMode</code>. E.g. <code>TestMode::Ui</code>. Each test mode can \xe2\x80\xa6CfConceptually either forward or reverse mode AD, as \xe2\x80\xa6ClThe synchronization mode of the lock. This is explicitly \xe2\x80\xa6DiIndicates if synchronization is used via <code>mode_union.sync</code> \xe2\x80\xa6CgThe minimum rust version that the project supports. \xe2\x80\xa60DkName of the codegen backend, as identified in the <code>compiler</code> \xe2\x80\xa6BiLibrary filename that will be used rustc.CnThe crate name we\xe2\x80\x99re using for this dependency, which if \xe2\x80\xa6CjFeature name. This is valid Rust identifier so no dash \xe2\x80\xa6AmGets the name of the package.jCrate nameAdName of the feature.0DkThe name of the dependency (as it is set in its <code>Cargo.toml</code> \xe2\x80\xa6An(Re)Sets the program\xe2\x80\x99s name.CfA unique name of the source (typically used as the \xe2\x80\xa6ChThe name of this source, a unique string (across all \xe2\x80\xa60CeName of the registry in configuration. May not be \xe2\x80\xa6AeThe name of the crate000nThe identifier0AjThe name of the container.AdName of the package.CmName of the dependency. If the dependency is renamed, the \xe2\x80\xa6BnName(s) that were associated with this tag \xe2\x80\xa6DfFor a single-segment attribute (i.e., <code>#[attr]</code> and not \xe2\x80\xa6CeFor a single-segment meta item, returns its name; \xe2\x80\xa6BbThe name of the region (interned).Abname of the methodCiNone for tuple structs/normal enum variants, Some for \xe2\x80\xa6CkThe name of the module. When the crate may be saved betweenAhThe name to be exported.nThe lint name.AcName of the sectionmName to bind.FbReturns the <code>name</code> symbol in <code>#[lang = &quot;$name&quot;]</code>. For example, \xe2\x80\xa6ClThe name to export this item with. It may not contain \\0 \xe2\x80\xa60:BaA string identifier for the lint.0BnThe name for which collision(s) have occurred.ChThe name of the local binding which shadows the glob \xe2\x80\xa6AgVariant or struct name.Dd<code>&amp;str</code> gives a consistent ordering, which ensures \xe2\x80\xa6BoThe name of the target feature (e.g. \xe2\x80\x9cavx\xe2\x80\x9d)DjReturns a simple string representation of a <code>StatementKind</code> \xe2\x80\xa6CnA name for this CGU. Incremental compilation requires that \xe2\x80\xa6DkReturns a simple string representation of a <code>TerminatorKind</code> \xe2\x80\xa6DkThis can be a named (<code>.foo</code>) or unnamed (<code>.0</code>) field.55AjThe name of this dep kind.oThe field name.CjReturn the fully qualified name of the current definition.BnReturn fully qualified name of this definitionAbThe variable name.CcRetrieve the instance name for diagnostic messages.15AgGet name of the module.iFlag nameCmThe \xe2\x80\x9cprimary\xe2\x80\x9d name for this option. Normally equal to \xe2\x80\xa61BnA string that is shown in place of a filename.CjThe name of the file that the source came from. Source \xe2\x80\xa6BiGets the string that was specified by \xe2\x80\xa6CnThe name of this item. Optional because not every item has \xe2\x80\xa6BmThe content for the anchor tag and title attrCgNeeded for <code>#[rustc_doc_primitive]</code> modules.B`The name of this target feature.AfThe name of the crate.BlSome items such as impls don\xe2\x80\x99t have names.BiThe name of the associated type/constant.AfName of the parameter.DfMay be different from the last segment of <code>source</code> when \xe2\x80\xa6AeThe name of the type.AoThe name of the imported crate.CcThe name of the associated type in the parent type.C`The next ID to use for creating a token (see \xe2\x80\xa6CkAttempts to find another candidate to check from this list.1Cmparses one element on the inside of a list attribute like \xe2\x80\xa6DgShould be the same <code>ecx</code> on each call, and match the one \xe2\x80\xa6CkIndex of the \xe2\x80\x9cnext\xe2\x80\x9d drop to perform (in drop order, \xe2\x80\xa6DjWraps the tokens iteration to ensure that the <code>byte_pos</code> is \xe2\x80\xa6AeGets a node by index.BiThe parent node which consumes the value.CgNode on which the transition is currently being appliedCjThe node whose physical counter is represented by this \xe2\x80\xa6AnCreates a filter with no rule.BiCreates a unit of work that does nothing.BaPrints a cyan \xe2\x80\x98note\xe2\x80\x99 message.BiGenerate a note/help text without a span.DfAdd a note attached to this diagnostic. See <code>Diag::note()</code>.AkThe note to issue a reason.0EeCreates a new <code>Diagnostic</code> with the given <code>message</code> at the spanDeAdds a new child diagnostic message to <code>self</code> with the \xe2\x80\xa6CgAn extra note that should be issued if this item is \xe2\x80\xa6CkThe reason for deprecation and/or what alternatives to use.DeMaps condition expressions to their enclosing <code>!</code>, for \xe2\x80\xa6C`See the docs for <code>RenameReturnPlace</code>.DiReturns the single <code>DefId</code> that the path resolves to, this \xe2\x80\xa6Ajopen the docs in a browser0AgOpens an existing file.BfText that starts the permission block.CjOpens a static archive for read-only purposes. This is \xe2\x80\xa6CjAccesses the data returned in <code>LoadResult::Ok</code>.CfOptions that change how the feature resolver operates.AdCommand line optionsCiChecks if two slices are equal as per <code>eq_fn</code>.0F`Pack pointer <code>ptr</code> with a <code>tag</code>, according to <code>self.packed</code> \xe2\x80\xa6C`force {check,build,run}-pass tests to this mode.0Ahsingle, non-aliased pathBbPath to the built runtime library.AoReturns path of the stamp file.CiPath to the unit\xe2\x80\x99s primary output (an executable or \xe2\x80\xa6CjAbsolute path to the file that will be produced by the \xe2\x80\xa61CnHash of the path to the base source file. This is relative \xe2\x80\xa6CaThe file system path for a local path dependency.CbAbsolute path to the directory for the new package0AoFile system path for dependencyAgThe location of the exeAeLocal, absolute path.AePath to the manifest.CeReturns the underlying path that this lock points to.BeReturns the root path of this source.0AmThe root path of this source.0BmRoot directory of the index for the registry.CaThe path of the package that we\xe2\x80\x99re downloading.ClPath to the root of the underlying Git repository on the \xe2\x80\xa6000BmA path to the main source file of the target.BgDefines a file to add to the container.BkAn absolute path to the actual file contentCnAn absolute path to the original file the generated one is \xe2\x80\xa6DdConstruct a <code>PathBuf</code> relative to the current working \xe2\x80\xa6CdGets just the path, without the args. Some examples:C`Path of the trait, including any type parametersDhThe <code>path</code> may be pushed to, but the part that is present \xe2\x80\xa6CjThe file path to the visualizer file. This is used for \xe2\x80\xa6A`path being movedAfpath being initializedAhTrack a file explicitly.DhPath <code>Segment</code>s at the place of use that failed. Used for \xe2\x80\xa6DiReturn explicit sysroot if it was passed with <code>--sysroot</code>, \xe2\x80\xa6AeThe path to the themeClThe list of path components for the fully qualified path \xe2\x80\xa6AeThe path of the type.D`The path with which <code>parent</code> was referenced (like \xe2\x80\xa6CkPeeks at the current position, without incrementing the \xe2\x80\xa6CmReturns the next item after the current one. It doesn\xe2\x80\x99t \xe2\x80\xa6DjPerforms profiling using <code>rustc-perf</code> on a built version of \xe2\x80\xa6B`The permission this item grants.BaMutable access to its permissionsEcReturns the <code>DefId</code> of the <code>Poll</code> lang item if it is defined.DiThe i-th element in <code>pool</code> stores allocations of alignment \xe2\x80\xa6AjThe filter test predicate.AbPrevious characterAfThe previous elements.EcReturns the last eaten symbol (or <code>&#39;\\0&#39;</code> in release builds). \xe2\x80\xa6BeUsed by <code>-Z self-profile</code>.0ClGive access to the ptr-sized provenances (which can also \xe2\x80\xa6Di<code>Provenance</code> in this map applies from the given offset for \xe2\x80\xa6ClProvenance in this map applies from the given offset for \xe2\x80\xa6CfAdd a new entry to the ignore list. Requires three \xe2\x80\xa6DePushes a new sub-key on this <code>ConfigKey</code>. This sub-key \xe2\x80\xa6CmPushes an item onto the queue, regardless of the capacity \xe2\x80\xa6CiAdds a new download that should be retried in the future.DgLike <code>Path::push</code>, pushes a new path component onto this \xe2\x80\xa6BjRecord an additional event to the history.ChPushes a new \xe2\x80\x9cundo item\xe2\x80\x9d onto the undo log. This \xe2\x80\xa6CiAdds a command line argument verbatim with no argfile \xe2\x80\xa6BkReturns a new stack with an element of top.ClPushes an element to the array returning the index where \xe2\x80\xa6CgPushes a list of AST lint attributes onto this context.1CkPushes a new row to the matrix. Internal method, prefer \xe2\x80\xa6ChWrite some plain text to the buffer, escaping as needed.DiPush a level <code>level</code> heading into the appropriate place in \xe2\x80\xa6BaPush a component onto the buffer.GnSets <code>chr</code> with <code>style</code> for given <code>line</code>, <code>col</code>. If <code>line</code> does not \xe2\x80\xa6GaSets <code>string</code> with <code>style</code> for given <code>line</code>, starting from <code>col</code>. \xe2\x80\xa6CkWhen merging two \xe2\x80\x9croot\xe2\x80\x9d keys, their ranks determine \xe2\x80\xa6C`Calculates per-second average rate of all slots.m\xe2\x80\x9craw box\xe2\x80\x9dAiReads a file to a string.CnDetect data-races for an unsynchronized read operation. It \xe2\x80\xa6CjThe vector clock of all non-atomic reads that happened \xe2\x80\xa6F`Read data from <code>fd</code> into buffer specified by <code>buf</code> and <code>count</code>.ClRead the counter in the buffer and return the counter if \xe2\x80\xa6EfReads as much as possible into the given buffer <code>ptr</code>. <code>len</code> \xe2\x80\xa6DgA wrapper around <code>std::fs::read</code> which includes the file \xe2\x80\xa60ChCreates intermediate dirs and initialize the repository.ChA Git repository that contains the actual index we want.CeUnderlying Git repository instance for this database.CeUnderlying Git repository instance for this checkout.10D`Create a <code>RepoBuilder</code> to build a new git repository.BbRepr options provided by the user.0CjReturns a stringified <code>#[repr(...)]</code> attribute.ChReturns the rest of the input from the current location.CeThe current set of local scopes for types and values.BoFetch the root path (<code>/\xe2\x80\xa6/target</code>).DiThe root directory: <code>/path/to/target</code>. If cross compiling: \xe2\x80\xa6BdGets the root folder of the package.Cn<code>root</code> is optional to allow backward compatibility.0BhReturns the root path of this workspace.BeRoot directory where this is defined.BaRoot path of this local registry.AmThe root path of this source.AcRoot of the project0BjPath to the test\xe2\x80\x99s filesystem scratchpadAkThe index of the root node.00CiData about the top-level items in a crate, as well as \xe2\x80\xa6CnThe ID of the theoretical expansion that generates freshly \xe2\x80\xa6CoThe id of the root <code>Module</code> item of the local crate.CnVector of rows. The rows must form a rectangular 2D array. \xe2\x80\xa6DjThis module defines the <code>Rust</code> struct, which represents the \xe2\x80\xa6DkDoctest functionality used only for doctests in <code>.rs</code> source \xe2\x80\xa6CkFeatures we deem safe for everyday use - typically true \xe2\x80\xa6DiIf this is <code>None</code>, then this is a raw pointer, so size and \xe2\x80\xa6CfSaves all of the deferred information to the database.BbSave tracking information to disk.AlOutput SBOM precursor files.0CjEnable the <code>sbom</code> option in build config in \xe2\x80\xa6BeUnstable feature <code>-Zsbom</code>.ClMap from node index to SCC, and stores the successors of \xe2\x80\xa6CjThe seed to use when non-determinism or randomness are \xe2\x80\xa60CkSeeks to the given offset (which can be relative to the \xe2\x80\xa6CgAvoid infinite recursion due to recursive declarations.CfGets the overall compiler <code>Session</code> object.0AlAccess the compiler session.00CdTurn a constant int byte representation into an i128BjThe <code>+</code> or <code>-</code> flag.0BiThe size of the <code>.crate</code> file.BiTotal size of the src directory in bytes.BeTotal size of the checkout directory.CmThe size of accesses to this atomic location. We use this \xe2\x80\xa6CmThe size in bytes of the atomic primitive underlying this \xe2\x80\xa6BkThe number of bytes affected from the base.EaIf <code>safe</code> is <code>Some</code>, then the pointer is either null or \xe2\x80\xa6CfSize of the table in entries, including possible gaps.BaThe size of this layout in bytes.Acbuild paths to skip0ClSkip tests matching these substrings. The matching logic \xe2\x80\xa6BiModule that contains skip related stuffs.BlA topological sort of the <code>Graph</code>BlThe span of the <code>DisallowedPath</code>.0Baentire <code>for</code> loop spanAgSpan of the loop headerAkSpan of the macro call siteCbspan where macro was applied to generate this codeBgLine of code that triggered this event.Bdget the span of the entire attributeDeThe span inside the format string for the full <code>{\xe2\x80\xa6}</code> \xe2\x80\xa6AoThe span of the name or number.CiReturn a span encompassing the header, or none if all \xe2\x80\xa6AaThe overall span.CjThe span of the function, without the dot and receiver \xe2\x80\xa6dSpanCjSpan of the whole parameter definition, including default.CaSpan of the whole <code>for&lt;&gt;</code> clauseBnRetrieves the <code>TokenTree</code>\xe2\x80\x99s span.DjThe <code>Span</code> associated with the creation of this constraint. \xe2\x80\xa6BcThe span for the member constraint.AbThe span to blame.2BfGets a span representing the location.BoThe span for the current #[derive(Foo)] header.BiThe entire original formatting directive.BbThe span of the current statement.CfThe span we are going to include in the final snippet.0BjAdd a span. See <code>Diag::span()</code>.Clspan where macro was applied to generate this code; note \xe2\x80\xa6:BeThe span of the meta-variable in LHS.AmSpan of the macro definition.DfSpan of the <code>#[rustc_default_body_unstable(...)]</code> attributeCjSpan of the <code>#[rustc_const_stable(...)]</code> or \xe2\x80\xa6AfSpan of the attribute.210CnThe span encompassing the arguments and constraints inside \xe2\x80\xa6BlReturns the span of this <code>QPath</code>.AlSpan of the entire attributeEcThe span includes the curly braces <code>{</code> and <code>}</code> around the \xe2\x80\xa6dSpanChFirst span where it is accessed (there can be multiple).DkThe span giving rise to the <code>expected</code> type, if one could be \xe2\x80\xa6DhThe <code>Span</code> points to the expression that caused us to divergeCmThe span of the scrutinee or type expression which caused \xe2\x80\xa6BhThe span of code that we are linting on.CmSpans from struct fields and similar that can be obtained \xe2\x80\xa61CnThe span of this particular definition of the opaque type. \xe2\x80\xa6AoSpan of function being checked.DiThe <code>Span</code> associated with the field access or method call \xe2\x80\xa6DiReturns the span of this <code>Scope</code>. Note that in general the \xe2\x80\xa6CbA span representing this MIR, for error reporting.CjThe source span for the AST pertaining to this MIR entity.Bi<code>Span</code> of the tail expression.ClThe span of the block, including the opening braces, the \xe2\x80\xa6Bdspan of the expression in the sourceDkThe span of use, without the dot and receiver (e.g. <code>use</code> in \xe2\x80\xa6CmSpan of the <code>let &lt;PAT&gt; = &lt;INIT&gt;</code> part.=Bj<code>Span</code> of the original pattern.CgA span that has been extracted from MIR and then \xe2\x80\x9c\xe2\x80\xa6AmThe unexpected expr\xe2\x80\x99s span.DfReturns the span of this tree, delegating to the <code>span</code> \xe2\x80\xa6CmReturns the span for the delimiters of this token stream, \xe2\x80\xa6C`Returns the span for this punctuation character.DhReturns the span of this <code>Ident</code>, encompassing the entire \xe2\x80\xa6BkReturns the span encompassing this literal.BcReturn the span of this definition.AoGet the span of this attribute.BnThe span that covers the entire function body.0CmThe span corresponding to the reason for which this query \xe2\x80\xa6000CdSpan of the module itself. Used for error reporting.CnThe source location where the name is defined; None if the \xe2\x80\xa6AfSpan of this use tree.BeWhere to suggest adding the lifetime.AjThe span of the parameter.AbSpan from the itemCiSpan of import\xe2\x80\x99s \xe2\x80\x9cextern\xe2\x80\x9d declaration; used for \xe2\x80\xa6Cfspan of the extern crate that caused this to be loadedDdThe span of the format string, i.e. <code>&quot;content&quot;</code>CmThe span of the scrutinee or type expression which caused \xe2\x80\xa6CnThe source location of this item (absent if it came from a \xe2\x80\xa6Clspan where macro was applied to generate this code; note \xe2\x80\xa6ChA list of packages to clean. If empty, everything is \xe2\x80\xa6AkA set of packages to build.10AnPackage to add dependencies toBcPackage to remove dependencies fromAnFlexible target specification.DjThis module contains the <code>InterpCx</code> methods for executing a \xe2\x80\xa6DaReturns <code>true</code> as long as there are more things to do.CiPrint expression such that it can be parsed back as a \xe2\x80\xa6CmCreate a stub debuginfo node onto which fields and nested \xe2\x80\xa6CcContains utility functions to generate suggestions.CkIf we have a span for the condition expression, suggest \xe2\x80\xa6CiStores a value into the atomic integer, returning the \xe2\x80\xa6CeAdditional <code>Cargo.toml</code> to sync and vendor0CkSynchronization primitives like to attach extra data to \xe2\x80\xa60CcContains FreeBSD-specific synchronization functionsCbContains macOS-specific synchronization functions.CmThis module defines various operations and types that are \xe2\x80\xa6DiA lock implementation that\xe2\x80\x99s only used if <code>Lock.mode</code> is \xe2\x80\xa6BgReturns the last field in this variant.CnThe type which determines the unsized metadata, if any, of \xe2\x80\xa6CmRemoves and returns the value in the set, if any, that is \xe2\x80\xa600EeTakes the value out of the <code>Value</code>, leaving a <code>Null</code> in its \xe2\x80\xa611DhAdds a new temporary value of type <code>ty</code> storing the result ofDoTemporary to store the result of <code>deref()</code>/<code>deref_mut()</code>.CnBuild-and-run steps for <code>./x.py test</code> test fixturesCfDeclares a test step that invokes compiletest on a \xe2\x80\xa6DjWhether tests should be run for the target (<code>test</code> field in \xe2\x80\xa6CnThe expansion from a test function to the appropriate test \xe2\x80\xa6DgTests whether <code>node</code> meets the filter, returning true if so.0ClWalks the crate looking for items/impl-items/trait-items \xe2\x80\xa6CeRuns any tests/code examples in the markdown file \xe2\x80\xa6oText formatter.CjSource text from the start of line_start to the end of \xe2\x80\xa6DgSource text from the start of <code>line_start</code> to the end of \xe2\x80\xa6DgCreates a new unit of work that chains <code>next</code> after ourself.Ao<code>if</code> then expression0Ci<code>then</code> is always <code>ExprKind::Block</code>.EoProduces a new <code>Tree</code> where <code>other</code> is sequenced after <code>self</code>.CkTHIR datatypes and definitions. See the rustc dev guide \xe2\x80\xa6CjThe MIR is built from some typed high-level IR (THIR). \xe2\x80\xa6BlThe THIR data that this context is building.BfUpdates the state of the progress bar.CdUpdates the state of the progress bar for downloads.BgLet the time pass for a small interval.BeLibrary used by tidy and other tools.BbThe tier of the target. 1, 2 or 3.Cfa monotonic counter, increased for each new insertion.BeUsed by <code>-Z self-profile</code>.CkThis module defines the structures that directly mirror \xe2\x80\xa6CnThe TOML profile defined in <code>Cargo.toml</code> or config.ClSpecify build configuration specific for some tool, such \xe2\x80\xa60CnThis module handles building and managing various tools in \xe2\x80\xa6BjImplementation of <code>cargo tree</code>.DjReturns a <code>git2::Tree</code> object of the current HEAD commit of \xe2\x80\xa6CfA Git tree object to help this registry find crate \xe2\x80\xa6CfIn this file we handle the \xe2\x80\x9cTree\xe2\x80\x9d part of Tree \xe2\x80\xa6BaThe context for type information.BfTypes and impls for <code>Unit</code>.AhWhat\xe2\x80\x99s being doctestedBdThe unit that generated this output.10AdThe dependency unit.CkIf this is a homogeneous aggregate, returns the homogeneousCcA <code>Tree</code> representing a zero-sized type.CmThe number of tokens assigned to threads. If this is 0, a \xe2\x80\xa6BeThe crate was used non-speculatively.CnWas the symbol marked as <code>#[used(compiler)]</code> or \xe2\x80\xa6CnTracks whether an item is used in scope or used relatively \xe2\x80\xa6AlNumber of uses of the macro.CmMiscellaneous type-system utilities that are too small to \xe2\x80\xa6ClHelper functions corresponding to lifetime errors due to \xe2\x80\xa6AjTotal number of variables.AhThe version of the crate00AoThe version of this dependency.CmBlocks the current thread waiting for a package to finish \xe2\x80\xa6AiBlock until latch is set.DhWalk top-down and call <code>it</code> in each place where a pattern \xe2\x80\xa6BhWalk the pattern in left-to-right order.CnAn iterator over the type substructure. WARNING: this does \xe2\x80\xa60EgIterator that walks <code>self</code> and any types reachable from <code>self</code>\xe2\x80\xa60002311Agclippy lints to warn on0BfPrints an amber \xe2\x80\x98warning\xe2\x80\x99 message.DkAdd a warning attached to this diagnostic. See <code>Diag::warn()</code>\xe2\x80\xa6EgIf <code>true</code>, indicates the <code>?</code> syntax is used, which means this \xe2\x80\xa6ClDescribes at which point in the pipeline this validation \xe2\x80\xa6CcFind incompatibilities in matcher/invocation sizes.DfCreates a <code>DisambiguatorState</code> where the next allocated \xe2\x80\xa6DkUpdates the goal to one with a different <code>predicate</code> but the \xe2\x80\xa60EfAllows access to the <code>TyCtxt</code> in the current <code>ImplicitCtxt</code>. \xe2\x80\xa601BnExecute the given function with access the \xe2\x80\xa622AhSingleton part, one fileCcThe current word being written. Once a break is \xe2\x80\xa6DiIf <code>true</code>, the attribute is allowed to be a bare word like \xe2\x80\xa60ClA copy of the current word, but with any already-visited \xe2\x80\xa6CmParses a word starting at the current position. A word is \xe2\x80\xa6BoInterns the value and returns the wrapped type.C`Interacts with the registry yank and unyank API.AoAlignment of <code>Self</code>.CiAlignment for lining up comments following MIR statementsCnShort aliases that we can use in match patterns. If an end \xe2\x80\xa6CgArm Architecture Procedure Call Standard, sometimes \xe2\x80\xa60CjCan be specified as <code>extern &quot;aapcs&quot;</code>.CeIsolated op is rejected with an abort of the machine.0AnAbort the process immediately.CkA projection, opaque type, free type alias, or inherent \xe2\x80\xa600000CeAlignment of a type in bytes (always a power of two).BdRepresents <code>#[align(N)]</code>.0BdAllow warnings (do not output them).CjExecute op requiring communication with the host, i.e. \xe2\x80\xa60AdOnly used for lints.BnAllow use of unstable features, as on nightly.ChThe <code>allow</code> level will not issue any message.0CkWe can use the item because it is stable or we provided theDgNew dependencies can be added to the <code>TaskDeps</code>. This is \xe2\x80\xa600ClThe token cannot join with the following token to form a \xe2\x80\xa6DkA <code>Punct</code> token cannot join with the following token to form \xe2\x80\xa6CmArray/vector-like placement, with all fields of identical \xe2\x80\xa6BjAn array (e.g, <code>[a, b, c, d]</code>).BkA fixed length array (<code>[T; n]</code>).BkAn array (e.g., <code>[a, b, c, d]</code>).CaA fixed length array (i.e., <code>[T; n]</code>).CoAn array with the given length. Written as <code>[T; N]</code>.00AjThe type is of the element0BiAn array, e.g. <code>[a, b, c, d]</code>.BjFixed match against an array; irrefutable.8AhRepresents a JSON array.444nAn array type.BjAn array type, e.g. <code>[u32; 15]</code>ChRepresents <code>#[rustc_as_ptr]</code> (used by the \xe2\x80\xa60Cn<code>async</code>, which returns an <code>impl Future</code>.An<code>Type: async Trait</code>EcAn explicit <code>async</code> block or the body of an <code>async</code> function.ClWe ate an <code>|</code> (or <code>||</code> and recovered).DhAn await expression (<code>my_future.await</code>). Span is of await \xe2\x80\xa6BcAn <code>&lt;expr&gt;.await</code>.Cn<code>.await</code> calls <code>IntoFuture::into_future</code>DhOn LLVM, mark all generated LLVM functions with the <code>ssp</code> \xe2\x80\xa6AmBuild and run some benchmarks0ChBuild benchmark binaries, e.g., <code>cargo bench</code>CkRepresents <code>cargo::rustc-link-arg-benches=FLAG</code>.10DeA binary operator expression, including <code>as</code>-casts and \xe2\x80\xa6BhThe <code>|</code> operator (bitwise or)BaThe <code>bitor</code> lang item.111AnA block (<code>{ .. }</code>).BkA block (<code>&#39;label: { ... }</code>).CnIndented relative to the indentation level of the previous \xe2\x80\xa6DiA block of statements <code>{ .. }</code>, which may have a label (in \xe2\x80\xa6DjAn explicit <code>async</code>/<code>gen</code> block written by the user.CaA block (e.g., <code>&#39;label: { ... }</code>).hA block.BhAn anonymous module; e.g., just a block.BoInstrument for coverage at the MIR block level.DoFirst line is on a new line and all lines align with <strong>block</strong> \xe2\x80\xa6DgA bound on an associated type (e.g., <code>AssocTy: Bound</code> in \xe2\x80\xa6CiTrait bounds in generics bounds and type/trait alias. \xe2\x80\xa6CaAppears as a bound on a type or another lifetime.2CjBound const variable, used only when preparing a trait \xe2\x80\xa6DeBound type variable, used to represent the <code>&#39;a</code> in \xe2\x80\xa61010101010Ad<code>{ ... }</code>0DjA <code>break</code>, with an optional label to break, and an optional \xe2\x80\xa6CfA <code>break</code>, with an optional label to break.B`A <code>break</code> expression.BjGlobal configuration for the build system.BhCompile either the compiler or libraries0CfTOML representation of various global build decisions.CfBuild the tool using rustc that corresponds to the \xe2\x80\xa6B`Compile with <code>rustc</code>.CoBuild binaries and libraries, e.g., <code>cargo run</code>, \xe2\x80\xa610CnA dependency needed to run the build for this unit (e.g. a \xe2\x80\xa6CjThe \xe2\x80\x9cbuilt MIR\xe2\x80\x9d dialect, as generated by MIR building.0AoUpvar is captured by reference.0CnUpvar is captured by use. This is true when the closure is \xe2\x80\xa60BdA use expression <code>x.use</code>.BeType for the bytes of the allocation.0BbThe <code>c_void</code> lang item.DgThis is essentially a <code>HashMap</code> which allows storing any \xe2\x80\xa6DfIt is a well known fact that <code>rustc</code> is not the fastest \xe2\x80\xa6ClThe type of in-memory cache to use for queries with this \xe2\x80\xa60CeThis cache is used to store information about the \xe2\x80\xa6n<code>^</code>DjRuns <code>cargo test</code> for cargo itself. We label these tests as \xe2\x80\xa6ClBuilds the cargo tool. Note that it can be built using a \xe2\x80\xa6DgN.B., the variants in <code>Cause</code> are intentionally ordered. \xe2\x80\xa6Cg<code>ExternAbi::C</code> but spelled funny because x860CjCan be specified as <code>extern &quot;cdecl&quot;</code>.CkErrors are bypassed for bootstrapping. This is required \xe2\x80\xa6CkCompile either the compiler or libraries, using cargo check0E`Type-check with <code>rustc</code> by emitting <code>rmeta</code> metadata only.CcPerform type-check, e.g., <code>cargo check</code>.10BhA <code>clang</code> invocation builder.BmClassification of \xe2\x80\x9ceightbyte\xe2\x80\x9d components.CkHow a span of text is classified. Mostly corresponds to \xe2\x80\xa6AkClean out build directories0BaThe <code>clone</code> lang item.n<code>:</code>0C`The set of available colors for the terminal \xe2\x80\xa6n<code>,</code>CeAn elided lifetime in brackets with written brackets.1Bl<code>1</code> in <code>Foo&lt;1&gt;</code>.BeA constant item (<code>const</code>).DgAn associated constant, <code>const $ident: $ty $def?;</code> where \xe2\x80\xa6CdDon\xe2\x80\x99t compute derivatives with respect to this \xe2\x80\xa6CkThe MIR represents some form of constant. The signature \xe2\x80\xa6EeValidation of a <code>const</code>. <code>allow_immutable_unsafe_cell</code> says \xe2\x80\xa60ChConstructor constant automatically created by a unit \xe2\x80\xa6CmConstants and associated constants, also including inline \xe2\x80\xa6DlA <code>const</code>, associated <code>const</code>, or other const context.ClAn associated constant with an optional value (otherwise \xe2\x80\xa6ChAn associated constant of the given type, set to the \xe2\x80\xa6AjA <code>const</code> item.CcPredicate comes from <code>const_conditions</code>.DhEquivalent to <code>ty::ConstKind::Infer(ty::InferConst::Var(_))</code>.BfSome kind of const inference variable.0An<code>Type: const Trait</code>101BdEnforcing const stability of an itemiConstants0BlAny token that can start a const expression.54434343BaA constant as a generic argument.AmDenotes a constant parameter.EcWhen encountered, increment a <code>u8</code> counter starting from <code>0</code>.BkThe number of repetitions of an identifier.CmA count is used for the precision and width parameters of \xe2\x80\xa6DkRunning the program must result in a crash, e.g. by <code>SIGABRT</code>\xe2\x80\xa6CiRuns <code>cargo test</code> for standard library crates.CgThe top-level data structure that stores the entire \xe2\x80\xa6B`Holds information about a crate.BeThe crate currently being documented.BbThe root of the emitted JSON blob.DaExplicitly crate-wide visibility set with <code>pub(crate)</code>BmUse one <code>use</code> statement per crate.CkThe list of constructor functions that we still have to \xe2\x80\xa6BgA feature has a direct cycle to itself.CkThe walk found a cycle, but the entire component is not \xe2\x80\xa6CjQuery cycle detected, stashing in favor of a better error.CnAn old-solver-style cycle error, which will fatal. This is \xe2\x80\xa60CkA type has cyclic layout, i.e. the type contains itself \xe2\x80\xa61CcInherently impossible to fulfill; this trait is \xe2\x80\xa6Aa<code>{:?}</code>EdA <code>DefId</code> identifies a particular <em>definition</em>, by combining a \xe2\x80\xa6CkA unique identification number for each item accessible \xe2\x80\xa61DfA \xe2\x80\x9cnormal\xe2\x80\x9d item that uses a <code>DefId</code> for identification.AjDependency entry operationEbA <code>deref</code> pattern (currently <code>deref!()</code> macro-based syntax).BmThe <code>*</code> operator for dereferencingBaThe <code>deref</code> lang item.12BdDereference once, producing a place.DmA dereference of a pointer, reference or <code>Box&lt;T&gt;</code> of the \xe2\x80\xa6BfA <em>non-overloaded</em> dereference.Df<code>box P</code>, <code>&amp;P</code>, <code>&amp;mut P</code>, etc.CbCall <code>Deref::deref[_mut]</code> on the value.DgWe get passed a reference or a raw pointer to <code>self</code> and \xe2\x80\xa6DjDereference projections (e.g. <code>*_1</code>) project to the address \xe2\x80\xa60CiThe source file lines, in undecoded difference list form.CkForward Mode, Compute derivatives for this input/output \xe2\x80\xa6CmActs as a null expression. Lowering it will always emit a \xe2\x80\xa6CkSometimes we need a dummy value when no error has occurred.BgRepresents <code>#[rustc_dummy]</code>.0BiDWARF debuginfo (such as that used on \xe2\x80\xa6DgDynamic library (e.g. <code>libfoo.so</code> on Linux) or an import \xe2\x80\xa6ClAn implementation cannot be chosen unambiguously because \xe2\x80\xa6Cga constant represents an empty string, for convenience.DhValue which represents the <code>FiniteBitSet</code> having no bits set.CjThe initial value when adding a goal to its own nested \xe2\x80\xa6000Ciused when parsing attributes for miscellaneous things \xe2\x80\xa60DjThe \xe2\x80\x9cearly\xe2\x80\x9d effect (e.g., <code>apply_early_statement_effect</code>\xe2\x80\xa6BhSet of outgoing edges for a single node.BdNo arguments - <code>panic!()</code>CaThe access does not touch any existing allocationCcA type with no valid variants. Must be uninhabited.AkJust a trailing semi-colon.BcNo arguments: <code>#[attr]</code>.CjA special \xe2\x80\x98empty\xe2\x80\x99 token that is ignored during the \xe2\x80\xa6lEmpty stack.CfNothing that matches a nested macro definition was \xe2\x80\xa6AoE.g. <code>Path&lt;&gt;</code>.4CmEmpty lifetime is for data that is never accessed. We tag \xe2\x80\xa6EeVariant that matches no value. E.g. <code>Some::&lt;Option&lt;!&gt;&gt;</code> if \xe2\x80\xa68CkEmpty \xe2\x80\x9croot\xe2\x80\x9d scope at the crate start containing no \xe2\x80\xa6AoTried to parse the empty stringBdA view into a single entry in a map.AaBlocked on epoll.0DiAn <code>Epoll</code> file descriptor connects file handles and epoll \xe2\x80\xa6k\xe2\x80\x99a = \xe2\x80\x99bCmIndicates an error in the format string. The given string \xe2\x80\xa6BiProgress value in an error state (0-100).AoCredential provider error type.0C`Error returned when interacting with a registry.CdNo autodiff is applied (used during error handling).AdGive a default errorCcHard error when dereferencing a misaligned pointer.0CiDefines the type to return when merging of two values \xe2\x80\xa6ChThis obligation was resolved to an error. It will be \xe2\x80\xa6CgAn error in the code being compiled, which prevents \xe2\x80\xa6CbFatal error (malformed macro?). Abort compilation.0AcResolution failure.CmIndicates an illegal name was given and an error has been \xe2\x80\xa6DlIndicates an error during lowering (usually <code>&#39;_</code> in wrong \xe2\x80\xa6DbSimilar to <code>Issue</code>, but contains some extra informationCjA placeholder for a const which could not be computed; \xe2\x80\xa6CnA placeholder for a type which could not be computed; this \xe2\x80\xa6910190CnAn error has been encountered during lowering. We probably \xe2\x80\xa6gInvalidAoErrors that can abort analysis.iAn error.0CnA generic error to represent an API request that cannot be \xe2\x80\xa665>65>65AkComplete data for an event:CnA query for packages exactly matching the given dependency \xe2\x80\xa6CnPaths must match exactly and are hashed by their exact HIR \xe2\x80\xa6CiThe number of generics must match precisely as stipulatedBlRun and verify a <code>ProcessBuilder</code>B`There\xe2\x80\x99s a superfluous argument0AcExclude the library0kUninhabited0000CkThe target spec explicitly disables self-contained linking.AjDenies all configurations.ClAn error that causes an immediate abort. Used for things \xe2\x80\xa6DjInternal type of a file-descriptor - this is what <code>FdTable</code> \xe2\x80\xa6BaInitialization of a struct field.EhAccess of a named (e.g., <code>obj.foo</code>) or unnamed (e.g., <code>obj.0</code>) \xe2\x80\xa6BhA field in a struct, enum or union. e.g.1Fe<code>B.F</code> where <code>B</code> is the base expression and <code>F</code> is the field. The \xe2\x80\xa6FdA field (e.g., <code>f</code> in <code>_1.f</code>) is one variant of <code>ProjectionElem</code>\xe2\x80\xa600000CkAccess to a field of a struct, a tuple, an union, or an \xe2\x80\xa633EhA field projection (e.g., <code>f</code> in <code>_1.f</code>) project to a field in \xe2\x80\xa60oEmits to files.0Bf<code>FileLines</code> files iterator.FaFixed-sized integer type, e.g. <code>i8</code>, <code>u32</code>, <code>i128</code>. The bool \xe2\x80\xa6EdFixed-sized integer type, e.g. <code>i8</code>, <code>u32</code>, <code>i128</code>.CcDeserialized version of all flags for this compile.0BkCompiler flags for either rustc or rustdoc.AeFloating-point types.FaA float literal (<code>1.0</code>, <code>1f64</code> or <code>1E10f64</code>). The pre-suffix \xe2\x80\xa6DjFloating-point type variable <code>?F</code> (that can only be unified \xe2\x80\xa60CoA primitive floating-point type. For example, <code>f64</code>.Dc<code>12.34f32</code>, <code>1e3</code>, but not <code>1f32</code>.214122212121AjA function ABI definition.CnMetadata describing how the arguments to a native function \xe2\x80\xa6AjAn argument to a function.BaAn argument passed to a function.0DhThe MIR is a fn item with the given <code>DefId</code> and args. The \xe2\x80\xa6ClThe anonymous type of a function declaration/definition. \xe2\x80\xa600ChHold information about a function definition in a crate.111BbThe <code>fn_mut</code> lang item.DbA function pointer type (e.g., <code>fn(usize) -&gt; bool</code>).CmA function pointer (e.g., <code>fn(usize) -&gt; bool</code>).D`A pointer to a function. Written as <code>fn() -&gt; i32</code>.0DiThe <code>ReifyShim</code> was created to produce a function pointer. \xe2\x80\xa60AbFunction pointers.2222CkRepresents a function\xe2\x80\x99s signature in a trait declaration,0AnRepresents a fn\xe2\x80\x99s signature.B`The value of a function pointer.0DkThe name of the platform triple, like <code>x86_64-apple-darwin</code>, \xe2\x80\xa6Dk<code>#[rustc_force_inline]</code> forces inlining to happen in the MIR \xe2\x80\xa60nA stack frame.0CnAn iterator over the token trees in a delimited token tree \xe2\x80\xa6CfCreated a generic parameter for an anonymous lifetime.CnSynthetic name generated when user elided a lifetime in an \xe2\x80\xa6DdA fresh const variable. See <code>infer::freshen</code> for more \xe2\x80\xa60000AlBlocked on a Futex variable.A`The futex state.1CiA gated attribute which requires a feature gate to be \xe2\x80\xa60CjState required to run in GenMC mode. In this mode, the \xe2\x80\xa6CbThe key for a git db entry stored in the database.AhA graph of dependencies.CnA per-trait graph of impls in specialization order. At the \xe2\x80\xa6000ClA guard that closes the current github actions log group \xe2\x80\xa6AiA delimited token stream.C`A token stream surrounded by bracket delimiters.CcA guard pattern (e.g., <code>x if guard(x)</code>).0AoGuard type that panics on drop.ChUniquely identifies a node in the HIR of the current \xe2\x80\xa6BdThe fingerprint is actually a HirId.CcThe projection bound holds subject to the given \xe2\x80\xa6CmWhether the visitor visits nested \xe2\x80\x9citem-like\xe2\x80\x9d things. \xe2\x80\xa6ClWhether the visitor visits \xe2\x80\x9cintra item-like\xe2\x80\x9d things. \xe2\x80\xa6fisize.lA identifier0DeA <code>PatKind::Ident</code> may either be a new bound variable (\xe2\x80\xa6DgIdentifier token. Do not forget about <code>NtIdent</code> when you \xe2\x80\xa6CkIdentifier WITHOUT a preceding dollar sign, which means \xe2\x80\xa6DkAn identifier or keyword, e.g. <code>ident</code> or <code>continue</code>.AeAny identifier token.BcAn identifier (<code>ident</code>).nAn identifier.Dh<code>Ident</code> isn\xe2\x80\x99t rendered in the HTML but we still need it \xe2\x80\xa6Eb<code>Src</code> is transmutable into <code>Dst</code>, if all of the enclosed \xe2\x80\xa6Ea<code>Src</code> is transmutable into <code>Dst</code> if any of the enclosed \xe2\x80\xa6BaAn <code>if let</code> expressionBjscrutinee, pattern, then block, else blockDjAn indexing operation (e.g., <code>foo[2]</code>). The span represents \xe2\x80\xa6CnThe index of the repetition at a particular depth, where 0 \xe2\x80\xa6BaThe <code>index</code> lang item.CkAn indexing operation (<code>foo[2]</code>). Similar to \xe2\x80\xa6EfSome index like <code>B[x]</code>, where <code>B</code> is the base expression. We \xe2\x80\xa6AiIndex into a slice/array.00000BmA <em>non-overloaded</em> indexing operation.CgIndex into a slice/array. The value of the index is \xe2\x80\xa60ChThis means the type should be inferred instead of it \xe2\x80\xa6ClThis variant is used for anonymous lifetimes that we did \xe2\x80\xa6DkUser wrote an anonymous lifetime, either <code>&#39;_</code> or nothing \xe2\x80\xa6CjThis variant is not always used to represent inference \xe2\x80\xa6DhInference variables in <code>GenericArg</code> are always represented byDk<code>TyKind::Infer</code> means the type should be inferred instead of \xe2\x80\xa6AmInfer the value of the const.BjA type variable used during type checking.1010101010BgA type that is inferred: <code>_</code>CbAn inferred constant as in <code>[10u8; _]</code>.CjA generic argument that\xe2\x80\x99s explicitly set to be inferred.CcA type that\xe2\x80\x99s left to be inferred, <code>_</code>BnThe data underlying a <code>Dependency</code>.BlTracks the list of dominators for each node.Af16-bit signed integer.Af32-bit signed integer.Af64-bit signed integer.BcTypes that are represented as ints.CiThe token can join with the following token to form a \xe2\x80\xa6DjA <code>Punct</code> token can join with the following token to form a \xe2\x80\xa6BgWhere the remote source key is defined.DkAny statically computable Layout. Alignment can be <code>None</code> if \xe2\x80\xa6ClA \xe2\x80\x9cLabel\xe2\x80\x9d is an identifier of some point in sources, \xe2\x80\xa6CgWe define various kinds of latches, which are all a \xe2\x80\xa6CnLevelis_errorEmissionGuaranteeTop-levelSubUsed in lints?Bug\xe2\x80\xa6BaSetting for how to handle a lint.0CmRepresents the levels of effective visibility an item can \xe2\x80\xa6BhAn enum representing a diagnostic level.0DgNew-type wrapper around <code>usize</code> for representing limits. \xe2\x80\xa60CgThe source file lines, in decoded (random-access) form.DjThe <code>links</code> key is being violated. For example one crate in \xe2\x80\xa6BeUse a local <code>file://</code> URL.CcThe value is determined solely from the expression.ChLocal represents a <code>let</code> statement, e.g., \xe2\x80\xa6DmA <strong>local</strong> lifetime is one about which we know the full set \xe2\x80\xa6CfTo support alloc-free locals, we are able to write \xe2\x80\xa6BgA local variable or function parameter.AgA named local variable.0BjDenotes the start of a <code>Place</code>.2222222ClDisplay the path before the application of rewrite rules \xe2\x80\xa63CiThis external crate can be found in the local doc/ folderBb<code>const FOO: u32 = ...;</code>BnThe <code>x</code> flag in <code>{:x?}</code>.0BkEnsure all literals use lowercase letteringCgApply remappings to the expansion of std::file!() macroBhOther MinGW libs and Windows import libsBmThe keyword <code>macro</code> was processed.DiA MBE macro definition (<code>macro_rules!</code> or <code>macro</code>).ClAll scopes with macro namespace and the given macro kind \xe2\x80\xa6AnExpansion produced by a macro.o<code>m!</code>AdA macro declaration.CnA macro_rules! declarative macro. Contains a single string \xe2\x80\xa6BaAny <code>match</code> expressionfMatch.AkA <code>match</code> block.DkA <code>match</code> block, with a source that indicates whether or not \xe2\x80\xa6B`A <code>match</code> expression.CjA match, like <code>on(Rhs = &quot;Whatever&quot;)</code>.Ai<code>Type: ?Trait</code>B`<code>Type: [const] Trait</code>10CnPotentially unknown, some cases converge, others require a \xe2\x80\xa611CiFor all cases where you aren\xe2\x80\x99t sure or that are too \xe2\x80\xa6222ChIndicates that the trait bound relaxes a trait bound \xe2\x80\xa6AhThe <code>-</code> flag.n<code>-</code>1DgThe <code>bool</code> indicates whether the result of the operation \xe2\x80\xa6BkCode before /* foo */ and after the commentCgA chunk that has a mix of zeros and ones, which are \xe2\x80\xa6CjPack as many items as possible per row over (possibly) \xe2\x80\xa6CiAn option that takes a value, and can appear multiple \xe2\x80\xa6AcBlocked on a mutex.A`The mutex state.1D`<code>#[naked]</code>: an indicator to LLVM that no function \xe2\x80\xa6B`Represents <code>#[naked]</code>0BcNamed LTO settings like \xe2\x80\x9cthin\xe2\x80\x9d.AdNamed Strip settingsBf<code>format_args(\xe2\x80\xa6, arg = 1)</code>Cm<code>{a}</code> or <code>{:a$}</code> or <code>{:.a$}</code>AoNormal structs/struct variants.BjLate-bound regions that appear in the AST.000CgThere is a named lifetime, we won\xe2\x80\x99t suggest anything.AjForce disable color outputAiDo not cache this result.B`The never type (<code>!</code>).Ah<code>Type: Trait</code>AoA never pattern <code>!</code>.12BdThis is the current stable behavior:AnThe never type <code>!</code>.002BhAssert unreachability of never patterns.DhNever pattern. Only used in <code>WitnessPat</code>. An actual never \xe2\x80\xa60222oNever use color0BfNever emit leading pipes on match armsCbNiche (values invalid for a type) encoding the \xe2\x80\xa60Aa<code>{:o}</code>AmLiteral starts with \xe2\x80\x9c0o\xe2\x80\x9d.CgThe provider failed to perform the operation. Other \xe2\x80\xa60AaAny other reason.AiExtensible set of actionsCjOther usages which have not yet been categorized. Feel \xe2\x80\xa6CmArchitectures which don\xe2\x80\x99t need other considerations for \xe2\x80\xa6oSomething else.BgAny other ABI, including unstable ones.CnOther random stuff that does not fit to other kinds. e.g., \xe2\x80\xa6CcAn item that cannot be reordered. Either has an \xe2\x80\xa6kOwned data.00000BaThe <code>panic</code> lang item.DaGenerate a panic that can be caught by <code>catch_unwind</code>.BaA parameter in a function header.ChSuccessfully linked the lifetime to a generic parameter.BlRepresents a parameter in a function header.BeNon-lifetime argument (type or const)BlUser-given names or fresh (synthetic) names.1AjGeneric lifetime parameternFeed the type.AjA const generic parameter.EeA type parameter; for example, <code>T</code> in <code>fn f&lt;T&gt;(x: T) {}</code>.CjSuccessful resolution to an obligation provided by the \xe2\x80\xa6CnUse the type of the parameter of the provided function. We \xe2\x80\xa613232CaDescription of a type-checked function parameter.12432124343AmA type or constant parameter.DeParentheses in patterns used for grouping (i.e., <code>(PAT)</code>).CeNo-op: used solely so we can pretty-print faithfully.CjNo-op; kept solely so that we can pretty-print faithfully.CjContext that provides type information about constructors.BmA globally unique id to distinguish patterns.ChJust a helper \xe2\x80\x92 separate structure for each namespace.CnA piece is a portion of the format string which represents \xe2\x80\xa6DjA <code>Place</code> represents how a value is located in memory. This \xe2\x80\xa60ClPlaces roughly correspond to a \xe2\x80\x9clocation in memory.\xe2\x80\x9d \xe2\x80\xa6DbThis <code>Place</code> only contains projection which satisfy \xe2\x80\xa61FdAn assignable memory location like <code>x</code>, <code>x.f</code>, <code>foo()[3]</code>, that \xe2\x80\xa6D`Some user-given name like <code>T</code> or <code>&#39;x</code>.AkA struct with named fields.AmA variant with no parenthesesn<code>#</code>0CiPrints the stream by inheriting it from the bootstrap \xe2\x80\xa6CkA self-contained computation during trait solving. This \xe2\x80\xa600000000ClThis is a jobserver proxy used to ensure that we hold on \xe2\x80\xa6CmA packed 128-bit integer. Useful for reducing the size of \xe2\x80\xa6GbA <code>Punct</code> is a single punctuation character such as <code>+</code>, <code>-</code> or <code>#</code>\xe2\x80\xa6EfA single punctuation character (<code>+</code>, <code>,</code>, <code>$</code>, etc.).DkRepresents an optionally <code>Self</code>-qualified value/type path or \xe2\x80\xa6BkA qualified path to an associated item: \xe2\x80\xa6DfThe explicit <code>Self</code> type in a \xe2\x80\x9cqualified path\xe2\x80\x9d. The \xe2\x80\xa6CkA simple, threadsafe, queue of items of type <code>T</code>0AkEmit as little as possible.0ClRepresent a range akin to <code>ast::ExprKind::Range</code>.Bi<code>..</code> or <code>..=</code> rangeHiA range pattern (e.g., <code>1...2</code>, <code>1..2</code>, <code>1..</code>, <code>..2</code>, <code>1..=2</code>, <code>..=2</code>).HgA range (e.g., <code>1..2</code>, <code>1..</code>, <code>..2</code>, <code>1..=2</code>, <code>..=2</code>; and <code>..</code> in \xe2\x80\xa61BaThe <code>Range</code> lang item.D`A range pattern (e.g., <code>1..=2</code> or <code>1..2</code>).0CgTest whether the value falls within an inclusive or \xe2\x80\xa6BgA range that is inclusive of both ends.0AmDisplays progress as a ratio.0CgA region variable. Should not exist outside of type \xe2\x80\xa600000EhThe <code>.crate</code> file is already downloaded. <code>File</code> is a handle to \xe2\x80\xa6BoThe <code>Package</code> is already downloaded.CmOperation completed successfully, thread continues normal \xe2\x80\xa60BmExpansion produced a result (possibly dummy).0CjRetag references in the given place, ensuring they got \xe2\x80\xa6CiRetagging, a \xe2\x80\x9cStacked Borrows\xe2\x80\x9d shadow state operation1C`State for managing retrying a network operation.CjThe operation failed, and should be tried again in the \xe2\x80\xa6ChExpansion could not produce a result and needs to be \xe2\x80\xa60BbThe operator is right-associative.Ad<code>{:&gt;}</code>BaThe operator is right-associativeBjAn <code>.rmeta</code> Rust metadata file.0AjApproximation of 1/sqrt(x)CmBuild librustc, and compiler libraries, placing output in \xe2\x80\xa6DgChecks rustc using <code>build_compiler</code> and copies the built \xe2\x80\xa6CiBuild rustc using the passed <code>build_compiler</code>.BlSee <code>Compilation::rustc_process</code>.C`Information on the <code>rustc</code> executableBhA <code>rustc</code> invocation builder.CnRepresents a statically-describable scope that can be used \xe2\x80\xa6Dk<code>Scope</code>s are used to explicitly mark destruction scopes, and \xe2\x80\xa6CkA specific scope in which a name can be looked up. This \xe2\x80\xa6CkRepresents a fork-join scope which can be used to spawn \xe2\x80\xa60BfSet up the environment for development0CgAn abstraction around console output that remembers \xe2\x80\xa6Di&lt;&lt;, &gt;&gt; \xe2\x80\x93 when shifting a single integer, rhs can be any \xe2\x80\xa6CiPrints a terser backtrace which ideally only contains \xe2\x80\xa60CeDisplay only the filename, as a way to reduce the \xe2\x80\xa6BaThe <code>sized</code> lang item.Ah<code>Sized</code> trait000000000n<code>/</code>AiWaiting for time to pass.CfWait for a bit, until there is a timeout to be called.1DdThe <code>Sleep</code> struct is embedded into each registry. It \xe2\x80\xa6BgA slice pattern <code>[a, b, c]</code>.BkA variable-length slice (<code>[T]</code>).AdA slice pattern, \xe2\x80\xa6CaA variable length slice (i.e., <code>[T]</code>).CkThe pointee of an array slice. Written as <code>[T]</code>.00CeUsed for references to unsized types with slice tail.0CdMatches against a slice, checking the length and \xe2\x80\xa611BkA constructor for array and slice patterns.AiArray and slice patterns.D`The type is matched by slices. <code>array_len</code> is the \xe2\x80\xa610555EcA slice type (does <em>not</em> include the <code>&amp;</code>): <code>[i32]</code>BoAn unsized slice type, e.g. <code>[u32]</code>.oA single space.Ao<code>#[optimize(speed)]</code>0CmSections which do not require relocation are written into \xe2\x80\xa6AiExtra per-location state.ClStack memory. Error if deallocated except during a stack \xe2\x80\xa61000BaStack represented as linked list.CeThis unit is to be considered stale, even if hash \xe2\x80\xa6CaThe maximum of a set of file-modified timestamps.Bi<code>-Zfix-edition=start=$INITIAL</code>CcChild process requests that we begin monitoring it.DcThe <code>start</code> lang item. For all binary crates without \xe2\x80\xa6AcMissing ` at start.DcCollection of stuff used while creating the <code>UnitGraph</code>.DkThe state for the <code>FlowSensitiveAnalysis</code> dataflow analysis. \xe2\x80\xa6DjSome <code>data</code> together with information about how they relate \xe2\x80\xa6000oDataflow state.1111ChThe states in a <code>Dfa</code> represent byte offsets.2BbNo file specified, read from stdinDhThe <code>Steal</code> struct is intended to used as the value for a \xe2\x80\xa6BfStore the return value to the pointer.B`Appears as LHS of an assignment.C`The setting for choosing which symbols to strip.DdThe different settings that the <code>-C strip</code> flag can have.BeThe style for a node or edge. See \xe2\x80\xa6AgA \xe2\x80\x9csuite\xe2\x80\x9d of paths.0CiA lookup table for computing the inverse byte for the \xe2\x80\xa6DaWhen collecting for an explicit <code>#[define_opaque]</code> \xe2\x80\xa6lQuiet outputn<code>~</code>0DkSimilarly, a maximum address size of <code>u64</code> is assumed widely \xe2\x80\xa6AiThe authentication token.0DbAuth-token for publishing, see <code>RegistryBuilder::token</code>EfA single token. Should never be <code>OpenDelim</code> or <code>CloseDelim</code>, \xe2\x80\xa6CmA token - this holds both delimiter (e.g. \xe2\x80\x98{\xe2\x80\x99 and \xe2\x80\x98}\xe2\x80\xa6CiA jobserver token has become available. Sent from the \xe2\x80\xa6DkA token. Unlike <code>tokenstream::TokenTree::Token</code> this lacks a \xe2\x80\xa6CcThis is only used for implicit token trees. The \xe2\x80\xa6CmParsed token. It doesn\xe2\x80\x99t contain information about data \xe2\x80\xa6BiA trait declaration (<code>trait</code>).AcA trait definition.AlE.g., <code>Iterator</code>.EmCorresponds to <code>where Foo: Bar&lt;A, B, C&gt;</code>. <code>Foo</code> here would be \xe2\x80\xa61010AoTrait paths in bounds or impls.AmThe sugared form of the trait323232BaA <code>trait</code> declaration.00AkThis is used in most cases.AeA tuple of constants.BfA tuple pattern (<code>(a, b)</code>).nTuple variant.BgThe <code>tuple_trait</code> lang item.EhA tuple pattern (e.g., <code>(a, b)</code>). If the <code>..</code> pattern fragment \xe2\x80\xa6A`A tuple variant.CdA tuple type. For example, <code>(i32, bool)</code>.00BhA tuple, e.g. <code>(a, b, c, d)</code>.CnAn argument of tuple type. For a \xe2\x80\x9cfound\xe2\x80\x9d argument, the \xe2\x80\xa6222BkA tuple type: <code>(i32, &amp;str)</code>.AmA struct with unnamed fields.AnA variant with unnamed fields.CoA tuple type, e.g. <code>(String, u32, Box&lt;usize&gt;)</code>CdEquivalent to <code>ty::Infer(ty::IntVar(_))</code>.0AgA pattern type pattern.A`A type variable.0000DfA <strong>ty</strong>pe <strong>v</strong>ariable <strong>ID</strong>.0000Ba<code>-Zunpretty=hir,typed</code>CdThe source and destination types of a transmutation.0Ag8-bit unsigned integer.BhLatch is not set, owning thread is awakefusize.CkA unary operation (e.g., <code>!x</code>, <code>*x</code>).0DgA <em>non-overloaded</em> unary operation. Note that here the deref \xe2\x80\xa6ClCombine fieldless variants into a single match arm. This \xe2\x80\xa6DfAll fields start at no offset. The <code>usize</code> is the field \xe2\x80\xa6BhA union definition (<code>union</code>).DjA union definition, e.g., <code>union Foo&lt;A, B&gt; {x: A, y: B}</code>.AdThe type is a union.03AeA <code>union</code>.BaA <code>union</code> declaration.0BaThe <code>unpin</code> lang item.BnThe <code>X</code> flag in <code>{:X?}</code>.0BkEnsure all literals use uppercase letteringBaA variable captured by a closure.BcAn upvar referenced by closure env.0CkWhen building place for an expression within a closure, \xe2\x80\xa6CnA constraint that came from a usage of a variable (e.g. in \xe2\x80\xa60CmA type which can be deserialized as a configuration value \xe2\x80\xa60AgProgress value (0-100).CkThe type that is used when not inheriting from a workspace.00000000Al<code>move |x| y + x</code>.Bh<code>self</code>, <code>mut self</code>1AlUsed to hold computed value.AlA type-level constant value.110111AeWidth of the terminalC`Predicate comes from <code>predicates_of</code>.BcA desugared <code>while</code> loopBeA while loop, with an optional label.BcA <code>while _ { .. }</code> loop.AlAppears as a width, e.g. \xe2\x80\xa6CjCan be specified as <code>extern &quot;win64&quot;</code>.BjA plain write object without color supportAnStandard unsynchronized write.ChA write may have occurred on this memory range. Some \xe2\x80\xa6D`From the RFC: \xe2\x80\x9cA <em>write</em> means that the data may be \xe2\x80\xa6CkA <code>yield</code>, with an optional value to be yielded.DjA suspension point for coroutines (i.e., <code>yield &lt;expr&gt;</code>).AkA plain <code>yield</code>.AfMarks a suspend point.AgDestination of a yield.1B`A <code>yield</code> expression.DaResult of <code>yield_now()</code> or <code>yield_local()</code>.0CmA chunk that is all zeros; we don\xe2\x80\x99t represent the zeros \xe2\x80\xa6DiThe lockfile for a build (<code>.cargo-lock</code>). Will be unlocked \xe2\x80\xa6CfGlobal filesystem lock to ensure only one Cargo is \xe2\x80\xa6DfSets the program\xe2\x80\x99s description for the short help (<code>-h</code>).AfAfter the equals sign.CdAdd an alias, which functions as a hidden long flag.BgSets a hidden alias to this subcommand.EdIf <code>safe</code> is <code>Some</code>, then the pointer is aligned as indicated.BeThe alignment we know for this place.CnThe alignment of the allocation to detect unaligned reads. \xe2\x80\xa60AoOptionally specified alignment.CbAlignment in bytes, if explicitly specified by \xe2\x80\xa6DeAllocates memory as described in <code>Layout</code>. This memory \xe2\x80\xa6DcAllocates an object in the <code>TypedArena</code>, returning a \xe2\x80\xa6CbMemory allocation implementation for rustc_public.CgThis module provides methods to retrieve allocation \xe2\x80\xa6CjInternal memory allocator implementation for rustc_public.Aeclippy lints to allow0CnReturns true if the corresponding type is inhabited in the \xe2\x80\xa6CeApplies a single projection element, yielding the \xe2\x80\xa6AkApplies the queued changes.BeApply the opportunities on the graph.BaApplies a suggestion to the code.AkUsed to allocate HIR nodes.CgThe arena that types, regions, etc. are allocated from.0ClWe use an arena to avoid cloning the slices when cloning \xe2\x80\xa6CkThe number of fields for this constructor. This must be \xe2\x80\xa6CmThe number of fields in this pattern. E.g. if the pattern \xe2\x80\xa60EdConvenience method to create the <code>&lt;lhs&gt; as &lt;rhs&gt;</code> suggestion.AjAttributes of the variant.CmAttributes, both outer and inner. These are stored in the \xe2\x80\xa6BjAttributes inside the owner being lowered.CmData structures for representing parsed attributes in the \xe2\x80\xa6BfCollected attributes of the HIR nodes.AhAttributes on this item.CiBegin initializing this InitOnce. Must only be called \xe2\x80\xa6CmOne indexed Line and Column of the first character of the \xe2\x80\xa6EeConverts a <code>hir</code> binary operator to the corresponding <code>ast</code> \xe2\x80\xa6D`The bitwise or (<code>|</code>) of the bits in two flags values.000000000000000000000000000Ccwhether to automatically update stderr/stdout files0EdSome <code>TestMode</code>s support snapshot testing, where a <em>reference </em>\xe2\x80\xa6CkA block can only yield a constant if it has exactly one \xe2\x80\xa6BfThe block that the location is within.CnUniversal getter for block data, either it is in \xe2\x80\x98old\xe2\x80\x99 \xe2\x80\xa6BoBound that applies if <code>ty</code> is equal.0CmExecutes the entire build, as configured by the flags and \xe2\x80\xa6Bbhost target of the stage0 compilerBmBuild configuration from e.g. bootstrap.toml.1DkThis module defines the <code>Build</code> struct, which represents the \xe2\x80\xa6CjCollects and stores package metadata of each workspace \xe2\x80\xa6AlFetch the build script path.CiThe directory for build scripts: <code>$dest/build</code>AaBuilds the graph.CoPrepare for introspecting on all included <code>Command</code>sAdCreates the project.BoCreate the repository and commit the new files.AiInitializes the registry.CbChanges this to <code>[build-dependencies]</code>.AcProduce a UB error.DbBuilds the whole <code>assert!</code> expression. For example, \xe2\x80\xa6CkCombine the provided files, rlibs, and native libraries \xe2\x80\xa6CjBuilds a \xe2\x80\x9cglobal file table\xe2\x80\x9d for this CGU, mapping \xe2\x80\xa61ClAfter having set all necessary fields, this converts the \xe2\x80\xa6ChBuilding proof trees incrementally during trait solving.CnBuild a monomorphic body for a given instance based on the \xe2\x80\xa6D`Creates a new <code>ThreadPool</code> initialized using this \xe2\x80\xa6CmDeprecated in favor of <code>ThreadPoolBuilder::build</code>.DiCreates a new <code>FormatReportFormatter</code> from the settings in \xe2\x80\xa6CnThis is conceptually a <code>&amp;&#39;self.owner [u8]</code>.BnNumber of bytes of code (when pretty-printed).DkSince this has passed the validation of <code>MetadataBlob::new</code>, \xe2\x80\xa6CnThe actual bytes of the allocation. Note that the bytes of \xe2\x80\xa60CkProvenance in this map only applies to the given single \xe2\x80\xa6BjThe number of bytes, <code>&gt;= 2</code>.EcReturns the <code>DefId</code> of the <code>CStr</code> lang item if it is defined.DjA cache of outputs of <code>Step</code>s so we can avoid running steps \xe2\x80\xa6ChThis module helps you efficiently store and retrieve \xe2\x80\xa6BoA layer of on-disk index cache for performance.CbA small LRU cache of searches of the borrow stack.0DiThe cache only tracks the <code>ambient_variance</code> as it\xe2\x80\x99s the \xe2\x80\xa6CkWe\xe2\x80\x99re able to use a cache here as the folder does not \xe2\x80\xa6DjThis cache only tracks the <code>DebruijnIndex</code> and assumes that \xe2\x80\xa6ClWe only use the debruijn index during lookup. We don\xe2\x80\x99t \xe2\x80\xa62AnCache for candidate selection.4ClThis same cache is used throughout rustdoc, including in \xe2\x80\xa6BmThe <code>Cache</code> used during rendering.DfThis will create a <code>BootstrapCommand</code> that represents a \xe2\x80\xa6AbCargo as a libraryCkReturns a command that can be used to invoke cargo. The \xe2\x80\xa6BgThe reason we have to prove this thing.000AiMatch on a variant of \xe2\x80\xa611111111DdThe list of <code>BasicBlock</code>s from the one that found the \xe2\x80\xa6ClThe current hierarchy of parent headings, the levels are \xe2\x80\xa6CeIterator over chars. Slightly faster than a &amp;str.0Bdcheck formatting instead of applyingCiImplementation of compiling the compiler and standard \xe2\x80\xa61AiRun rustfmt in check modeEgThe <code>Visitor</code> responsible for actually checking a <code>mir::Body</code> \xe2\x80\xa6DkCheck function to be called during the <code>PostExpansionVisitor</code>\xe2\x80\xa60Actypeck: check phaseCdReturns true if <code>local</code> can be propagatedEbChecks if the next token is <code>tok</code>, and returns <code>true</code> if so.AbDependency checks.DiChecks for external package sources. <code>root</code> is the path to \xe2\x80\xa6BmThe checksum of the crate file being uploadedAcGenerate a checksumCmChecksum for verifying the integrity of the corresponding \xe2\x80\xa6CjReturns the executable name for a clang-based compiler \xe2\x80\xa6EcConstruct a new <code>clang</code> invocation. <code>clang</code> is not always \xe2\x80\xa6Ai<code>./x.py clean</code>CjDeletes files from the global cache based on the given \xe2\x80\xa6AfCleans various caches.0CfThis module defines the primary IR used in rustdoc \xe2\x80\xa6BiClears the progress bar from the console.BdRemoves all items from the undo log.CkClears the map, removing all key-value pairs. Keeps the \xe2\x80\xa6BdClears the set, removing all values.CeClears this color specification so that it has no \xe2\x80\xa6AcClear all elements.EeSets all columns at <code>row</code> to false. Has no effect if <code>row</code> doesBdUnsets the <code>index</code>th bit.5454CnRemoves all provenance inside the given range. If there is \xe2\x80\xa6ClActually frees the underlying memory in contrast to what \xe2\x80\xa67676CgMutex clock. This tracks the moment of the last unlock.CmTracks the happens-before relationship between a cond-var \xe2\x80\xa6CdTracks the happens-before relationship between a \xe2\x80\xa6CeThe increasing clock representing timestamps that \xe2\x80\xa6BmThe release clock associated with this event.CcClones the inner value along with the frozen state.BdText that ends the permission block.AjClose the file descriptor.CjThis module contains some shared code for encoding and \xe2\x80\xa6BbThis module defines the following.Bnwhether to use color in cargo and rustc output0AjSets when to color output.BeWhether to use colors in test output.C`Number locks held, to support recursive locking.BhCount the number of set bits in the set.BdCount the number of bits in the set.BdCount the number of 1s in the chunk.CcReturns the number of elements in <code>row</code>.CgNumber of elements to copy from src to dest, not bytes.0DgParses a <code>Count</code> parameter at the current position. This \xe2\x80\xa6CeNumber of elided lifetimes, used for elision in path.CkCreates a new spin latch for cross-threadpool blocking. \xe2\x80\xa6DjCreates a <code>GitDatabase</code> of this remote at <code>db_path</code>.BaCode for debugging the dep-graph.CfUsed to deduplicate global allocations: functions, \xe2\x80\xa6CjDelay initialization for parts of the <code>Command</code>CkReturns a structure that calls <code>f</code> when dropped.CkThe number of parent frames plus one (thus, the topmost \xe2\x80\xa6DgConvenience method to create the <code>*&lt;expr&gt;</code> suggestion.CiTreat this value as a pointer and return the place to \xe2\x80\xa6CmAsserts that this operand is a pointer (or reference) and \xe2\x80\xa6BgReturn a name suitable for diagnostics.CaGet an English description for the item\xe2\x80\x99s kind.CnA human readable name for the res kind (\xe2\x80\x9cfunction\xe2\x80\x9d, \xe2\x80\x9c\xe2\x80\xa6BiThe English description of the namespace.CaReturns a description of this abstract data type.CgThe description wording should combine well with \xe2\x80\x9c\xe2\x80\xa6CmGives a description of the renderer. Used for performance \xe2\x80\xa6BkIndicate whether the Git worktree is dirty.AmDiscriminant of this variant.BdThe discriminant value being tested.0BjRustdoc\xe2\x80\x99s FileSystem abstraction module.CgClears the map, returning all key-value pairs as an \xe2\x80\xa6CfClears the set, returning all elements in an iterator.10101010Cnset of places to drop when exiting this scope. This starts \xe2\x80\xa6BbCreates a dummy <code>Expr</code>.BjSome token that will be thrown away later.EdWraps <code>value</code> in a binder, asserting that <code>value</code> does not \xe2\x80\xa6CjCreates dummy var values which should not be used in a \xe2\x80\xa60BmCreate a new binder with no bounded variable.2121FeIf <code>self</code> contains a <code>Span</code>, it\xe2\x80\x99ll be replaced with <code>DUMMY_SP</code> \xe2\x80\xa6BbPath to a dynamic library. ex: \xe2\x80\xa6BfImplementation of the early lint pass.EdThe indexes of <code>edges</code> correspond to the <code>nodes</code>. That is, \xe2\x80\xa6ClThe actual, physical, edges we have recorded for a given \xe2\x80\xa6BgReturns all of the edges in this graph.CjCreates the default set of sources that doesn\xe2\x80\x99t take \xe2\x80\xa6BfGet a flags value with all bits unset.0000000000B`Empty hash map to simplify code.11CmConstruct a trait environment suitable for contexts where \xe2\x80\xa622CjReturns a reference to the (per header unique, static) \xe2\x80\xa60333AmNew matrix with no witnesses.4444444444ClIf a span is entered, we exit the previous span (if any, \xe2\x80\xa6EmInstalls <code>self</code> in a <code>TyCtxt</code> and <code>ImplicitCtxt</code> for the \xe2\x80\xa6CfGet a wrapper around a mutable access to the value \xe2\x80\xa6CnThe most recent entry returned by readdir(). Will be freed \xe2\x80\xa6CmGets the given key\xe2\x80\x99s corresponding entry in the map for \xe2\x80\xa600BaNops after entry, but before bodyAdNops after the entry22DhReturn the <code>epoch</code> instant (time = 0), to convert between \xe2\x80\xa6ClThe \xe2\x80\x9cepoch\xe2\x80\x9d for this machine\xe2\x80\x99s monotone clock: the \xe2\x80\xa6CgReturns <code>true</code> if fr1 is known to equal fr2.BaPrints a red \xe2\x80\x98error\xe2\x80\x99 message.DhThe error to display. This can be <code>None</code> in rare cases to \xe2\x80\xa6C`Custom error message for post-parsing validationDfIndicates that trying to normalize <code>key</code> resulted in error.CiTracks if we encountered an error while checking this \xe2\x80\xa6EeCreates a new <code>Diagnostic</code> with the given <code>message</code> at the spanDeAdds a new child diagnostic message to <code>self</code> with the \xe2\x80\xa6ClWhen things go wrong, we need some error handling. There \xe2\x80\xa64lError types.AhStart/end of the sectionC`Run and verify a process, see <code>Execs</code>DiIf <code>true</code>, the file is created in the root of the tarfile, \xe2\x80\xa6AkExtra data for the machine.0AlExtra state for the machine.0DjA non-empty <code>extra</code> allows for a precise calculation of the \xe2\x80\xa6DgAll fetches are done with <code>gitoxide</code>, which includes git \xe2\x80\xa6BbExecutes <code>cargo fetch</code>.0BhFor <code>-Zgitoxide</code> integration.DdAttempts to fetch the given git <code>reference</code> for a Git \xe2\x80\xa60ClAn abstraction of the files and directories that will be \xe2\x80\xa60CjThe list of files that the main target in the dep-info \xe2\x80\xa6ClMap of file path to some information about modifications \xe2\x80\xa6AnChecksums of each source file.B`Files to copy over to the image.ClA map of relative paths in the archive to their detailed \xe2\x80\xa6DbReturns an iterator over the files contained in <code>self</code>.CgPeeks the next symbol from the input stream without \xe2\x80\xa6CeCommand-line interface of the bootstrap build system.AaFormatting flags.CjThis field provides fast access to information that is \xe2\x80\xa60CeFlags of the ADT (e.g., is this a struct? is this \xe2\x80\xa6CiFlags of the variant (e.g. is field list non-exhaustive)?1222AeFile-locking support.BeSimple file-locking apis for each OS.EeAssign <code>TOP</code> to all places that are contained in <code>place</code> or \xe2\x80\xa6CmIf the extern entry is not referenced in the crate, force \xe2\x80\xa6Cmas we walk the defining uses, we are checking that all of \xe2\x80\xa6CkWhat paths have we already fetched since the last index \xe2\x80\xa6DeImplementation of the SYS_futex syscall. <code>args</code> is the \xe2\x80\xa6CaDerive a new pointer from one with the given tag.CfA graph, whose vertices are packages and edges are \xe2\x80\xa60ClCode for building the graph used by <code>cargo tree</code>.ClConstructs a \xe2\x80\x9cnormal\xe2\x80\x9d graph from the constraint set; \xe2\x80\xa6CnAll github actions log messages from this call to the Drop \xe2\x80\xa6CnThe name of the <code>ArgGroup</code> the argument belongs to.CaAdds an <code>ArgGroup</code> to the application.CcMatch arm guard, e.g. <code>n &gt; 10</code> in \xe2\x80\xa6AfOptional guard clause.BkIterate over the first pattern of each row.BlAll cycle heads this cache entry depends on.ClAll cycle heads this goal depends on. Lazily updated and \xe2\x80\xa6AkGets the package\xe2\x80\x99s hints.Dk\xe2\x80\x9cHooks\xe2\x80\x9d let you write <code>tcx</code> methods in downstream crates \xe2\x80\xa6CjHooks to be able to register functions in other crates \xe2\x80\xa60CbWhich triples to produce a compiler toolchain for.CiThe identifier of this source for Cargo\xe2\x80\x99s Git cache \xe2\x80\xa6ChCreate an identifier from a URL, essentially turning \xe2\x80\xa61CfFor a single-segment attribute, returns its ident; \xe2\x80\xa6CeFor a single-segment meta item, returns its name; \xe2\x80\xa6CkFor a single-segment meta item, returns its identifier; \xe2\x80\xa6CeFor a single-segment attribute, returns its name; \xe2\x80\xa6BlThe identifier portion of this path segment.AmThe identifier for the field.AdName of the variant.CeReturns an identifier if this token is an identifier.54ClGet the identifier of this <code>Node</code>, if applicable.EmEither a named lifetime definition (e.g. <code>&#39;a</code>, <code>&#39;static</code>) or an543EcComputes the <code>Ident</code> of this variant by looking up the <code>Span</code>0AaName of the item.AiThe suggested identifier.00BnThe identifier for the binding, always the \xe2\x80\xa6CbThe name of the argument if it\xe2\x80\x99s a simple ident.B`Name used to refer to the crate.CnThis is the data stored inside the file. ItemId is used to \xe2\x80\xa6AoImplementation of CompilerCtxt.CnMaps a type ID to all known implementations for that type. \xe2\x80\xa6CgAll impls (both of traits and inherent) for this union.ClAll impls (both of traits and inherent) for this struct. \xe2\x80\xa6B`<code>impl</code>s for the enum.CgThe implementations, inherent and of traits, on the \xe2\x80\xa6AnRoot path to the index caches.BoIndex maps a node to an index, for fast lookup.DlSpecifies the index of a positional argument <strong>starting at</strong> 1.CnThe slot of the oldest record. Also the next slot to store \xe2\x80\xa6BmManagement of the index of a registry source.BiInterface for managing the on-disk index.AhServe the registry indexCiExtracts the value of this index as a <code>usize</code>.0DcAlways <code>0</code> for types that cannot have multiple variants.CnWhich argument this position refers to (Ok), or would\xe2\x80\x99ve \xe2\x80\xa622CfPoints to the current token tree in the stream. In \xe2\x80\xa6333333333333333333333333333333333333333333333333333DiGets the (dialect, phase) index of the current <code>MirPhase</code>. \xe2\x80\xa64444444444444444444CnStores a map from fingerprints to nodes per dep node kind. \xe2\x80\xa65550CeThe index of the argument in the original definition.666666EeIndex into a <code>serde_json::Value</code> using the syntax <code>value[0]</code> orChOur index amongst the broadcast threads (ranges from \xe2\x80\xa6CeGets the index of this thread in the pool, within \xe2\x80\xa6CeOur index amongst the worker threads (ranges from \xe2\x80\xa6:::::::::::::::::CkA mapping of IDs that contains all local items for this \xe2\x80\xa6CkA collection of all items in the local crate as well as \xe2\x80\xa6CdThe inference context of the lowering context if \xe2\x80\xa6DcSet to <code>None</code> to disable the resolution of inference \xe2\x80\xa6BmError Reporting Code for the inference engineBnThe type-specific fields describing this item.CiGets the argument type at the given offset. This will \xe2\x80\xa6AoSpecify path to the input file.0AfProvide an input file.00000000AoSpecify path of the input file.01AbInput to be parsedBoAn anonymous string containing the source code.CkWhether or not this running in a Continuous Integration \xe2\x80\xa6CgIs this for a function (rather than a static variable).BkRelevant <code>rust-lang/rust</code> issue.0CnA list of all items produced by parsing attributes so far. \xe2\x80\xa600BkThe elements of the map in insertion order.0DiMappings from lang items to their possibly found <code>DefId</code>s. \xe2\x80\xa6DdThe key is the item <code>ItemId</code> and the value is: (item, \xe2\x80\xa6Bo<code>Item</code>s declared inside this module.EgAssociated <code>Item</code>s that can/must be implemented by the <code>impl</code> \xe2\x80\xa6CjThe list of associated items contained in this impl block.BiThe set of loans killed at each location.CkIf this value is known, returns the type it is known to be.ClIf this value is known, returns the const it is known to \xe2\x80\xa6BhThe crate root this path is relative to.BjReturns the item\xe2\x80\x99s <code>CrateNum</code>ClReturn information about the crate where this definition \xe2\x80\xa6elabelCbWhat label should we attach to this span (if any)?0CeOptional label to display adjacent to the annotation.CeLabel that should be placed at this location (if any)DkThis is <code>Some(_)</code> iff there is an explicit user-specified \xe2\x80\x99\xe2\x80\xa61BkThe latch that is used to wait on this job.0Ci\xe2\x80\x9cerror: internal compiler error\xe2\x80\x9d, \xe2\x80\x9cerror\xe2\x80\x9d, \xe2\x80\x9c\xe2\x80\xa6D`Returns the diagnostic <code>level</code> for <code>self</code>.1BnNumber of lines of code (when pretty-printed).CaLocations of lines beginnings in the source code.mThe new linesCjthe lines that are identified as part of an itemized blockCgThe set of lines (context and old/new) in the mismatch.2Clget the package that will be linking to a native library \xe2\x80\xa6BjNative library name this package links to.AlA list of link replacements.ClThis mapping resolves intra-doc links from the docstring \xe2\x80\xa6BlGets the field <code>workspace.lints</code>.AaRegistered lints.0EhWe use <code>flock</code> rather than <code>fcntl</code> on Linux, because WSL1 does \xe2\x80\xa6BgFormat list-like expressions and items.CbConfiguration options related to rewriting a list.BgA pointer to the contents of the place.ClInformation about the inputs that affect this Unit (such \xe2\x80\xa6CeAccess to a regstiry on the local filesystem. See \xe2\x80\xa6CkCreates a <code>Source</code> of a local registry, with \xe2\x80\xa6DaCall with <code>true</code> to publish in a \xe2\x80\x9clocal registry\xe2\x80\x9d.DfMakes a local <code>DefId</code> from the given <code>DefIndex</code>.C`The index of the local variable we are visiting.mlocal to dropCgReturn a local variable if this info is related to one.CmStores the local DefIds in a dense map. Local queries are \xe2\x80\xa604BfInteracts with the registry login API.AmLog in to the given registry.Ac<code>?Trait</code>B`mdman markdown to man converter.CkChecks if a required version from this module is met at \xe2\x80\xa6B`Merge the given value into self.CaOverwrite self\xe2\x80\x99s values with the given profile.CdTake several profile data files generated by PGO \xe2\x80\xa6DhTry to combine two <code>HomogeneousAggregate</code>s, e.g. from two \xe2\x80\xa6DnPrepend the given set of <code>spans</code> onto the set in <code>self</code>.FeReturns a new <code>Range</code> with lines from <code>self</code> and <code>other</code> if they \xe2\x80\xa6BcMetadata hash to use for each unit.CkLets you pick and choose as what you want to parse each \xe2\x80\xa6DgReturns the last-modified time for <code>path</code>, or zero if it \xe2\x80\xa6BmReturns the last modification time of a file.CeHTTP multi-handle for asynchronous/parallel requests.DhCreate <code>Some(Vec![..])</code> of all constants, unless there is anyCn<code>-Z instrument-xray=never</code>, disable instrumentationClReturns if config.ninja is enabled, and checks for ninja \xe2\x80\xa6AgAll nodes of this tree.00gOutputsC`The list of obligations. In between calls to \xe2\x80\xa6BdReturns all the nodes in this graph.AoFull HIR for the current owner.AdContents of the HIR.ChMap from a region to the index of the node in the graph.BdThe set of all DepNodes in the graph0ClNotes to be displayed when an attempt is made to use the \xe2\x80\xa60CmForwards compatibility. Unknown keys from future versions \xe2\x80\xa6AgForwards compatibility.CnOther command-line arguments not reflected by other fields \xe2\x80\xa6BgInteracts with the registry owners API.CnGet the id of the thread that currently owns this lock, or \xe2\x80\xa6BhThe thread that currently owns the lock.DdThis module contains all code sporting <code>gitoxide</code> for \xe2\x80\xa6CkReturns a list of page ranges managed by the allocator, \xe2\x80\xa6BdHelper functions for causing panics.BjSpecify what happens when the code panics.Cnif some job panicked, the error is stored here; it will be \xe2\x80\xa6BoId of the generic parameter that introduced it.0CdThe parameter corresponding to the anonymous region.Bl<code>true</code> if parentheses are needed.DhParses a spec string and returns a <code>PackageIdSpec</code> if the \xe2\x80\xa6CaParses the output instructions of a build script.DdAttempt to create a <code>Dependency</code> from an entry in the \xe2\x80\xa6DcParses <code>-Z</code> flags from the command line, and returns \xe2\x80\xa6DhParser for the <code>--format</code> string for <code>cargo tree</code>.DiParses this \xe2\x80\x9cmaybe a summary\xe2\x80\x9d into a <code>Parsed</code> for sure \xe2\x80\xa6D`Parse out a <code>Summaries</code> instances from on-disk state.CjParses a line from the registry\xe2\x80\x99s index file into an \xe2\x80\xa6AnDeserializes an on-disk cache.8CnParses an <code>if let</code> or <code>match</code> expressionClAttempt to parse a meta-variable expression from a token \xe2\x80\xa6CoTakes a <code>tokenstream::TokenStream</code> and returns a \xe2\x80\xa6DiParses a <code>MirPhase</code> from a pair of strings. Panics if this \xe2\x80\xa6DhContains <code>ParseSess</code> which holds state living beyond what \xe2\x80\xa6CkParses a clobber ABI for the given target, or returns a \xe2\x80\xa6CgParses a <code>MetaItem</code> into a <code>Cfg</code>.CgReturns a collection of parsed macro def\xe2\x80\x99s arguments.C`Returns an iterator of the key parts as strings.Dd<code>Span</code>s covering the full range of the original data. \xe2\x80\xa6CiInsert a <code>[patch]</code> section into this registry.DkThe paths to work with. For example: with <code>./x check foo bar</code>\xe2\x80\xa6Ahpaths for the subcommandBbMultiple aliases for the same job.CjThe paths passed on the command line. Used by steps to \xe2\x80\xa623CaAccess common paths and manipulate the filesystemCcVarious utilities for working with files and paths.ClThis module contains paths to types and functions Clippy \xe2\x80\xa6CmThe values are start positions in <code>out</code>, in bytes.DgMaintains a mapping of local crate <code>DefId</code>s to the fully \xe2\x80\xa6ClMaps IDs to fully qualified paths and other info helpful \xe2\x80\xa6BeA list of path defined in attributes.CdGet Unix permissions appropriate for this file type.CmRecords how far through the \xe2\x80\x9cdesugaring and optimization\xe2\x80\xa6CkCreates new pipes for stderr, stdout, and optionally stdin.ClComputations on places \xe2\x80\x93 field projections, going from \xe2\x80\xa6BiInformation about the <code>Place</code>.BhThe <code>Place</code> that is captured.01EfReturns the <code>Place</code> that is the target of this <code>Operand</code>, or \xe2\x80\xa6mPlace to drop0mThis place\xe2\x80\xa6DkReads as much as possible into the given buffer <code>ptr</code> from a \xe2\x80\xa6DjPrints a message, where the status will have <code>color</code> color, \xe2\x80\xa6CbExecutes <code>rustc --print &lt;VALUE&gt;</code>.0BbPrints a tree for each given root.AjSpecify the print request.CnPattern analysis sometimes wants to print patterns as part \xe2\x80\xa6CkExecute <code>f</code> then unroll any bindings it creates.DjRetrieves the type to which <code>vid</code> has been instantiated, if \xe2\x80\xa6Df<code>probe_kind</code> is only called when proof tree building is \xe2\x80\xa6B`Test if this latch has been set.3AnUtilities for network proxies.DiRemove all <code>Def</code> nodes, and all branches of the layout for \xe2\x80\xa6DjNegates elements from <code>left</code> when the corresponding element \xe2\x80\xa6DhChecks a list of <code>PackageId</code>s to find 1 that matches this \xe2\x80\xa60ChAttempt to find the packages that match a dependency \xe2\x80\xa6EhQueries the <code>registry</code> to return a list of candidates for <code>dep</code>\xe2\x80\xa6AnQuery to find this dependency.CiAttempts to find the packages that match a dependency \xe2\x80\xa6CiExperimental types for the trait query interface. The \xe2\x80\xa6CgThe rustc Query System: Query Definitions and ModifiersCeThe current query job, if any. This is updated by \xe2\x80\xa60BhValues computed by queries that use MIR.3C`Look up SearchPathFile by (prefix, suffix) pair.4CcAdds a new node and its dependencies to this queue.BlThe queue of threads waiting for this mutex.AiDisables status messages.0000AkNo output printed to stdoutEhQuote a <code>TokenStream</code> into a <code>TokenStream</code>. This is the actual \xe2\x80\xa6Dg<code>quote!(..)</code> accepts arbitrary tokens and expands into a \xe2\x80\xa6BkWhich radix the literal was represented in.DmConvenience method to create the <code>&lt;lhs&gt;..&lt;rhs&gt;</code> or \xe2\x80\xa6BoThe range covered by this element; never empty.0DdFor this SCC, the range of <code>all_successors</code> where its \xe2\x80\xa6BbThe range of bits for a given row.CkThe range in the markdown that the code block occupies. \xe2\x80\xa6BiThe location of the intended replacement.0ClSpan of the parent data to be replaced, inclusive of the \xe2\x80\xa6EcIndicates that while trying to normalize <code>key</code>, <code>key</code> was \xe2\x80\xa60CmThis makes it easier to write regex replacements that are \xe2\x80\xa6Ef<code>git reset --hard</code> to the given <code>obj</code> for the <code>repo</code>.EhSimilar to <code>reset()</code>. This roughly performs <code>git reset --hard</code> \xe2\x80\xa6CfReset the current color settings to their original \xe2\x80\xa6BdGet whether reset is enabled or not.CjLogic used to track retrying this download if it\xe2\x80\x99s a \xe2\x80\xa6BkUtilities for retrying a network operation.1C`Helper to retry a function <code>n</code> times.ChA pool of addresses we can reuse for future allocations.DeThe root units of <code>unit_graph</code> (units requested on the \xe2\x80\xa60CnThe root targets requested by the user on the command line \xe2\x80\xa6AaRoute the requestDkDistinguishes between <code>unsafe { ... }</code> and <code>{ ... }</code>.0BfGets a path to the compiler specified.EhCreates a unit of work invoking <code>rustc</code> for building the <code>unit</code>\xe2\x80\xa6BlInformation about <code>rustc</code> itself.CoInformation of the <code>rustc</code> this build task will use.1BoHash of the version of <code>rustc</code> used.DhOutput of <code>rustc -V</code>. None if unknown (when loading from v1).BjPath to the <code>rustc</code> executable.DjConstruct a new <code>rustc</code> invocation. This will automatically \xe2\x80\xa6Be<code>LocalDefId</code> of the scope.0ClThe source scope, keeping track of which bindings can be \xe2\x80\xa6ClThe scope for this statement; may be used as lifetime of \xe2\x80\xa6ClManaging the scope stack. The scopes are tied to lexical \xe2\x80\xa6DhMethods for custom fork-join scopes, created by the <code>scope()</code>DjCreates a \xe2\x80\x9cfork-join\xe2\x80\x9d scope <code>s</code> and invokes the closure \xe2\x80\xa60CjCreates a scope that executes within this thread-pool. \xe2\x80\xa6BeFirst time setup of a dev environmentBfThe allocated box to fit the text intoCjGets a reference to the shell, e.g., for writing error \xe2\x80\xa6CdInformation about how to write messages to the shellDjWhether the <code>rendered</code> field of rustc diagnostics are using \xe2\x80\xa60CfSets the short version of the argument without the \xe2\x80\xa6ClFor unstable features: the version the feature was added \xe2\x80\xa6BkRust release which stabilized this feature.0DeUsually a version number when this <code>Item</code> first became \xe2\x80\xa6CmIf true, the size is exact, otherwise it\xe2\x80\x99s only a lower \xe2\x80\xa60CnUtility for tracking network requests that will be retried \xe2\x80\xa6AoSleep for the desired duration.CjCode that decides when workers should go to sleep. See \xe2\x80\xa6BhSlice this slice by <code>slicer</code>.AgSlots to store metrics.CmPerforms region inference and report errors if we see any \xe2\x80\xa6ChCode to solve constraints and write out the results. \xe2\x80\xa6CfThe next-generation trait solver, currently still WIP.AmNumber of spaces left on lineCdReturns the <code>Span</code>s in <code>self</code>.ClPuts the task into the Rayon threadpool\xe2\x80\x99s job queue in \xe2\x80\xa6DkSpawn a thread with the <code>ThreadBuilder</code> parameters, and then \xe2\x80\xa6DjSpawns a job into the fork-join scope <code>self</code>. This job will \xe2\x80\xa62CnSpawns an asynchronous task in this thread-pool. This task \xe2\x80\xa6BgPackages that are supposed to be built.DgLike <code>slice::split</code> but is optimized by <code>memchr</code>.DkThe index in <code>TyAlias.generics.where_clause.predicates</code> that \xe2\x80\xa6CgDivides the inline const args into their respective \xe2\x80\xa6CjPartition a range of integers into disjoint subranges. \xe2\x80\xa6CkThis computes constructor splitting for variable-length \xe2\x80\xa6CjThis analyzes a column of constructors to 1/ determine \xe2\x80\xa6CnDivides the closure args into their respective components. \xe2\x80\xa6CdDivides the coroutine args into their respective \xe2\x80\xa6DhA stack of <code>Step</code>s to run before we can run this builder. \xe2\x80\xa6CnMutable state of the visit: the tags left to handle. Every \xe2\x80\xa6AgThe virtual call stack.BdStack used when doing (reverse) DFS.11CmManages the low-level pushing and popping of stack frames \xe2\x80\xa6BdBorrow the current thread\xe2\x80\x99s stack.0CbThe stack of things yet to be completely expanded.BlThe stack of goals currently being computed.Cistage to build (indicates compiler to use/test, e.g., \xe2\x80\xa60ClClean a specific stage without touching other artifacts. \xe2\x80\xa60BcThe number of the stage under test.AoReturns the value of the stamp.CkExecute a command and return its output. Note: Ideally, \xe2\x80\xa6AcWhen Cargo started.CkThe time when this unit started as an offset in seconds \xe2\x80\xa6DaStarts to download the package for the <code>id</code> specified.AnTime when downloading started.BgThe moment we started this transfer at.DiThe lower bound of the range, or <code>None</code> for ranges such as \xe2\x80\xa6BiA pointer to the start of the free space.CcThe current byte index into <code>init_mask</code>.0CjCreates an empty span pointing to directly before this \xe2\x80\xa6BgIndex of the first byte in the templateChSee <code>DiagCtxt::stash_diagnostic</code> for details.AhThe state of the locker.AdAST pretty printing.CfWhether the lazy init mask is fully initialized or \xe2\x80\xa6BkThe state variable that is updated. The \xe2\x80\xa6CjState discriminant used when suspending or resuming at \xe2\x80\xa6CmSets a value that will be written to stdin of the process \xe2\x80\xa6AgData to write to stdin.10CjConfiguration for the child process\xe2\x80\x99s standard input \xe2\x80\xa600000000000000000BhTry to steal a single job and return it.CjWhat happened inside of this probe in chronological order.0CnThe valid autoderef steps that could be found by following \xe2\x80\xa6101001111001AlThe statements in the block.AfStatements in a block.AlThe statements in the blocK.BgStores a value into the atomic integer.CeAllow to specify whether binaries should be stripped.CnDenotes if the attribute decorates the following construct \xe2\x80\xa6BiVisual representation of this suggestion.1CmTidy check to enforce various stylistic guidelines on the \xe2\x80\xa6oThe test suite.DiDefines the <code>TermsContext</code> basically houses an arena where \xe2\x80\xa6CfAn array of all tests created during this compilation.0ChPeeks the third symbol from the input stream without \xe2\x80\xa6DhConverts the <code>ScalarInt</code> to i8. Panics if the size of the \xe2\x80\xa6DjConverts the scalar to produce an <code>i8</code>. Fails if the scalar \xe2\x80\xa6DgConvert this to an <code>OpTy</code>. This might be an irreversible \xe2\x80\xa60CmAttempt reparsing the pattern as a type. This is intended \xe2\x80\xa6DaAttempts to reparse as <code>Ty</code> (for diagnostic purposes).FbConverts the <code>ScalarInt</code> to <code>u8</code>. Panics if the <code>size</code> of the \xe2\x80\xa6DiConverts the scalar to produce a <code>u8</code>. Fails if the scalar \xe2\x80\xa6CgThe token for this download, used as the key of the \xe2\x80\xa6CmCredential provider that uses plaintext tokens in Cargo\xe2\x80\x99\xe2\x80\xa61CkToken passed on the command line via \xe2\x80\x93token or from stdinAdSets the token valueBiThe authorization token for the registry.CmOptional authorization token. If None, commands requiring \xe2\x80\xa6AbThe current token.0Ahtotal number of warningsCiStatistics updated from the progress callback in libcurl.BmThe total size of the argument, which can be:CkThis is the heart of the liveness computation. For each \xe2\x80\xa6BgReturns a string tuple for this target.BbType of parameter being converted.CfReturns a documentation-level item type from the item.BcThe type referred to by this alias.AgThe type of the static.AiThe type of the constant.0CkInside a trait declaration, this is the default for the \xe2\x80\xa6BbThe type of the contained element.DcThe base type, e.g. the <code>u32</code> in <code>u32 is 1..</code>AhThe type of the pointee.EfThe type of the pointee, e.g. the <code>i32</code> in <code>&amp;&#39;a mut i32</code>BdThe type that\xe2\x80\x99s being constrained.BeThe type of the constant as declared.C`Common types, pre-interned for your convenience.0EdRun <code>uname</code>. This assumes that <code>uname</code> is available on the \xe2\x80\xa6BoUnion-find implementation. The main type is \xe2\x80\xa6BcUnify two types (using sub or lub).CfWhat is the variance that satisfies the two variances?EgMerges the set containing <code>a</code> and the set containing <code>b</code> into \xe2\x80\xa6D`The bitwise or (<code>|</code>) of the bits in two flags values.0000000ClUnions two keys without the possibility of failure; only \xe2\x80\xa61FdSets <code>self = self | other</code> and returns <code>true</code> if <code>self</code> changed \xe2\x80\xa600222222222GaSets <code>dst</code> to the union of <code>dst</code> and <code>src</code>, returns true if <code>dst</code> \xe2\x80\xa633333333CeMerges two sorted sequences into one sorted sequence.BkCompute the union of two <code>Dfa</code>s.AnUnions two edge sets together.66BdResult when lhs is NaN or rhs is NaNCmThis module contains collection types that don\xe2\x80\x99t expose \xe2\x80\xa6EaReturns a <code>Span</code> from the beginning of <code>self</code> until the \xe2\x80\xa6BaInferring borrow kinds for upvarsBoThe query and related span that uses the cycle.0CmThis module contains integral components of the build and \xe2\x80\xa6CjUtilities for handling git repositories, mainly around \xe2\x80\xa6CgIf the algorithm uses fewer than 32 bytes, then the \xe2\x80\xa6DoDeserialization of a <code>Value&lt;T&gt;</code> type which tracks where it \xe2\x80\xa6AmReturns the underlying value.CmEven for unions, we need to use the correct registers for \xe2\x80\xa6EhThis stores a pointer to a <code>GlobalCtxt</code>. This is set to <code>Some</code> \xe2\x80\xa60CeWhere the data for this user variable is to be found.AdThe value to return.0C`The primitive type used to represent this value.DkUnions never have niches, so there is no <code>valid_range</code>. Even \xe2\x80\xa633CiPacks together a number of counters. The counters are \xe2\x80\xa6G`Something like <code>&quot;&amp;str&quot;</code> or <code>&quot;alloc::string::String&quot;</code>, in which \xe2\x80\xa6ClThe value of the evaluated expression for this constant, \xe2\x80\xa6ChThe numerical value of the discriminant. Stored as a \xe2\x80\xa6CmInside a trait declaration, this is the default value for \xe2\x80\xa6DeCalls the corresponding <code>visit_*</code> function on the visitor.CmAST walker. Each overridden visit method has full control \xe2\x80\xa6oThe MIR VisitorAoThe rustc_public\xe2\x80\x99s IR VisitorCnA visiting traversal mechanism for complex data structures \xe2\x80\xa6ClThe width. E.g. <code>{:5}</code> or <code>{:width$}</code>.CjA user-provided, batching width. If not given, we will \xe2\x80\xa6AlMinimum width of the output.CnThe encoded size of the elements of a table is selected at \xe2\x80\xa6000CdThe string width requested for the resulting format.BeGets a slice of the underlying words.CaA compressed representation of <code>RWU</code>s.AgCreates the stamp file.AoWrite changes back to the file.AfWrites a file to disk.AnPrint the current indentation.ClDetect data-races for an unsynchronized write operation. \xe2\x80\xa6CjThe vector clock timestamp and the thread that did the \xe2\x80\xa6CnA write call adds the 8-byte integer value supplied in its \xe2\x80\xa6EgWrites as much as possible from the given buffer <code>ptr</code>. <code>len</code> \xe2\x80\xa6DhA wrapper around <code>std::fs::write</code> which includes the file \xe2\x80\xa60DmWrite out a string version of the <code>FluentValue</code> to <code>W</code>.DdMirrors <code>Variance::xform</code> - used to \xe2\x80\x98combine\xe2\x80\x99 the \xe2\x80\xa6Dg<code>a.xform(b)</code> combines the variance of a context with the \xe2\x80\xa6101001CgMapping for ExternAbi to CanonAbi according to a Target0AmThis is not a git repository.CnThe tracked value is uninitialized or was moved out of and \xe2\x80\xa60Clrepresents: a unique pointer; allows: child reads, child \xe2\x80\xa6CeReverse Mode, Compute derivatives for this scalar \xe2\x80\xa6CkThis is the state during which the session directory is \xe2\x80\xa6B`We added <code>RegionVid</code>.AbBorrow expression.FkA referencing operation (<code>&amp;a</code>, <code>&amp;mut a</code>, <code>&amp;raw const a</code> or \xe2\x80\xa6DoA referencing operation (i.e., <code>&amp;a</code> or <code>&amp;mut a</code>).AbForce color outputAn<code>Type: const Trait</code>0CkDefinitely known to diverge and therefore not reach the \xe2\x80\xa6ClForces the machine code generator to always preserve the \xe2\x80\xa6CjAlways use color, whether it is a piped or terminal output0BePlace leading pipes on all match armsAg<code>&amp;&amp;</code>ClEither transmutation is allowed, we have an error, or we \xe2\x80\xa6CfWhen encountered, store the associated value(s) in \xe2\x80\xa6EeRepresents a job stored in an <code>Arc</code> \xe2\x80\x93 like <code>HeapJob</code>, but mayClInformation about the ABI of a function\xe2\x80\x99s argument, or \xe2\x80\xa6CmInformation about how to pass an argument to, or return a \xe2\x80\xa6DiThe coercion was manually written by the user with an <code>as</code> \xe2\x80\xa60DgAn argument to one of the <code>asm!</code> macros. The argument is \xe2\x80\xa6DkEvaluates the operand, which must have type <code>bool</code>. If it is \xe2\x80\xa60n<code>=</code>EfAn assignment (<code>a = foo()</code>). The <code>Span</code> argument is the span \xe2\x80\xa6BmAn assignment (e.g., <code>a = foo()</code>).ClAssign statements roughly correspond to an assignment in \xe2\x80\xa60BfAn assignment: <code>lhs = rhs</code>.CmDenotes a call to the intrinsic function <code>assume</code>.0CbA tail call return, with the value to be returned.CeA <code>become</code>, with the value to be returned.BaA <code>become</code> expression.CfA binary string (e.g., <code>b&quot;abc&quot;</code>).Aa<code>{:b}</code>lA binary op.DbA binary operation (e.g., <code>a + b</code>, <code>a * b</code>).0AmLiteral starts with \xe2\x80\x9c0b\xe2\x80\x9d.BkA <em>non-overloaded</em> binary operation.CfDeclares lifetimes, and each can be early-bound or \xe2\x80\xa6ClBinder is a binder for higher-ranked lifetimes or types. \xe2\x80\xa6CmA binder represents a possibly generic type and its bound \xe2\x80\xa6111BmThe <code>&amp;</code> operator (bitwise and)BbThe <code>bitand</code> lang item.111BiThe <code>^</code> operator (bitwise xor)BbThe <code>bitxor</code> lang item.111AkTracking pointer provenance0ClA \xe2\x80\x9cboring\xe2\x80\x9d constraint (caused by the given location) \xe2\x80\xa6BnA local without anything interesting about it.1EcTake the address and produce either a <code>&amp;</code> or <code>*</code> pointer.oMutable borrow.BeA borrow, e.g. <code>&amp;arg</code>.AjBounds on type parameters.DaThe macro statement had braces (e.g., <code>foo! { ... }</code>).nFrom a branch.00ClThe fields of any kind of aggregate. Structs, tuples and \xe2\x80\xa60CnAssociates a branch region with separate counters for true \xe2\x80\xa6CfEmit control-flow protection for branches (enables \xe2\x80\xa6ChAlso instrument branch points (includes block coverage).CjHow to break. Described in more detail in the module docs.CcA trait defining types that are used to emulate \xe2\x80\xa6DfDo not update manually - use <code>./x.py test tidy --bless</code> \xe2\x80\xa6DlCreate the <code>AttributeKind</code> given attribute\xe2\x80\x99s <code>Span</code>.CgTrack the position of viewable characters in our bufferAnThe callee of a function call.CjRepresents <code>cargo::rustc-cdylib-link-arg=FLAG</code>.0Aa<code>{:^}</code>BlEmit Control Flow Guard metadata and checks.nProve a clauseClA subset of predicates which can be assumed by the trait \xe2\x80\xa6101111AgA client of a jobserverCfRun Clippy (uses rustup/cargo-installed clippy binary)0BcInclusive at the beginning and end.Bj<code>T1</code> coerced to <code>T2</code>00000CaImproper orphan check for backward compatibility.00BgUnification of two or more identifiers.CkGlobal configuration for the entire build and/or bootstrap.0BdLoaded from cargo\xe2\x80\x99s config system.DcConfiguration for <code>compiletest</code> <em>per invocation</em>.AjThe compiler configurationCdA regular string, like <code>&quot;foo&quot;</code>.CjLine and byte-column coordinates of a source code span \xe2\x80\xa6EhSome <code>ResultsCursor</code>s want to own an <code>Analysis</code>, and some want \xe2\x80\xa6DkThe function passed to <code>cs_fold</code> is called repeatedly with a \xe2\x80\xa6DiEncodes if a <code>DefKind::Ctor</code> is the constructor of an enum \xe2\x80\xa6BgPeekable iterator over a char sequence.0CjAll other commands, which allow any valid custom named \xe2\x80\xa6ChOnly the specified groupings should have their order \xe2\x80\xa6CfAn ABI that rustc does not know how to call or define.CjAn ABI that rustc does not know how to call or define. \xe2\x80\xa610CkCustom function called when a duplicate attribute is found.A`A custom reason.ClA custom (free-form) fluent-translated error, created by \xe2\x80\xa60CmCustom sources for explicit parser calls from plugins and \xe2\x80\xa6CfUnix-like linker for Apple targets (both naked and \xe2\x80\xa6CnA unique identifier that we can use to lookup a definition \xe2\x80\xa6AhDeinitializes the place.AnAppears on <code>Deinit</code>1AkA token-based derive macro.BjA derive macro <code>#[derive(Foo)]</code>AbA derive macro \xe2\x80\xa6CjThe tag directly stores the discriminant, but possibly \xe2\x80\xa6CgItem is directly accessible, without help of reexports.B`Call a known <code>FnDef</code>.CmWe know the enum does no niche optimizations and can thus \xe2\x80\xa6AkPass the argument directly.40Blthis ABI is exactly mapped for this platform0ChWhether the obligation is user-specified rather than \xe2\x80\xa6n<code>$</code>0CmThe type that holds the dataflow state at any given point \xe2\x80\xa60o<code>..</code>DkFor terminators that have two successors, like <code>assert</code> with \xe2\x80\xa60CfType of dynamic symbols (for <code>dlsym</code> et al)0CeSets up or displays the LSP config for one of the \xe2\x80\xa6CeUEFI ABI, usually an alias of C, but sometimes an \xe2\x80\xa60CeReplace all anonymous lifetimes by provided lifetime.B`Enable the llvm offload pipelineB`Enable the autodiff opt pipelineBnEndianness of the target, which must match \xe2\x80\xa6CnThis kind of label uses the graphviz label escString type: \xe2\x80\xa6DaA literal <code>%%</code> escape, with its start and end indices.CnWrapper struct which will emit the HTML-escaped version of \xe2\x80\xa6DfOnly used for lints. Requires a <code>LintExpectationId</code> for \xe2\x80\xa6DgThe <code>expect</code> level will suppress the lint message but in \xe2\x80\xa60CfA unique ID associated with a macro invocation and \xe2\x80\xa6Db<code>extern</code> qualifier on a function item or function type.DfProvided by <code>extern crate foo</code> or as part of the extern \xe2\x80\xa6BmCrate is loaded by <code>extern crate</code>.BbA constant from a different crate.DiValue which represents the <code>FiniteBitSet</code> having every bit \xe2\x80\xa6CgCompilation failed, either due to normal errors or ICE.BePerforms fat LTO on the given module.CgA filter to control which suggestion should be applied.C`Encoded value. DO NOT CONSTRUCT BY HAND; use \xe2\x80\xa6CkA call to <code>Fn(..)::call(..)</code>, desugared from \xe2\x80\xa6Acwhen a fn is called10DbThe <code>FnCtxt</code> stores type-checking context needed to \xe2\x80\xa6CeA signature (not the body) of a function declaration.CfRepresents the header (not the body) of a function \xe2\x80\xa6BcThe <code>fn_once</code> lang item.CjThe footer of an asymmetric token as describe in RFC 3231.AlOfficially, the semantics of0Ec<code>Forbid</code> is equivalent to the <code>deny</code> level but can\xe2\x80\x99t be \xe2\x80\xa60CkAny attempt to add new dependencies will cause a panic. \xe2\x80\xa600kRun rustfmt0DcAnything else - <code>panic!(&quot;error {}: {}&quot;, a, b)</code>BfThe output formats supported by mdman.ChA single <code>printf</code>-style formatting directive.CjA formatted output substitution with its internal byte \xe2\x80\xa6ChA normal format string as per <code>format_args!</code>.BeFormat files and their child modules.ClA free type alias that actually checks its trait bounds. \xe2\x80\xa60000BbThe <code>freeze</code> lang item.Clrepresents: a shared pointer; allows: all read accesses; \xe2\x80\xa6AiAn owned immutable value.AoWe are awaiting a normal futureBhThe <code>future_trait</code> lang item.CbDeprecated in the future (\xe2\x80\x9cto be determined\xe2\x80\x9d).0BfOptions to use for garbage collection.CkGlobals copied from <code>tcx</code>. This memory may leak.0DlA <strong>global</strong> region is one that can be named from anywhere. \xe2\x80\xa6CdMiri representation of a Windows <code>HANDLE</code>CmA set that has a \xe2\x80\x9ctop\xe2\x80\x9d element, which is greater than \xe2\x80\xa60DeA <code>u64</code> but encoded with a fixed size; for hashes this \xe2\x80\xa6DfHashes computed by <code>TyCtxt::hash_owner_nodes</code> if necessary.B`Arguments to <code>--help</code>CiHide the symbol outside of the defining DSO even when \xe2\x80\xa6CjFake extra constructor for variants that should not be \xe2\x80\xa6DkVariant behind an unstable gate or with the <code>#[doc(hidden)]</code> \xe2\x80\xa61BoIndicates whether the type is <code>Box</code>.CfUsed to detect the incorrect use of expressions in \xe2\x80\xa6CmScope of the condition and then block of an if expression \xe2\x80\xa6CkIgnore the failure, the command can fail in an expected \xe2\x80\xa6AaIgnore duplicatesChIgnore a meta-variable for repetition without expansion.BaRepresents <code>#[ignore]</code>0CgNew dependencies are ignored. This is also used for \xe2\x80\xa6AdIgnore the argument.11AlThis is not a real lifetime.1Ee<code>Ignore(false)</code> means that an <code>ignore-tidy-*</code> directive has \xe2\x80\xa6Ca<code>fn shim(&amp;self) { inner(*self )}</code>.BfThe binding is part of a use statementClAll imports are unique and allocated on a same arena, so \xe2\x80\xa6DiRepresents <code>#[inline]</code> and <code>#[rustc_force_inline]</code>.0BcRuns Enzyme\xe2\x80\x99s aggressive inliningCmIt is harmless to use this option even on targets that do \xe2\x80\xa6CcAn integral type variable (<code>{integer}</code>).0000HoAn <strong>int</strong>egral (<code>u32</code>, <code>i32</code>, <code>usize</code>, etc.) type <strong>v</strong>ariable <strong>ID</strong>.0000BfIs the trait definition an auto trait?0Dc<code>#[xxx] pub async/const/extern &quot;Abi&quot; fn foo()</code>DhEffectively a Job trait object. Each JobRef <strong>must</strong> be \xe2\x80\xa6CnThe thread was already joined by some thread and cannot be \xe2\x80\xa6Ab<code>&lt;-</code>CkLinker, dlltool, and their necessary libraries (e.g. on \xe2\x80\xa6D`The value representing a locked state for the <code>Cell</code>.CbContains the paths of all target output locations.EgError produced by a <code>layout_of</code> call, while computing <code>FnAbi</code> \xe2\x80\xa6BlAn error occurred during layout computation.0DfLegacy version, using datalog and the <code>polonius-engine</code> \xe2\x80\xa6eSliceDfLinker abstraction used by <code>back::link</code> to build up the \xe2\x80\xa6BhIdentifies a lint known to the compiler.0BjA <code>llvm-ar</code> invocation builder.BjA <code>llvm-as</code> invocation builder.BjA <code>llvm-nm</code> invocation builder.DhModule with inlined definition <code>mod foo { ... }</code>, or with \xe2\x80\xa6BoFound and loaded an existing session directory.C`A source that is locked and not going to change.CeThe exact locked version and the original version \xe2\x80\xa60CeA locked revision of the actual Git commit object ID.DbThe different settings that the <code>-C lto</code> flag can have.AbTarget line width.CoMapping of <code>(name, section)</code> of a man page to a URL.CcA Marker adds the given mark to the syntax context.BbRepresents <code>#[marker]</code>.0CnSpecializing on this trait is allowed because it doesn\xe2\x80\x99t \xe2\x80\xa6CjA 2D matrix. Represents a list of pattern-tuples under \xe2\x80\xa6BmA single tokentree within a Markdown documentEgIndicates that <code>[workspace]</code> was present and the <code>root</code> field \xe2\x80\xa60B`A local that requires an alloca.AnThe alloc ID points to memory.0An<code>fn foo(&amp;self)</code>AmMethod has something illegal.B`dispatchable associated function1111Ao<code>-Zunpretty=mir-cfg</code>ChBuilder for configuring a file to copy into a container.ClAll modules are unique and allocated on a same arena, so \xe2\x80\xa6oRegular module.AkWe passed through a module.CmThis module is used to store stuff from Rust\xe2\x80\x99s AST in a \xe2\x80\xa6DlA module declaration, e.g. <code>mod foo;</code> or <code>mod foo {}</code>.DkA module declaration, e.g. <code>mod foo;</code> or <code>mod foo {}</code>0BlRepresents module with its inner attributes.BnUse one <code>use</code> statement per module.Ca<code>fn shim(*mut self) { inner(*self )}</code>.Ce<code>fn shim(&amp;mut self) { inner(*self )}</code>.Da<code>\\r\\n</code> in Windows, <code>\\n</code> on other platforms.0An<code>use prefix::{...}</code>B`There are no leaf fields at all.0DcIndicates that we should <em>not</em> jump to the return/unwind \xe2\x80\xa60CkLint doesn\xe2\x80\x99t exist. Potentially contains a suggestion \xe2\x80\xa60AkOutside of a metadata node.CgThe lint refers to a tool that has not been registered.0AgIdentifies an AST node.AhNot a special file type.0CjA dependency linked to the artifact produced by this unit.C`A source that is not locked nor a path-override.Bb<code>format_args(\xe2\x80\xa6, arg)</code>Ah<code>Type: Trait</code>AcA normal attribute.DcA normal method call of the form <code>receiver.foo(a, b, c)</code>DgIn normal mode, a <code>R1: R2</code> constraint results in an edge \xe2\x80\xa6ClIndicates that no special handling should be done - we\xe2\x80\x99\xe2\x80\xa60CnNormal, builtin attribute that is consumed by the compiler \xe2\x80\xa6CoNormal attribute that does not need <code>#[unsafe(...)]</code>10AnA <code>match _ { .. }</code>.0BdAny non-concatenating binder scopes.BmNo link name, so just the name of the symbol.BgNormal function call, no special source0BcNo restriction needs to be applied.An<code>-Zunpretty=normal</code>Ak<code>-Zunpretty=hir</code>;hDefault.0Cm<code>{1}</code> or <code>{:1$}</code> or <code>{:.1$}</code>CiRepresents a JSON number, whether integer or floating \xe2\x80\xa6CkA numeric chunk in the version sort. Keeps track of the \xe2\x80\xa6EfAn alias for <code>macro</code> and <code>debuginfo</code>. This ensures all paths \xe2\x80\xa6CmA built-in impl for trait objects. The index is only used \xe2\x80\xa6000000AiRepresents a JSON object.1111BbBounds specified on an object type2BdThe <code>ptr.offset</code> operator0CkWritten to last line of file to specify the location of \xe2\x80\xa6ChAbsolute path to the file on disk to add to the archive.ChRemap lifetimes that appear in opaque types to fresh \xe2\x80\xa6DkAn opaque type (usually from <code>impl Trait</code> in type aliases or \xe2\x80\xa60DjUsed to represent values we know nothing about. The <code>usize</code> \xe2\x80\xa6CmConstants that must not be matched structurally. They are \xe2\x80\xa60CjA type that provides internal information but that can \xe2\x80\xa6AaSome opaque hash.ChIdentifier produced by an opaque expansion is always \xe2\x80\xa6555jLLVMOpcodeAnOpt out of packages passed in.0BbThe <code>Option</code> lang item.BfResult type of <code>Step::run</code>.BkFor more information, see the output of \xe2\x80\xa6CgThe user is attempting to modify the owners of a crate.AhThe full list of passes.CjSplit debug-information can be found in a \xe2\x80\x9cpacked\xe2\x80\x9d \xe2\x80\xa6CaWhether enclosing parentheses are present or not.AkAn actually parsed summary.Bc<code>(extracted, remaining)</code>AlA parsed built-in attribute.Bf<code>cargo tree</code> format parser.CjThe parser structure for interpreting the input format \xe2\x80\xa6AnA parser for Rust source code.DmThis access is caused by a <code>match</code> or <code>if let</code> pattern.EgSpecifies whether to resolve a path in the <code>TypeNS</code>, <code>ValueNS</code>\xe2\x80\xa6E`<code>&amp;&#39;lt pin const self</code>, <code>&amp;&#39;lt pin mut self</code>AaPretty print modeAbmatch expr { \xe2\x80\xa6 }Abyield expr { \xe2\x80\xa6 }Ad<code>struct@</code>nVerbose outputCnA primitive type such as <code>i32</code> or <code>str</code>.ClNot represented directly in the AST; referred to by name \xe2\x80\xa611111111AdProper orphan check.00CkThe query is known to be true, presuming that you apply the00BoVisible everywhere (including in other crates).00CgExplicitly public visibility set with <code>pub</code>.CnA \xe2\x80\x9cqualif\xe2\x80\x9d(-ication) is a way to look for something \xe2\x80\x9c\xe2\x80\xa6Ab<code>-&gt;</code>DlA doc fragment created from a \xe2\x80\x9craw\xe2\x80\x9d <code>#[doc=&quot;&quot;]</code> \xe2\x80\xa6nA raw pointer.C`Raw pointer, stored as C\xe2\x80\x99s <code>void*</code>.DfA raw pointer. Written as <code>*mut T</code> or <code>*const T</code>0AfConverts from T to *T.1CnCreates a raw pointer with the indicated mutability to the \xe2\x80\xa6CkConstruct a raw pointer from the data pointer and metadata.10CiA raw pointer aggregate built from a thin pointer and \xe2\x80\xa6444Ji<code>r&quot;abc&quot;</code>, <code>r#&quot;abc&quot;#</code>, <code>r####&quot;ab&quot;###&quot;c&quot;####</code>, <code>r#&quot;a</code>. <code>None</code> indicatesCmAnswers \xe2\x80\x9cwhy wasn\xe2\x80\x99t the source type transmutable into \xe2\x80\xa6BkRepresents a <code>fn x(&amp;self);</code>.BoRepresents a <code>fn x(&amp;mut self);</code>.ElWe get passed <code>self: Self</code> and call the target with <code>&amp;mut self</code>\xe2\x80\xa6Db<code>&amp;&#39;lt self</code>, <code>&amp;&#39;lt mut self</code>CjSubject is a free region from the closure. Indicates a \xe2\x80\xa6BeRegion variable <code>&#39;?R</code>.0D`Use this rather than <code>RegionKind</code>, whenever possible.1011111CjReject an op requiring communication with the host. By \xe2\x80\xa60CiUse a remote URL to https://doc.rust-lang.org/ (default).BeRemote URL root of the external crateA`Remove progress.CiAlso an array, but with only one constant, repeated N \xe2\x80\xa6Al<code>vec![elem; len]</code>CgAn array literal constructed from one repeated element.0CkCreates an array where each element is the value of the \xe2\x80\xa60CkAn array literal constructed from one repeated element, \xe2\x80\xa6CmThis corresponds to a <code>[value; count]</code> expression.22Bbe.g., <code>$($foo: expr),*</code>CeOnly progress report, no message and no text progressEgThe result type of the <code>visit_*</code> methods. Can be either <code>()</code>, \xe2\x80\xa60BlImplicit or explicit return from a function.A`Everything else.AjReturns from the function.0BaA <code>return</code> expression.BiEmit control-flow protection for returns.CmThe associated type comes from an RPITIT. It has no name, \xe2\x80\xa600AeA temporary variable.0CdThe various kinds of rvalues that can appear in MIR.0DhSomething that generates a new value at runtime, like <code>x + y</code>B`Blocked on a reader-writer lock.AjThe read-write lock state.1CmLatch is not set, owning thread is going to sleep on this \xe2\x80\xa6A`Safety of items.DkRun <code>profile_local samply</code> This executes the compiler on the \xe2\x80\xa6CfInformation about one scalar component of a Rust type.DoA single scalar value (must have <em>initialized</em> <code>Scalar</code> ABI).0CiUsed for types with <code>layout::abi::Scalar</code> ABI.DkA <code>Scalar</code> represents an immediate, primitive value existing \xe2\x80\xa601113EeAn executable (non-binary) script file (like a <code>.py</code> or <code>.sh</code>).CnIndicates that suggestions cannot be added or removed from \xe2\x80\xa6C`A wrapper for values that should not be printed.0CjFrom an \xe2\x80\x9cimpl\xe2\x80\x9d (or a \xe2\x80\x9cpseudo-impl\xe2\x80\x9d returned by \xe2\x80\xa6AkThe <code>Self</code> type.ChThere was a semver conflict, for example we tried to \xe2\x80\xa6AeA sequence separator.DfA <code>Shared</code> lock allows multiple cargos to read from the \xe2\x80\xa6BhData must be immutable and is aliasable.000Aie.g. <code>42_i32</code>.CkReport, but do not exit with failure status for deny/forbidCjIn the simple format, only a version is specified, eg. \xe2\x80\xa6Cl<code>use prefix</code> or <code>use prefix as rename</code>CiSingle enum variants, structs/tuples, unions, and all \xe2\x80\xa6CoUse in combination with <code>SingleAttributeParser</code>. \xe2\x80\xa6ClAn outlives constraint that only has to hold at a single \xe2\x80\xa6CfThe basic case: a field expression for one or more \xe2\x80\xa6EdOne import, e.g., <code>use foo::bar</code> or <code>use foo::bar as baz</code>. \xe2\x80\xa6DiFor terminators that have a single successor, like <code>goto</code>, \xe2\x80\xa60c1e26CmSections which do not require relocation are written into \xe2\x80\xa6BhReturns the size of a value of that type0BiReturns the size of a value of that type.0CgDefined in the <code>[source]</code> replacement table.BaPrimary location of a dependency.CfAn abstraction of different sources of Cargo packages.C`The primal function which we will differentiate.DkOptions that print the source code, i.e. <code>-Zunpretty=normal</code> \xe2\x80\xa6Af<code>#[stable]</code>0CgThe 1.0 rules (either types fail to unify, or where \xe2\x80\xa6DiThe <code>HirId</code> that the lint expectation is attached to. This \xe2\x80\xa61CdThis target feature is stable, it can be used in \xe2\x80\xa622AkExtra per-allocation state.0CaMay contain self-references, <code>!Unpin</code>.BdA static item (<code>static</code>).CdA foreign static item (<code>static FOO: u8</code>).2Cm\xe2\x80\x99a: \xe2\x80\x99static i.e. \xe2\x80\x99a = \xe2\x80\x99static and the user should \xe2\x80\xa6BdThe <code>&#39;static</code> region.DjThe <code>mutability</code> of the static, ignoring the type which may \xe2\x80\xa6BcValidation of a <code>static</code>01Bb<code>&#39;static</code> lifetime.7EmUser wrote <code>&#39;static</code> or nothing (which gets converted to <code>&#39;_</code>).BjInitializer of a <code>static</code> item.CaA <code>static</code> or <code>static mut</code>.AkA <code>static</code> item.CdA foreign static item (<code>static ext: u8</code>).<<<ClThe alloc ID points to a \xe2\x80\x9clazy\xe2\x80\x9d static variable that \xe2\x80\xa6CkThe value is known to always be initialized at the drop \xe2\x80\xa61EbStatic library (e.g. <code>libfoo.a</code> on Linux or <code>foo.lib</code> on \xe2\x80\xa6??BbA <code>static</code> declaration.0BgA declaration of a <code>static</code>.CkThe child process with the specified pid was stopped by \xe2\x80\xa6AlWrites the output to stdout.0DgSimilar to <code>MetaItemLit</code>, but restricted to string literals.A`A string literalCjColor-enabled stdio, with information on whether color \xe2\x80\xa6DkWe error on <code>with_exposed_provenance</code>, ensuring no precision \xe2\x80\xa60CnJust check for negative impls, not for \xe2\x80\x9cwhere clause not \xe2\x80\xa6000BbThe <code>String</code> lang item.AiRepresents a JSON string.CgOn LLVM, mark all generated LLVM functions with the \xe2\x80\xa6BmA struct or struct variant pattern (e.g., \xe2\x80\xa6AlA struct literal expression.oStruct variant.BjA struct definition (<code>struct</code>).ChA non-static method where <code>Self</code> is a struct.DkThis <code>DefKind::Ctor</code> is a synthesized constructor of a tuple \xe2\x80\xa6DiRefers to the struct itself, <code>DefKind::Ctor</code> refers to its \xe2\x80\xa66CcA struct or struct-like variant literal expression.AaA struct variant.DcA struct definition, e.g., <code>struct Foo&lt;A&gt; {x: A}</code>.BmRecords the index of the field being coerced.DkRefers to the struct itself, [<code>DefKind::Ctor</code>] refers to its \xe2\x80\xa60AcTuples and structs.DhThe type is a tuple or struct. <code>empty</code> tracks whether the \xe2\x80\xa610DbPaths in struct expressions and patterns <code>Path { .. }</code>.AfA <code>struct</code>.BbA <code>struct</code> declaration.0AlA variant with named fields.BbTest what enum variant a value is.BlUse String for now but we should replace it.AiAn interned UTF-8 string.CkCan be specified as <code>extern &quot;sysv64&quot;</code>.CjABI of the \xe2\x80\x9csystem\xe2\x80\x9d interface, e.g. the Win32 API, \xe2\x80\xa60CkCan be specified as <code>extern &quot;system&quot;</code>.AgTypical Rust libraries.CaPer-target configuration stored in the global \xe2\x80\xa6CnAttached to a unit to be compiled for a particular target. \xe2\x80\xa60CkInformation about a binary, a library, an example, etc. \xe2\x80\xa6CoTarget uses a <code>path</code> field for equality and hashing.DkEverything <code>rustc</code> knows about how to compile for a specific \xe2\x80\xa6AjInformation about a targetiA thread.CkConvert a softfloat type to its corresponding hostfloat \xe2\x80\xa6CkConvert a hostfloat type to its corresponding softfloat \xe2\x80\xa6DgAlways fallback to <code>()</code> (aka \xe2\x80\x9calways spontaneous decay\xe2\x80\x9d)AhSize of a DST is too big0CiThe central data structure of the compiler. It stores \xe2\x80\xa60CeThe various kinds of type recognized by the compiler.CfThe various kinds of types recognized by the compiler.CcDefines the kinds of types used by the type system.000AdA TypeId allocation.0BcThe <code>type_id</code> lang item.CkThe first pointer-sized segment of a type id. On 64 bit \xe2\x80\xa60G`The type namespace includes <code>struct</code>s, <code>enum</code>s, <code>union</code>s, <code>trait</code>\xe2\x80\xa6B`Something in the type namespace.DiThe canonical type is the result of <code>type_of(def_id)</code> with \xe2\x80\xa60BnCreated from performing a <code>TypeOp</code>.Cm\xe2\x80\x9cType ops\xe2\x80\x9d are used in NLL to perform some particular \xe2\x80\xa6oUnused for now.0Ah16-bit unsigned integer.Ah32-bit unsigned integer.Ah64-bit unsigned integer.Fdlibgcc/libunwind (e.g. on <code>windows-gnu</code>, <code>fuchsia</code>, <code>fortanix</code>, \xe2\x80\xa6CmA value of fully uninitialized memory. Can have arbitrary \xe2\x80\xa60AjTrue uninitialized memory.AmGrants unique mutable access.0Dh<code>unsafe</code> an item is explicitly marked as <code>unsafe</code>.CkUnsafe attribute that requires safety obligations to be \xe2\x80\xa60BbThe <code>unsize</code> lang item.EnUnsize a pointer/reference value, e.g., <code>&amp;[T; n]</code> to <code>&amp;[T]</code>. \xe2\x80\xa600nDo not use LLDCkA scalar or a scalar pair local that is neither defined \xe2\x80\xa6CnDescribes if unwinding is necessary and where to unwind to \xe2\x80\xa6BiThe user is attempting to unyank a crate.DmAn <code>Into</code>-like trait that takes <code>TyCtxt</code> to perform \xe2\x80\xa60000DgThere are three valid forms of the attribute: <code>#[used]</code>, \xe2\x80\xa60CiThe arm is useful. This additionally carries a set of \xe2\x80\xa60BlThe inferred type of a user type annotation.CdA vector clock for detecting data-races, this is \xe2\x80\xa6AdA vtable allocation.0nA trait objectClThis alloc ID points to a symbolic (not-reified) vtable. \xe2\x80\xa60BcThe <code>va_list</code> lang item.oA vacant entry.0BkVacant slot (no equivalent key in the map).1101Cnnon-dispatchable associated function that is excluded from \xe2\x80\xa622EgPatterns using the <code>..</code> notation (<code>[x, .., y]</code>). Captures any \xe2\x80\xa6AaA local variable.AaA basic undo log.Di<code>repr(simd)</code> types need special handling because they each \xe2\x80\xa6AcVendor dependencies0CdDefines the vendoring step in the bootstrap process.CnVertically aligned under whatever column this block begins \xe2\x80\xa6CiFirst line on the same line as the opening brace, all \xe2\x80\xa6DaThis <code>ReifyShim</code> was created to populate a vtable. \xe2\x80\xa60CnA resumable waiter of a query. The usize is the index into \xe2\x80\xa6Aix86 (32-bit) abi options.AjYanked within its registry0EaTest if a memory <code>access</code> using pointer tagged <code>tag</code> is \xe2\x80\xa6CmRead the local\xe2\x80\x99s value or error if the local is not yet \xe2\x80\xa6BdRange of the original memory access.0CdSpecify how to react to an argument when parsing it.CkUnits that are in the process of being built. When they \xe2\x80\xa6BbNumber of units currently running.ClAdjust this context for resolution in a scope created by \xe2\x80\xa6CmAllocates a stack slot in the function for a value of the \xe2\x80\xa6EgCreates a <code>Diverges::Always</code> with the provided <code>span</code> and the \xe2\x80\xa6Cm<code>-Z instrument-xray=always</code>, force instrumentationEcAnswers whether a <code>Tree</code> is transmutable into another <code>Tree</code>.FcThis method begins by converting <code>src</code> and <code>dst</code> from <code>Ty</code>s to \xe2\x80\xa6EaAnswers whether a <code>Dfa</code> is transmutable into another <code>Dfa</code>.DiEquivalent to <code>write()</code>, but appends to the end instead of \xe2\x80\xa6FeFor given <code>line</code> inserts <code>string</code> with <code>style</code> after old content \xe2\x80\xa6Ee<code>true</code> mean add the tips afterward for case <code>use a::{b,c}</code>, \xe2\x80\xa6AnAdds this text to the templateDkIf the <code>Value</code> is a number, represent it as f64 if possible. \xe2\x80\xa6BbAccess the git source, if present.DcIf the <code>Value</code> is an integer, represent it as i64 if \xe2\x80\xa6CnReturns mutable reference to basic blocks. Invalidates CFG \xe2\x80\xa6CdReturns a mutable pointer to the underlying integer.CbGives direct access to the raw underlying storage.0DoConverts a <code>Secret&lt;T&gt;</code> to a <code>Secret&lt;&amp;T&gt;</code>.CoDereferences to the underlying <code>&amp;OperandBundle</code>.BiViews the short ID as a <code>str</code>.AeGets the source text.CkAttempts to get the text from the source file. This can \xe2\x80\xa6CiThe polarity marker in front of the impl trait ref if \xe2\x80\xa6BhConverts a level to a lower-case string.01C`Get the string representation of this attribute.CmAccess the underlying string. This is a slowish operation \xe2\x80\xa60DfIf the <code>Value</code> is a String, returns the associated str. \xe2\x80\xa6AnReturn the component\xe2\x80\x99s name.CmReturn the linker feature name, as would be passed on the \xe2\x80\xa6AiReturn sanitizer\xe2\x80\x99s name77CgExtracts the value of this index as a <code>u32</code>.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000DcIf the <code>Value</code> is an integer, represent it as u64 if \xe2\x80\xa6CaEncodes the inner <code>SourceId</code> as a URL.E`A view of the <code>SourceId</code> that can be <code>Display</code>ed as a URL.DkCreates an <code>Assert</code> terminator and return the success block. \xe2\x80\xa6ChHelper method to interpret <code>target = result</code>.EnRecord that <code>local</code> is assigned <code>value</code>. <code>local</code> must be SSA.CdLoad the internal atomic memory cells if they exist.ClKeep the conditional imports together in a submodule, so \xe2\x80\xa6BhSets the author(s) for the help message.CkConverts unsigned integers into a string representation \xe2\x80\xa6BeBasic block to apply the optimizationCiThe set of mps that are waiting for the black-box parser.CkChains the given work by putting it in front of our own \xe2\x80\xa6AgBefore the equals sign.BiId of the introducing place. That can be:CdId of the introducing place. See <code>Param</code>.ClHow deep are we? Makes sure we don\xe2\x80\x99t touch the vars of \xe2\x80\xa6DeThe bitwise and (<code>&amp;</code>) of the bits in two flags values.000000000000000000000000000ClThe bitset used by FUTEX_*_BITSET, or u32::MAX for other \xe2\x80\xa6DfThe bitwise exclusive-or (<code>^</code>) of the bits in two flags \xe2\x80\xa6000000000000000000000000000BfBodies inside the owner being lowered.AhContent of local bodies.CnDescribes whether a local\xe2\x80\x99s address escaped and it might \xe2\x80\xa6EfThe value found at <code>place</code> is being borrowed with kind <code>bk</code>. \xe2\x80\xa6CiWhether the pattern scrutinee needs to be borrowed in \xe2\x80\xa6DdTrait and lifetime bounds (<code>Clone + Send + &#39;static</code>).DjTrait and lifetime bounds (e.g., <code>Clone + Send + &#39;static</code>).CjConstraints that must be met by the implementor of the \xe2\x80\xa6BiThe bounds for this associated type. e.g.BjThe set of bounds that constrain the type.CmBounds applied directly to the type. Note that the bounds \xe2\x80\xa6BaSpecify an alternative git branchAgSelect specific branch.oThe git branch.ChDefines a set of traits that is used for abstracting \xe2\x80\xa6CkOther crates that should be built and made available to \xe2\x80\xa6CfWhether to bundle objects from static library into \xe2\x80\xa6EeReturns the <code>DefId</code> of the <code>c_void</code> lang item if it is defined.ClHandles codegen of callees as well as other call-related \xe2\x80\xa6CiCancel and consume the diagnostic. (A diagnostic must \xe2\x80\xa6CmFormatting of chained expressions, i.e., expressions that \xe2\x80\xa6BfGuess if a package upgraded/downgradedChContains checks that must be run to validate matches \xe2\x80\xa6AiA vector of arena chunks.0ClThe chunks. Each one contains exactly CHUNK_BITS values, \xe2\x80\xa6AjThe set of changed chunks.0CnImplementation of running clippy on the compiler, standard \xe2\x80\xa6ChThe closing sequence of characters for the piece of textDkIndicates that the value generated by <code>expression</code>, which is \xe2\x80\xa6CmAttempt to coerce an expression to a type, and return the \xe2\x80\xa6ClThe one-indexed column of the source file where the span \xe2\x80\xa6Da<em>(<code>git2</code>)</em> Commit changes to the git repositoryCkCommits all changes since the last snapshot. Of course, \xe2\x80\xa6CjCommit: keep the changes that have been made since the \xe2\x80\xa61AkCommit the current changes.BoCode that is useful in various codegen modules.BbConcatenate two <code>Dfa</code>s.CnUser-specified configuration from <code>bootstrap.toml</code>.Bgdefaults to <code>bootstrap.toml</code>BaTOML configuration file for buildBoEntry point for the <code>config</code> module.DeThis module defines the central <code>Config</code> struct, which \xe2\x80\xa623CnHash of various config settings that change how things are \xe2\x80\xa6CdImplementation of configuration for various sources.CgLoads the <code>config.json</code> file and returns it.CdDecode the configuration stored within the registry.CkGet the registry configuration from either cache or remote.BlCalled before creating the compiler instance0BbConditional compilation stripping.BkQuery configuration and description traits.CiContains infrastructure for configuring the compiler, \xe2\x80\xa6AmThe declared constant itself.CeA simple const eval API, for use on arbitrary HIR \xe2\x80\xa6CaCommon consts, pre-interned for your convenience.0ClFor each function that was instrumented for coverage, we \xe2\x80\xa6CnIndicates it should run if the command-line selects any of \xe2\x80\xa6BhWhether to lint only a subset of crates.0BiWhether to build only a subset of crates.0ClWhether to build only a subset of crates in the standard \xe2\x80\xa6CjNot actually used; only present to make sure the cache \xe2\x80\xa6CnWhether to build a subset of crates, rather than the whole \xe2\x80\xa61DdSimilar to <code>builds</code>, but a list of NAME=somelib.rs of \xe2\x80\xa6CkAll available crates in the graph, including those that \xe2\x80\xa6000000AcCreates a new file.Cmthe rustc crate store interface. This also includes types \xe2\x80\xa6ChCurrent position of implicit positional argument pointerCiRandom access inspection of the results of a dataflow \xe2\x80\xa6B`Cursor for getting lexer tokens.DeProvides the implementation of the <code>custom_mir</code> attribute.CfThis exists so that <code>provide_one!</code> is happyAhMacro <code>DefId</code>EcReturn the <code>DefId</code> of this <code>Def</code> if it has an ID, else panic.CaDef id of the RPITIT (GAT) in the <em>trait</em>.Ckdef_id of the opaque type whose defining uses are being \xe2\x80\xa6BbThe opaque type we are traversing.AiDefId of the generic typeCmImpl method ID, for inherent methods, or trait method ID, \xe2\x80\xa6FdThe <code>DefId</code> of the <code>TraitItem</code> or <code>ImplItem</code> for the associated \xe2\x80\xa6000Dj<code>DefId</code> that identifies the variant itself. If this variant \xe2\x80\xa611BgReturns the item\xe2\x80\x99s <code>DefId</code>AkDefId of the constant item.Am<code>DefId</code> of caller.0CjRetrieve the unique identifier for the current definition.DdThe <code>DefId</code> of the module to place the use-statements in.666666CiUse this method to get the DefId of a clean AST node, \xe2\x80\xa6DiThis function is used to extract a <code>DefId</code> to be used as a \xe2\x80\xa6AnThe \xe2\x80\x9cmain\xe2\x80\x9d id of the item.BeReturns the type of given crate item.0DjDefuse the <code>DropBomb</code>. This will prevent the drop bomb from \xe2\x80\xa6AgCache the deref values.BbGet whether this is dimmed or not.CkIs the obligation \xe2\x80\x9cdirectly\xe2\x80\x9d user-specified, rather \xe2\x80\xa6CmPerforms an arbitrary FFI call, enabling tracing from the \xe2\x80\xa6EfEats <code>&lt;</code> possibly breaking tokens like <code>&lt;&lt;</code> in process.BkEncodes all the flags into a single string.DbDefinition of how to encode a <code>Resolve</code> into a TOML \xe2\x80\xa6CfEncodes type metadata identifiers for LLVM CFI and \xe2\x80\xa6EhUsed as the <code>target_endian</code> <code>cfg</code> variable. Defaults to little \xe2\x80\xa6ClEnsure that a given step is built, returning its output. \xe2\x80\xa6DfEnsure that the set can hold at least <code>min_domain_size</code> \xe2\x80\xa6DbChecks if these two <code>Layout</code> are equal enough to be \xe2\x80\xa6DdChecks if these two <code>PassMode</code> are equal enough to be \xe2\x80\xa6DiChecks if these two <code>ArgAttributes</code> are equal enough to be \xe2\x80\xa6DfChecks if these two <code>CastTarget</code> are equal enough to be \xe2\x80\xa6DbChecks if these two <code>ArgAbi</code> are equal enough to be \xe2\x80\xa6BiChecks whether two patterns are the same.D`Records that <code>a == b</code>, depending on <code>dir</code>.AmErrors emitted by ast_passes.AmErrors emitted by codegen_ssaChBacktrace of obligations that were found to be in error.CbErrors emitted by <code>rustc_hir_analysis</code>.C`Errors emitted by <code>rustc_hir_typeck</code>.BiError messages accumulated during parsingBbErrors emitted by symbol_mangling.AjErrors emitted by ty_utilsCdStorage for the errors produced while generating \xe2\x80\xa6nHTML escaping.CiXor-ed event types that happened to the file description.CkThe events bitmask retrieved from <code>epoll_event</code>.Bd<code>except=</code> attribute valueCdProcesses the handlebars template at the given file.CmDefinitions shared by macros / syntax extensions and e.g. \xe2\x80\xa6Ed<code>meta_item</code> is the attribute, and <code>item</code> is the item being \xe2\x80\xa6DjExpects and consumes the token <code>t</code>. Signals an error if the \xe2\x80\xa6AlUnwraps the contained value.D`The bitwise or (<code>|</code>) of the bits in each flags value.00CjConverts a single syntactical attribute to a number of \xe2\x80\xa611111BeExtends the undo log with many undos.2222222222ClMerges the witnesses of two matrices. Their column types \xe2\x80\xa6333333333DlReturns the path kind when merging <code>self</code> with <code>rest</code>.4CeThe file descriptor value of the file description \xe2\x80\xa6BlThe fields that this map should deserialize.CdSays where the fields are located within the layout.BbReturn the fields of this variant.0AgFields of this variant.BeThe fields location within the layoutBhRetrieve all the fields in this variant.B`The list of fields in the union.BaThe list of fields in the struct.CnThe list of variants in the enum. All of the corresponding \xe2\x80\xa6CgFilter to apply to the root package to select which \xe2\x80\xa60BoCustom pattern selecting file paths to reformatBeIndicate that something has finished.Agbuild final suggestion:DeConsumes the <code>Expander</code>, returning the expanded arguments.CmAsserts that all nodes have been visited, and returns the \xe2\x80\xa6ClFinish using the buffer and get the written output. This \xe2\x80\xa6BiGet the final <code>String</code> buffer.BhGets the result of the \xe2\x80\x9cfixed\xe2\x80\x9d code.B`Gets the fixity of this operatorAhIs this pre- or postfix?AaThe kind of file.0CaType of the file (library / debug symbol / else).CjRetrieve information about this instance binary interface.BkDeconstruct a function type if this is one.BgComputes the signature of the function.000000CkGet the function signature for function like types (Fn, \xe2\x80\xa6ChGet the function signature for this function definition.CiRetrieve the function signature for the given generic \xe2\x80\xa60Afclippy lints to forbid0AnKeep only the tag and creationAoRuns rustfmt on the repository.BoWhat format we\xe2\x80\x99re emitting from Cargo itself.CiA format string indicating how each package should be \xe2\x80\xa6CiA helper method to format numeric literals with digit \xe2\x80\xa6BlReturns literal formatted in a sensible way.Bg(Useless) Adjust libtest output format.CfParses a format specifier at the current position, \xe2\x80\xa6AjHow to format the argumentAfHTML formatting moduleCmThe main entry point for Rustfmt. Formats the given input \xe2\x80\xa6CnCompute the transitive closure derived from the edges, and \xe2\x80\xa6Ee<code>frozen</code> is the same as <code>locked</code>, but additionally will not \xe2\x80\xa6CkAn immutable, owned value (except for interior mutability).DcRemove references to <code>dep_key</code> if its no longer present.BaGet a configuration value by key.ClCodegens a reference to a fn/method item, monomorphizing \xe2\x80\xa6AlGet the name of the argumentCmThe most interesting method: Providing a shared reference \xe2\x80\xa6DiReturns a reference to entry <code>k</code>. If no such entry exists, \xe2\x80\xa60AoRoot path to the git checkouts.AiRoot path to the git DBs.CnReturns the numeric ID of the git db, either fetching from \xe2\x80\xa6CjSpecifies that an argument can be matched to all child \xe2\x80\xa6CkThis defines for a given permission, whether it permits \xe2\x80\xa6CoThe names of <code>ArgGroup</code>\xe2\x80\x99s the argument belongs to.DiAdds multiple <code>ArgGroup</code>s to the <code>Command</code> at once.BaCurl handle for issuing requests.CnA hasher that produces the same values across releases and \xe2\x80\xa6CmA list of historical hashes of each LSP settings file New \xe2\x80\xa6CkA header used to detect if this is the right crate to load.CkInformation about core properties of the function, e.g. \xe2\x80\xa6CkThe core properties of the function, such as the ABI it \xe2\x80\xa6CiThis module contains functions that retrieve specific \xe2\x80\xa6BoId of the variant (not the constructor, see \xe2\x80\xa6DiThe late bound vars for a given item are stored by <code>HirId</code> \xe2\x80\xa6C`The <code>HirId</code> of the top-level pattern.De<code>HirId</code> of the expression or pattern producing this value.0A`HirId for lints.DhA pre-populated <code>IdMap</code> with the default headings and any \xe2\x80\xa6CmThe map used to ensure all generated \xe2\x80\x98id=\xe2\x80\x99 attributes \xe2\x80\xa6Cn<code>true</code> if <code>--edition-idioms</code> is enabled.Ajgit like formatted entriesCmGiven a binding and an import that resolves to it, return \xe2\x80\xa6ClDetermines if a node with the given attributes should be \xe2\x80\xa6BnReturns whether the feature can be used in \xe2\x80\xa6BdLevel of indentation of current lineCnthe number of characters (typically whitespaces) up to the \xe2\x80\xa6CjTraverse the crate, collecting all the test functions, \xe2\x80\xa6CmPush a job into the \xe2\x80\x9cexternal jobs\xe2\x80\x9d queue; it will be \xe2\x80\xa6CmParsed representation of the <code>#[inline]</code> attributeB`Inlining pass for MIR functions.ChSupport for inlining external documentation into the \xe2\x80\xa6Ac<code>(A, B)</code>BiThe types of the function\xe2\x80\x99s parameters.BfList of argument names and their type.BiThe input types, enclosed in parentheses.BaInserts a new entry into the map.DjAdds to the cache a conflict of the form: <code>dep</code> is known to \xe2\x80\xa6EeLike <code>HashMap::insert</code>, but derives the <code>SourceId</code> key from \xe2\x80\xa6ChAssign this key to a new index. Panics if the key is \xe2\x80\xa6CkAssign a value to the index. Permanently overwrites any \xe2\x80\xa6D`The bitwise or (<code>|</code>) of the bits in two flags values.00CnReturns the <code>PlaceholderIndex</code> for the inserted \xe2\x80\xa61111EeAdds a <code>UniqueTypeId</code> to metadata mapping to the <code>TypeMap</code>. \xe2\x80\xa62772BfInserts a key-value pair into the map.AhAdds a value to the set.DfAttempt to enqueue <code>element</code> in the work queue. Returns \xe2\x80\xa6CnInsert <code>elem</code>. Returns whether the set has changed.0CaReturns <code>true</code> if the set has changed.DiSets the cell at <code>(row, column)</code> to true. Put another way, \xe2\x80\xa60CgReturns true if we increased the number of elements \xe2\x80\xa69659AlAdds a predicate to the set.ClInsert a new foreign item into the seen set. If a symbol \xe2\x80\xa6;;;;87;;;;ClInsert a symbol and its span into symbol gallery. If the \xe2\x80\xa6<<<<<<98<2ClInsert a local impl into the specialization graph. If an \xe2\x80\xa60CnAttempt to insert an impl into this set of children, while \xe2\x80\xa601>;:>BlInsert a final result into the global cache.AoThe intent we are compiling in.0ClThe high-level operation requested by the user. Used for \xe2\x80\xa6BlInterns an owned value, storing it uniquely.EfCreates a new <code>unit</code> from its components. The returned <code>Unit</code>\xe2\x80\xa6CeThis module specifies the type based interner for \xe2\x80\xa6BmMaps a string to its interned representation.0BcMap from metavars to matched tokensBcInverts the direction of all edges.EeCheck if this is an <code>ItemKind::Enum</code>, <code>ItemKind::Struct</code> or \xe2\x80\xa6AiCheck if target uses AIX.CcWhether all known bits in this flags value are set.000000000000000000000000000FbWhether the configuration consists of just <code>Cfg</code>, <code>Not</code> or <code>All</code>.EfReturns <code>true</code> if this <code>FileLines</code> contains all lines in all \xe2\x80\xa6CoReturns <code>true</code> if this is <code>Box&lt;T&gt;</code>.DhSimilar to <code>std::path::Path::is_dir</code> but doesn\xe2\x80\x99t follow \xe2\x80\xa6CnReturns <code>true</code> if this is generating documentation.0BkChecks if there is nothing more to consume.DbReturns true if the <code>Value</code> is a number that can be \xe2\x80\xa6CoReturns <code>true</code> if this source from a Git repository.EfReturns true if the <code>Value</code> is an integer between <code>i64::MIN</code> \xe2\x80\xa6CfReturns <code>true</code> if the token is any literal.BkReturn <code>true</code> if self is mutable0000CnWhether the access is mutable or not. Keep this private so \xe2\x80\xa611D`Return <code>true</code> if self is <strong>not</strong> mutable000000DjReturns <code>true</code> if a string is a toggle that turns an option \xe2\x80\xa6CiReturns true if the given node has been marked as red \xe2\x80\xa6BhWhether this is a standard library unit.Dh<code>true</code> while generating the dependencies for the standard \xe2\x80\xa6CfReturns <code>true</code> if this literal is a string.CmReturns <code>true</code> if this type is a <code>str</code>.CfChecks if a given expression is a match expression \xe2\x80\xa6DiReturns true if the <code>Value</code> is an integer between zero and \xe2\x80\xa6DaReturns <code>true</code> if this place context represents a use.CoReturns <code>true</code> if the type is a ZST and not unsized.BbGet whether this is italic or not.DhTakes an iterator over elements that implement <code>Display</code>, \xe2\x80\xa6ClWhether the sequence can be repeated zero (*), or one or \xe2\x80\xa6AeStarts the container.BmManagement of the directory layout of a buildCiReturns the appropriate directory layout for either a \xe2\x80\xa6BoStored layout information about the allocation.0BbCompute the full coroutine layout.BlThe layout of value, based on its Rust type.CkThe monomorphized type of this place, including variant \xe2\x80\xa6oGet the layout.DeDon\xe2\x80\x99t modify if <code>Some</code>, this is only used to prevent \xe2\x80\xa610AbGet a type layout.CfThis describes the layout of each page, and is not \xe2\x80\xa6CbFunctions dedicated to fact generation for the \xe2\x80\xa6Dh<code>indent</code> is the indentation of the first line. The next linesBcLength modifier for the conversion.")
rd_("CkReturns whether the flavor calls the linker via a C/C++ \xe2\x80\xa6EaReturns the <code>DefId</code> of the <code>va_list</code> lang item if it is \xe2\x80\xa6ClMaps from a variable or binding ID to the block in which \xe2\x80\xa6AbUse verbose outputClA \xe2\x80\x9cverify\xe2\x80\x9d is something that we need to verify after \xe2\x80\xa60AnPrint rustfmt version and exitAjPrints version information0CmReturns true if node has been visited thus far. A node is \xe2\x80\xa6CkItems that have been or are currently being recursively \xe2\x80\xa6CnVisitor for a run-time value with a given layout: Traverse \xe2\x80\xa6AgCache generated vtablesBeAwaits for the query job to complete.CnInvoked by owning thread as it falls asleep sleep. Returns \xe2\x80\xa6EeCreates a new <code>Diagnostic</code> with the given <code>message</code> at the spanDeAdds a new child diagnostic message to <code>self</code> with the \xe2\x80\xa6CgThe stack of terms that we assume to be well-formed \xe2\x80\xa6Fa<code>Diag</code> impls many <code>&amp;mut self -&gt; &amp;mut Self</code> methods. Each one \xe2\x80\xa6CaAsserts that this MetaItem is some specific word.ClAsserts that this MetaItem starts with a word, or single \xe2\x80\xa6AjThe main thing to display.DjThis field can be <code>None</code> if one of the following conditions \xe2\x80\xa60CaA pair of alignments, ABI-mandated and preferred.CeNo attempt has been made to load the external source.BcAn acquired token from a jobserver.ClWe just finished dumping the control flow graph. This is \xe2\x80\xa6CdThe functionality needed by memory to manage its \xe2\x80\xa60CcA reference to some allocation that was already \xe2\x80\xa60A`Allocate memory.EgAn uninhabited enum used to make <code>Infer</code> variants on <code>Ty</code> and \xe2\x80\xa6CmAnalysis includes type inference, checking that items are \xe2\x80\xa600CiThe \xe2\x80\x9canalysis MIR\xe2\x80\x9d dialect, used for borrowck and \xe2\x80\xa60CkA dataflow problem with an arbitrarily complex transfer \xe2\x80\xa60222CnGiven a set of bounds <code>B</code>, expands to the function:0DfAppears as an argument, e.g. <code>format!(&quot;{}&quot;, foo)</code>Dd<code>{:.*}</code>, <code>{:.5$}</code>, or <code>{:a$}</code>, etc.BlRepresentation of an argument specification.DaAn array <code>[T; N]</code> can only be indexed (and is only \xe2\x80\xa600DcBest generated by <code>as_rvalue</code>. This is usually the case.Cg<code>?=</code> where ? is one of the assignable BinOpsAoAn assignment with an operator.0DmA <em>non-overloaded</em> operation assignment, e.g. <code>lhs += rhs</code>.Di<code>async gen</code>, which returns an <code>impl AsyncIterator</code>.EeAn explicit <code>async gen</code> block or the body of an <code>async gen</code> \xe2\x80\xa6BgArguments passed to an attribute macro.0DgThe different settings that the <code>-Z autodiff</code> flag can have.CaDepNodes for Hir, which is pretty much everythingCmDepNodes for exported mir bodies, which is relevant in \xe2\x80\x9c\xe2\x80\xa6CcThe size of the buffer in <code>FileEncoder</code>.CcFor contravariant cases, we add a backward edge \xe2\x80\xa6CmDataflow that runs from the exit of a block (terminator), \xe2\x80\xa60Ef<code>Offset</code> has the same semantics as <code>offset</code>, except that the \xe2\x80\xa60Eh<code>Offset</code> has the same semantics as <code>&lt;*const T&gt;::offset</code>, \xe2\x80\xa60DiThe <code>BlockAnd</code> \xe2\x80\x9cmonad\xe2\x80\x9d packages up the new basic block \xe2\x80\xa6CjA latch for scopes created on a non-rayon thread which \xe2\x80\xa6CdThe behavior during MIR borrowck is identical to \xe2\x80\xa600000nBorrowed data.00000BhAn elided lifetime with elided brackets.BbThe value returned by this search.DkMarker type which enables implementation of <code>create_bug</code> and \xe2\x80\xa60BgPlaceholder for a <code>va_list</code>.BjLLVM CallingConv::ID. Should we wrap this?CmIndicates to the call terminator codegen whether a cal is \xe2\x80\xa6CnScope of the call-site for a function or closure (outlives \xe2\x80\xa6BgCalling convention to determine codegen0Cc<code>format_args(&quot;\xe2\x80\xa6 {arg} \xe2\x80\xa6&quot;)</code>AnCast Kind. See RFC 401 (or \xe2\x80\xa6BlThe parsed <code>--check-cfg</code> options.0CnChildren of a given impl, grouped into blanket/non-blanket \xe2\x80\xa60DdIterator over the children diagnostics of a <code>Diagnostic</code>.11CaRegions created as part of an automatic coercion.BfObligation incurred due to a coercion.010DhRepresents a compiler session. Note that every <code>Compiler</code> \xe2\x80\xa6ClThe SCC and everything reachable from it have been fully \xe2\x80\xa6CjFor pointers with concrete provenance. we exactly know \xe2\x80\xa60CnA constant that enters the type system, used for arguments \xe2\x80\xa6CfA type for representing any integer. Only used for \xe2\x80\xa60CjA temporary created that references the const with the \xe2\x80\xa6EdA <strong><code>const</code></strong> <strong>v</strong>ariable <strong>ID</strong>.0000DjA <code>LitKind</code>-like enum to fold constant <code>Expr</code>s into.BmThe value is dependent on a defined constant.AiA <code>const</code> item0CiConstants are already semantically values, and remain \xe2\x80\xa60AeOne of the following:EmA literal like <code>23</code> or <code>&quot;foo&quot;</code>. Does not include constant \xe2\x80\xa6BfBranch corresponding to this constant.BhEvaluated or unevaluated constant value.kA constant.BgThe declaration of a constant, e.g. \xe2\x80\xa601ClTrait for visitor functions to control whether or not to \xe2\x80\xa6C`A <code>continue</code>, with an optional label.0BmNo action is to be taken. Continue unwinding.0BcA <code>continue</code> expression.DjA contract <code>#[ensures(..)]</code> attribute injects a let binding \xe2\x80\xa6DbCalls to contract checks (<code>#[requires]</code> to precond, \xe2\x80\xa6BbUnify locals that copy each other.BhRepresents <code>#[coverage(..)]</code>.0CjCarries control-flow-sensitive information injected by \xe2\x80\xa60CjThe rustc coverage data structures are heavily tied to \xe2\x80\xa6CaDisplays how much of the input file was processed0CiA trait for retrieving information about a particular \xe2\x80\xa6BcThe number that identifies a crate.BfWhat kind of constructor something is.CkInstantiating a type variable with the given type would \xe2\x80\xa6000CnThe dummy span has zero position, length, and context, and \xe2\x80\xa60D`The <code>dyn_drop</code> lint checks for trait objects with \xe2\x80\xa6CnError returned by finding a data race should be elaborated \xe2\x80\xa6AmEnum for the debug hex flags.CjA source code location used to generate debug information.ChA DefIndex is an index into the hir-map for a crate, \xe2\x80\xa60CnThis trait defines the callbacks you can expect to receive \xe2\x80\xa6BeThe <code>deref_mut</code> lang item.BdThe <code>destruct</code> lang item.CmA thread is detached if its join handle was destroyed and \xe2\x80\xa6DhA <code>DiagCtxt</code> deals with errors and other compiler output. \xe2\x80\xa6CnWhether a binding is part of a pattern or a use statement. \xe2\x80\xa6CeForward and Reverse Mode are well known names for \xe2\x80\xa6CmThe table of open directories. Curiously, Unix/POSIX does \xe2\x80\xa6CaGrants no access, but separates two groups of \xe2\x80\xa60Cmrepresents: a dead pointer; allows: all foreign accesses; \xe2\x80\xa6CfIndicates that no suggestion is available for this \xe2\x80\xa6CkDo nothing special, return the error as usual without a \xe2\x80\xa6CbDo not emit Control Flow Guard metadata or checks.1ChDisallow use of unstable features, as on beta/stable \xe2\x80\xa6CnThe places are disjoint, so we know all extensions of them \xe2\x80\xa6CmTracks whether executing a node may exit normally (versus \xe2\x80\xa6A`<code>..=</code>0Cf\xe2\x80\x9cDowncast\xe2\x80\x9d to a variant of an enum or a coroutine.0000000Ca<code>core::ptr::drop_in_place::&lt;T&gt;</code>.0000000AoA single node in the drop tree.CjA tree of drops that we have deferred lowering. It\xe2\x80\x99s \xe2\x80\xa6CkForward Mode, Compute derivatives for this input/output \xe2\x80\xa6FlA <code>dyn Trait</code> object: <code>dyn for&lt;&#39;a&gt; Trait&lt;&#39;a&gt; + Send + &#39;static</code>CcDynamic trait object type (<code>dyn Trait</code>).0ChReference patterns consume only a reference from the \xe2\x80\xa6CnReference patterns consume only the inherited reference if \xe2\x80\xa6ChAn equality constraint for an associated item (e.g., \xe2\x80\xa60CbThe required value/type is specified exactly. e.g.o<code>..</code>AlWork was found and executed.0B`<code>-Zunpretty=expanded</code>BkExpands argfiles in command line arguments.Cd<code>self: TYPE</code>, <code>mut self: TYPE</code>CiAn explicit extern keyword was used with an explicit ABI.AkAny path in a type context.EgExplicit value for this variant, i.e., <code>X = 123</code>. The <code>DefId</code> \xe2\x80\xa6ClA dependency that is required by an rlib version of this \xe2\x80\xa600CiA subset of properties from both macro definition and \xe2\x80\xa6BoA unique hash value associated to an expansion.oExpansion kind.BdResolve doc links on exported items.AgCorresponds to enum \xe2\x80\xa6DfAn <strong>external</strong> region is only relevant for closures, \xe2\x80\xa6CjCollapse debuginfo if the macro comes from a different \xe2\x80\xa6Ae<code>mod foo;</code>DaRanges of floating-point literal values (<code>2.0..=5.2</code>).0DiDefault ABI chosen for <code>extern fn</code> declarations without an \xe2\x80\xa6Dk#[ffi_pure]: applies clang\xe2\x80\x99s <code>pure</code> attribute to a foreign \xe2\x80\xa6BhWhen executed at runtime, this is a nop.0C`\xe2\x80\x9cfastcall\xe2\x80\x9d has both GNU and Windows variantsClgnu-fastcall on \xe2\x80\x9cunix\xe2\x80\x9d and win-fastcall on \xe2\x80\x9cwindows\xe2\x80\xa610CmCan be specified as <code>extern &quot;fastcall&quot;</code>.Ab<code>=&gt;</code>BmA set of features to be used by later passes.0BeRepresents <code>#[ffi_const]</code>.0BoField definition in a struct, variant or union.ChThe <em>source-order</em> index of a field in a variant.0BoThe source-order index of a field in a variant.0CkDifferentiates between real files and common virtual files.CfDefines the name of an input - either a file or stdin.0A`LLVMRustFileTypeCjThe backend has finished compiling a CGU, nothing more \xe2\x80\xa6ChPatterns of length <code>n</code> (<code>[x, y]</code>).A`LLVMRustFloatABICmThe float ABI setting to be configured in the LLVM target \xe2\x80\xa6CfA floating-point type variable (<code>{float}</code>).0000GlA <strong>float</strong>ing-point (<code>f32</code> or <code>f64</code>) type <strong>v</strong>ariable <strong>ID</strong>.0000CmIdentifier for the Fluent message/attribute corresponding \xe2\x80\xa6BnValues for the <code>-Z fmt-debug</code> flag.AbA function header.Am<code>-&gt; impl Trait</code>00Cm<code>ForGuard</code> indicates whether we are talking about:CjThe exceptional case is identifiers in a match arm\xe2\x80\x99s \xe2\x80\xa6DjCurrently, index expressions overloaded through the <code>Index</code> \xe2\x80\xa60DbWhether an existing place with an <code>use</code> item was found.BnA function allocation (that fn ptrs point to).0BkThe alloc ID is used as a function pointer.C`Parse the front matter of a function declaration1A`<code>f()</code>CgA function declaration (including methods and other \xe2\x80\xa6CcA function declaration, e.g. <code>fn f() {}</code>1CmA speedy hash algorithm for use within rustc. The hashmap \xe2\x80\xa6CnRepresents lifetime, type and const parameters attached to \xe2\x80\xa6CjRepresents lifetimes and type parameters attached to a \xe2\x80\xa6CiInformation about the formal type/lifetime parameters \xe2\x80\xa60ClThis rib declares generic parameters. Only for this kind \xe2\x80\xa6DiGeneric parameters accepted by an item and <code>where</code> clauses \xe2\x80\xa6BiUniquely identifies one of the following:CkMethods used to assemble candidates for either trait or \xe2\x80\xa6CcIndicates whether the ADT is a struct and has a \xe2\x80\xa6CaInclusive at the beginning, exclusive at the end.ChA trait for AST nodes having (or not having) attributes.BeIndicates whether the ADT is a union.AhPass the receiver as-is.CcRepresents an associated item within an impl block.Be<code>{}</code> or <code>{:.*}</code>CkAn explicit extern keyword was used, but with implicit ABI.CjE.g. <code>&amp;Type</code>, <code>ContainsLifetime</code>DeImplicitly peel references, and if <code>deref_patterns</code> is \xe2\x80\xa6ChThe coercion was automatically inserted by the compiler.0ClA dependency that is always injected into the dependency \xe2\x80\xa600A`Inside a string.CmThe offset has to be inbounds, like <code>ptr::offset</code>.0Bd<code>..=</code> or <code>...</code>EbSimilar to rustc\xe2\x80\x99s <code>FxIndexMap</code>, <code>IndexMap</code> with extra \xe2\x80\xa6BeThe <code>index_mut</code> lang item.EgAn owned contiguous collection of <code>T</code>s, indexed by <code>I</code> rather \xe2\x80\xa60CmA value not representable by the other variants; needs to \xe2\x80\xa6000ClCall the <code>FnPtr</code> that was passed as the receiver.CbPass the argument indirectly via a hidden pointer.0CcAn associated type in an inherent <code>impl</code>0000CnRun-length encoding of the uninit mask. Used to copy parts \xe2\x80\xa6DjLocal declaration with an initializer and an <code>else</code> clause. \xe2\x80\xa6C`Additional information about the initialization.CmA bitmask where each bit refers to the byte with the same \xe2\x80\xa6AgBlocked on an InitOnce.0BbThe one time initialization state.AoInjected by <code>rustc</code>.CnThe result of attempting to insert an impl into a group of \xe2\x80\xa6DgAn <code>InstanceKind</code> along with the args that are needed to \xe2\x80\xa60CcAn exclusive interval, used for precise integer \xe2\x80\xa6EkRanges of integer literal values (<code>2</code>, <code>2..=5</code> or <code>2..5</code>).0CnThe type is spanned by integer values. The range or ranges \xe2\x80\xa60CjA constraint that doesn\xe2\x80\x99t correspond to anything the \xe2\x80\xa60Ag<code>mod foo {}</code>ClA reference to a value that is interned, and is known to \xe2\x80\xa6EhAn iterator over <code>TokenStream</code>\xe2\x80\x99s <code>TokenTree</code>s. The iteration \xe2\x80\xa6BnConversion of a value into a <code>Span</code>CbNo code on either side of each line of the commentCjContext specific to some particular item. This is what \xe2\x80\xa6AkSpecific fields of an item.DgThe fundamental kind of an item. Unlike <code>ItemEnum</code>, this \xe2\x80\xa6BfA link that has not yet been rendered.D`Item type. Corresponds to <code>clean::ItemEnum</code> variants.BdThe <code>iterator</code> lang item.CmA type representing the responsibility to execute the job \xe2\x80\xa6AiThe thread can be joined.CgA Kleene-style repetition operator for token sequences.BhLinker shepherd script for L4Re (Fiasco)CeThis kind of label preserves the text directly as is.EaEach instance of a type that implements <code>Label&lt;C&gt;</code> maps to a \xe2\x80\xa6CeA representation of all the valid lang items in Rust.CkReference to a <code>#[lang = &quot;foo&quot;]</code> item.Ec<code>&amp;L</code> without any implication of <code>dereferenceable</code> for \xe2\x80\xa6CiBlanket extension trait for contexts that can compute \xe2\x80\xa6CgError returned from <code>TokenStream::from_str</code>.CkA \xe2\x80\x9cLifetime\xe2\x80\x9d is an annotation of the scope in which \xe2\x80\xa6Cf<code>&#39;a</code> in <code>Foo&lt;&#39;a&gt;</code>.DlA lifetime definition (e.g., <code>&#39;a: &#39;b + &#39;c + &#39;d</code>).AcLifetime parameter.DjLifetime identifier token. Do not forget about <code>NtLifetime</code> \xe2\x80\xa6ClA lifetime. The valid field combinations are non-obvious \xe2\x80\xa63BeA lifetime, e.g. <code>&#39;a</code>.AcAny lifetime token.AdA lifetime argument.AmDenotes a lifetime parameter.kA lifetime.DiInformation you get from <code>Span</code> in a struct form. Line and \xe2\x80\xa6BeRepresents <code>#[link_name]</code>.0DjDegenerate list import, e.g., <code>use foo::{a, b}</code> produces an \xe2\x80\xa6AoA regular live data allocation.0BbA point in the control-flow graph.De<code>Location</code> represents the position of the start of the \xe2\x80\xa6AnA type found at some location.ClThe location of a statement / terminator in the code and \xe2\x80\xa6Aa<code>{:e}</code>Aa<code>{:x}</code>BmThe maximum number of CPUs supported by miri.0CgA MemPlace with its layout. Constructing it is only \xe2\x80\xa60Di<code>MacResult</code> implementation for the common case where you\xe2\x80\x99\xe2\x80\xa6AnRepresents a macro definition.AcA macro definition.BeRepresents <code>#[macro_use]</code>.0AmPretty-print a markdown tableDiWhen <code>to_string</code> is called, this struct will emit the HTML \xe2\x80\xa6AnThe arm of a match expression.CjThis was from comparison generated by a match, used by \xe2\x80\xa60BlAn AST representation of a Markdown documentCnA semantic representation of a meta item. A meta item is a \xe2\x80\xa6BjA full MetaItem, for recursive meta items.0BiThe <code>metadata_type</code> lang item.CjAbstract over the various ways one can create metadata \xe2\x80\xa6AlRepresents a constant in MIRClThis struct lets you \xe2\x80\x9cpatch\xe2\x80\x9d a MIR body, i.e. modify \xe2\x80\xa6BdRepresents the \xe2\x80\x9cflavors\xe2\x80\x9d of MIR.0CeThis structure is supposed to keep enough data to \xe2\x80\xa6Dj<code>MovePath</code> is a canonicalized representation of a path that \xe2\x80\xa6AiAny of the given strings.CmEnum-likes with more than one variant: each variant comes \xe2\x80\xa6CiEnum-likes with more than one inhabited variant: each \xe2\x80\xa6Dh<code>ref mut</code> bindings (explicit or match-ergonomics) are not \xe2\x80\xa6BaThe <code>naked_asm!</code> macro00Ba<code>impl !Trait for Type</code>Ai<code>Type: !Trait</code>101010101010CjThe macro statement had parentheses or brackets and no \xe2\x80\xa6BoEmit Control Flow Guard metadata but no checks.BdRepresents <code>#[no_mangle]</code>0Ai<code>#[no_mangle]</code>DiSame as IMPORT_NAME_NOPREFIX Prefix (e.g., the leading <code>_</code> \xe2\x80\xa6DkAn expression that never needs parentheses such as <code>1337</code> or \xe2\x80\xa6AeFile cannot be found.CjThe anonymous region corresponds to a region where the \xe2\x80\xa6AbAn occupied entry.0BbExisting slot with equivalent key.110111BoAn <code>offset_of</code> expression (e.g., \xe2\x80\xa6BfField offset (<code>offset_of!</code>)AmReturns the offset of a field01AnReturns the offset of a field.0BaA help that is only emitted once.BaA note that is only emitted once.CeThe type is the last bound of the containing type \xe2\x80\xa6DaA globally unique id to distinguish <code>Opaque</code> patterns.DeTreat <code>impl Trait</code> as shorthand for a new opaque type. \xe2\x80\xa6BiOpaque type, aka <code>impl Trait</code>.DgAn existential <code>impl Trait</code> type node. Argument position \xe2\x80\xa6DkAn opaque type (usually from <code>impl Trait</code> in type aliases or \xe2\x80\xa6022DjDesugaring of an <code>impl Trait</code> in return type position to an \xe2\x80\xa6111ChA call to an operator trait, desugared from operator \xe2\x80\xa6mAny operator.1A`LLVMRustOptStageCgOptimize a newly codegened, totally unoptimized module.BoRepresents <code>#[optimize(size|speed)]</code>0EdThe <code>module::Type</code> in <code>module::Type::method</code> in an expression.CjThis access has a single span associated to it: common \xe2\x80\xa6D`Outlives(a, [b, c, d, \xe2\x80\xa6]) =&gt; \xe2\x80\x99a: \xe2\x80\x99b + \xe2\x80\x99c + \xe2\x80\x99d + \xe2\x80\xa6CmThe region <code>long</code> must outlive <code>short</code>.AfA lifetime bound, e.g.ClWe gave up due to an overflow, most often by hitting the \xe2\x80\xa6CdExceeded the recursion depth during type projection.1101111011BeThe <code>owned_box</code> lang item.AlCoroutine has been poisoned.0BeThe <code>panic_fmt</code> lang item.DkAn assumption from the environment. Stores a <code>ParamEnvSource</code>\xe2\x80\xa60CiWhen interacting with the type system we must provide \xe2\x80\xa611EgWhen canonicalizing the <code>param_env</code>, we keep <code>&#39;static</code> as \xe2\x80\xa62222BmFrom a where-clause in the env or object type3CcFailed to parse contents of <code>.ftl</code> file.AoFlags to simple parser functionCmHow a function argument should be passed in to the target \xe2\x80\xa6BcA single field in a struct pattern.0ClA range pattern. The boundaries must be of the same type \xe2\x80\xa6BoRepresents a pattern-tuple under investigation.ChWe want to show a nice path to the invalid field for \xe2\x80\xa6CmIn the initial iteration of a cycle, we do not yet have a \xe2\x80\xa6000CnThis iterator comes from the same idea than \xe2\x80\x9cPeekable\xe2\x80\x9d \xe2\x80\xa6CiRestrictions on what types to peel when adjusting the \xe2\x80\xa6CdReference to a place used to represent a partial \xe2\x80\xa6CkThe query panicked. Queries trying to wait on this will \xe2\x80\xa6Dh<code>-Zpolonius</code> values, enabling the borrow checker polonius \xe2\x80\xa6BeIndex of an allocation within the mapCiEnum describing where an argument for a format can be \xe2\x80\xa6B`<code>impl Trait for Type</code>Ah<code>Type: Trait</code>101010101010CnA univariant, but with a prefix of an arbitrary size &amp; \xe2\x80\xa6AnPreorder traversal of a graph.ChWhether we have seen a constructor in the column or not.AhKeep groups as they are.AeDo not merge imports.AgLeave the literal as-isBcPreserve any existing leading pipesDcInside a metadata node, with a previous <code>Lazy</code>s. The \xe2\x80\xa6AiValidation of a promoted.0CbBoth signature and body are provided in the trait.BlType that is returned by the query provider.AoRepresents an active query job.0n<code>?</code>0ClThe registry associated with the thread. This allows the \xe2\x80\xa6BgCoroutine has returned or is completed.0EgConceptually, this is like a <code>Vec&lt;Vec&lt;RWU&gt;&gt;</code>. But the number \xe2\x80\xa6AkSize of packed RWU in bits.BdThe <code>RangeMax</code> lang item.BdThe <code>RangeMin</code> lang item.DhRepresents a set of <code>Size</code> values as a sorted list of ranges.0BdThe <code>RangeSub</code> lang item.DjOn-disk representation of <code>DefId</code>. This creates a type-safe \xe2\x80\xa6DdDynamic library (e.g. <code>foo.dll</code> on Windows) without a \xe2\x80\xa6BeA raw identifier, e.g. \xe2\x80\x9cr#ident\xe2\x80\x9d.CmErased region, used by trait selection, in MIR and during \xe2\x80\xa600000CkStatic data that has an \xe2\x80\x9cinfinite\xe2\x80\x9d lifetime. Top in \xe2\x80\xa600000CnKind of read access to a value (For informational purposes \xe2\x80\xa6DcCreating a pointer <code>b</code> to contents of another reference.0BdThe <code>receiver</code> lang item.EeA simplified version of <code>ImportKind</code> from resolve. <code>DefId</code>s \xe2\x80\xa6CkA wrapper around a mutable reference that conditionally \xe2\x80\xa6ChRepresents a list of threads which can access worker \xe2\x80\xa60CgThe previous variant\xe2\x80\x99s discriminant plus one. For \xe2\x80\xa6CjFor remapped paths (namely paths into libstd that have \xe2\x80\xa6CkDisplay the path after the application of rewrite rules \xe2\x80\xa6CiAttribute is deprecated and was replaced by the named \xe2\x80\xa6DgUtility to help performing substitution of <code>*pattern</code> by \xe2\x80\xa60CjAlready reported an error for this evaluation, and the \xe2\x80\xa60BaThe kind of <code>#[repr]</code>.BoNo default body in the trait, just a signature.CiAnnotation is required if not inherited from unstable \xe2\x80\xa6CjPath to a definition, optionally \xe2\x80\x9cfully-qualified\xe2\x80\x9d \xe2\x80\xa6AhThe main resolver class.CnFIXME: We currently return region constraints referring to \xe2\x80\xa6AnThe <code>Ok</code> lang item.BdThe <code>ResumeTy</code> lang item.B`The return type of the function.BoA trait implemented for storage types (like \xe2\x80\xa6BjWhich part of a macro rule we\xe2\x80\x99re parsingDkthe mostly-unused <code>unboxed_closures</code> ABI, effectively now an \xe2\x80\xa60CmFor things unlikely to be called, where reducing register \xe2\x80\xa60CkThe Rustc-specific variant of the ABI used for this target.DiLast real-time signal. <code>signal(7)</code> says it must be between \xe2\x80\xa6DdFirst real-time signal. <code>signal(7)</code> says this must be \xe2\x80\xa6CkLatch is not set, owning thread is asleep on this latch andBjAssignment statements have the same value.DkUsed to capture a scope <code>&amp;Self</code> pointer in jobs, without \xe2\x80\xa6CmNames from different contexts may want to visit different \xe2\x80\xa6EgThe <code>Self</code> constructor, along with the <code>DefId</code> of the impl it \xe2\x80\xa6EfThe <code>Self</code> constructor, along with the [<code>DefId</code>] of the impl \xe2\x80\xa60000000EaAlternative representation for <code>Arg</code>s describing <code>self</code> \xe2\x80\xa6DgOnly traits that reference <code>Self: ..</code> are implied by the \xe2\x80\xa6DkA kleene-style repetition sequence, e.g. <code>$($e:expr)*</code> (RHS) \xe2\x80\xa6DcAlways show the suggested code. This will <em>not</em> show the \xe2\x80\xa6BhThe <code>slice_len_fn</code> lang item.ChSnapshots are tokens that should be created/consumed \xe2\x80\xa6CmAt any time, users may snapshot a unification table.  The \xe2\x80\xa61AbRepresents a span.CmA job that will be owned by a stack slot. This means that \xe2\x80\xa6CmStandard/un-canonicalized queries get accurate spans etc. \xe2\x80\xa6ClRequests that tracing begins. Following this being sent, \xe2\x80\xa6CcA key denoting where from a diagnostic was stashed.CkA latch for scopes created on a rayon thread which will \xe2\x80\xa6AlThe contents of a statement.CkDealing with string comparison can be complicated, this \xe2\x80\xa6ChDealing with string indices can be hard, this struct \xe2\x80\xa6D`A subslice covering a range of values like <code>B[x..y]</code>.BnThese indices are generated by slice patterns.00000BeProjects a slice from the base place.0DjA float literal with a suffix (<code>1f32</code> or <code>1E10f32</code>).ClCheck alignment \xe2\x80\x9csymbolically\xe2\x80\x9d, i.e., using only the \xe2\x80\xa60CmThe template this attribute parser should implement. Used \xe2\x80\xa60jTail call.0CkEvaluation is currently within the tail expression of a \xe2\x80\xa6DhPartial summary of a <code>thir::Pat</code>, indicating what sort of \xe2\x80\xa6AoSee <code>Test</code> for more.Ba<code>-Zunpretty=thir-flat</code>Ba<code>-Zunpretty=thir-tree</code>owindows C++ ABI0AdA thread identifier.0CgThe operation did not complete within its specified \xe2\x80\xa60DgTypes that can be interpolated inside a <code>quote!</code> invocation.0BfCode exists to the left of the commentBmA trait\xe2\x80\x99s definition with type information.AgA trait\xe2\x80\x99s definition.DjFrom the definition of <code>Trait</code> when you have something like \xe2\x80\xa6Bg<code>TraitRef</code>s appear in impls.AnReferences to traits in impls.ChA complete reference to a trait. These take numerous \xe2\x80\xa6DiA complete reference to a trait, i.e., one where <code>Self</code> is \xe2\x80\xa6111BgA try block (<code>try { ... }</code>).BgRetag preparing for a two-phase borrow.0BiThe additional info that is stored in \xe2\x80\xa6lLLVMTypeKindCkA \xe2\x80\x9ctype test\xe2\x80\x9d corresponds to an outlives constraint \xe2\x80\xa6CiReturns whether we should perform some UB-checking at \xe2\x80\xa60Bdcfg!(ub_checks), but at codegen time0CeExtended variant of the <code>timespec</code> struct.DiA trait which allows undo actions (<code>T</code>) to be pushed which \xe2\x80\xa6DjThis no-op hasher expects only a single <code>write_u64</code> call. It\xe2\x80\xa6BgAn access to a single value of the map.CeIntermediate key between a UniKeyMap and a UniValMap.CmThis trait is implemented by any type that can serve as a \xe2\x80\xa60000DkModule with definition outlined to a separate file <code>mod foo;</code>\xe2\x80\xa6EhThe item does not have the <code>#[stable]</code> or <code>#[unstable]</code> marker \xe2\x80\xa6DjNo external source has to be loaded, since the <code>SourceFile</code> \xe2\x80\xa6CiThis is a collection type that tries very hard to not \xe2\x80\xa6CmThis is a map collection type that tries very hard to not \xe2\x80\xa6CmThis is a set collection type that tries very hard to not \xe2\x80\xa6CmSplit debug-information can be found in individual object \xe2\x80\xa6CnAn attribute that could not be parsed, out of a token-like \xe2\x80\xa6Aie.g. <code>42_u32</code>.Ah<code>#[unstable]</code>0DiUsed for lints emitted during the <code>EarlyLintPass</code>. This id \xe2\x80\xa6CjThis target feature is unstable. It is only present in \xe2\x80\xa6CfThe feature corresponding to an unstable item, and \xe2\x80\xa6Aa<code>{:E}</code>Aa<code>{:X}</code>CiUsed to represent upvars mentioned in a closure/coroutineBkThe span(s) associated to a use of a place.ClStores the user-given args to reach some fully qualified \xe2\x80\xa60CdThe ID of the artificial type we create for VTables.CkDescribes how values of the type are passed by target ABIs,CgValue of a unification key. We implement Tarjan\xe2\x80\x99s \xe2\x80\xa6ChThis type has the following list of constructors. If \xe2\x80\xa60BnIn-memory cache for queries whose keys are \xe2\x80\xa600ClA directed graph, efficient for cases where node indices \xe2\x80\xa6AhUsed by LLVM 18 onwards.BdPlace every item on a separate line.AaOne item per row.DjThe <code>warnings</code> lint allows you to change the level of other \xe2\x80\xa60CgIf wildcard provenance is implemented, contains the \xe2\x80\xa60G`Derives <code>Walkable</code> for the annotated <code>struct</code> or <code>enum</code> (<code>union</code> \xe2\x80\xa6BgA desugared <code>while let</code> loopCdPointers with wildcard provenance are created on \xe2\x80\xa60AaWildcard pattern.0DdWindows \xe2\x80\x9clocal\xe2\x80\x9d memory (to be freed with <code>LocalFree</code>)0CiThe backend has finished processing a work item for a \xe2\x80\xa6ClNo constraints, just wrap around the edge of the address \xe2\x80\xa60DhImplementation of the FreeBSD <code>_umtx_op</code> syscall. This is \xe2\x80\xa6BcList of the accepted feature gates.CnA location is \xe2\x80\x9caccessed\xe2\x80\x9d when it is child-accessed for \xe2\x80\xa6ClAdd diagnostic arguments by passing name and value pairs \xe2\x80\xa60CmAdds a node to the drop tree, consisting of drop data and \xe2\x80\xa6BfAdds an arbitrary file to this archive0DiReturns <code>true</code> if the line is part of the current itemized \xe2\x80\xa6CiAdd a name to the tag. If a same tag is associated to \xe2\x80\xa6CeExpands the available memory pool by adding one page.CmWhether this represents the whole crate, in which case we \xe2\x80\xa6AlReturns the kind of the ADT.BoReturns the kind of a given algebraic data typeC`Returns the kind of a given algebraic data type.C`Returns the representation options for this ADT.0DiThe item introducing the <code>Self</code> type alias. Can be used in \xe2\x80\xa600000000CkReturns the ABI-required minimum alignment of a type in \xe2\x80\xa6BoReturns an iterator over the SCCs in the graph.DbEfficiently detect whether a slice of <code>u8</code> is all zero.BoThe allocation in which the error is happening.CjThe value lives here, at offset 0, and that allocation \xe2\x80\xa6CdReturns the <code>AllocId</code> of this provenance.CjThe allocation storing the slice contents. This always \xe2\x80\xa6ClThe backing memory of the value. May contain more memory \xe2\x80\xa63101010EcAbstracts over the logic of <code>alloc_zeroed</code> vs <code>alloc</code>, as \xe2\x80\xa6CeRuns the type-checking, region checking and other \xe2\x80\xa6CmThe root query triggering all analysis passes like typeck \xe2\x80\xa6000000DeReturns the <code>Analysis</code> used to generate the underlying \xe2\x80\xa6CkAdds annotations for <code>#[rustc_regions]</code>; see \xe2\x80\xa6CnAs part of the NLL unit tests, you can annotate a function \xe2\x80\xa6BnIndex into <code>FormatArgs::arguments</code>.DkParses an <code>Argument</code> structure, or what\xe2\x80\x99s contained within \xe2\x80\xa6AiThe path of the artifact.DiIf the <code>Value</code> is an Array, returns the associated vector. \xe2\x80\xa6DjIf this place represents a local variable like <code>_X</code> with no \xe2\x80\xa60DfCompile <code>expr</code>, yielding a place that we can move from etc.AmSee docs in build/expr/mod.rsCeLoad the internal timestamp slice in the vector clockCiExtracts the value of this index as a <code>usize</code>.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000BjArchitecture to use for interpreting asm!.0CkExtra arguments to pass to the external assembler (when \xe2\x80\xa6CkCode shared by trait and projection goals for candidate \xe2\x80\xa6DkConvenience method to prefix the expression with the <code>async</code> \xe2\x80\xa6BiWhether an FFI call is currently ongoing.DkThis module contains the implementation of the <code>#[autodiff]</code> \xe2\x80\xa6BbBindings that must be established.BjThe bindings to set up in this sub-branch.BbBindings introduced by the import.BkGet the resulting type of binary operation.0CnReturns the number of bits available for use for tags in a \xe2\x80\xa6CkConvenience method to transform suggestion into a block \xe2\x80\xa6CdThe conditional branches where the first element \xe2\x80\xa6CgThe conditional targets which are only taken if the \xe2\x80\xa61AiLoad all built-in targetsAaC string literal.BjCreates a <code>DynMachineCallback</code>:DjCheck if the cast constant using <code>IntToInt</code> is equal to the \xe2\x80\xa6FaReturns <code>true</code> if <code>self</code> can name a name from <code>other</code> \xe2\x80\x93 in \xe2\x80\xa6000CkReturns the number of elements the map can hold without \xe2\x80\xa6CkReturns the number of elements the set can hold without \xe2\x80\xa610101010DlMapping from each captured lifetime <code>&#39;a</code> to the duplicate \xe2\x80\xa6CnThe <code>catch_fn</code> callback to call in case of a panic.0AlWhat caused this constraint?DhWhat category do we assign the resulting <code>&#39;a: &#39;b</code> \xe2\x80\xa61Ek<code>cfg_edge(point1, point2)</code> for each edge <code>point1 -&gt; point2</code> in \xe2\x80\xa60CmHelper used for fns and closures. Does the grungy work of \xe2\x80\xa6CnCheck if a function\xe2\x80\x99s argument types and result type are \xe2\x80\xa6CnEmits an error if an expression cannot be evaluated in the \xe2\x80\xa6BmThe child id of the node the value came from.BoIf the pointer was reborrowed, it has children.CkCollect items that were created by lowering the current \xe2\x80\xa6AoAssociated diagnostic messages.CnThe \xe2\x80\x9croot\xe2\x80\x9d impls are found by looking up the trait\xe2\x80\x99s \xe2\x80\xa60DeReturns an iterator over the immediate children of <code>self</code>.BaIterate over all direct children.DgReturns an iterator over the children diagnostics of <code>self</code>.33BkNested list of links (used only in top-toc)CnRoutines the parser and pretty-printer use to classify AST \xe2\x80\xa6EbReturns the <code>DefId</code> of the <code>clone_fn</code> lang item if it is \xe2\x80\xa6ClMaps crate IDs as they are were seen from this crate\xe2\x80\x99s \xe2\x80\xa6mType CoercionChMark the relevant projection cache key as having its \xe2\x80\xa6CnIf we were able to successfully evaluate the corresponding \xe2\x80\xa60BeAdds a key/value entry to this cache.ClCompletes the query by updating the query cache with the \xe2\x80\xa61DhExecutes <code>func</code> as a job, either aborting or executing as \xe2\x80\xa643CjCompresses the vector, removing all popped nodes. This \xe2\x80\xa6ChSubstitutes a component if found in the substitution \xe2\x80\xa6EhReturns the <code>ConstOperand</code> that is the target of this <code>Operand</code>\xe2\x80\xa6CaReturn a constant if this info is related to one.DcThis should be <code>None</code> during normal compilation. See \xe2\x80\xa6CmWhether all set bits in a source flags value are also set \xe2\x80\xa60DfReturns <code>true</code> if <code>v</code> is contained in the range.1EbReturns <code>true</code> if the region <code>r</code> contains the given element.222222CfReturns <code>true</code> if the set contains a value.ChChecks whether <code>a &lt; target</code> (transitively)DjReturns <code>true</code> if <code>self</code> contains <code>elem</code>.0EfDo the bits from <code>row</code> contain <code>column</code>? Put another way, is \xe2\x80\xa60BoReturns if the <code>index</code>th bit is set.74777CgChecks whether a type recursively contains another type88588CgReturn whether the current state contains the given \xe2\x80\xa69899CfReturns whether or not the file contains the given \xe2\x80\xa6EaReturns <code>true</code> if <code>self</code> fully encloses <code>other</code>.0;;;;;8;;8;EhReturns <code>true</code> if <code>range</code> is fully contained in <code>self</code>.CkCounts how many elements of the slices are equal as per \xe2\x80\xa60CcMetadata from source code coverage analysis and \xe2\x80\xa6ClCan be used to look up the name and html_root_url of the \xe2\x80\xa6DhThis can be used as a key to the <code>external_crates</code> map of \xe2\x80\xa6CaReturns the const to use when a const is omitted.AhThe current line number.BnReturns the span of the currently executed \xe2\x80\xa6Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6000000CjReturns the <code>kind</code> of given <code>DefId</code>.BlReturns the name of given <code>DefId</code>BmReturns the name of given <code>DefId</code>.DhReturns the path from the crate root to <code>index</code>. The root \xe2\x80\xa6EeConverts a <code>DefId</code> into its fully expanded <code>DefPath</code> (every \xe2\x80\xa6CbA span that resolves at the macro definition site.CkThe span of the macro definition (possibly dummy). This \xe2\x80\xa6BaGets the span for the definition.000000CjRetrieves definition span of the given <code>DefId</code>.BhReturns the given default set of passes.DcWe use a <code>RefCell</code> here so that delegates can mutate \xe2\x80\xa6CkThe inference context that backs (mostly) inference and \xe2\x80\xa60CiHow to link (or not link) this crate to the currently \xe2\x80\xa6=======DhThis module defines the <code>DepNode</code> type which the compiler \xe2\x80\xa6BcReturn the dependency root, if any.BhWhere this dependency was included from.DgThe compiler code necessary to implement the <code>#[derive]</code> \xe2\x80\xa6CmDirectory to search child module files in, often (but not \xe2\x80\xa6CkThe linker features that are disabled on the CLI, using \xe2\x80\xa6ClThe type of the state discriminant used in the coroutine \xe2\x80\xa60000CkWhether the last checked node generates a divergence (e.g.,CmChecks a cast, and report an error if one exists. In some \xe2\x80\xa6DgReturns hint text for use in <code>Config::print_docs()</code>. For \xe2\x80\xa6CcThe type that <code>Drop</code> is implemented for.BnThe size of the destination type\xe2\x80\x99s referent.CdAs part of generating the regions, if you enable \xe2\x80\xa6CeWrite out our state into the <code>.mir</code> files.CbIf the session is properly configured, dumps a \xe2\x80\xa6BnThis pass just dumps MIR at a specified point.DmEats <code>+</code> possibly breaking tokens like <code>+=</code> in process.EeIf present, the <code>else_opt</code> expr is always <code>ExprKind::Block</code> \xe2\x80\xa6AkSpan of the repeat element.00AlEmit MIR for this item body.BmEmit the body of this instance if it has one.Bl1-based ending line of the source code span.0CmEndpoint of a transition. Meant only for diagnostics, use \xe2\x80\xa6DkIdentifies the entry-point (e.g., the <code>main</code> function) for a \xe2\x80\xa6000000CmReturn the function where execution starts if the current \xe2\x80\xa6AjThe main function to call.AfEnvironment variables.0CkError condition happened on the associated file descriptor.CkFor stream socket, this event merely indicates that the \xe2\x80\xa6CmThe associated file is available for write(2) operations, \xe2\x80\xa6BgChecks whether two blocks are the same.BfMakes <code>expected == actual</code>.0EaReturns the <code>DefId</code> of the <code>eq</code> lang item if it is defined.DkCreates an <code>TypeErrCtxt</code> with a reference to the in-progress \xe2\x80\xa6DeCreates a <code>TypeErrCtxt</code> for emitting various inference \xe2\x80\xa6CmThis is just to avoid a potential footgun of accidentally \xe2\x80\xa61DeReturns a vector of obligations for <code>p</code> and all of its \xe2\x80\xa6CkReceiver for memory acceses that ocurred during the FFI \xe2\x80\xa6DkReturns a <code>Folder</code> for deeply expanding all macros in an AST \xe2\x80\xa6DfThe <code>expected</code> type at the top level of type checking a \xe2\x80\xa6CkThe exponent separator (b\xe2\x80\x99e\xe2\x80\x99 or b\xe2\x80\x99E\xe2\x80\x99) including \xe2\x80\xa6DeConstruct <code>ExprKind::Err</code> for the given <code>span</code>.CgReturns a mutable reference to the expression being \xe2\x80\xa6CmIf the expression is function like, get the signature for \xe2\x80\xa6BoAn extra <code>DefId</code>, which we need for:DaValues of the <code>target_family</code> cfg set for this target.CkDefault target features to pass to LLVM. These features \xe2\x80\xa6BhBitwise \xe2\x80\x9cor\xe2\x80\x9d with the current value.Dg<code>place_ty.field_ty(tcx, f)</code> computes the type of a given \xe2\x80\xa6CnIf packed_bundled_libs enabled, actual filename of library \xe2\x80\xa6CmThe path to the source file for this span relative to the \xe2\x80\xa6DgTypically based on <code>.rs</code> input file name. Any \xe2\x80\x98-\xe2\x80\x99 is \xe2\x80\xa6ClReturns the final type we ended up with, which may be an \xe2\x80\xa6CnThe parser has gotten a chance to accept the attributes on \xe2\x80\xa6CmGenerates and exports the coverage map, which is embedded \xe2\x80\xa6BiCreates any deferred debug metadata nodesDaReturns the index of the first bit in <code>start..end</code> \xe2\x80\xa6DkLocates the given place and applies <code>DerefLen</code>, if it exists \xe2\x80\xa6ChIf we fail to merge responses we flounder and return \xe2\x80\xa6CnWrites the \xe2\x80\x9chead\xe2\x80\x9d part of the terminator; that is, its \xe2\x80\xa6EaReturns the <code>DefId</code> of the <code>Fn</code> lang item if it is defined.C`Call <code>f</code> on every stack in the range.DiCreates a <code>GenericArgs</code> for generic parameter definitions, \xe2\x80\xa60Aj(item, renamed, import_id)B`The fraction part of the number.DgByte range in the <code>dbg_var</code> covered by this fragment, if \xe2\x80\xa6BfThe url fragment to append to the linkCnCreate the default set of MIR pretty-printing options from \xe2\x80\xa6CjCounting backwards from end? This is always false when \xe2\x80\xa6DhWhether <code>to</code> counts from the start or end of the array/slice.10101010101010CjAttempts to connect to the jobserver specified in this \xe2\x80\xa6CaGet atomic access to a <code>&amp;mut u64</code>.CgCreates a new reference to an atomic integer from a \xe2\x80\xa6EdConstructs a new <code>IndexVec&lt;I, T&gt;</code> from a <code>Vec&lt;T&gt;</code>.0CiParse an OS version triple (SDK version or deployment \xe2\x80\xa6ClConverts a lower-case string to a level. This will never \xe2\x80\xa60CfBuild a new constant that represents the given string.CaMaps a string to an identifier with a dummy span.DaParses a single <code>-Clink-self-contained</code> well-known \xe2\x80\xa6DkParses a single <code>-C linker-features</code> well-known feature, not \xe2\x80\xa65BbGiven a link, parse and return \xe2\x80\xa6DdConstructs a <code>Tree</code> representing the value of a enum tag.EbCreates a <code>MacroExpanderResult::Ready</code> from a <code>TokenStream</code>.0CbCreates a new index from a given <code>u16</code>.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000CbCreates a new index from a given <code>u32</code>.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000CeCreate an EventId from a raw u64 value. Only used \xe2\x80\xa6C`Span of the <code>..RHS</code> part of the rangeCnWhen targeting MSVC, this stores the cleanup info for each \xe2\x80\xa6BgThe function to lookup the parameter in00DdAll these ranges skipped over <code>gap</code> which we think is \xe2\x80\xa6DeThe unusual case, where the <code>has_feature</code> condition is \xe2\x80\xa6BeGeneric arguments as provided by userCnCombines liveness analysis with initialization analysis to \xe2\x80\xa6CaList of generics, e.g., <code>R: rand::Rng</code>ChGeneric type parameters in scope for the item we are in.0CgThe generic parameters and where clauses on this union.ChThe generic parameters and where clauses on this struct.DkInformation about the type parameters and <code>where</code> clauses of \xe2\x80\xa6CjInformation about the function\xe2\x80\x99s type parameters and \xe2\x80\xa611DiInformation about the impl\xe2\x80\x99s type parameters and <code>where</code> \xe2\x80\xa62CdThe generic parameters and where clauses on ahis \xe2\x80\xa6CnGets a line from the list of pre-computed line-beginnings. \xe2\x80\xa6CeIf the iterator has only one element, returns it, \xe2\x80\xa6CjIf the set has only one element, returns it, otherwise \xe2\x80\xa6CnIn case this is an item which can be converted into a link \xe2\x80\xa6CjMaps glob imports to the names of items actually imported.CnWhether the new trait solver should be enabled everywhere. \xe2\x80\xa6CiMust return a DOT compatible identifier naming the graph.BhThis module provides linkage between \xe2\x80\xa6CbA helpful diagram for debugging dataflow problems.0BnThe end of the match arm guard\xe2\x80\x99s expression.CgThe beginning of the match arm guard\xe2\x80\x99s expression \xe2\x80\xa6CjDetermines whether an item is annotated with an attribute.ClWhether this function actually has a body. For functions \xe2\x80\xa6BkCheck if a body is available for this item.CbCheck whether the body of a function is available.CaCheck whether this instance has a body available.1ChWhether the function has a body, i.e. an implementation.EfIf this function returns <code>true</code>, it implies that <code>is_struct</code> \xe2\x80\xa6CjFormatted code differs from existing code (\xe2\x80\x93check only).CfChecks whether this type implements <code>Drop</code>.ChReturns <code>true</code> if this type has a destructor.DiReturns <code>true</code> if this list item is a MetaItem with a name \xe2\x80\xa60EeReturns <code>true</code> if the attribute list contains a specific <code>word</code>DaRetrieves the <code>Node</code> corresponding to <code>id</code>.DfRetrieves the <code>hir::Node</code> corresponding to <code>id</code>.CnGets the span of the definition of the specified HIR node. \xe2\x80\xa6CmThe file where the ICE information is stored. This allows \xe2\x80\xa6FhReturns a <code>TraitRef</code> of the form <code>P0: Foo&lt;P1..Pn&gt;</code> where <code>Pi</code> \xe2\x80\xa600CiThe <code>DefId</code> of the <code>impl AsyncDrop</code>CeThis field is used to prevent duplicated impl blocks.DdThis module contains <code>HashStable</code> implementations for \xe2\x80\xa6CmThis is set once we\xe2\x80\x99re generalizing the arguments of an \xe2\x80\xa6EdReturns <code>true</code> if this <code>Place</code> contains qualif <code>Q</code>.EgUsed to detect possible <code>.</code> -&gt; <code>..</code> typo when calling methods.DhConvenience wrapper that pushes a scope and then executes <code>f</code>CnSet of traits which are used to emulate the inherent impls \xe2\x80\xa60CkComputes a normalizes-to (projection) goal for inherent \xe2\x80\xa611BlThe def_id and args of the current function.0DkFor a constant or static, the <code>Instance</code> of the item itself. \xe2\x80\xa6CkSome features are internal to the compiler and standard \xe2\x80\xa6CmSome lints that are only useful in the compiler or crates \xe2\x80\xa6CgModule containing the translation from rustc_public \xe2\x80\xa6CiConvert a stable item into its internal Rust compiler \xe2\x80\xa6BmConverts into a true <code>Toc</code> struct.DeReturns true if the <code>Value</code> is an Array. Returns false \xe2\x80\xa6AgIs this function async?BnWas a <code>RangePatternBound</code> expected?CnThis field is used to represent \xe2\x80\x9cconst\xe2\x80\x9d arguments from \xe2\x80\xa6BnIs this function marked as <code>const</code>?BiWhether this is the root item of a crate.DhReturns <code>true</code> if this contains only a dummy primary span \xe2\x80\xa60DgReturns <code>true</code> if this is a dummy span with any hygienic \xe2\x80\xa60BoWhether all bits in this flags value are unset.00000000CjReturns <code>true</code> if the map contains no elements.CjReturns <code>true</code> if the set contains no elements.BaReturns whether a stack is empty.EdReturns <code>true</code> if all the items in this collection are <code>None</code>.AaIs the set empty?0DhReturns <code>true</code> if this region constraint data contains no \xe2\x80\xa6CfRepresents an empty (trivially true) set of region \xe2\x80\xa676577777657077AoWhether this has any witnesses.CaChecks if this <code>TokenStream</code> is empty.99CcReturns <code>true</code> if <code>hi == lo</code>.::::43:98::98:CnReturns whether this definition is known to not be further \xe2\x80\xa600CkSignals that the argument is the first parameter in the \xe2\x80\xa6CkReturns true if the given node has been marked as green \xe2\x80\xa6ChReturns <code>true</code> if the token is an identifier.BmThe passed string is lexically an identifier.BeReturns true if this access is local.DiCheck whether the stack frame that this <code>FrameInfo</code> refers \xe2\x80\xa6CiWhether or not this macro is defined in the current crateCnReturns whether the item is defined in the crate currently \xe2\x80\xa60BaIs this region named by the user?CiDoes this early bound region have a name? Early bound \xe2\x80\xa6BlWhether this corresponds to a never pattern.CfWhether the sub-branch corresponds to a never pattern.ElIs <code>def_id</code> of <code>std::panic</code>, <code>core::panic</code> or any inner \xe2\x80\xa6CjTrue for free regions other than <code>&#39;static</code>.DjChecks whether values of this type <code>T</code> have a size known at \xe2\x80\xa6DgReturns <code>true</code> if the given token tree is a token of the \xe2\x80\xa6DmReturns <code>true</code> if <code>def_id</code> refers to a trait (i.e., \xe2\x80\xa6BmReturns <code>true</code> if this is a union.EfChecks whether values of this type <code>T</code> implement the <code>Unpin</code> \xe2\x80\xa6BgCheck if type is an <code>usize</code>.Dh<code>Yield</code> terminators are not chainable, because their sole \xe2\x80\xa6CkProvides iteration over all elements. The iterator also \xe2\x80\xa6CkProvides mutable iteration over everything in the given \xe2\x80\xa6CiAn iterator visiting all key-value pairs in arbitrary \xe2\x80\xa60000CjReturns the key to use when serializing the setting to \xe2\x80\xa6CoCalls <code>kill</code> for each element in <code>elems</code>.0DhThe last TlsKey used to retrieve a TLS destructor. <code>None</code> \xe2\x80\xa6AfThe last token parsed.CnFinds the bottom-most (ie. most specialized) definition of \xe2\x80\xa600Am<code>if let</code> scrutineeBe<code>while let</code> loop scrutineeBm<code>if let PAT = EXPR</code> ^^^^^^^^^^^^^^C`<code>while let PAT = EXPR</code> ^^^^^^^^^^^^^^CeLibrary search paths strings to hand to the compiler.CjReturns a lifetime identifier if this token is a lifetime.BdThe lifetime of the whole dyn objectCgThe name of the lifetime of the reference, if provided.AiThe name of the lifetime.BmThe closing sequence of characters for a lineCjEnvironment variables to be set for the linker invocation.AkWhat level to cap lints at.BfPerforms lint checking for the module.000000CjA classic liveness analysis based on dataflow over the \xe2\x80\xa6CbSafe wrappers for coverage-specific FFI functions.CmEntry point for obtaining the MIR of anything that should \xe2\x80\xa60CkReturns the type of a local that\xe2\x80\x99s newly-added in the \xe2\x80\xa6Ajlocation of initializationCnAttempts to find where an external crate is located, given \xe2\x80\xa6CbLower a <code>hir::Ty</code> to a <code>Ty</code>.CkLower a type from the HIR to our internal notion of a type.CjChanges a statement to a nop. This is both faster than \xe2\x80\xa6AbCreates a pattern.ChCreates a counter that is the sum of the given counters.CnThis function is used to handle the \xe2\x80\x9chidden lines\xe2\x80\x9d (ie \xe2\x80\xa6CmA simple markdown parser that can write formatted text to \xe2\x80\xa6AnStandalone markdown rendering.DdDoctest functionality used only for doctests in <code>.md</code> \xe2\x80\xa6B`Markdown formatting for rustdoc.CoReenables protection on the page set by <code>PAGE_ADDR</code>.CjHouses the types that are directly sent across the IPC \xe2\x80\xa6CbReading of the rustc metadata for rlibs and dylibsBkMetadata component. This is field 1 in MIR.CkMetadata about a target, for example the description or \xe2\x80\xa6DhReturns <code>true</code> if the closure was called from a different \xe2\x80\xa6CmRetrieve the body of a function. This function will panic \xe2\x80\xa60DbSet of all the <code>DefId</code>s in this crate that have MIR \xe2\x80\xa6000000DkFinds the full set of <code>DefId</code>s within the current crate that \xe2\x80\xa6CiPath to the module starting from the crate name, like \xe2\x80\xa6CnThe context for which a trait is supposed to be used, e.g. \xe2\x80\xa6DoConvenience method to create the <code>&amp;mut &lt;expr&gt;</code> suggestion.DkLike <code>PrimTy::name</code>, but returns a &amp;str instead of a symbol.Ac<code>!Trait</code>CgDefault initial permission of a shared reference to \xe2\x80\xa6CnCreate the initial fixup for printing an expression as the \xe2\x80\xa6EdCommon helper for <code>new_injected_jobs</code> and <code>new_internal_jobs</code>.DkConvenient wrapper to create a <code>Span</code> from a position in the \xe2\x80\xa6CjCreate the initial fixup for printing an expression in \xe2\x80\xa6BgQueues the addition of a new temporary.AoThe text to display in the HTMLCcGet the next DFN in sequence (basically a counter).CdThe Key to use for the next thread-local allocation.0CeThe set of newly generated mps. These are used to \xe2\x80\xa6Cklast position of the span to gradually build the suggestionCnCreates the \xe2\x80\x9cError\xe2\x80\x9d variant that signals \xe2\x80\x9cno match\xe2\x80\x9d\xe2\x80\xa6BdIf true, this pointer is never null.BjThe number of CPUs to be reported by miri.000BhReturns the number of SCCs in the graph.CfReturns the number of type variables created thus far.BdThe trait being implemented, if any.C`Whether this is a trait impl or an inherent impl1AaOpen an HTML tag.EgThe operands for the inline assembly, as <code>Operand</code>s or <code>Place</code>\xe2\x80\xa60CnSome(level) to optimize binary size, or None to not affect \xe2\x80\xa6CoParsed representation of the <code>#[optimize]</code> attributeCiReturns <code>true</code> if fr1 is known to outlive fr2.CmStores the outlives relations that are known to hold from \xe2\x80\xa6CeVarious code related to computing outlives relations.FaThe outlives relation <code>T: &#39;a</code> or <code>&#39;a: &#39;b</code>. This code frequentlyCnTypes that are required to be alive in order for this type \xe2\x80\xa6102101CgThe lifetimes that must be encompassed by the lifetime.CiLifetimes that this lifetime parameter is required to \xe2\x80\xa6DjOverflow is only <code>Some(suggest_recursion_limit)</code> when using \xe2\x80\xa6BhRewrite a list some items with overflow.DjReturns <code>true</code> if <code>self</code> touches <code>other</code>.CnExtract the own args from this projection. For example, if \xe2\x80\xa6ClReturns the args corresponding to the generic parameters \xe2\x80\xa611CiGiven the id of an owner node in the AST, returns the \xe2\x80\xa6AiSpecify package to formatCjConverts two 32-bit integer vectors to a single 16-bit \xe2\x80\xa6CiConverts two 16-bit integer vectors to a single 8-bit \xe2\x80\xa61CjConverts two 16-bit signed integer vectors to a single \xe2\x80\xa6EdReturns the <code>DefId</code> of the <code>panic</code> lang item if it is defined.Ck<code>true</code> if the codegen should be run in parallel.CiRuns a list of blocks in parallel. The first block is \xe2\x80\xa6CdThis module defines parallel operations that are \xe2\x80\xa6CnReturns the <code>GenericParamDef</code> with the given index.CiThe type corresponding to the anonymous region parameter.DjParse a function starting from the front matter (<code>const ...</code>\xe2\x80\xa6EgRuns the given subparser <code>f</code> on the tokens of the given <code>attr</code>\xe2\x80\xa6DmMatch the token stream from <code>parser</code> against <code>matcher</code>.nParses a type.CiThe span of the pattern in which this variable was bound.CkNumber of links to reach the extern; used to select the \xe2\x80\xa6DeIf <code>maybe_path</code> is a path node, resolves it, otherwise \xe2\x80\xa6BhA set of path specified in rustfmt.toml.DkThis must not contain an or-pattern. <code>expand_and_push</code> takes \xe2\x80\xa6DkThis position is reinitialized when using <code>next</code>. It is used \xe2\x80\xa6EbReturns the <code>DefId</code> of the <code>pin</code> lang item if it is defined.CgThe implementation of the query system itself. This \xe2\x80\xa60EcNote: this will turn <code>u128::MAX</code> into <code>PosInfinity</code>. This \xe2\x80\xa6CmMultiplies packed 16-bit signed integer values, truncates \xe2\x80\xa6CmIf polarity is Positive: we are proving that the trait is \xe2\x80\xa600000BcPolonius analysis and support code:EdPopulates the <code>Cache</code> with more data. The returned <code>Crate</code> \xe2\x80\xa6ChByte offset for the start and end of this formatting \xe2\x80\xa6CiParses a positional argument for a format. This could \xe2\x80\xa6AkWhere to find this argumentAb<code>Trait</code>CfFrom the NLL RFC: \xe2\x80\x9cShallow prefixes are found by \xe2\x80\xa6DkReturns an iterator over the prefixes of <code>place</code> (inclusive) \xe2\x80\xa6AnPreorder traversal of a graph.CdExpressions should only ever be matched on after \xe2\x80\xa6CmThese two passes provide no value to the compiler, so are \xe2\x80\xa6CkThe dep-graph from the previous compilation session. It \xe2\x80\xa6CnThis doesn\xe2\x80\x99t deserve to be called \xe2\x80\x9cpretty\xe2\x80\x9d printing, \xe2\x80\xa6DiThe <code>measureme</code> profiler used to record timing information \xe2\x80\xa60DiThe <code>SelfProfiler</code> used to intern the event arguments that \xe2\x80\xa6AdAccess the profiler.00AlThe mir bodies of promoteds.CdThe bodies of all promoteds. As promoteds have a \xe2\x80\xa6DeIf <code>Some</code>, this is a promoted rvalue within the parent \xe2\x80\xa6ClThe index for promoted globals within their function\xe2\x80\x99s \xe2\x80\xa6DdPush a component onto the buffer, using <code>format!</code>\xe2\x80\x99s \xe2\x80\xa6CnGets the raw unprocessed command-line arguments as Unicode \xe2\x80\xa60AiA plain dummy expression.BmA span that has been extracted from a MIR \xe2\x80\xa6CmReturns the region to use when a lifetime is omitted (and \xe2\x80\xa6BaThe directory reader on the host.CjRead this allocation and try to convert it to a signed \xe2\x80\xa6CgTurn the wide MPlace into a string (must already be \xe2\x80\xa6DfThis is needed because this wraps a <code>&amp;mut T</code> and is \xe2\x80\xa6BbThe receiver, e.g. <code>x</code>.CiWhether the parser is allowed to do recovery. This is \xe2\x80\xa6ClRegion inference context. This contains the results from \xe2\x80\xa6ClRegisters the current thread with the registry so worker \xe2\x80\xa6CiRegister all non-excluded places that have scalar layout.AnRegistry of diagnostics codes.DkIf a worker thread in registry A calls <code>in_place_scope</code> on a \xe2\x80\xa6CbReturns the registry that owns this worker thread.Ddthread registry where <code>scope()</code> was executed or where \xe2\x80\xa6EoStores the relation <code>a &lt; b</code>, where <code>a</code> and <code>b</code> are regions.CkSometimes we know that as far as this row is concerned, \xe2\x80\xa6BeThe message as rustc would render it.CiIf this flag is set to <code>true</code>, then plain, \xe2\x80\xa6EdA function pointer that decides if, per-parameter <code>p</code>, <code>p</code> \xe2\x80\xa6EeReturns <code>true</code> if the specified <code>lang_item</code> must be present \xe2\x80\xa6AnFeatures that must be enabled.DdPropagate <code>Qualif</code>s between locals and query the results.EhReturns the \xe2\x80\x9croot\xe2\x80\x9d variable of <code>vid</code> in the <code>eq_relations</code> \xe2\x80\xa6DhIf <code>ty</code> is an unresolved type variable, returns its root vid.CjThe vid of the type variable that is in the process of \xe2\x80\xa6DkPerforms a depth-first search, starting from the given <code>root</code>\xe2\x80\xa6CfThe core of the lint <code>tail-expr-drop-order</code>BgExecute a <code>RunnableDoctest</code>.CmPerforms thin LTO by performing necessary global analysis \xe2\x80\xa6AhData about all the SCCs.CeDecide which action to take next and on which thread.CiThe canonical name of the desired SDK for a given target.DfThe segments in the path: the things separated by <code>::</code>. \xe2\x80\xa6DbThe segments in the path: the things separated by <code>::</code>.0CjEncodes a node that does not exists in the previous graph.BfSet whether the text is bolded or not.CaConfigures the span for <em>only this token</em>.DkConfigures the span for this <code>Group</code>\xe2\x80\x99s delimiters, but not \xe2\x80\xa6CbConfigure the span for this punctuation character.DiConfigures the span of this <code>Ident</code>, possibly changing its \xe2\x80\xa6C`Configures the span associated for this literal.CnUpdate this index in place by shifting it \xe2\x80\x9cin\xe2\x80\x9d through \xe2\x80\xa6000ChConstruct a <code>ShimSig</code> with convenient syntax:CkA number of passes which remove various redundancies in \xe2\x80\xa6DdSimplifies a match statement, returning <code>Some</code> if the \xe2\x80\xa6ClReturns whether we actually simplified anything. In that \xe2\x80\xa6CmSimplification of where-clauses and parameter bounds into \xe2\x80\xa6CmThe number of blocks that passed since the last BorTag GC \xe2\x80\xa60ChNot overridden, but used to actually visit types and \xe2\x80\xa6CnStarts a new snapshot. Each snapshot must be either rolled \xe2\x80\xa6CgTakes a \xe2\x80\x9csnapshot\xe2\x80\x9d of the current state of this \xe2\x80\xa6CfA macro for triggering an ICE with a span. Calling \xe2\x80\xa6CmReturns span encompassing arguments and their surrounding \xe2\x80\xa6ClThe span encompassing the arguments, constraints and the \xe2\x80\xa6CdSpawns an asynchronous job in <code>registry.</code>CkSplits a span into two composite spans around a certain \xe2\x80\xa6AiThe source code\xe2\x80\x99s hash.DjGenerates a url appropriate for an <code>href</code> attribute back to \xe2\x80\xa6CjThe path to the crate root source minus the file name. \xe2\x80\xa6BiThe size of the source type\xe2\x80\x99s referent.EdReturns the <code>DefId</code> of the <code>start</code> lang item if it is defined.DhSlice of the source text from <code>start</code> up to but excluding \xe2\x80\xa6DfA collection of utility functions for the <code>strip_*</code> passes.Bb\xe2\x80\xa6 and these subpairs must match.DhReturns the <code>subrange</code> within this range; panics if it is \xe2\x80\xa6FeSets <code>self = self - other</code> and returns <code>true</code> if <code>self</code> changed. \xe2\x80\xa600DfIs <code>self</code> is a (non-strict) superset of <code>other</code>?CcReturns the last field in this variant, if present.DkIf <code>universe</code> is less than our current universe, then update \xe2\x80\xa6BhThe expected structure of the attribute.CmA convenience macro for constructing attribute templates. \xe2\x80\xa6ChThe template for the inline assembly, with placeholders.0CcPrepare \xe2\x80\x9cthin\xe2\x80\x9d LTO to get run on these modules.CnMaps <code>AllocId</code>s to their corresponding allocations.BcConverts this into an owned string.CcDiscard validity range information and allow undef.CiPanics if <code>self.kind != ty::ConstKind::Value</code>.CkCreates an iterator that produces tokens from the input \xe2\x80\xa6DjReturns <code>Some(span)</code>, where the end is trimmed by the start \xe2\x80\xa6AiTrim trailing whitespacesCgTruncates <code>value</code> to <code>self</code> bits.DeLike <code>llbb</code>, but may fail if the basic block should be \xe2\x80\xa6BoReturns the type to use when a type is omitted.DhThis module contains the definition of the <code>TypeTree</code> and \xe2\x80\xa6CmReturns the result of the specified operation, whether it \xe2\x80\xa6CmModule which contains the snapshot/rollback functionality \xe2\x80\xa6CnWhich universe is this region variable defined in? This is \xe2\x80\xa6CnWhat is the innermost universe we have created? Starts out \xe2\x80\xa6BhFor some SCC S, the minimum universe of:CaThe stability assigned to unmarked items when \xe2\x80\xa6CjUnsafety checker: every impl either implements a trait \xe2\x80\xa6BcList of the unstable feature gates.CjModule that collects the things that have no stability \xe2\x80\xa6ClSpan of the single use, or None if the lifetime is never \xe2\x80\xa6BaSpan of the entire use statement.CnThis field keeps track of all the local variables that are \xe2\x80\xa6ClReturns whether the flavor uses the <code>lld</code> linker.BnCreate a type representing <code>usize</code>.DjTrait method used to inject <code>va_start</code> on the \xe2\x80\x9cspoofed\xe2\x80\x9d \xe2\x80\xa60CgValidates the MIR to ensure that invariants are upheld.CkCheck the validity invariant of a given value, and tell \xe2\x80\xa6CaWhether the place is known to contain valid data.BdThe span of the variable being movedCjModule for inferring the variance of type and lifetime \xe2\x80\xa6CnWhen we\xe2\x80\x99re looking up a method by path (UFCS), we relate \xe2\x80\xa6EjVariance to use when relating the <code>user_ty</code> to the <strong>type of </strong>\xe2\x80\xa6CnEncodes information about multi-variant layouts. Even with \xe2\x80\xa6BoReturns a vector of variants subtags of the \xe2\x80\xa60CkVariants of the ADT. If this is a struct or union, then \xe2\x80\xa60EfCreates a <code>SmallVec</code> mapping each target in <code>targets</code> to its \xe2\x80\xa63BbRetrieve the variants in this ADT.BaThe list of variants in the enum.AoSpan of the visibility, if any.DjWe sometimes have <code>ty</code>s within an rvalue, or within a call. \xe2\x80\xa6CmAll types are treated as ambiguous types for the purposes \xe2\x80\xa6BeThe core driver for walking a patternCjThe formatting string was parsed successfully but with \xe2\x80\xa6CgThe first wildcard <code>_ =&gt; { ... }</code> branch.CkCreate a wildcard pattern for this type. If the type is \xe2\x80\xa6BnAdd an argument. See <code>Diag::arg()</code>.CmAllow moving diagnostics between different error tainting \xe2\x80\xa6ChReturns <code>self</code> with replaced <code>end</code>AnCreates an evaluation context.E`Creates a <code>SnapshotVec</code> using the <code>undo_log</code>, allowing \xe2\x80\xa6EdCreates a <code>UnificationTable</code> using an external <code>undo_log</code>, \xe2\x80\xa6EfAllows access to the <code>TyCtxt</code> in the current <code>ImplicitCtxt</code>. \xe2\x80\xa60CaEvaluates the closure with restrictions in place.EgDo some <code>work</code> within a new innermost rib of the given <code>kind</code> \xe2\x80\xa6AnType of value that is yielded.CgReturns the type representing the yield type of the \xe2\x80\xa60CiThe yield type of the function. This field is removed \xe2\x80\xa611DhThe <code>0</code> flag. E.g. the <code>0</code> in <code>{:02x}</code>.AhThe <code>0</code> flag.Dd<code>#[rustc_allocator]</code>: a hint to LLVM that the pointer \xe2\x80\xa6BdAllows <code>let</code> expressions.CkA failed attempt has been made to load the external source.BgThe <code>+=</code> operator (addition)BfThe <code>add_assign</code> lang item.1BgWe added the given <code>verify</code>.CjCreates a pointer with the indicated mutability to the \xe2\x80\xa60CcCreates an aggregate value, like a tuple or struct.0CnAn aggregate value, either tuple/closure/struct/enum. This \xe2\x80\xa611oLinker for AIX.CeRepresents the unprojected term of a projection goal.000BfThe value will be aligned to the left.BgEnum of alignments which are supported.CnGiven a set of bounds <code>B</code>, expands to the function:0BgMetadata about an <code>AllocId</code>.0CgWhether a new allocation should be initialized with \xe2\x80\xa60DkThe return value of <code>get_alloc_info</code> indicates the \xe2\x80\x9ckind\xe2\x80\x9d\xe2\x80\xa60BaType that is stored in the arena.CkSignals whether parsing a type should allow <code>+</code>.AmMultiple methods might apply.CnWe failed due to ambiguity. This ambiguity can either be a \xe2\x80\xa6ClAn ambiguity. This goal may hold if further inference is \xe2\x80\xa6CiAmbiguity can happen when monomorphizing during trans \xe2\x80\xa6212022221022CkThe query is not known to be true, but also not known to beCiA marker predicate that is always ambiguous. Used for \xe2\x80\xa6001BbMarker for bailing with ambiguity.2111BnAn elided lifetime <code>&amp;&#39; ty</code>.CnA constant (expression) that\xe2\x80\x99s not an item or associated \xe2\x80\xa6DlAnonymous constant, e.g. the <code>1 + 2</code> in <code>[u8; 1 + 2]</code>.CnA constant expression (see <code>{ast,hir}::AnonConst</code>).2BaE.g. The labeled block inside \xe2\x80\xa6223CjResolves to the name in the first available namespace, \xe2\x80\xa6C`Struct-like placement, with precomputed offsets.CnThe places might partially overlap - in this case, we give \xe2\x80\xa61ClScope of arguments passed to a function or closure (they \xe2\x80\xa6BkOutput operand of an inline assembly block.CkRepresents the requested configuration by rustc_clean/dirtyDiRepresents associated items. These include items in <code>impl</code> \xe2\x80\xa6BdInformation about an associated item0ClWe passed through an impl or trait and are now in one of \xe2\x80\xa6BhAn associated type of a trait or a type.0BfThe <code>async_drop</code> lang item.DfThis is essentially an <code>AtomicPtr</code> but is guaranteed to \xe2\x80\xa60CkAn integer type which can be safely shared between threads.0DiDistinguishes between <code>Attribute</code>s that decorate items and \xe2\x80\xa60BnA syntax-level representation of an attribute.BjAn attribute, e.g. <code>#[repr(C)]</code>AhE.g., <code>Send</code>.00000CmRecursively dereference a type, considering both built-in \xe2\x80\xa6DjThe <code>bare_urls</code> lint detects when a URL is not a hyperlink. \xe2\x80\xa6C`<code>impl</code> implementation of struct/traitAjOnly used for diagnostics.CnWe have not started dumping the control flow graph, but we \xe2\x80\xa6C`A fixed-size 2D bit matrix type with a dense \xe2\x80\xa6CkAnalysis domains are all bitsets of various kinds. This \xe2\x80\xa6BoJust a manual blank line \xe2\x80\x9c\\n\\n\xe2\x80\x9d, for layoutClWhether two types should or shouldn\xe2\x80\x99t have a paragraph \xe2\x80\xa6DhThis should be <code>[u8; BYTE_LEN]</code>; Cannot use an associated \xe2\x80\xa6ChExactly what cache size we should use is a difficult \xe2\x80\xa6CjCandidates are a generalization of (a) top-level match \xe2\x80\xa6CkA \xe2\x80\x9croot candidate\xe2\x80\x9d for promotion, which will become theBnA candidate is a possible way to prove a goal.DcA \xe2\x80\x9ccanonicalized\xe2\x80\x9d type <code>V</code> is one where all free \xe2\x80\xa600CnCanonical queries get dummy spans and hence must generally \xe2\x80\xa611D`A capture clause used in closures and <code>async</code> blocks.0CkControls how we capture tokens. Capturing can be expensive,CmReifies a cast check to be checked once we have full type \xe2\x80\xa6ClIndicates whether or not we were able to prove the query \xe2\x80\xa600DeAn expression plus trailing <code>?</code>s to be formatted together.DcChunkSize is small to keep <code>Chunk</code> small. The static \xe2\x80\xa6DiCompiler-generated <code>&lt;T as Clone&gt;::clone</code> implementation.0000000AaLLVMRustCodeModelDjThere is one <code>CodegenCx</code> per codegen unit. Each one has its \xe2\x80\xa6CmWhen checking whether impls overlap, we check whether any \xe2\x80\xa600000AfA color specification.CkRepresent the following statement. If we can prove that \xe2\x80\xa6CaSame as branch coverage, but also adds branch \xe2\x80\xa6ClA condition which must hold for safe transmutation to be \xe2\x80\xa6C`How to decide whether to run a conditional pass.AnRepresents a constant in Rust.000CmAnnotation itself is useless, but it can be propagated to \xe2\x80\xa6BbA container which is used for TLS.CkSpin latches are the simplest, most efficient kind, but \xe2\x80\xa6ClThe MIR is a coroutine. The signature is that coroutines \xe2\x80\xa6BeThe <code>coroutine</code> lang item.BeRepresents <code>#[coroutine]</code>.0CeThis is a coroutine expression \xe2\x80\x93 i.e. a closure \xe2\x80\xa6DfA coroutine literal created via a <code>yield</code> inside a closure.ClThe anonymous type of a coroutine. Used to represent the \xe2\x80\xa600000BoID of a coverage counter. Values ascend from 0.CjMisc info we load from metadata to persist beyond the tcx.CiContains pre-rendered contents to insert into the CCI \xe2\x80\xa6BkHolds information about an item in a crate.AhThe crate root (marker).C`Serialized <code>.rmeta</code> data for a crate.DaThe <code>dead_code</code> lint detects unused, unexported items.0BeApply remappings to debug informationCjOpaque target type for references to an LLVM debuginfo \xe2\x80\xa6C`Working with a local that is not currently live.0A`Strip debuginfo.BhTrait for types that can be deserialized0CkSame as IMPORT_NAME Name is decorated with all prefixes \xe2\x80\xa6CiA type definition as it would be viewed from within a \xe2\x80\xa6DcDelimited arguments, as used in <code>#[attr()/[]/{}]</code> or \xe2\x80\xa60CbDelimited arguments: <code>#[attr()/[]/{}]</code>.BdA delimited sequence of token trees.CkContains the sub-token-trees of a \xe2\x80\x9cdelimited\xe2\x80\x9d token \xe2\x80\xa6EeA delimited sequence, e.g. <code>($e:expr)</code> (RHS) or <code>{ $e }</code> (LHS).3Bbe.g., <code>[derive(Debug)]</code>CiDescribes how a sequence of token trees is delimited. \xe2\x80\xa6CeDescribes how a sequence of token trees is delimited.BfThe <code>deref_pure</code> lang item.DjA temporary created during the pass <code>Derefer</code> to avoid it\xe2\x80\x99\xe2\x80\xa6BiA coroutine that comes from a desugaring.DkThe main part of a diagnostic. Note that <code>Diag</code>, which wraps \xe2\x80\xa60BbLevel of Miri specific diagnosticsEeThe direction of this analysis. Either <code>Forward</code> or <code>Backward</code>.0BgThe <code>/=</code> operator (division)BfThe <code>div_assign</code> lang item.1A`<code>...</code>0BkDescribes how/if a value should be dropped.CnWraps the expression in a terminating scope. This makes it \xe2\x80\xa6CkForward Mode, Compute derivatives for this input/output \xe2\x80\xa6CkDWARF debuginfo in dSYM files (such as on Apple platforms).CjControls whether we \xe2\x80\x9celaborate\xe2\x80\x9d supertraits and so \xe2\x80\xa6BfTrait for types that can be serialized0AiEnd of a multiline stringDkThe discriminant of an enum. The first field is a <code>FieldInfo</code>\xe2\x80\xa6CmThe various errors that can occur during formatting. Note \xe2\x80\xa6CkA unified event representing something happening on the \xe2\x80\xa6CfA unique ID associated with a macro invocation and \xe2\x80\xa6EhA single field in a struct expression, e.g. <code>x: value</code> and <code>y</code> \xe2\x80\xa6BeA signature for a function like type.ChUsed by <code>Parser::maybe_recover_trailing_expr</code>DaABI we expect to see within <code>extern &quot;{abi}&quot;</code>0CkRepresents the pieces of an <code>--extern</code> argument.DjAn iterator for <code>ThinVec</code> which uses a closure to determine \xe2\x80\xa6De#[ffi_const]: applies clang\xe2\x80\x99s <code>const</code> attribute to a \xe2\x80\xa6CmA block where control flow only ever takes one real path, \xe2\x80\xa60CkRepresents the association of a field identifier and an \xe2\x80\xa6CeSummary of the relevant parts of a struct/enum field.AhA set of lines in files.0CjThis is the state after the session directory has been \xe2\x80\xa6CkVisitor for traversing a crate and finding instances of \xe2\x80\xa6ChAn option that does not take a value, and can appear \xe2\x80\xa6DkA helper struct used when building an <code>AttrTokenStream</code> from \xe2\x80\xa6CgProvides the calling context to a closure called by \xe2\x80\xa6BgThe <code>fn_ptr_addr</code> lang item.E`<code>&lt;fn() as FnTrait&gt;::call_*</code> (generated <code>FnTrait</code> \xe2\x80\xa60000000ClThe access is caused by using a variable as the receiver \xe2\x80\xa6CjMoves all footnote definitions to the end and add back \xe2\x80\xa6DdThis feature can not be set via <code>-Ctarget-feature</code> or \xe2\x80\xa6DkThis lint level is a special case of <code>Warn</code>, that can\xe2\x80\x99t be \xe2\x80\xa60BgType from an <code>extern</code> block.00ChWhat we store about a frame in an interpreter backtrace.0BkA macOS-specific kind of dynamic libraries.CcA top level const item not part of a trait or impl.0000CfType alias for a hash map that uses the Fx hashing \xe2\x80\xa6CfType alias for a hash set that uses the Fx hashing \xe2\x80\xa6BbThe <code>global_asm!</code> macroCoModule-level inline assembly (from <code>global_asm!()</code>).BbA use of <code>global_asm!</code>.AbA global asm item.ClFake body for a global asm to store its const-like value \xe2\x80\xa6CmModule-level inline assembly (from <code>global_asm!</code>).33CfABI relevant to GPUs: the entry point for a GPU kernelCbAn entry-point function called by the GPU\xe2\x80\x99s host10CgGraphWalk is an abstraction over a directed graph = \xe2\x80\xa6DiDoes this have <code>Alias</code> or <code>ConstKind::Unevaluated</code>?000BjIs an error type/lifetime/const reachable?000CiDoes this have inference variables? Used to determine \xe2\x80\xa6000CmA set that has a \xe2\x80\x9cbottom\xe2\x80\x9d element, which is less than \xe2\x80\xa60BcA trait for AST nodes having an ID.CjA trait for AST nodes having (or not having) collected \xe2\x80\xa6AkSource files directory treeDiHIR things retrievable from <code>TyCtxt</code>, avoiding an explicit \xe2\x80\xa6CmDuring writeback in typeck, we don\xe2\x80\x99t care about regions \xe2\x80\xa6BfIndicates whether the ADT is a struct.CgAn instance of this struct is created when a thread \xe2\x80\xa6CdAn <code>if</code> or <code>if let</code> expressionAnA single LLVM immediate value.DjAn <code>Immediate</code> represents a single immediate self-contained \xe2\x80\xa60CmCapture a backtrace at the point the error is created and \xe2\x80\xa60BhData must be immutable and is aliasable.0BaThe <code>ty</code> is immutable.EdAn <code>impl Bound1 + Bound2 + Bound3</code> type where <code>Bound</code> is a \xe2\x80\xa6DcAn <code>impl Trait</code>: <code>impl TraitA + TraitB + ...</code>CbAn opaque type that satisfies a set of bounds, \xe2\x80\xa6DgTreat <code>impl Trait</code> as a \xe2\x80\x9ctrait ascription\xe2\x80\x9d, which is \xe2\x80\xa6ClWe were already cleaning up for an ongoing unwind, and a \xe2\x80\xa60CiAlready in an unwind path, any panic will cause an abort.CgAny character inside a comment including the second \xe2\x80\xa6CiStruct representing one entry in the JS search index. \xe2\x80\xa6CkA path consisting of only inductive/unproductive steps. \xe2\x80\xa6000EfWe track whether an infer var is from a <code>Ty</code>, <code>ConstArg</code>, or \xe2\x80\xa6CjA contiguous chunk of initialized or uninitialized memory.0CkInformation about why a type cannot be initialized this \xe2\x80\xa6A`Inline assembly.BhOutput of the <code>asm!()</code> macro.DfInline assembly (from <code>asm!</code>), with its outputs and inputs.CgBlock ends with an inline assembly block. This is a \xe2\x80\xa60BjInline assembly, i.e. <code>asm!()</code>.CiAn inline assembly template string for <code>asm!</code>.BlPost-substitution inline assembly from LLVM.DiRange inside of a <code>Span</code> used for diagnostics when we only \xe2\x80\xa6ChEither an input crate, markdown file, or nothing (\xe2\x80\x93\xe2\x80\xa6BmABIs relevant to bare-metal interrupt targets0DhAn intrinsic <code>fn</code> item (with<code>#[rustc_intrinsic]</code>).0CkDenotes a call to an intrinsic that does not require an \xe2\x80\xa60111111AnA compiler intrinsic function.CnWe switched our variance because a generic argument occurs \xe2\x80\xa60000000000Dk<code>\xe2\x88\x85 ... \xe2\x88\x85</code> An invisible delimiter, that may, for example, \xe2\x80\xa6C`Bits to shift to select the JEC (use JOBS_BITS).AoFunction <code>DepNode</code>s.C`The text for a graphviz label on a node or edge.CmA greatest lower bound\xe2\x80\x9c (common subtype) or least upper \xe2\x80\xa6B`A list of lazily-decoded values.FeEncoding / decoding state for <code>Lazy</code>s (<code>LazyValue</code>, <code>LazyArray</code>, \xe2\x80\xa6CnA list of lazily-decoded values, with the added capability \xe2\x80\xa6CmA value of type T referred to by its absolute position in \xe2\x80\xa6CaBreak bewtween two lines (single <code>\\n</code>)CcA range of lines in a file, inclusive of both ends.BhA sidebar section such as \xe2\x80\x98Methods\xe2\x80\x99.BgInformation about the registered lints.0AlCharacter is within a stringCiEach codegen unit containing a reference to the given \xe2\x80\xa6lA MIR local.CkExtra information about a some locals that\xe2\x80\x99s used for \xe2\x80\xa6DeClassifies locals into categories. See <code>Body::local_kind</code>.EdThe <code>Locations</code> type summarizes <em>where</em> region constraints are \xe2\x80\xa6DgA guard holding mutable access to a <code>Lock</code> which is in a \xe2\x80\xa6ClA Latch starts as false and eventually becomes true. You \xe2\x80\xa6DhA logical operation. This is distinct from <code>BinaryOp</code> becauseC`Escaped \xe2\x80\x99&#39; character without continuation.BfRepresents <code>#[loop_match]</code>.0DkE.g. <code>#[loop_match] loop { state = &#39;label: { /* ... */ } }</code>.eA \xe2\x80\xa6DiThe <code>ty</code> representation of a user-provided type. Depending \xe2\x80\xa6CkEvery line is allowed at least this much space, even if \xe2\x80\xa6CmThe result of a macro expansion. The return values of the \xe2\x80\xa6BnA macro call, like <code>vec![1, 2, 3]</code>.BkThe kind of macro invocation or definition.ChThe way a <code>ProcMacro</code> is declared to be used.D`The keyword <code>macro</code> followed by a name was processed.AlDefines the name of a macro.CnThis is a function called <code>main</code> at the root level.DkFrom <code>match_impl</code>. The cause for us having to match an impl, \xe2\x80\xa600AlThe kind of match expressionAdA row of the matrix.BfRepresents <code>#[may_dangle]</code>.0CgA newtype that represents a relative line number in \xe2\x80\xa6CgThe final results of an FFI trace, containing every \xe2\x80\xa6AiMemory\xe2\x80\x99s allocation map0BfThe <code>meta_sized</code> lang item.Al<code>MetaSized</code> trait000000000AhAn argument to a method.k1.2 | 1.2e3DeRepresents the graph of constraints. For each <code>R1: R2</code> \xe2\x80\xa6CcWhere a specific <code>mir::Body</code> comes from.EeTracks the current MSRV from <code>clippy.toml</code>, <code>Cargo.toml</code> or \xe2\x80\xa6BmThe <code>*=</code> operator (multiplication)BfThe <code>mul_assign</code> lang item.1BcA collection of <code>Span</code>s.0CkTrait implemented by types that can be converted into a \xe2\x80\xa60oThe mutex kind.Df<code>#[no_mangle]</code>: an indicator that the function\xe2\x80\x99s name \xe2\x80\xa6AeName value meta item.CmA <code>MetaNameValueStr</code> in an <code>on</code>-filter.CnAn anonymous region parameter with a <code>Symbol</code> name.000CmDifferent kinds of symbols can coexist even if they share \xe2\x80\xa6Ab<code>type@</code>DkConstant containing an ADT that implements <code>Drop</code>. This must \xe2\x80\xa6CcDetermines towards which end of a struct layout \xe2\x80\xa6DfThe output of <code>nll::compute_regions</code>. This includes the \xe2\x80\xa6DjReturned by <code>InterpCx::pop_stack_frame_raw</code> when no cleanup \xe2\x80\xa60BlDisable extra opt run after running autodiffCkIf not Abort, miri returns an error for an isolated op. \xe2\x80\xa60CjA token range within an individual AST node\xe2\x80\x99s (lazy) \xe2\x80\xa6DkInside a metadata node, and before any <code>Lazy</code>s. The position \xe2\x80\xa6CnThe state of one node in some tree within the forest. This \xe2\x80\xa6AbPreferred eagerly.00000000BfNormalizes, but not in the new solver.000BkDid not load an existing session directory.Bf<code>\\0</code> in a C string literal.BoComputes a value as described by the operation.000BaDeployment target or SDK version.00CiOnce latches are used to implement one-time blocking, \xe2\x80\xa6ChKleene plus (<code>+</code>) for one or more repetitionsCjOnly permit parameter regions. This should be used for \xe2\x80\xa6CkAn opaque type definition itself. This is only used for \xe2\x80\xa6CmHold information about an Opaque definition, particularly \xe2\x80\xa6n<code>{</code>0n<code>(</code>0CbAn operation that can be performed on a coroutine.AcRustfmt operations.EjThis function is <strong>not</strong> an entrypoint but simply named <code>main</code> \xe2\x80\xa6CeFull information resulting from lowering an AST node.CnThe address of the page set to be edited, initialised to a \xe2\x80\xa6ChThe host pagesize, initialised to a sentinel zero value.BbSigils that decorate a binop pair.BfThe <code>panic_impl</code> lang item.BfThe <code>panic_info</code> lang item.AeA function parameter.BnThe type of format string that we are parsing.AmInfo about a parsing session.ChParseSess holds structs necessary for constructing a \xe2\x80\xa6AnThe <code>eq</code> lang item.ClAn indication of where we are in the control flow graph. \xe2\x80\xa6CnRepresents implicit coercions of patterns\xe2\x80\x99 types, rather \xe2\x80\xa6CmRepresents either a pattern obtained from user input or a \xe2\x80\xa6CjDetermines how paths are hashed and compared for equality.AnSpecifies how to parse a path.BjThese impls are always allowed to overlap.F`A pinned reference (<code>&amp;&#39;a pin const T</code> or <code>&amp;&#39;a pin mut T</code>).C`The \xe2\x80\x9coutermost\xe2\x80\x9d place that holds this value.ClContext that provides information local to a place under \xe2\x80\xa6CmAlias for projections as they appear in places, where the \xe2\x80\xa60DiThis is the information tracked for every <code>PlaceIndex</code> and \xe2\x80\xa6CgData about a place under investigation. Its methods \xe2\x80\xa6BaThe <code>Ready</code> lang item.CjA trait reference, which may have higher ranked lifetimes.AkA trait and potential HRTBsAoPostorder traversal of a graph.B`Appears as a precision, e.g. \xe2\x80\xa6CjA statement that can be proven by a trait solver. This \xe2\x80\xa60CgA constraint from a user-written predicate with the \xe2\x80\xa60DmWhen canonicalizing predicates, we don\xe2\x80\x99t keep <code>&#39;static</code>. \xe2\x80\xa6EfPredicate(s) in <code>#[rustc_on_unimplemented]</code>\xe2\x80\x99s <code>on</code> filter. \xe2\x80\xa6BmFundamental unit of memory access and layout.CnScalar primitives and <code>!</code>, which never have fields.10Ab<code>prim@</code>B`A primitive (aka, builtin) type.CkA primitive type declaration. Declarations of this kind \xe2\x80\xa6BhA primitive type, e.g. <code>u32</code>.0FgBuilt-in numeric types (e.g. <code>u32</code>, <code>f32</code>), <code>bool</code>, <code>char</code>.BfPrint Performance Warnings from EnzymeCfPrint TypeAnalysis information for a specific functionCdWhat kind of probe we\xe2\x80\x99re in. In case the probe \xe2\x80\xa600000000BeRepresents <code>#[proc_macro]</code>0AcA procedural macro.0CeExport the symbol from the DSO, but don\xe2\x80\x99t apply \xe2\x80\xa6CbAn entry-point function called by the GPU\xe2\x80\x99s host0CnMuch simplified and explicit CLI for the NVPTX linker. The \xe2\x80\xa6BbRepresents a span and a query key.0BeThe <code>RangeCopy</code> lang item.BeThe <code>RangeFrom</code> lang item.BeThe <code>RangeFull</code> lang item.Al<code>&amp;raw const</code>.Aj<code>&amp;raw mut</code>.DkA <code>&amp;raw [const|mut] $place_expr</code> raw borrow resulting in \xe2\x80\xa6Bj<code>&#39;r#</code> in edition &lt; 2021.BlUnbuffered, unsynchronized writer to stderr.ClItem is either reexported, or leaked through any kind of \xe2\x80\xa6CnRAII structure used to release the shared read access of a \xe2\x80\xa6AoWas parsing recovery performed?Cg<code>module::StructName { field, syntax error }</code>BlThe project cannot be normalized because \xe2\x80\xa6ClThe arm is redundant and can be removed without changing \xe2\x80\xa60ImE.g. <code>&amp;Type</code>, <code>&amp;&#39;_ Type</code>, <code>&amp;&#39;a Type</code>, <code>&amp;mut Type</code>, <code>&amp;&#39;_ mut Type</code>, \xe2\x80\xa6EjA reference, i.e., <code>&amp;&#39;region T</code> or <code>&amp;&#39;region mut T</code>.ClA constraint where neither side is a variable. This does \xe2\x80\xa60CdA concrete region is a subregion of region variable.0DhA <strong>region</strong> <strong>v</strong>ariable <strong>ID</strong>.000000Dh<code>fn()</code> pointer where the function itself cannot be turned \xe2\x80\xa60000000BfRelating two types which have binders.BfThe <code>%=</code> operator (modulus)BfThe <code>rem_assign</code> lang item.1DaScope following a <code>let id = expr;</code> binding in a block.AoThe <code>Err</code> lang item.C`Describes what kind of retag is to be performed.0BoDescribes what kind of retag is to be performed0CnThe pool strikes a balance between exploring more possible \xe2\x80\xa6CdRestricts expressions for use in statement position.B`The raw bytes of a simple value.0CkRepresents a fork-join scope which can be used to spawn \xe2\x80\xa60CjThe region scope tree encodes information about region \xe2\x80\xa6CkAn operation that causes const-checking to fail, but is \xe2\x80\xa6CgThe macro statement had a trailing semicolon (e.g., \xe2\x80\xa6B`The type of separator for lists.CmA possible separator. e.g., <code>,</code> or <code>;</code>.DfShared reference. <code>frozen</code> indicates the absence of any \xe2\x80\xa6C`The <code>&lt;&lt;=</code> operator (shift left)BfThe <code>shl_assign</code> lang item.1CaThe <code>&gt;&gt;=</code> operator (shift right)BfThe <code>shr_assign</code> lang item.1Bo<code>Self: Sized</code> declared on the trait.0000DmThis uniquely identifies a single <code>Slot&lt;V&gt;</code> entry in the \xe2\x80\xa6B`Like SmallVec but for C strings.DhA trait which extends <code>UndoLogs</code> to allow snapshots to be \xe2\x80\xa6DfDoes nothing as a lint pass, but registers some <code>Lint</code>s \xe2\x80\xa6Dk<code>SortedMap</code> is a data structure with similar characteristics \xe2\x80\xa6BjA span together with some additional data.0DdConversion of a value into the range portion of a <code>Span</code>.CkSpin latches are the simplest, most efficient kind, but \xe2\x80\xa6BdRepresents the following attributes:DcRepresents <code>#[stable]</code>, <code>#[unstable]</code> and \xe2\x80\xa601BjStability information for target features.Bb<code>-Zunpretty=stable-mir</code>CkTrait for marking a type as having a sort order that is \xe2\x80\xa6AgSee <code>State</code>.CmA statement in a basic block, including information about \xe2\x80\xa60BkEvaluation is currently within a statement.CeHolds information about a static variable definition.CkA temporary created that references the static with the \xe2\x80\xa6CjA literal containing the address of a <code>static</code>.BjThe <code>-=</code> operator (subtraction)BfThe <code>sub_assign</code> lang item.1BeSwitches based on the computed value.BhSpecial edge for <code>SwitchInt</code>.10CdTest what value an integer or <code>char</code> has.DdA covariant <code>Copy</code> tagged borrow. This is essentially \xe2\x80\xa6CeState of a temporary during collection and promotion.BkTerminates the execution if unwind happens.0CnDo a local ThinLTO (intra-crate, over the CodeGen Units of \xe2\x80\xa6BfEnum representing common lexeme types.BcPart of a <code>TokenStream</code>.EfSimilar to <code>tokenstream::TokenTree</code>, except that <code>Sequence</code>, \xe2\x80\xa6CiA single token or a delimited sequence of token trees \xe2\x80\xa6CfUsed in \xe2\x80\x9cexpected\xe2\x80\x9d/\xe2\x80\x9cexpected one of\xe2\x80\x9d error \xe2\x80\xa6ChThe set of projection elements that can be used by a \xe2\x80\xa6CnRepresents an item declaration within a trait declaration, \xe2\x80\xa6Cm<code>m::A::B</code> in <code>&lt;T as m::A&gt;::B::C</code>.Ckpointer to a separate supertrait vtable, can be used by \xe2\x80\xa6CfReinterpret the bits of the input as a different type.0CcIgnore escapes before closing pattern, trim contentCaA real error. This goal definitely does not hold.00DaA tuple is WF only if its middle elements are <code>Sized</code>.00DiExtra information passed to <code>visit_ty</code> and friends to give \xe2\x80\xa6CjAll the different flavors of pattern that Rust recognizes.CjObligations emitted during the normalization of a free \xe2\x80\xa600BbA type alias declaration, e.g. \xe2\x80\xa600BfRepresents <code>#[type_const]</code>.0AhEncountered a type errorClFlags that we track on types. These flags are propagated \xe2\x80\xa60000CkThe trace designates the path through inference that we \xe2\x80\xa60BmThe environment in which to do trait solving.BcCoroutine has not been resumed yet.0CjA bitmask constant for scrutinizing the immediate byte \xe2\x80\xa6CnUsed for reverting changes made by <code>DerefSeparator</code>CeDetermining the type requires contextual information.AkNo references to this temp.AbFrom K to UniIndexAbFrom UniIndex to VCnSimple implementation of a union-find data structure, i.e. \xe2\x80\xa6DjTreat <code>impl Trait</code> as shorthand for a new universal generic \xe2\x80\xa6CaThe kinds of cycles a cycle head was involved in.000BfThe <code>use_cloned</code> lang item.CjCollect items that are used, i.e., actually needed for \xe2\x80\xa6CmChecks whether locals that appear in a promotion context (\xe2\x80\xa6CjA region variable is a subregion of a concrete region. \xe2\x80\xa60BlA region variable is a subregion of another.0CmA vector clock index, this is associated with a thread id \xe2\x80\xa6AlA type which can be visited.AgSize of a word in bits.CkMutability restricted to immutable, but only because of \xe2\x80\xa6CfIn some cases, it\xe2\x80\x99s not possible to point at the \xe2\x80\xa6BmWe try to construct an enum that has a niche.ClA work queue is a handy data structure for tracking work \xe2\x80\xa6C`Describes where a statement/terminator writes toCfKind of write access to a value (For informational \xe2\x80\xa6DjThe <code>Weiteable</code> trait describes interpreter values that can \xe2\x80\xa60AlThe kind of yield expressionBbExpected 1 char, but 0 were found.ClKleene optional (<code>?</code>) for zero or one repetitionsCnA value taking no bytes, and which therefore needs no LLVM \xe2\x80\xa6nOnly for ZSTs.000ChStore ZST constants. We have to special handle these \xe2\x80\xa6CaNot used directly, but helpful in debug messages.BdThe ABI mandated alignment in bytes.CmThis module ensures that if a function\xe2\x80\x99s ABI requires a \xe2\x80\xa6EfGiven a <code>TokenStream</code> with a <code>Stream</code> of only two arguments, \xe2\x80\xa6DkWill try to add <code>duration</code>, but if that overflows it may add \xe2\x80\xa60CbThis pass adds validation calls (AcquireValid, \xe2\x80\xa6EbReturns the <code>DefId</code> of the <code>add</code> lang item if it is defined.CgThis is called after an arm has been parsed, either \xe2\x80\xa6EfThe alignment. E.g. <code>{:&gt;}</code> or <code>{:&lt;}</code> or <code>{:^}</code>.DiThe <code>#[align(...)]</code> attribute. Determines the alignment of \xe2\x80\xa6BlA list of all attribute on this syntax node.CbWhether this set only contains empty constructors.DgReturns an iterator containing all impls for <code>trait_def_id</code>.CgReturns both explicit sysroot if it was passed with \xe2\x80\xa6CnAllocations local to this instance of the interpreter. The \xe2\x80\xa6AgThis is used by priroda1BkStores memory for globals (statics/consts).0CdAllocates a string slice that is copied into the \xe2\x80\xa6DeThe allocator used for the machine\xe2\x80\x99s <code>AllocBytes</code> in \xe2\x80\xa60BdIs asm!() allowed? Defaults to true.AhThe <code>#</code> flag.0DcIndicates that trying to normalize <code>key</code> resulted in \xe2\x80\xa60DhIf <code>true</code>, then there were candidates that might or might \xe2\x80\xa6CiWalk up the specialization ancestors of a given impl, \xe2\x80\xa6000DbSame as <code>any</code>, but must be a valid fragment, not error.BlThe number of arguments this function takes.00CkPath to file containing arguments for the invocation of \xe2\x80\xa6C`Returns an iterator over all function arguments.DhThe span of the args of the closure, including the <code>move</code> \xe2\x80\xa6Eg<code>None</code> if the matched value is a slice, <code>Some(n)</code> if it is an \xe2\x80\xa6EgMatches a <code>PredicateKind::Clause</code> and turns it into a <code>Clause</code>\xe2\x80\xa6CiWhether the dynamic library will be linked only if it \xe2\x80\xa6CmWhether the framework will be linked only if it satisfies \xe2\x80\xa6EfIf the <code>Value</code> is a Number, returns the associated <code>Number</code>. \xe2\x80\xa6DgIf the <code>Value</code> is an Object, returns the associated Map. \xe2\x80\xa6BnCompile <code>expr</code>, yielding an rvalue.BkSee docs in <code>build/expr/mod.rs</code>.CmConvert the custom type into a string value, for instance \xe2\x80\xa6CbConverts the <code>FluentValue</code> to a string.DjGiven an original string like <code>AACC</code>, and a suggestion like \xe2\x80\xa6DeMacro used to create this inline asm: one of <code>asm!</code> or \xe2\x80\xa60EfWraps a call to <code>walk_*</code> / <code>walk_flat_map_*</code> for an AST node \xe2\x80\xa6CfLocate the definition of an associated type in the \xe2\x80\xa6CnUtilities for manipulating and extracting information from \xe2\x80\xa6BlPrepared async future local (for async drop)0Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6000000AmCheck if a function is async.CfThe name of the attribute we\xe2\x80\x99re currently accepting.C`The span of the attribute currently being parsedCaSome helper functions for <code>AutoDeref</code>.BoReturns amount of tokens in the read-side pipe.CjA backtrace to where this allocation was allocated. As \xe2\x80\xa60CkDetects links that are not linkified, e.g., in Markdown \xe2\x80\xa6CmThe base address for each allocation.  We cannot put that \xe2\x80\xa6BbWhether or not this is a bin crateBnReturns the result of the specified operation.ClA map from nodes to anonymous modules. Anonymous modules \xe2\x80\xa6BgThe signature users of the closure see.EeReturns the <code>DefId</code> of the <code>branch</code> lang item if it is defined.DkExecutes <code>op</code> within every thread in the current threadpool. \xe2\x80\xa60DgExecutes <code>op</code> within every thread in the threadpool. Any \xe2\x80\xa6DhCreate the MIR for a given <code>DefId</code>, including unreachable \xe2\x80\xa6BeBuilds the MIR for a given drop tree.CkAdvance the parser by one token using provided token as \xe2\x80\xa6CnCommon logic for borrowck use-after-move errors when moved \xe2\x80\xa6CkThe span of the invocation of the current procedural macro.CiThe location of the actual macro invocation or syntax \xe2\x80\xa6CjThroughout the compiler tree, there are several places \xe2\x80\xa6AlType of the caller function.DbCheck if two <code>Class</code> can be merged together. In the \xe2\x80\xa6Do<strong>Canonicalization</strong> is the key to constructing a query in the \xe2\x80\xa60CkCanonicalization is used to separate some goal from its \xe2\x80\xa61D`This recursion helper avoids going through <em>too many</em> \xe2\x80\xa6AdCategorize an upvar.AbCharacter literal.CfChecks that function body contains a single inline \xe2\x80\xa6EeType check the given <code>pat</code> against the <code>expected</code> type with \xe2\x80\xa6CmDecrease the index until it is inside or one past the end \xe2\x80\xa6DhWe wrap the regular <code>close</code> function generically, so both \xe2\x80\xa6BhClose the most recently opened HTML tag.CeWhether the new trait solver should be enabled in \xe2\x80\xa6ChSee Rustc Dev Guide chapters on trait-resolution and \xe2\x80\xa6AdMono Item CollectionB`Prints comma-separated elements.0CfThe user variable\xe2\x80\x99s data is split across several \xe2\x80\xa600Ba<code>while</code> loop conditionCnConfigures a child process to have access to this client\xe2\x80\x99\xe2\x80\xa6BfThe <code>const</code> keyword, if anyCnChecks whether a function-like definition is considered to \xe2\x80\xa6CiReturns the constness of the function-like definition \xe2\x80\xa6BiWhether this trait is <code>const</code>.111111DjIdentifies SCCs in the graph <code>G</code> and computes the resulting \xe2\x80\xa6CjA public API provided for the Rust compiler consumers. \xe2\x80\xa6AgCoroutine layout logic.BcCompute the layout for a coroutine.CkAdditional information carried by a MIR body when it is \xe2\x80\xa6CkThis is the implementation of the pass which transforms \xe2\x80\xa6CjUnparsed cfg! configuration in addition to the default \xe2\x80\xa6CeModule that define a common trait for things that \xe2\x80\xa6Dh<code>None</code> indicates this is not validating for CTFE (but for \xe2\x80\xa6BbData race detector per-frame data.DjDepending on settings, this will be <code>None</code>, global data for \xe2\x80\xa6BdExtra state for data race detection.ChImplementation of a data-race detector using Lamport \xe2\x80\xa6321GgThe <code>x</code> or <code>X</code> flag (for <code>Debug</code> only). E.g. the <code>x</code> in <code>{:x?}</code>.DiThe <code>x</code> or <code>X</code> flag. (Only for <code>Debug</code>.)AaDebug Info ModuleDkSpan of the <code>[unsafe] [extern] fn(...) -&gt; ...</code> part, i.e. \xe2\x80\xa6BbPop the last level of indentation.CkQuery and get an English description for the item\xe2\x80\x99s kind.C`Returns the delimiter of this <code>Group</code>AdAccess the DepGraph.00CdReturns an iterator of the types that have to be \xe2\x80\xa60CnPropagates assignment destinations backwards in the CFG to \xe2\x80\xa6CbExplicit discriminant, e.g., <code>Foo = 1</code>.CcExplicit discriminant (e.g., <code>Foo = 1</code>).EbReturns the <code>DefId</code> of the <code>div</code> lang item if it is defined.ChCombine all doc strings into a single value handling \xe2\x80\xa60ChReturns true if <code>a</code> dominates <code>b</code>.ClCache for the results of <code>dropck_outlives</code> query.BbCreate a loop that drops an array:AoCreates a placeholder argument.CkReturns the path to the filename where we should dump a \xe2\x80\xa6BfCreate a clone of the underlying type.BlIterates over all edges defined in the graphBmIterates over all edges defined in the graph.CnEats symbols while predicate returns true or until the end \xe2\x80\xa6Cjcreate a patch that elaborates all drops in the input MIR.BePerforms the optimization on the bodyCmEmit a lint. This method is somewhat special, since lints \xe2\x80\xa6CmEmit a lint from a lint struct (some type that implements \xe2\x80\xa60CiEncodes a ty:Ty using the Itanium C++ ABI with vendor \xe2\x80\xa6DgIndex of <code>Rn</code> in <code>choice_regions</code> vector from \xe2\x80\xa6CnReturns a new span representing just the last character of \xe2\x80\xa6CkWrapper that calls queries in a special \xe2\x80\x9censure OK\xe2\x80\x9d \xe2\x80\xa6CmThis method will create a new module and push it onto the \xe2\x80\xa6DhThe ABI of the entry function. Default value is <code>CanonAbi::C</code>DgThis function performs control operations on the <code>Epoll</code> \xe2\x80\xa6AkThis excludes delayed bugs.ClThe error guarantees from all emitted errors. The length \xe2\x80\xa6oError reportingChPanics if the value cannot be evaluated or doesn\xe2\x80\x99t \xe2\x80\xa6DmHelper function to get a <code>libc</code> constant as a <code>Scalar</code>.BkEvaluates the scalar at the specified path.BjValues evaluated as constants if possible.C`Called at the end of a span of highlighted text.ClMacro invocations that created the code at this span, if \xe2\x80\xa6EjEats <code>&gt;</code> possibly breaking tokens like <code>&gt;&gt;</code> in process. \xe2\x80\xa6EjEats <code>&lt;</code> possibly breaking tokens like <code>&lt;&lt;</code> in process. \xe2\x80\xa6EaEats <code>|</code> possibly breaking tokens like <code>||</code> in process. \xe2\x80\xa6DkUnpack the <code>GenericArg</code> as a type when it is known certainly \xe2\x80\xa6CkPanic if this generic argument is not a type, otherwise \xe2\x80\xa6BiAll the expected values for a config name0AlSpan of the LHS of the rangeBfSpan of the <em>whole</em> match expr.00CiDerive an extension trait for a given impl block. The \xe2\x80\xa6AoRustdoc\xe2\x80\x99s doctest extraction.CmA fake body which stores typeck results for the global asm\xe2\x80\xa6EeThe <code>place</code> should be a fake read because of specified <code>cause</code>.ChAdds to the current value, returning the previous value.BiBitwise \xe2\x80\x9cand\xe2\x80\x9d with the current value.AoMaximum with the current value.AoMinimum with the current value.ClSubtracts from the current value, returning the previous \xe2\x80\xa6BiBitwise \xe2\x80\x9cxor\xe2\x80\x9d with the current value.CdThe type of every local stored inside the coroutine.0CjThis span contains the current file we\xe2\x80\x99re going through.C`Span of the optionally specified fill character.CjFinds attributes in sequences of attributes by pattern \xe2\x80\xa6DkReturns the <code>DefId</code> of the callee if the given expression is \xe2\x80\xa6EfReturns a <code>FnHeader</code> if <code>self</code> is a function item, otherwise \xe2\x80\xa6AfDoes the equivalent ofDfThe entry point for folding. To fold a value <code>t</code> with a \xe2\x80\xa60000AkMarkdown footnote handling.CdFinds the smallest integer with the given alignment.CmCreates a balanced view of an underlying graph, by adding \xe2\x80\xa6ClReturns a possibly remapped filename based on the passed \xe2\x80\xa60AiThe origin of the region.BlThe vid assigned to <code>&#39;static</code>DhThe vid assigned to <code>&#39;static</code>. Used only for diagnostics.ClPre-computed list of all \xe2\x80\x9cnew\xe2\x80\x9d locals for each \xe2\x80\x9cold\xe2\x80\xa6CjA framework that can express both gen-kill and generic \xe2\x80\xa6EcPre-interned <code>Infer(ty::FreshTy(n))</code> for small values of <code>n</code>.CmFreshener used specifically for entries on the obligation \xe2\x80\xa60BjGets the Integer type from an IntegerType.DgCreate a new parser from a <code>NormalAttr</code>, which is stored \xe2\x80\xa6BnConverts an <code>Attribute</code> to a level.0AjConvert from a bits value.0EeRounds <code>bits</code> up to the next-higher byte boundary, if <code>bits</code> is111111111111CgCreates a constant with the given integer value and \xe2\x80\xa622222222222222BbCreates an interned bool constant.CjBuild a new constant that represents the given boolean \xe2\x80\xa6DkCreates a new vector with a copy of <code>elem</code> for each index in \xe2\x80\xa60BlConstructs a <code>Tree</code> from an enum.EeCreate an <code>IndexVec</code> with <code>n</code> elements, where the value of each0CbThe item was expanded from a glob delegation item.D`The bitwise or (<code>|</code>) of the bits in each flags value.00000000000000000000DiCreate a <code>Value::Array</code> by collecting an iterator of array \xe2\x80\xa6DdCreate a <code>Value::Object</code> by collecting an iterator of \xe2\x80\xa62222222BmLoads a target descriptor from a JSON object.ClGet a flags value with the bits of a flag with the given \xe2\x80\xa600000000BgOpposite of <code>LangItem::name</code>EhReturns the matching <code>PrimTy</code> for a <code>Symbol</code> such as \xe2\x80\x9cstr\xe2\x80\x9d \xe2\x80\xa62222222222222222222CcCreates a target tuple from the passed target path.DbBuilds a <code>Param</code> object from <code>ExplicitSelf</code>.CjCreates a list of DiagnosticSpanLines from span - each \xe2\x80\xa6CgName of the feature gate guarding the language feature.0BhGets all attributes with the given name.CnRetrieve the value stored for a place, or \xe2\x8a\xa4 if it is not \xe2\x80\xa6BmImplementation of fcntl(F_GETFL) for this FD.CfReturn lines that correspond to this <code>Span</code>CdReturn lines corresponding to this <code>Span</code>CeReturn lines corresponding to this <code>Span</code>.DkSafe wrapper around <code>LLVMGetParam</code>, because segfaults are no \xe2\x80\xa6EgMultiplies packed 8-bit integers in <code>left</code> and <code>right</code> in the \xe2\x80\xa6AkWhether the item has attrs.Cn\xe2\x80\xa6and if there is a guard it must be evaluated; if it\xe2\x80\x99s \xe2\x80\xa6CiWhether the linker support rpaths or not. Defaults to \xe2\x80\xa6CnThe algorithm used for hashing the contents of each source \xe2\x80\xa6DeThis is like <code>Diag::help()</code>, but it\xe2\x80\x99s only printed once.DdThe hidden type in which <code>R0</code> appears. (Used in error \xe2\x80\xa6A`The hidden type.BhBasic syntax highlighting functionality.DoExhausts the <code>Classifier</code> writing the output into <code>sink</code>.CnGiven a node ID, gets a list of attributes associated with \xe2\x80\xa6CeRepresents crate as a whole (as distinct from the \xe2\x80\xa6000000EaThe <code>HirId::owner</code> all <code>ItemLocalId</code>s in this table are \xe2\x80\xa60CeThe hash for the host proc macro. Used to support \xe2\x80\xa6DlDetects invalid HTML (like an unclosed <code>&lt;span&gt;</code>) in doc \xe2\x80\xa6CkPointers to multiple-page-sized allocations. These must \xe2\x80\xa6CmExact equality of two maps. Less accurate but faster than \xe2\x80\xa6CnAsserts that this operand refers to a scalar and returns a \xe2\x80\xa6E`Converts <code>self</code> into same <code>LocalDecl</code> except tagged as \xe2\x80\xa6BmReturns whether this provenance is immutable.EaContent that will be included inline in the <code>&lt;head&gt;</code> section \xe2\x80\xa6EeReturns <code>true</code> if this <code>Rvalue</code> contains qualif <code>Q</code>.DkIf already in a worker-thread, just execute <code>op</code>. Otherwise, \xe2\x80\xa6ChIf already in a worker-thread of this registry, just \xe2\x80\xa6CkIncrement the indentation by one. Note: need to know if \xe2\x80\xa6BmReturns the indentation of the line of a spanDcA variant of <code>SortedMap</code> that preserves insertion order.D`Write into a <code>serde_json::Value</code> using the syntax \xe2\x80\xa6CeDenotes which part of this allocation is initialized.ChReturns the mask indicating which bytes are initialized.1ClTuples of the span in the code snippet (input as written \xe2\x80\xa6CdCache instances of monomorphic and polymorphic itemsFcReturns the integer value or <code>None</code> if <code>self</code> or <code>val_type</code> is \xe2\x80\xa6CnRetrieves the bit width of the integer type <code>self</code>.0DcInterns a type. (Use <code>mk_*</code> functions instead, where \xe2\x80\xa6BoAn interpreter for MIR used in CTFE and by miriC`An interpreter for MIR used in CTFE and by miri.FhSets <code>self = self &amp; other</code> and return <code>true</code> if <code>self</code> changed. \xe2\x80\xa600CgWrite out as a diagnostic out of <code>DiagCtxt</code>.0CnReturns an iterator over the items in the map in insertion \xe2\x80\xa6CnNote: Do you really want to use this? Often you know which \xe2\x80\xa6DiType-checking for the <code>#[rustc_intrinsic]</code> intrinsics that \xe2\x80\xa6CmRetrieve the intrinsic definition if the item corresponds \xe2\x80\xa60CnThe JEC \xe2\x80\x9cis active\xe2\x80\x9d if the last thread to increment it \xe2\x80\xa6DhReturns <code>true</code> if this place context represents a borrow, \xe2\x80\xa6DeCheck if the given type is either <code>core::ffi::c_void</code>, \xe2\x80\xa6DhReturns <code>true</code> if the graph has a cycle that is reachable \xe2\x80\xa6CmIf true, then this crate is the crate named by the extern \xe2\x80\xa6ClIf a type is a reference or raw pointer to the anonymous \xe2\x80\xa6EgChecks whether values of this type <code>T</code> implement the <code>Freeze</code> \xe2\x80\xa6DiCheck if <code>self</code> is the never-allow-writes-again state of a \xe2\x80\xa6CmIndicates whether this value references only \xe2\x80\x98global\xe2\x80\x99 \xe2\x80\xa60000BdIs this a name binding of an import?A`Check if locked.EcIf <code>true</code>, then this trait has the <code>#[marker]</code> attribute, \xe2\x80\xa6DeReturns true if the <code>Value</code> is a Number. Returns false \xe2\x80\xa6DfReturns true if the <code>Value</code> is an Object. Returns false \xe2\x80\xa6BeWhether this alias type is an opaque.00CbChecks if the value is returned from the function.CbReturns <code>true</code> if this is a scalar typeCnA scalar type is one that denotes an atomic datum, with no \xe2\x80\xa6AiWhether this store is SC.ClReturns <code>true</code> if this is a signed integer scalarDhReturns <code>true</code> if this is a single signed integer scalar. \xe2\x80\xa6CiSignedness. e.g. <code>true</code> for <code>isize</code>CgSignedness. e.g. <code>false</code> for <code>u8</code>E`Whether the configuration consists of just <code>Cfg</code> or <code>Not</code>.CnThe JEC \xe2\x80\x9cis sleepy\xe2\x80\x9d if the last thread to increment it \xe2\x80\xa6FdReturns <code>true</code> if the node pointed to by <code>def_id</code> is a <code>static</code> \xe2\x80\xa6CmWriters of rustc drivers often encounter stealing issues. \xe2\x80\xa6DeReturns true if the <code>Value</code> is a String. Returns false \xe2\x80\xa6BnReturns <code>true</code> if this is a struct.AhIs this function unsafe?CcWhether the trait is marked as <code>unsafe</code>.BiWhether this impl is for an unsafe trait.BbIs the static <code>unsafe</code>?CiReturns the <code>kind</code> of given <code>DefId</code>CmLook up the name of a definition across crates. This does \xe2\x80\xa6Dk<code>type_</code> can come from either the HIR or from metadata. If it \xe2\x80\xa6kItem types.CmReturns a span encompassing all tokens in the iterator if \xe2\x80\xa6CiReturns an iterator over all substitutions in a given \xe2\x80\xa60ClConnector for the last child. Should have the same width \xe2\x80\xa6CnJoin the happens-before clock with that of another thread, \xe2\x80\xa6EhTakes a token and returns <code>Some(KleeneOp)</code> if the token is <code>+</code> \xe2\x80\xa6BhLast code obtained from a child exiting.CmThis inherent method takes priority over the trait method \xe2\x80\xa6ClComputes the layout of a type. Note that this implicitly \xe2\x80\xa60000000CnRestores the default binding mode after lowering a pattern \xe2\x80\xa6CdCommon lifetimes, pre-interned for your convenience.0CnExtends the span to the beginning of the spans line, incl. \xe2\x80\xa6ClArguments for the underlying linker. Add options to pass \xe2\x80\xa6EbThe <code>#[link_name = &quot;...&quot;]</code> attribute, indicating a custom \xe2\x80\xa6AeCreate an \xe2\x80\x98rlib\xe2\x80\x99.BdThe link text displayed in the HTML.BnLint information passed over the command-line.CmFinds the original HirId this MIR item came from. This is \xe2\x80\xa6DgAn <code>HirId</code> with lint levels equivalent to this scope\xe2\x80\x99s \xe2\x80\xa6CnThis will hold the name of the tool that this lint belongs \xe2\x80\xa6ChAdditional arguments to pass to LLVM, similar to the \xe2\x80\xa6ChATOMIC LOAD IMPL in the paper Unlike the operational \xe2\x80\xa6CjMetadata about loads from this store element, behind a \xe2\x80\xa6C`Map from local to all the borrows on that local.0B`Where did this constraint arise?BnWhere (and why) is this relation taking place?1AmThis is for diagnostics-only.AlThe placeholder free region.CgThe region that should outlive <code>shorter_fr</code>.CkNote: the input patterns must have been lowered through \xe2\x80\xa6c\xe2\x80\xa6AfCreates an expression.EeBuilds the string for <code>&lt;op&gt;&lt;expr&gt;</code> adding parenthesis when \xe2\x80\xa6CjCalls the given function with the both the text of the \xe2\x80\xa6BfSets the init bit for the given range.CjMark a span with the stored expansion ID and transparency.DhConditionally loads from <code>ptr</code> according the high bit of eachCkPrint expression such that it can be parsed as a match arm.CmApplies the (partial) function to each edge and returns a \xe2\x80\xa60DhIf <code>type NestedFilter</code> is set to visit nested items, this \xe2\x80\xa6CnBecause lints are scoped lexically, we want to walk nested \xe2\x80\xa6CmBecause stability levels are scoped lexically, we want to \xe2\x80\xa6CeDisables protections on the page whose address is \xe2\x80\xa6CkItems that have been or are currently being recursively \xe2\x80\xa6CgMerge two existing annotations into one during path \xe2\x80\xa6CkReturns the current \xe2\x80\x9cmerged type\xe2\x80\x9d, representing our \xe2\x80\xa6FaReturns the <code>MetaItem</code> if <code>self</code> is a <code>MetaItemInner::MetaItem</code>.0CmAutomatic migration of Rust 2021 patterns to a form valid \xe2\x80\xa6ClNote: this will not turn a finite value into an infinite \xe2\x80\xa6DiBuild the MIR for a given <code>DefId</code> and prepare it for const \xe2\x80\xa6000000BbGenerates a MIR body for the shim.000000BlThe constness and polarity of the trait ref.BcThe scope the link was resolved in.C`Mapping to/from the various indices used for \xe2\x80\xa6EbReturns the <code>DefId</code> of the <code>mul</code> lang item if it is defined.DkA <code>MutVisitor</code> represents an AST modification; it accepts an \xe2\x80\xa6CgThe content for the anchor tag (if different from name)CfThe name space for which the collision(s) occurred in.CbThe namespace for which the shadowing occurred in.DiReturns <code>true</code> if we should use the PLT for shared library \xe2\x80\xa6EbReturns the <code>DefId</code> of the <code>neg</code> lang item if it is defined.BiQueues the addition of a new basic block.AmInsert a new tag in the tree.DbCreates a new, empty bitset with a given <code>domain_size</code>.0AlCreates a new, empty bitset.CmConstructs a <code>TyKind::Error</code> type with current \xe2\x80\xa6CeConstructs a <code>RegionKind::ReError</code> region.CnConstructor for the ordinary case of <code>Sized</code> types.AjCreate a new pointer type.CeWhether to skip capturing stdout and stderr of tests.CiStores the type parameters which were instantiated to \xe2\x80\xa60CmFor each node in a control-flow graph, determines whether \xe2\x80\xa6CdEmit a lint at the appropriate level for a hir node.BnTake a parsed stream and fix the little thingsCmNormalize a value using the <code>AssocTypeNormalizer</code>.CbDeeply normalize types using the old trait solver.CnCode for the \xe2\x80\x98normalization\xe2\x80\x99 query. This consists of a \xe2\x80\xa62CmReturns <code>None</code> if the type could not be normalizedEbReturns the <code>DefId</code> of the <code>not</code> lang item if it is defined.DeThis is like <code>Diag::note()</code>, but it\xe2\x80\x99s only printed once.BfGenerate a note/help text with a span.DjThe number of diffs encoded in <code>raw_diffs</code>. Always one less \xe2\x80\xa6C`Returns the total number of nodes in this graph.ClReturns the number of nodes in this balanced-flow graph, \xe2\x80\xa6CmThe slow-path - create an \xe2\x80\x9copen\xe2\x80\x9d, elaborated drop for \xe2\x80\xa6CnSome(level) to optimize at a certain level, or None to run \xe2\x80\xa6BdInsert in the map and get the value.ClEnsures a value is in the entry by inserting the default \xe2\x80\xa6CnReturns the fallback target that is jumped to when none of \xe2\x80\xa6DiThe <code>otherwise</code> branch which will be taken in case none of \xe2\x80\xa6BiThe <code>otherwise</code> branch target.1CkIf, during the computation of the dtorck constraint, we \xe2\x80\xa600EcReturns the <code>DefId</code> of the <code>owned_box</code> lang item if it is \xe2\x80\xa6ClPointers to page-aligned memory that has been claimed by \xe2\x80\xa6CmA vector of page addresses that store the miri heap which \xe2\x80\xa6CcDetermines Miri\xe2\x80\x99s page size and associated valuesCaRequires Miri to emulate pages of a certain size.BbThe host (not emulated) page size.12EcReturns the <code>DefId</code> of the <code>panic_fmt</code> lang item if it is \xe2\x80\xa6CdThe parameter environment used for proving trait \xe2\x80\xa6CdThe environment in which we should prove this thing.000BmParameter environment for the item we are in.0ChGets the ParameterEnvironment for a given item; this \xe2\x80\xa6ClFIXME(#132279): This method should not be used as in the \xe2\x80\xa611111133333333ChSee <code>ParamEnv</code> struct definition for details.AgUsed for normalization.CmThe index of the parameter to use. Parameters are indexed \xe2\x80\xa600BhThe (1-based) parameter to be converted.CjPare down is used as a step in the LUB computation. It \xe2\x80\xa6CfMap from each nested owner to its parent\xe2\x80\x99s local id.BgParses a string literal as an ABI spec.CeFIXME: Still used by Rustdoc, should be removed afterEbConverts strings provided as <code>--cfg [cfgspec]</code> into a <code>Cfg</code>.CnParses the contents of a module (inner attributes followed \xe2\x80\xa6BhParse a markdown string to a tokenstreamCgThe span of <code>a::b::Trait</code> in a path like \xe2\x80\xa6ClThe span of the use resulting in the captured path Check \xe2\x80\xa6CkSpan of the whole path or some its characteristic fragment.CePerform a carry-less multiplication of two 64-bit \xe2\x80\xa6ClReturns the next item after the last one peeked. It doesn\xe2\x80\xa6CdRemoves all leading immutable references from an \xe2\x80\xa6CmPeel off all reference types in this type until there are \xe2\x80\xa6DkReturns mutable references to two distinct elements, <code>a</code> and \xe2\x80\xa6CfReturns mutable references to three distinct elements.CnPick a test to run. Which test doesn\xe2\x80\x99t matter as long as \xe2\x80\xa6DkPops a scope, which should have region scope <code>region_scope</code>, \xe2\x80\xa6AoPostorder traversal of a graph.DfThe precision. E.g. <code>{:.5}</code> or <code>{:.precision$}</code>.AlPrecision of the conversion.AmThe integer precision to use.BaThe thing we are trying to prove.00000000000CkGet the primitive representation of this type, ignoring \xe2\x80\xa6DaReturns the \xe2\x80\x9cprincipal <code>DefId</code>\xe2\x80\x9d of this set of \xe2\x80\xa60BoPrint a <code>let pat = expr</code> expression.0ClWrapper struct to render the source code of a file. This \xe2\x80\xa6EaPrint the tag with the format <code>&lt;XYZ&gt;</code> if the tag is unnamed, \xe2\x80\xa6CiReturns <code>AdtDef</code> if <code>ty</code> is an ADT.AlRust Compiler Self-ProfilingClThe projection used to go from parent to this node (only \xe2\x80\xa6C`Whether or not there is a protector for this tagCfWhether this pointer is part of the arguments of a \xe2\x80\xa6DjPush <code>tt</code> onto the end of the stream, possibly gluing it to \xe2\x80\xa6EeReturns the final resolution of a <code>QPath</code>, or <code>Res::Err</code> if \xe2\x80\xa6FdReturns the final resolution of a <code>QPath</code> in an <code>Expr</code> or <code>Pat</code> \xe2\x80\xa6EbReturns the <code>DefId</code> of the <code>RangeMax</code> lang item if it is \xe2\x80\xa6EbReturns the <code>DefId</code> of the <code>RangeMin</code> lang item if it is \xe2\x80\xa6DoText to separate the <code>start</code> and <code>end</code> values of a range.EbReturns the <code>DefId</code> of the <code>RangeSub</code> lang item if it is \xe2\x80\xa6CiGet a vector of bytes for an Allocation that has been \xe2\x80\xa6DkThe diffs in \xe2\x80\x9craw\xe2\x80\x9d form. Each segment of <code>bytes_per_diff</code>\xe2\x80\xa6CnWe don\xe2\x80\x99t really care how many bytes we actually get out. \xe2\x80\xa6BnErased region, used outside of type inference.Ae<code>ReStatic</code>ClReturns an iterator over all basic blocks reachable from \xe2\x80\xa6AmAll the conditional branches.CkFinds local items that are \xe2\x80\x9creachable\xe2\x80\x9d, which means \xe2\x80\xa6ChRead this allocation and try to convert it to a boolean.CbAccess dependencies from current implicit context.0BfReads the contents of a file as UTF-8.CnReads the contents of a file with a file header as defined \xe2\x80\xa6CgRead the contents of a UTF-8 file into memory. This \xe2\x80\xa6CgRead all of the crate info from its location on the \xe2\x80\xa6CiThe parameter is marked immutable in the function and \xe2\x80\xa60CdRead this allocation and try to convert it to an \xe2\x80\xa6CfRecord the lowered type of a HIR node in this context.De<code>Recovered::Yes</code> when this let expressions is not in a \xe2\x80\xa6Bme.g., a URL for an issue/PR/RFC or error code0DeOnly produce <code>NON_EXHAUSTIVE_OMITTED_PATTERNS</code> lint on \xe2\x80\xa6CjIf the register is an integer register then return its \xe2\x80\xa6EbReturns the <code>DefId</code> of the <code>rem</code> lang item if it is defined.EbReturns the <code>DefId</code> of the <code>ResumeTy</code> lang item if it is \xe2\x80\xa6DcType of coroutine argument / values returned by <code>yield</code>.ChReturns the type representing the resume type of the \xe2\x80\xa60CjThe resume type of the function. This field is removed \xe2\x80\xa611CgReturn local that holds this function\xe2\x80\x99s return value.FbIn this case this is an <code>async</code> or <code>gen</code> return, the <code>NodeId</code> \xe2\x80\xa6CjConvenience function to get the return type of a function.ChReturns the type representing the return type of the \xe2\x80\xa60CkReturns the return type; it always return first element \xe2\x80\xa611CfIf not empty, this body is the root of this region \xe2\x80\xa6CmString representation of how to get back to the root path \xe2\x80\xa6ClThis field is used to know \xe2\x80\x9chow far\xe2\x80\x9d from the top of \xe2\x80\xa6CmSpan of the path start, suitable for prepending something \xe2\x80\xa6CnSpan of the <em>root</em> use tree (see <code>root_id</code>).ClThe root term (const or type) we\xe2\x80\x99re generalizing. Used \xe2\x80\xa6DeIf this option is set to <code>true</code>, rustdoc will only run \xe2\x80\xa6AfABI handling for rustcDgPicks a specific ABI for this target. This is <em>not</em> just for \xe2\x80\xa6BdThe Rust Abstract Syntax Tree (AST).CeHIR datatypes. See the rustc dev guide for more info.CjThis crate allows tools to enable rust logging without \xe2\x80\xa6DgWhether the use site has the same <code>SyntaxContext</code> as the \xe2\x80\xa6CkReturns true if both yields are prefix or both are postfix.EhCompare two <code>MultilineAnnotation</code>s considering only the <code>Span</code> \xe2\x80\xa6DfSaves the provided span into the metadata of <em>the crate we </em>\xe2\x80\xa6CfWhether this store element has been read by an SC loadDeScans a diff from <code>from</code>, and returns the set of files \xe2\x80\xa6DcThe expression corresponding to this field of <code>self</code> \xe2\x80\xa6CmWhether this param is <code>self</code>, and how it is bound.BlThe type with which this type is associated.AfThe optional separatorBmSupport code for encoding and decoding types.BoIf you pass in an array, it will not be sorted.BeSet the color settings of the writer.BmImplementation of fcntl(F_SETFL) for this FD.CjSets the level in <code>self</code> to <code>level</code>.CcSets the <code>i</code>th to <code>j</code>th bits.CfSets a specified range to a value. If the range is \xe2\x80\xa6CmSet whether to reset the terminal whenever color settings \xe2\x80\xa6DgSets the <code>Span</code>s in <code>self</code> to <code>spans</code>.DbSet <code>style</code> for <code>line</code>, <code>col</code> if:DaUpdate in place by shifting out from <code>amount</code> binders.000EbReturns the <code>DefId</code> of the <code>shl</code> lang item if it is defined.EbReturns the <code>DefId</code> of the <code>shr</code> lang item if it is defined.CkThis module contains helpers for walking all types of a \xe2\x80\xa6BlCreate a type representing a signed integer.BgCreate a buffer with one URL component.CjSpan of the expansion site of the macro this parser is forDi<code>-Z instrument-xray=skip-exit</code>, do not instrument function \xe2\x80\xa6CjIf this pair of locals is a candidate pair, completely \xe2\x80\xa6ClThis is not used for highlighting or rendering any error \xe2\x80\xa60CiPrints the span with some help above it. This is like \xe2\x80\xa6DfAdds a new child diagnostics message to <code>self</code> with the \xe2\x80\xa6BmThe column of the beginning of leftmost span.DjEmit a basic lint message with a <code>msg</code> and a <code>span</code>.ClEmit a lint at the appropriate level, with an associated \xe2\x80\xa60CfPrints the span with a note above it. This is like \xe2\x80\xa64CnReturns the span pointing to the opening delimiter of this \xe2\x80\xa6CiPrints the span with a warning above it. This is like \xe2\x80\xa6AmThe macro\xe2\x80\x99s stability info.ChA pass that annotates every item and method with its \xe2\x80\xa60BlReturns the effective stability of the item.BnThe effective stability, filled out by the \xe2\x80\xa6ClA hash of the filename &amp; crate-id, used for uniquely \xe2\x80\xa6BlMutably borrow the current thread\xe2\x80\x99s stack.0CnThe address of an allocation that can serve as a temporary \xe2\x80\xa6C`1-based starting column of the source code span.Ck1-based starting column (in bytes) of the source code span.CkStart column. Note that it is important that this field \xe2\x80\xa6CbColumn in line where span begins, starting from 0.AlInitial position, read-only.D`The start position of this source in the <code>SourceMap</code>.DgA position of the start of <code>big_snippet</code>, used as an offset.BfThe first token of the current buffer.ClThis returns the types of the MIR locals which had to be \xe2\x80\xa60000CnFunctionality for statements, operands, places, and things \xe2\x80\xa6DiBuilds a switch targets definition that jumps to <code>then</code> if \xe2\x80\xa6DhBuilds a block of MIR statements to evaluate the THIR <code>expr</code>.CmGets the span of a statement. If the statement is a macro \xe2\x80\xa6CmReturns the unescaped string value if the current literal \xe2\x80\xa6EbReturns the <code>DefId</code> of the <code>sub</code> lang item if it is defined.BhTry to relate <code>sub &lt;: sup</code>FeReturns whether <code>src</code> is a subtype of <code>dest</code>, i.e. <code>src &lt;: dest</code>.0CkIf the method has other arguments, this is \xe2\x80\x9c, \xe2\x80\x9c and \xe2\x80\xa6CmReturns the address to use and optionally a clock we have \xe2\x80\xa6CmTakes the diagnostic. For use by methods that consume the \xe2\x80\xa6HjThe id (<code>NodeId</code> if <code>S</code> is <code>Early</code>, <code>HirId</code> if <code>S</code> is <code>Late</code>) of the \xe2\x80\xa6ChThese errors are caught and then reported during the \xe2\x80\xa6CcThe current dep graph task. This is used to add \xe2\x80\xa60CmSignals that the thread-pool which owns this registry has \xe2\x80\xa6CeThe latch used to signal that terminated has been \xe2\x80\xa6CmList of arguments to pass to the test harness, if running \xe2\x80\xa6Aj\xe2\x80\xa6 must pass this test\xe2\x80\xa6CnAttempts to determine the type of test. Since doctests are \xe2\x80\xa6CnFetch the THIR for a given body. The THIR body gets stolen \xe2\x80\xa6000000ChQuery implementation for <code>TyCtxt::thir_body</code>.CeCreate a list-like THIR representation for debugging.BaCreate a THIR tree for debugging.DkThis is a bare-bones alternative to the <code>thousands</code> crate on \xe2\x80\xa6CmThe timestamp of the storing thread when it performed the \xe2\x80\xa6CjMicroseconds elapsed since some predetermined point in \xe2\x80\xa6AaOpaque timestamp.CfTLS model to use. Options are \xe2\x80\x9cglobal-dynamic\xe2\x80\x9d \xe2\x80\xa6CfConverts all remaining obligations to the given error.DfReturn an <em>integer</em> type matching this primitive. Useful in \xe2\x80\xa6DmReturns <code>object::BinaryFormat</code> for given <code>BinaryFormat</code>CbConverts a handle into its machine representation.BoConverts a number to a sequence number (see \xe2\x80\xa6CjReturns the items of this set in stable sort order (as \xe2\x80\xa6ClReturns the entries of this map in stable sort order (as \xe2\x80\xa6CaRebuilds the asm template string from its pieces.AjGets the name of the lint.0ClReturns a symbol of the captured upvar, which looks like \xe2\x80\xa6CnWrite <code>self</code> to the given <code>TokenStream</code>.0CkIf true, we are at a the topmost level (not recursing a \xe2\x80\xa6Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6000000ClMap indicating what traits are in scope for places where \xe2\x80\xa6FbThe <code>Foo&lt;&amp;&#39;a T&gt;</code> in <code>&lt;&#39;a&gt; Foo&lt;&amp;&#39;a T&gt;</code>.FeThe <code>Foo&lt;&amp;&#39;a T&gt;</code> in <code>for&lt;&#39;a&gt; Foo&lt;&amp;&#39;a T&gt;</code>.ClExtracts the underlying existential trait reference from \xe2\x80\xa6CeExtracts the underlying trait reference from this \xe2\x80\xa60100100CcTransforms instances and types for LLVM CFI and \xe2\x80\xa6CgTranslate this substitution into an equivalent Rust \xe2\x80\xa6CdTranslate this directive into an equivalent Rust \xe2\x80\xa6CgThis does an offset-by-zero, which is effectively a \xe2\x80\xa60CjTrims the whitespace from the start and the end of the \xe2\x80\xa6D`Try to start normalize <code>key</code>; returns an error if \xe2\x80\xa60EbReturns the <code>DefId</code> of the <code>Try</code> lang item if it is defined.AiGet the layout of a type.0BdObtain the representation of a type.0CgName of the type of this field. Present only if the \xe2\x80\xa6DgDetermines the result of a <code>NullaryOp::UbChecks</code> invocation.0BeGet whether this is underline or not.CmUnify two types (using sub or lub) and produce a specific \xe2\x80\xa6BgSets <code>self = self | !other</code>.FmUnions <code>row</code> with <code>set</code>. <code>set</code> can be either <code>DenseBitSet</code> or \xe2\x80\xa6AmCreate a new unlimited limit.CiWhether this is an unsizing coercion and if yes, this \xe2\x80\xa60ClThe ADT the pattern is a constructor for, if applicable, \xe2\x80\xa6ClGive out access to the untracked data without any sanity \xe2\x80\xa6E`Panics if the <code>GlobalAlloc</code> is not <code>GlobalAlloc::Function</code>CjReturns a list of all the upvar types for this MIR. If \xe2\x80\xa6CjReturns an iterator over the list of types of captured \xe2\x80\xa600000000CdWhich items are being used where, for better errors.CaGets the value literal, as string, when using \xe2\x80\xa6AlReturns the string value in:EaGets the string value if <code>self</code> is a <code>MetaItem</code> and the \xe2\x80\xa6110BhName and span where the binding happens.0EeFor each <code>RegionVid</code>, the corresponding <code>RegionVariableOrigin</code>.DgReturns the lifetime of the local variable <code>var_id</code>, if any.DkThe variable info for the <code>var_values</code>, only used to make an \xe2\x80\xa60ChFor each item with generics, maps to a vector of the \xe2\x80\xa6CoVecCache maintains a mapping from K -&gt; (V, I) pairing. K \xe2\x80\xa6CmAfter the linkage for a crate has been determined we need \xe2\x80\xa6CiThe Rust AST Visitor. Extracts useful information and \xe2\x80\xa6DiVisits the given value as the pointer of a <code>Box</code>. There is \xe2\x80\xa60BiVisits a left-hand side of an assignment.CnThe epoll file description that this EpollEventInterest is \xe2\x80\xa6CaAdd an error code. See <code>Diag::code()</code>.DcAvoid if possible, <code>Span::map_ctxt</code> should be preferred.CaExecute the operation with provided dependencies.0CgAdd a help message attached to this diagnostic. See \xe2\x80\xa6CnCreates a new work queue that starts empty, where elements \xe2\x80\xa6DfAdd a note attached to this diagnostic. See <code>Diag::note()</code>.CcCreates a <code>fx</code> hasher with a given seed.BjAdd a span. See <code>Diag::span()</code>.CnStarts a new dep-graph task. Dep-graph tasks are specified \xe2\x80\xa6DeCreates a <code>PlaceRef</code> to this location with the given type.DkAdd a warning attached to this diagnostic. See <code>Diag::warn()</code>\xe2\x80\xa6DhAdds <code>1</code> to the value and wraps around if the maximum for \xe2\x80\xa6DiWrite an int of the appropriate size to <code>dest</code>. The target \xe2\x80\xa6CgWrite a row with the given index and MIR, using the \xe2\x80\xa6CgDuring type inference, partially inferred terms are \xe2\x80\xa6BhCooperatively yields execution to Rayon.00CfThe symbols for the attributes that this parser is \xe2\x80\xa6B`result from trying to map an ABI0CbIndicates which kind of access is being performed.0CmReverse Mode, Compute derivatives for this scalar output, \xe2\x80\xa6CfMode for adjusting the expected type and binding mode.CiRepresents coercing a value to a different type of value.EhThe definition of a user-defined type, e.g., a <code>struct</code>, <code>enum</code>\xe2\x80\xa60Bl<code>-Copt-level=3</code> / <code>-O</code>00CmIf the self type is an alias type, e.g. an opaque type or \xe2\x80\xa600000000BgThe value will be aligned to the right.DcFunctionality required for the bytes of an <code>Allocation</code>.0CkWe have our own error type that does not know about the \xe2\x80\xa60AiExtra per-allocation data0BfExtra data stored in every allocation.0CmHelper struct that packs an alignment, mutability, and \xe2\x80\x9c\xe2\x80\xa6CmThe information that makes up a memory access: offset and \xe2\x80\xa60BmExtra per-allocation data for borrow trackingClThis type represents an Allocation in the Miri/CTFE core \xe2\x80\xa60CkAn annotation for an SCC. This can be a representative, \xe2\x80\xa6BoOne end of a pair of connected unnamed sockets.ClThe argument is located at a specific index given in the \xe2\x80\xa6DdA simple wrapper type against <code>ast::Arm</code>. Used inside \xe2\x80\xa6DaExtension trait for explicit casts to <code>*const c_char</code>.DkIndicates that the type of <code>source</code> must be a subtype of the \xe2\x80\xa6CkA parsed list of attributes that is not attached to any \xe2\x80\xa6CkMust match the layout of <code>LLVMInlineAsmDialect</code>.BgInformation about an assertion failure.0DgAssociated constant: <code>trait MyTrait { const ASSOC: usize; }</code>AaAssociated const.011000BlAn associated constant of a trait or a type.0DiA list of <code>ty::AssocItem</code>s in definition order that allows \xe2\x80\xa60AkA list of associated items.BhThe <code>async_fn_mut</code> lang item.DeThe attributes on an <code>Item</code>, including attributes like \xe2\x80\xa6BcFor typedef, constants, and staticsCgThe background color used for zebra-striping the table.BeA node in the MIR control-flow graph.DeThe <code>begin_panic</code> lang item. libstd panic entry point. \xe2\x80\xa6CfInformation attached to a meta-variable binder in LHS.CoA key that identifies a binding in a given <code>Module</code>.EjThe kind of borrow in an <code>AddrOf</code> expression, e.g., <code>&amp;place</code> \xe2\x80\xa60EhLike <code>Symbol</code>, but for byte strings. <code>ByteSymbol</code> is used less \xe2\x80\xa6CkUsed to provide better error messages for const generic \xe2\x80\xa6BbThe cache entry for a given input.DgRepresents how a <code>TerminatorKind::Call</code> was constructed. \xe2\x80\xa60ChDescribes the type used for <code>PassMode::Cast</code>.ClThis checker covers basic properties of the control-flow \xe2\x80\xa6CjA message sent from the coordinator thread to the main \xe2\x80\xa6CjThis pass inserts checks for a valid enum discriminant \xe2\x80\xa6nUnfancy stdout0ClProcesses program tokens, classifying strings of text by \xe2\x80\xa6ClA clause is something that can appear in where bounds or \xe2\x80\xa6000CjMaps client-supplied options to Rustfmt\xe2\x80\x99s internals, \xe2\x80\xa60n<code>}</code>0n<code>)</code>0CnAnonymous region for the implicit env pointer parameter to \xe2\x80\xa6000CkThe access is caused by capturing a variable for a closure.DjA wrapper around <code>&amp;mut Resolver</code> that may be mutable or \xe2\x80\xa6CjAdds syntax highlighting and playground Run buttons to \xe2\x80\xa6DaMust match the layout of <code>LLVMRustCoverageCodeRegion</code>.CkCoerceMany encapsulates the pattern you should use when \xe2\x80\xa6Cm==, !=, etc \xe2\x80\x93 takes equal types, produces bools, except \xe2\x80\xa6BdFit as much on one line as possible.BdNo spaces around \xe2\x80\x9c=\xe2\x80\x9d and \xe2\x80\x9c+\xe2\x80\x9dChTrait for types that can be used in <code>Config</code>.CfEvaluated Constants Represents the result of const \xe2\x80\xa60DbAllow anonymous constants from an inline <code>const</code> block.CoAn inline constant expression <code>const { something }</code>.DaAllow anonymous constants from an inline <code>const</code> blockB`E.g. <code>const { ... }</code>.CoAn inline <code>const</code> block, e.g. <code>const {}</code>.AoConstant generic parameter: \xe2\x80\xa6EeRequirement for a <code>const N: Ty</code> to implement <code>Ty: ConstParamTy</code>0110BgRepresents <code>#[const_trait]</code>.0EgRepresents a constant value in Rust. <code>Scalar</code> and <code>Slice</code> are \xe2\x80\xa60BcA constraint on an associated item.EdA <code>MetaVar</code> with an actual <code>MatchedSeq</code>. The length of the \xe2\x80\xa6DiDeclares that the variable <code>decl_id</code> appears in a location \xe2\x80\xa6CiRepresents a constraint that influences the inference \xe2\x80\xa60C`The type is required to satisfy a set of bounds.CkCounting latches are used to implement scopes. They track aAfA list of crate items.CiBuiltin attribute that is only allowed at the crate level0CfWhether the code causing the trait bound to not be \xe2\x80\xa6ClA store of Rust crates, through which their metadata can \xe2\x80\xa6DjThis is used to get a reference to a <code>GlobalCtxt</code> if one is \xe2\x80\xa60CmAll cycle heads a given goal depends on, ordered by their \xe2\x80\xa6DaThe <code>deprecated</code> lint detects use of deprecated items.0CjDeallocate backing memory of thread-local statics as usualCkDeallocate memory. Note that when memory is deallocated \xe2\x80\xa6CkProvides context for checking patterns in declarations. \xe2\x80\xa6CnIn-memory cache for queries whose key is a <code>DefId</code>.0ClThe \xe2\x80\x9cdefining type\xe2\x80\x9d for this MIR. The key feature of \xe2\x80\xa6CmThis is a strange one: lets you register an error without \xe2\x80\xa6CjA hashmap which only starts hashing after ignoring the \xe2\x80\xa600000BnA single delegation item (<code>reuse</code>).AnAn associated delegation item.AhPaths in delegation itemAgAttribute is deprecatedBhwe don\xe2\x80\x99t yet warn on this, but we will0CdDesugaring done by the compiler during AST lowering.CdTrait implemented by error types. This is rarely \xe2\x80\xa60CaA format string for use in diagnostic attributes.CeA structure representing a diagnostic message and \xe2\x80\xa60ClStores a diagnostic emitted during query execution. This \xe2\x80\xa6Ci<code>impl Trait</code> is not accepted in this position.CfAll parameters to determine how the tree is formatted.ElA doc comment (e.g. <code>/// ...</code>, <code>//! ...</code>, <code>/** ... */</code>, \xe2\x80\xa6DhA doc comment token. <code>Symbol</code> is the doc comment\xe2\x80\x99s data \xe2\x80\xa6AoRepresents <code>#[doc]</code>.0CeAllows a type to traverse the cleaned ast of a crate.DaReverse Mode, Compute derivatives for this &amp;T or *T input \xe2\x80\xa6FcA filter like <code>F -&gt; G</code> where <code>F</code> and <code>G</code> are valid dep-node \xe2\x80\xa60CjA packed representation of an edge\xe2\x80\x99s start index and \xe2\x80\xa6Ck\xe2\x80\x9cElaboration\xe2\x80\x9d is the process of identifying all the \xe2\x80\xa600000CmThis exists so that bugs and fatal errors can both result \xe2\x80\xa60AfA union had no fields.0CmLast character of a comment, \xe2\x80\x98\\n\xe2\x80\x99 for a line comment, \xe2\x80\xa6CmThe input could not be broken and so rewriting the string \xe2\x80\xa6CfA Visitor that finds the construction of enums and \xe2\x80\xa6DkThis is used when executing an <code>eval_always</code> query. We don\xe2\x80\x99\xe2\x80\xa600BnResult of <code>TyCtxt::eval_stability</code>.CdThe locations where this extern entry must be found.BgRepresents <code>#[export_name]</code>.0Bn<code>#[export_name = &quot;name&quot;]</code>Ce<code>type</code>s from an <code>extern</code> block.0ChMachines can define extra (non-instance) things that \xe2\x80\xa60CiThe first few bytes of files generated by incremental \xe2\x80\xa6BhA temporary created for borrow checking.CkA fake borrow. FIXME: do we need to distinguish shallow \xe2\x80\xa6DiMarker type which enables implementation of <code>create_fatal</code> \xe2\x80\xa60CiUsed as a return value to signify a fatal error occurred.0CkTypes of fields (other than the last, except for packed \xe2\x80\xa600CiIdentifies the file format of the cross-crate informationCiAn abstraction over the fs operations used by the Parser.ClFilesIndex contains paths that can be efficiently looked \xe2\x80\xa6CaFluent messages can use arguments in order to \xe2\x80\xa60CnAttribute of a Fluent message. Needs to be combined with a \xe2\x80\xa60DiCustom types can implement the <code>FluentType</code> trait in order \xe2\x80\xa6DgError produced by attempting to compute or adjust a <code>FnAbi</code>.BhThe <code>fn_ptr_trait</code> lang item.C`Hold information about a ForeignItem in a crate.AkForeign module declaration.BiAn external module (<code>extern</code>).AmAn <code>extern</code> block.0CdAn external module, e.g. <code>extern { .. }</code>.11Ae(Parsed) format args.BiA <code>format_args!()</code> expression.BhA desugared <code>format_args!()</code>.BfArguments to fill a FormatString with.CjSpecification for the formatting of an argument in the \xe2\x80\xa6BgExtra data stored with each stack frame0BfExtra data stored in every call frame.0BmPer-call-stack-frame data for borrow trackingClVector clock state for a stack frame (tracking the local \xe2\x80\xa6CnDuring NLL region processing, we create variables for free \xe2\x80\xa60CmA type which allows mutation using a lock until the value \xe2\x80\xa60DhLike <code>FreshTy</code>, but as a replacement for <code>IntVar</code>.0000AaAn uninterned id.BhMaster context for codegenning from MIR.DiUsed by <code>LoweringContext::make_lowered_await</code> to customize \xe2\x80\xa6B`The <code>poll</code> lang item.Ca<code>cfg(...)</code>\xe2\x80\x99s that are feature gated.CmCollected spans during parsing for places where a certain \xe2\x80\xa6CbConcrete argument in the sequence of generic args.AnAppears as a generic argument.CjAn entity in the Rust type system, which can be one of \xe2\x80\xa60CiOne argument in a list of generic arguments to a path \xe2\x80\xa6BgThe <code>get_context</code> lang item.BgSee TyCtxt for details about this type.0BeWhy a specific goal has to be proven.00000000Gk<code>#&quot;abc&quot;#</code>, <code>##&quot;a&quot;</code> (fewer closing), or even <code>#&quot;a</code> (unterminated).CfWhether evaluating this goal ended up changing the \xe2\x80\xa60EaSomething that implements <code>HashStable&lt;CTX&gt;</code> can be hashed in \xe2\x80\xa6AeAll items on one row.ClEnforces the constness of the predicate we\xe2\x80\x99re calling. \xe2\x80\xa600000Bb<code>-Zunpretty=identified</code>Bf<code>-Zunpretty=hir,identified</code>ChA set of directories, files and modules that rustfmt \xe2\x80\xa6CiThe \xe2\x80\x9cheader\xe2\x80\x9d of an impl is everything outside the \xe2\x80\xa6CiGiven the successful resolution of an obligation, the \xe2\x80\xa600kOne import.BlContains data for specific kinds of imports.EdA view into contiguous <code>T</code>s, indexed by <code>I</code> rather than by \xe2\x80\xa60CcA pattern with an index denoting which field it \xe2\x80\xa6CgAn inference variable for a const, for use in const \xe2\x80\xa60000CcAn associated type in an inherent <code>impl</code>0000kIntegrator.BhHow a constant value should be interned.0CmTrait that defines the methods that are fine to call from \xe2\x80\xa6BgUsing a string that is not valid UTF-8,0CjThe tag of an enum does not encode an actual discriminant.0CgThe scope introduced by a macro invocation that can \xe2\x80\xa6AjPossible json config filesCoAbstract data type (struct, enum, union) <code>DepNode</code>s.AmAn AST-based attribute macro.BaAn AST-based function-like macro.BdSomething in the lifetime namespace.CeType of the integer literal based on provided suffix.CcThe <code>self-contained</code> LLVM bitcode linkerCkRepresents the result of an attempt to load incremental \xe2\x80\xa60DaPlaceholder for <code>CrateNum</code>\xe2\x80\x99s \xe2\x80\x9clocal\xe2\x80\x9d counterpart0A`Types for localsDhA <code>LocalDefId</code> is equivalent to a <code>DefId</code> with \xe2\x80\xa60CeState of a local variable including a memoized layout0BaCurrent value of a local variableCjThe loop type that yielded an <code>ExprKind::Loop</code>.CkEnzyme\xe2\x80\x99s loose type debug helper (can cause incorrect \xe2\x80\xa6ChMaximum value the index can take, as a <code>u32</code>.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000AkMetadata for a macOS futex.CaThe token <code>macro_rules</code> was processed.CkThe state at which we entered a macro definition in the \xe2\x80\xa6BnA dependency that is only used for its macros.00CkScope of the condition and body of a match arm with a guardDhA unit within a matcher that a <code>MatcherPos</code> can refer to. \xe2\x80\xa6ChA single matcher position, representing the state of \xe2\x80\xa6BaWhy we failed to evaluate a goal.00000000CmIndicates that the trait bound must be applicable in both \xe2\x80\xa6CbAn expression that does not fit in other variants.CkAdditional memory kinds a machine wishes to distinguish \xe2\x80\xa60DcA method call (e.g. <code>x.foo::&lt;Bar, Baz&gt;(a, b, c)</code>).DdA method call (e.g., <code>x.foo::&lt;Bar, Baz&gt;(a, b, c)</code>).EeA method call (e.g., <code>x.foo::&lt;&#39;static, Bar, Baz&gt;(a, b, c, d)</code>\xe2\x80\xa6ClA method in a trait impl or a provided method in a trait \xe2\x80\xa6BnConfiguration needed to spawn a Miri instance.0B`One node in the tree of modules.CmThis associated type is the type where the current module \xe2\x80\xa6CnThe movability of a coroutine / closure literal: whether a \xe2\x80\xa60000000CiEach method of this trait is a hook to be potentially \xe2\x80\xa6DfMutable reference. <code>unpin</code> indicates the absence of any \xe2\x80\xa6BdType of a non-atomic read operation.BhAssociated constants and named constantsCmReport on something that has got a name, which could be a \xe2\x80\xa6Dk<code>NamedMatch</code> is a pattern-match result for a single metavar. \xe2\x80\xa6AfGo from ! to any type.BkA coercion from <code>!</code> to any type.AgDon\xe2\x80\x99t fallback at allBoThe status of a node in the depth-first search.CmAn operation that is <em>not allowed</em> in a const context.ChThe binder is not present, all closure lifetimes are \xe2\x80\xa6AeThe file was missing.CfThis node has not yet been visited as part of the DFS.ClThis identifier (and its span) is the lifetime passed to \xe2\x80\xa6nLike /dev/nullDeAn <code>Obligation</code> represents some trait reference (e.g., \xe2\x80\xa60CgDescribes the constraints placed on offset-projections.0CjDo not visit nested item-like things, but visit nested \xe2\x80\xa6CiOnly retag fields of types with Scalar and ScalarPair \xe2\x80\xa60CmA conversion from an opaque type to its hidden type so we \xe2\x80\xa6CkLike an explicit cast from an opaque type to a concrete \xe2\x80\xa60000000CmInhabited if either we don\xe2\x80\x99t know the hidden type or we \xe2\x80\xa60000DiAn <code>OperandRef</code> is an \xe2\x80\x9cSSA\xe2\x80\x9d reference to a Rust value, \xe2\x80\xa6B`The <code>None</code> lang item.B`The <code>Some</code> lang item.CgGiven a region <code>R</code>, expands to the function:0DbA type which must dispatch to a <code>Deref</code> implementation.CjCall overloading when callee implements one of the Fn* \xe2\x80\xa6DkAn error which occurs when <code>FluentBundle::add_resource</code> adds \xe2\x80\xa6oAn owned slice.CnMap of all HIR nodes inside the current owner. These nodes \xe2\x80\xa6CjHow many consecutive pages to unprotect. 1 by default, \xe2\x80\xa6BeAllow paren sugar, don\xe2\x80\x99t allow RTN.BmRepresents <code>#[rustc_paren_sugar]</code>.0Bnparenthesized function-family traits, like \xe2\x80\xa6BlParse error occurred when parsing the input.BbFind a file that cannot be parsed.BgThe <code>partial_ord</code> lang item.CjThe result of resolving a path before lowering to HIR, \xe2\x80\xa6AnA pattern type range start/endDcLazily resolves a path into a list of <code>DefId</code>s using \xe2\x80\xa6CjIndicates which permission is granted (by this item to \xe2\x80\xa60CgPublic interface to the state machine that controls \xe2\x80\xa6CcLike <code>Default</code>, but without the warning.0BgThis index uniquely identifies a place.CgThe location and extra runtime properties of the place.DdA single integer representing a <code>Location</code> in the MIR \xe2\x80\xa6ChThis trait is used for both AST and HIR pretty-printing.BfPrint intermediate IR generation stepsDdA procedural macro usable in the <code>#[derive()]</code> attribute.BaAnnotation is useless, reject it.BfE.g., <code>Iterator::Item = T</code>.Do<code>where &lt;T as TraitRef&gt;::Name == X</code>, approximately. See the \xe2\x80\xa6DgA projection <code>&lt;Type as Trait&gt;::AssocType</code>. Can get \xe2\x80\xa602121EfUsed as base for another place, e.g., <code>x</code> in <code>x.y</code>. Will not \xe2\x80\xa6EcUsed as base for another place, e.g., <code>x</code> in <code>x.y</code>. Could \xe2\x80\xa6D`This is the <em>value</em> obtained by projecting another value.543543543AcPointer provenance.0CjPointers are \xe2\x80\x9ctagged\xe2\x80\x9d with provenance information; \xe2\x80\xa60ClThis trait abstracts over the kind of provenance that is \xe2\x80\xa60CnTrait for types that serve as an in-memory cache for query \xe2\x80\xa60CaA value uniquely identifying an active query job.00Jg<code>br&quot;abc&quot;</code>, <code>br#&quot;abc&quot;#</code>, <code>br####&quot;ab&quot;###&quot;c&quot;####</code>, <code>br#&quot;a</code>. <code>None</code> \xe2\x80\xa6DbA raw pointer type: <code>*const i32</code>, <code>*mut i32</code>DlA raw pointer type, e.g. <code>*mut u32</code>, <code>*const u8</code>, etc.DhItem is accessible either directly, or with help of <code>use</code> \xe2\x80\xa6BiKeywords that do pointer/reference stuff.CmRepresentation of regions. Note that the NLL checker uses \xe2\x80\xa6000CcA name for a particular region used in emitting \xe2\x80\xa6DjA pointer to the <code>RegistryData</code> which uniquely identifies a \xe2\x80\xa6AbLLVMRustRelocModelCmFor different handling of associated items from the Deref \xe2\x80\xa6BaA type used for the search index.AiParse #[repr(\xe2\x80\xa6)] forms.DgAlternative version of <code>ReservedFrz</code> made for types with \xe2\x80\xa6ChPaths are compared and hashed based on their resolution.BmVisible only in the given crate-local module.00BiFor <code>pub(in path)</code> visibility.DkA type which has gone through <code>cx.reveal_opaque_ty</code>, i.e. if \xe2\x80\xa6AnControls where to put the rhs.BkShift right, arithmetically (shift in sign)BgShift right, logically (shift in zeros)BkChecking that a rigid alias is well-formed.00000000CmA view onto a finite range of an infinitely long sequence \xe2\x80\xa6ChOpaque type that allows C++ code to write bytes to a \xe2\x80\xa6CfRvalues fall into different \xe2\x80\x9cstyles\xe2\x80\x9d that will \xe2\x80\xa6AkSanitizer runtime librariesClA handle to the single, shared supervisor process across \xe2\x80\xa6CiRun the proc-macro code on the same thread as the server.DkA pair of two scalar value (must have <code>ScalarPair</code> ABI where \xe2\x80\xa60BkInformation about an invidividual SCC node.CiIdentifier produced by a semi-opaque expansion may be \xe2\x80\xa6BmAlways show the suggested code independently.CmThe target is the only valid item that can be used in the \xe2\x80\xa6BfAnnotation under a single line of codeBnA single source in the <code>SourceMap</code>.CmGrouped information about the source code origin of a MIR \xe2\x80\xa6BkHandle to a range of text in a source file.CkMarks a span that might otherwise not be represented in \xe2\x80\xa6ClType used to check whether two ast are the same. This is \xe2\x80\xa60C`Small-storage-optimized implementation of a map.000000C`Small-storage-optimized implementation of a set.000000CmA very small cache of searches of a borrow stack, mapping \xe2\x80\xa6CmStack entries of the evaluation stack. Its fields tend to \xe2\x80\xa6BkIt\xe2\x80\x99s standalone, i.e., its own statement.CcA static method where <code>Self</code> is an enum.BaA named <code>static</code> item.0DgThe kind of a <code>Struct</code> and the data specific to it, i.e. \xe2\x80\xa6DoA doc fragment created from a <code>///</code> or <code>//!</code> doc comment.CeA vector of spans and replacements, a message and \xe2\x80\xa6BeA suggestion to show in a diagnostic.CmWhen we have nested trait refs, we concatenate late bound \xe2\x80\xa6CiThe main means of communication between the child and \xe2\x80\xa6CmDifferentiate between whether the name for an extern decl \xe2\x80\xa6DgFor the <code>Target::check_consistency</code> function, determines \xe2\x80\xa6DbThe target of the <code>by_name</code> map, which accounts for \xe2\x80\xa6CmThe thread has terminated its execution. We do not delete \xe2\x80\xa6BdThe branch to be taken after a test.BfRepresents a user created thread-pool.0DgReceiver has type <code>*mut T</code>, convert to <code>*const T</code>C`Progressive construction of a table of contents.BoThe layout can vary due to a generic parameter.ClDon\xe2\x80\x99t emit an error, the evaluation failed because the \xe2\x80\xa6CgResolution can fail if we are in a too generic context.10lTrait alias.DiTrait alias: <code>trait IntIterator = Iterator&lt;Item = i32&gt;;</code>nA trait alias.11BcA trait alias declaration, e.g. \xe2\x80\xa600nA trait bound.AfA list of trait decls.CkContext needed to perform transcription of metavariable \xe2\x80\xa6CjTranslatable message which has already been translated \xe2\x80\xa6CgTranslatable message which has been already translated.10BdA desugared <code>?</code> operator.EkDerives <code>TryFrom&lt;u32&gt;</code> for the annotated <code>enum</code>, which must \xe2\x80\xa6CjReport on something that hasn\xe2\x80\x99t got a proper name to \xe2\x80\xa6CnThis is a bare signal of what kind of type we\xe2\x80\x99re dealing \xe2\x80\xa6CnThis struct should only be created by <code>create_def</code>.0CdThese structs (a newtyped TyVid) are used as the \xe2\x80\xa6CjThis trait is implemented for every infallible folding \xe2\x80\xa60000BfAn iterator for walking the type tree.000C`An arena that can hold objects of only one type.CgThe current typing mode of an inference context. We \xe2\x80\xa6000DhThe <code>unused_mut</code> lint detects mut variables which don\xe2\x80\x99t \xe2\x80\xa60CjA bitmask constant for scrutinizing the immediate byte \xe2\x80\xa6CiUnstable impl detail that directly uses Rust types to \xe2\x80\xa60CmAn underscore, used in destructuring assignment to ignore \xe2\x80\xa6B`An explicit <code>&#39;_</code>.DkA single <code>_</code> in an identifier. Underscores are sorted before \xe2\x80\xa6DoTrait implemented for <strong>values</strong> associated with a unification \xe2\x80\xa60000AeUnion field accesses.0CmThe constructors cannot be listed, and the type cannot be \xe2\x80\xa60Eg<code>UnordItems</code> is the order-less version of <code>Iterator</code>. It only \xe2\x80\xa6BgThe <code>unsafe_cell</code> lang item.CnUnsizing casts might require vtables, so we have to record \xe2\x80\xa6Aee.g. <code>42</code>.CnA float literal without a suffix (<code>1.0 or 1.0E10</code>).DlA <code>From</code>-like trait that takes <code>TyCtxt</code> to perform \xe2\x80\xa60000BhKeeps track of used &amp; unused locals.BoIndicates whether or not a given arm is useful.CmSpecifies the user-given self type. In the case of a path \xe2\x80\xa60Ei<code>&lt;T as Trait&gt;::method</code> where <code>method</code> receives unsizeable \xe2\x80\xa60000000CnThe time-stamps recorded in the data-race detector consist \xe2\x80\xa6CfThis index uniquely identifies a tracked place and \xe2\x80\xa6CmSee the <code>error_reporting</code> module for more details.0CnDefinition of a variant \xe2\x80\x93 a struct\xe2\x80\x99s fields or an enum \xe2\x80\xa6CkDefinition of a variant, which can be either a struct / \xe2\x80\xa6CgThe <em>source-order</em> index of a variant in a type.0AmThe index of an enum variant.BnThe source-order index of a variant in a type.Abuses AVX and stuff0ClThis is a \xe2\x80\x9cconditional bound\xe2\x80\x9d that checks the result \xe2\x80\xa60CeMust match the layout of <code>LLVMVisibility</code>.CkSpecifies the symbol visibility with regards to dynamic \xe2\x80\xa6BcVisibility of an <code>Item</code>.CdThe flags to use when calling <code>waitid()</code>.DeThe <code>while_true</code> lint detects <code>while true { }</code>.BbThe state of walking a given node.BfNo syntax: <code>T</code> well-formed.DkWell-formed checking. If a <code>WellFormedLoc</code> is provided, then \xe2\x80\xa61101011B`Whitespace that is not a newlineBbAny whitespace character sequence.CmCopying all predicates and parameters, including those of \xe2\x80\xa6DkSame idea as <code>DeconstructedPat</code>, except this is a fictitious \xe2\x80\xa6CmThis trait describes the behavior of writers that support \xe2\x80\xa6CmRAII structure used to release the exclusive write access \xe2\x80\xa6CiConvert special characters into XML entities. This is \xe2\x80\xa6CiKleene star (<code>*</code>) for zero or more repetitionsAhA literal of a ZST type.CmThe move-analysis portion of borrowck needs to work in an \xe2\x80\xa6CjAn list of memory accesses that occurred, in the order \xe2\x80\xa6CkOverwrite the local. If the local can be overwritten in \xe2\x80\xa6DaLike <code>add_statement</code>, but specialized for assignments.DoRecords <code>region</code> as being live at all the given <code>points</code>.E`Adds all elements in <code>r_from</code> to <code>r_to</code> (because e.g., \xe2\x80\xa6CiAdds a new target to the switch. Panics if you add an \xe2\x80\xa6E`Convenience method to create the <code>&amp;*&lt;expr&gt;</code> suggestion. \xe2\x80\xa6AlReturns if the ADT is a box.0FeShifts <code>addr</code> to make it aligned with <code>align</code> by rounding <code>addr</code> \xe2\x80\xa6CmReturns an iterator over all fields contained by this ADT \xe2\x80\xa6ChRetrieves all traits in this crate and any dependent \xe2\x80\xa6CmReturns a slice with all considered values (not including \xe2\x80\xa6CmAllocate a new context with the given key, or retrieve it \xe2\x80\xa6CjAllocates in multiples of one page on the host system. \xe2\x80\xa6DgThis method factors out how a <code>MiriAllocBytes</code> object is \xe2\x80\xa6CiThe virtual memory representation of the MIR interpreter.CiProvides in-place mutable access to an occupied entry \xe2\x80\xa6ClApplies multiple instances of the run-length encoding to \xe2\x80\xa6CmApplies a provenance copy. The affected range, as defined \xe2\x80\xa6CfExtend a syntax context with a given expansion and \xe2\x80\xa6BkA wrapper around LLVM\xe2\x80\x99s archive (.a) codeCgThe node of the relevant argument in the function call.00DdLocals in <code>self</code> that correspond to this function\xe2\x80\x99s \xe2\x80\xa6CjStart and end byte offset of every successfully parsed \xe2\x80\xa6CkInterpret these generic args as the args of a closure type.0DhCreates a <code>JobRef</code> from this job \xe2\x80\x93 note that this hides allCbGives direct access to the raw underlying storage.0DjCompile <code>expr</code> into a value that can be used as an operand. \xe2\x80\xa6AmSee docs in build/expr/mod.rsCfA set of traits implemented for various AST nodes, \xe2\x80\xa6CjWhether the target supports atomic CAS operations nativelyCmAtomic access, acquire, release sequence tracking clocks. \xe2\x80\xa6Di<code>ret_ptr</code> indicates whether the return type (which is also \xe2\x80\xa60ClThis module defines traits for attribute parsers, little \xe2\x80\xa6BoSet and unset common attributes on LLVM values.CaGet a list of attributes to display on this item.CnSupport code for rustdoc and external tools. You really don\xe2\x80\xa6CnIndicates that the source expression should be autoderef\xe2\x80\x99\xe2\x80\xa6CfLists all the base edges in the graph: the initial \xe2\x80\xa6DgFor the move path <code>mpi</code>, returns the root local variable \xe2\x80\xa6CaThe <code>DefId</code> of the owner of this body.BiThe set of borrows extracted from the MIRDgThe set of borrows occurring in <code>body</code> with data about them.CnWe use an IndexMap here because we want these lifetimes in \xe2\x80\xa6AgThe type being bounded.0EeInline an <code>impl</code>, inherent or of a trait. The <code>did</code> must be \xe2\x80\xa6BjMoves to a substring by a number of bytes.DgMarks the index previously returned by <code>next_index</code> as used.CjReturns the span\xe2\x80\x99s byte position range in the source \xe2\x80\xa6lAlways false0BfWhether this is a variadic C function,CiMarks this function as variadic (accepting a variable \xe2\x80\xa6222DnPerform <code>let temp = &lt;ty as Deref&gt;::deref(&amp;place)</code>. or \xe2\x80\xa6DaReturns <code>true</code> if this symbol can be a raw identifier.EeCheck whether <code>ty</code> can be coerced to <code>output_ty</code>. Used from \xe2\x80\xa60CkIndicates if an unwind may happen across a call to this \xe2\x80\xa6DhCandidates which user could <code>use</code> to access the missing type.CdSpan that gave us this expectation, if we know that.CkThis module implements some validity checks for attributes.FcIf a cast from <code>from_ty</code> to <code>to_ty</code> is valid, returns a <code>Some</code> \xe2\x80\xa6C`List of check cfg flags to hand to the compiler.ClChecks if <code>#[cold]</code> is applied to a non-function.EhMake sure the <code>data</code> fits in <code>size</code>. This is guaranteed by all \xe2\x80\xa6BcCheck an expr with no expectations.ChChecks that the field types (in a struct def\xe2\x80\x99n) or \xe2\x80\xa6DeChecks if <code>#[link]</code> is applied to an item other than a \xe2\x80\xa6E`Checks to see if the next token is either <code>+</code> or <code>+=</code>. \xe2\x80\xa6DmChecks if the <code>#[repr]</code> attributes on <code>item</code> are valid.CkWhile we currently allow all unary operations, we still \xe2\x80\xa6Eb<code>child_path(child, parent)</code> when the path <code>child</code> is the \xe2\x80\xa60CkA child node was read-accessed: UB on Disabled, noop on \xe2\x80\xa6ClTakes a path to a source file and cleans the path to it. \xe2\x80\xa6ClWARNING: this implementation of clone_from will panic if \xe2\x80\xa6CkWARNING: this implementation of clone_from may panic if \xe2\x80\xa6ChA live node representing a point of execution before \xe2\x80\xa6DjGiven two <code>fn</code> signatures highlight only sub-parts that are \xe2\x80\xa6BeCode model to use. Corresponds to \xe2\x80\xa6CcData about code being compiled, gathered during \xe2\x80\xa60DgThe bitwise negation (<code>!</code>) of the bits in a flags value, \xe2\x80\xa6000000000000000000000000000CdUsed for synchronisation, allowing us to receive \xe2\x80\xa6c\xe2\x80\xa6DhReturns the kind of const context this <code>Item</code> represents (\xe2\x80\xa6EcReturns the <code>DefId</code> of the <code>copy</code> lang item if it is defined.CnAll the values matched by this pattern are already matched \xe2\x80\xa6AgA set of patterns that:1Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6000000AkGets the name of the crate.000000DiName of the crate (for regular <code>rustdoc</code>) or Markdown file \xe2\x80\xa6BgThe name of the crate being documented.BcCrate name. Never contains \xe2\x80\x98-\xe2\x80\x99.CkCreates a definition with a parent definition. If there \xe2\x80\xa6De<code>tcx</code>-dependent operations performed for every created \xe2\x80\xa6CfCreate a new definition within the incr. comp. engine.BkAdds a definition with a parent definition.DkReturns a freshly created <code>InterpCx</code>. Public because this is \xe2\x80\xa60DhCreates a new SCC with <code>successors</code> as its successors and \xe2\x80\xa6CiCheck whether this compile session and crate type use \xe2\x80\xa6CmReturns the unescaped string value if the current literal \xe2\x80\xa6DjA pass that inserts the <code>ConstEvalCounter</code> instruction into \xe2\x80\xa6DjCall a query that can return <code>ErrorHandled</code>. Should be used \xe2\x80\xa6BjThe number of fields for this constructor.0CmThis tracks which byte ranges in this value contain data; \xe2\x80\xa6CmIndexes that can be reused: memory gain when the map gets \xe2\x80\xa6CiSome extra information useful only for debugging purposesAhDeclare a Rust function.CkGets the needed type as it\xe2\x80\x99s defined without any type \xe2\x80\xa6CmThis module implements expansion of delegation items with \xe2\x80\xa6ClSupport inheriting generic parameters and predicates for \xe2\x80\xa6ChObligations that depend on this obligation for their \xe2\x80\xa6CkReturns the index to the end of the URL if the split at \xe2\x80\xa6AhLLVM diagnostic reports.DbCustomization of the <code>Diag&lt;&#39;_&gt;</code> for the lint.0BoAlways returns an empty <code>FormatSpec</code>ChReturn the span location to be printed in diagnostic \xe2\x80\xa6CeThe intersection of a source flags value with the \xe2\x80\xa6000000000000000000000000000DiReturns the discriminant type, given these <code>repr</code> options. \xe2\x80\xa6CkString to prepend to the name of every dynamic library. \xe2\x80\xa6CjString to append to the name of every dynamic library. \xe2\x80\xa6BoFinding the dominators in a control-flow graph.CeA cache of predicates that have been successfully \xe2\x80\xa6CnNodes in the drop tree, containing drop data and a link to \xe2\x80\xa6DdWhen we used to capture <code>x</code> in its entirety, we would \xe2\x80\xa6DiReturns how <code>path</code> should be dropped, given <code>mode</code>.EcReturns the <code>DefId</code> of the <code>drop</code> lang item if it is defined.BgA dummy bang macro <code>foo!()</code>.CeCreate a lazy debug printer that prints the given \xe2\x80\xa6BlExpects that the next item is a dollar sign.DhMaps <code>e</code> to a label that will be used in the rendered output.DhMaps <code>e</code> to a style that will be used in the rendered output.Cm<code>let pat: ty = &lt;INIT&gt; else { &lt;ELSE&gt; }</code>C`Drops that happen on the <code>else</code> path.CjWhen requested, emit most of the facts needed by polonius:DjWith <code>-Ztrack_diagnostics</code> enabled, we print where in rustc \xe2\x80\xa60ClCreates a root evaluation context and search graph. This \xe2\x80\xa6CnCalled when we start processing a span of text that should \xe2\x80\xa6CgThe name of entry function. Default value is \xe2\x80\x9cmain\xe2\x80\x9dnParse a bufferBdPrint to terminal output to a bufferBhTracked access to environment variables.000000EhThe <code>epoll_wait()</code> system call waits for events on the <code>Epoll</code> \xe2\x80\xa6CnStream socket peer closed connection, or shut down writing \xe2\x80\xa6DhEquality up to trailing <code>None</code>s of two maps, i.e. do they \xe2\x80\xa6CfUsed for error reporting to be able to rerun the queryAfWhat failure occurred.AkKind of error that occurredDdEvaluates the entry function specified by <code>entry_id</code>. \xe2\x80\xa60CgEvaluate whether <code>sup_region == sub_region</code>.ClComputes a place. You should only use this if you intend \xe2\x80\xa6ClReturns the value, if any, of evaluating <code>place</code>.CaString to append to the name of every executable.CkSet this to true if an exhaustive list of types involved inEmEats <code>&amp;</code> possibly breaking tokens like <code>&amp;&amp;</code> in process. \xe2\x80\xa6CdUnwraps the query job expecting that it has started.B`<code>[expr1, expr2, ...]</code>DiLike <code>snippet_block</code>, but add braces if the expr is not an \xe2\x80\xa6EeTries to determine the <code>Local</code> corresponding to <code>expr</code>, if any.DfConstructs a new <code>Counter</code> of kind <code>Expression</code>.DgHolds extra pattern data that was prepared by <code>FlatPat</code>, \xe2\x80\xa6CmFunction describing whether to continue at a tag. This is \xe2\x80\xa6BjBitwise \xe2\x80\x9cnand\xe2\x80\x9d with the current value.CjConverts a list of named fields (i.e., for struct-like \xe2\x80\xa6CgThis module contains types and functions to support \xe2\x80\xa6BdA module for searching for librariesDhLocates the given place and applies <code>Discriminant</code>, if it \xe2\x80\xa6CbLocates the given place, if it exists in the tree.EhFetches the state of the node <code>r</code>. If <code>r</code> is recorded as being \xe2\x80\xa6CjThe full span of the first attribute that was encountered.EcIf <code>state</code> is <code>UseSpecific</code>, stores the span of the first \xe2\x80\xa611CkFinds the smallest Integer type which can represent the \xe2\x80\xa6EgAssign <code>value</code> to all places that are contained in <code>place</code> or \xe2\x80\xa6DiComputes the <code>MaybeInitializedPlaces</code> dataflow analysis if \xe2\x80\xa6ClResults of dataflow tracking which variables (and paths) \xe2\x80\xa6EeCompute a <code>FnAbi</code> suitable for indirect calls, i.e. to <code>fn</code> \xe2\x80\xa60BbGet the ABI of a function pointer.0CmCollapse the chain until the first heading more important \xe2\x80\xa6CkError recovery mode entered when expansion is stuck (or \xe2\x80\xa6ChFormat all packages, and also their local path-based \xe2\x80\xa6CmA special region vid created to represent the current MIR \xe2\x80\xa6CkComputes a normalizes-to (projection) goal for inherent \xe2\x80\xa6CkReturns all non-associated locally defined items in all \xe2\x80\xa6DgAllocates a list from <code>arena</code> and copies the contents of \xe2\x80\xa6CiA constructor which takes a utf8 slice, parses it and \xe2\x80\xa60DbCreate an <code>AllocBytes</code> from a slice of <code>u8</code>.0CdCreates an allocation initialized by the given bytesDiConstructs an <code>Assume</code> from a given const-<code>Assume</code>.CiConvert a span and an identifier to the corresponding \xe2\x80\xa6EaA constructor which takes optional subtags as <code>AsRef&lt;[u8]&gt;</code>, \xe2\x80\xa60DhConstruct a range with these boundaries. <code>lo</code> must not be \xe2\x80\xa6DkCreates a new matrix, with <code>row</code> used as the value for every \xe2\x80\xa6BcCreates a new AssocOp from a token.CcConverts an arbitrary token into meta item literal.DkKeep this in sync with <code>Token::can_begin_literal_maybe_minus</code>\xe2\x80\xa61CkCreates a target tuple from the passed target tuple string.BlConstructs a <code>Tree</code> from a tuple.BlConstructs a <code>Tree</code> from a union.CdCreates a new index from a given <code>usize</code>.00000000000000DhRe-creates the tag from the integer returned by <code>into_usize</code>.111111111111111111111111111111111111111111111111111111111111111111111111111111111111Dk<code>header_len</code>: The length of the function header and name. In \xe2\x80\xa6CmWait for the futex to be signaled, or a timeout. Once the \xe2\x80\xa6DiWake up <code>count</code> of the threads in the queue that match any \xe2\x80\xa6AoThe case involving a multispan.BoGeneric parameters as expected by type or traitD`Generate some random bytes, and write them to <code>dest</code>.DiAttempts to generalize <code>source_term</code> for the type variable \xe2\x80\xa6CjReturns an iterator over the items in the map that are \xe2\x80\xa6CiSpawns a Capstone disassembler for the host architecture.CkThe third parameter is for env vars, used on windows to \xe2\x80\xa6DjIf <code>def_id</code> refers to a module (in resolver\xe2\x80\x99s sense, i.e. \xe2\x80\xa6DiReturns a mutable reference to entry <code>k</code>. If no such entry \xe2\x80\xa60CmInvoked by owning thread as it prepares to sleep. Returns \xe2\x80\xa6EnWhen encountering a <code>&quot;</code> or a <code>&#39;</code>, returns the whole string, \xe2\x80\xa6CjDecodes all traits in the crate (for rustdoc and rustc \xe2\x80\xa6CjCreates a dynamic vtable for the given type and vtable \xe2\x80\xa6CiWe had a panic in Miri itself, try to print something \xe2\x80\xa6AkThis excludes delayed bugs.CjWas this variant obtained as part of recovering from a \xe2\x80\xa6DfIf true, <code>dependents[0]</code> points to a \xe2\x80\x9cparent\xe2\x80\x9d node, \xe2\x80\xa6CfHashes some bytes into a 64-bit hash, via LLVM\xe2\x80\x99s \xe2\x80\xa6AfThe bytes of the hash.CdCfg that have been hidden via #![doc(cfg_hide(\xe2\x80\xa6))]CfChecks if the node is left-hand side of an assignment.Cl\xe2\x80\x9cHoles\xe2\x80\x9d are regions within the function body (or its \xe2\x80\xa6CgWhether the Rust project ships host tools for a target.AmReturns None for doc commentsBfWhere to put the suggested identifier.00DkReturns all items that are associated with some <code>impl</code> block \xe2\x80\xa6CkIf part of a feature is stabilized and a new feature is \xe2\x80\xa60EfReturns <code>true</code> if this <code>Operand</code> contains qualif <code>Q</code>.DgExtracts the field of <code>ConstQualifs</code> that corresponds to \xe2\x80\xa6CnSome features are known to be incomplete and using them is \xe2\x80\xa6CmA file to use as the index page at the root of the output \xe2\x80\xa6ClWhether to infer remaining type parameters, if any. This \xe2\x80\xa6ChCalled immediately before a new stack frame gets pushed.0CnThis function is used to setup the lint initialization. By \xe2\x80\xa6CmThe scope for the initialization itself; might be used as \xe2\x80\xa6DdDeprecated in favor of <code>ThreadPoolBuilder::build_global</code>.CnParses an inline assembly template modifier at the current \xe2\x80\xa6CnCall site location, if this scope was inlined from another \xe2\x80\xa6CeReturns whether the first doc-comment is an inner \xe2\x80\xa6De<code>inner_span</code> covers the body of the module; for a file \xe2\x80\xa6DkA span from the first token past <code>{</code> to the last token until \xe2\x80\xa6EmInner <code>AdtDef</code> type, ie <code>type TyKind = IrTyKind&lt;Adt, Ty&gt;</code>, to \xe2\x80\xa6AfSets all bits to true.0CgLow-level method that assigns to a place. This does \xe2\x80\xa6EmInsert the immediate value <code>imm</code> for field <code>f</code> in the <em>type </em>\xe2\x80\xa6BmInsert a new file description to the FdTable.CmGet the maximum value of int_ty. It is platform-dependent \xe2\x80\xa6ChUse this method to wrap comparisons that may involve \xe2\x80\xa6CmWhether any set bits in a source flags value are also set \xe2\x80\xa6000000000000000000000000000EfReturns <code>true</code> if any lines in <code>range</code> are in <code>self</code>.DgUnpacks <code>BlockAnd&lt;()&gt;</code> into a <code>BasicBlock</code>.CdConsumes the atomic and returns the contained value.BoReturns the worker-local values for each threadBnReturns the worker-local value for each threadDfConsumes <code>LanguageIdentifier</code> and produces raw internal \xe2\x80\xa60CoConverts <code>self</code> into a <code>Vec&lt;Span&gt;</code>.0AoTurns this tag into an integer.BmHIR walker for walking the contents of nodes.CgIntrinsics and other functions that the interpreter \xe2\x80\xa6CgTests if this is any kind of primitive pointer type \xe2\x80\xa60CkSet to true when the worker goes to sleep; set to false \xe2\x80\xa6DfReturns true if the <code>Value</code> is a Boolean. Returns false \xe2\x80\xa6DaReturns <code>true</code> if this literal is byte literal string.ClIf true, this block lies on an unwind path. This is used \xe2\x80\xa6CgWhatever the currently checked body is one of a closureDiReturns <code>true</code> if the config key was explicitly set and is \xe2\x80\xa6EfReturns <code>true</code> if the supervisor process exists, and <code>false</code> \xe2\x80\xa6DfReturns <code>true</code> if this pass is enabled with the current \xe2\x80\xa6CnUnless opting into extra comments for all passes, they can \xe2\x80\xa6ChReturns the pre-expansion span if this comes from an \xe2\x80\xa6CmTrue if the associated expression is nested within an odd \xe2\x80\xa6BmKeep this the same as isFnLikeTy in search.jsChRelative position of the tag to the one used for the \xe2\x80\xa6CgReturns true if this access is foreign, i.e. not local.CmCheck that access is either Ancestor or Distant, i.e. not \xe2\x80\xa6DgChecks if the node is in a <code>#[test]</code> function or has any \xe2\x80\xa6CmCheck if the state can exist as the initial permission of \xe2\x80\xa6DaCheck if <code>self</code> can be the initial state of a pointer.0DkReturns <code>true</code> if the token is a given keyword, <code>kw</code>.CmWhether this constant is a bool, numeric, string, or char \xe2\x80\xa6EhReturns whether <code>region</code> is marked live at the given <code>location</code>\xe2\x80\xa6EaReturns <code>true</code> if <code>expr</code> designates a mutable static, a \xe2\x80\xa6CjWhether this value can be written or borrowed mutably. \xe2\x80\xa6CnThis is <code>true</code> for mutable statics, declared as \xe2\x80\xa6FcThis is <code>true</code> for <code>*mut _</code> and <code>false</code> for <code>*const _</code>.FhThis is <code>true</code> for <code>&amp;mut i32</code> and <code>false</code> for <code>&amp;i32</code>CgReturns <code>true</code> if this is a numeric literal.CjWhether this would be the identifier for a tuple field \xe2\x80\xa6CjIs this a primary span? This is the \xe2\x80\x9clocus\xe2\x80\x9d of the \xe2\x80\xa60BlIs this annotation derived from primary spanCnIs this a \xe2\x80\x9cprimary\xe2\x80\x9d span \xe2\x80\x93 meaning the point, or one \xe2\x80\xa6ClIs this the leftmost occurrence of the binding, i.e., is \xe2\x80\xa6CfChecks if the span actually refers to an if expression0DjReturns <code>true</code> for reserved identifiers used internally for \xe2\x80\xa6DgReturns <code>true</code> if the layout corresponds to an unsized type.000CmChecks if a node is useless and should be GC\xe2\x80\x99ed. A node \xe2\x80\xa6BjLook up the name and span of a definition.BlYield a set of contained named flags values.000000000000000000000000000CkIterates over all nodes of a graph in ascending numeric \xe2\x80\xa6CiStores the number of times we\xe2\x80\x99ve encoded each dep kind.0BlThe current set of local scopes, for labels.CoContains variant =&gt; str representations for constructing \xe2\x80\xa60CkReturns the appropriate label text for this confusion type.AcDefines lang items.DiFor marker types, <code>UnsafeCell</code>, and other lang items where \xe2\x80\xa6ClObtain all lang items of this crate and all dependencies \xe2\x80\xa6AeDetecting lang items.0CiLast OS error location in memory. It is a 32-bit integer.ClSee RegionConstraintCollector::leak_check. We only check \xe2\x80\xa6DhSearches new universes created during <code>snapshot</code>, looking for10BdRunning size of stream \xe2\x80\x9c\xe2\x80\xa6left\xe2\x80\x9dAoIndex of line, starting from 0.CkSource spans for each line of the inline assembly code. \xe2\x80\xa60CiStart and end byte offset of every line of the format \xe2\x80\xa6h1-based.Clsequence of characters (typically whitespaces) to prefix \xe2\x80\xa6CkAn offset to the current line from the beginning of the \xe2\x80\xa6BmThe opening sequence of characters for a lineCjFind a list of all link names, without finding their href.CbThe severity level of the unused dependencies lintAoFind the lint level for a lint.BjThe innermost function for emitting lints.CcThe lint level for this <code>let</code> statement.C`Lint level of the unused_crate_dependencies lintCjUsed for running pre-expansion lints on freshly loaded \xe2\x80\xa6DhThis only ever stores a <code>LintStore</code> but we don\xe2\x80\x99t want a \xe2\x80\xa60CiThis target is a confluence of Linux and Wasm models, \xe2\x80\xa6DkWhen using <code>-Zpolonius=next</code>, the set of loans that are live \xe2\x80\xa6AkTotal number of live nodes.CmCrate-local information for this source scope, that can\xe2\x80\x99\xe2\x80\xa6BiGet the local declaration for this local.ClThe path to the source file in which this span occurs on \xe2\x80\xa6C`Returns the crate-local part of the DefPathHash.BmReturns the crate-local part of the ExpnHash.1ChUses <code>body.var_debug_info</code> to find the symbolCnReturns the path suitable for reading from the file system \xe2\x80\xa6Dk<code>local_path</code> is the (host-dependent) local path to the file. \xe2\x80\xa6CmCreates a new span with the same name resolution behavior \xe2\x80\xa6CaHow many times the mutex was locked by the owner.EdLook-ahead <code>dist</code> tokens of <code>self.token</code> and get access to \xe2\x80\xa6CmTakes a HIR Path. If the path is a constant, evaluates it \xe2\x80\xa6CmIntercept all spans entering HIR. Mark a span as relative \xe2\x80\xa6ChReturns which kind of macro calls this syntax extension.ElBuilds the string for <code>&lt;lhs&gt; &lt;op&gt; &lt;rhs&gt;</code> adding parenthesis \xe2\x80\xa6EdConvenience wrapper around <code>make_assoc</code> and <code>AssocOp::Binary</code>.ClCreate a new block for the tree. This should call either \xe2\x80\xa6CbGenerate a hir expression for a format_args Count.CiExtract input (string or file and optional path) from \xe2\x80\xa6BfCreate the input (string or file path)AkCreates zero or more items.B`Creates zero or more statements.CjApplies any path prefix substitution as defined by the \xe2\x80\xa6DhConditionally stores into <code>ptr</code> according the high bit of \xe2\x80\xa6CbGenerates MIR for a <code>match</code> expression.DnAlways returns <code>true</code> if <code>self</code> is <code>Res::Err</code>DjChecks if the path resolves to <code>ty</code>\xe2\x80\x99s definition, must be \xe2\x80\xa6EeProbe whether <code>expr_ty</code> can be coerced to <code>target_ty</code>. This \xe2\x80\xa6CmAll effective visibilities for a node are larger or equal \xe2\x80\xa6CkTurns option of iterator into an iterator (this is just \xe2\x80\xa6CmPush another projection op onto the chain, but only if it \xe2\x80\xa6DfThe matching channel for the child\xe2\x80\x99s <code>Supervisor</code> struct.BeSender for FFI-mode-related requests.DiThe \xe2\x80\x9cbest option\xe2\x80\x9d that <code>apply_member_constraint</code> found \xe2\x80\xa6CjThe thing being indexed must be at least this long \xe2\x80\x93 \xe2\x80\xa60000000CdStores whether this place was created based on a \xe2\x80\xa6DjA span that represents <code>macro_rules</code> hygiene, and sometimes \xe2\x80\xa6CkCreate expression span ensuring the span of the parent nodeEaReturn the <code>DefId</code> of this <code>Res</code> if it represents a module.CnFinds the spans associated to a move or copy of move_place \xe2\x80\xa6Dh<code>true</code> if we haven\xe2\x80\x99t taught a diagnostic with this code \xe2\x80\xa6DgWhether it\xe2\x80\x99s a <code>static mut</code> or just a <code>static</code>.CgRepresents if <code>place</code> can be mutated or not.0EhWhether this is a mutable binding (i.e., <code>let x</code> or <code>let mut x</code>\xe2\x80\xa6Dk<code>true</code> if the allocation is mutable. Also used by codegen to \xe2\x80\xa6033CkLock by setting the mutex owner and increasing the lock \xe2\x80\xa6CkGets the lint\xe2\x80\x99s name, with ASCII letters converted to \xe2\x80\xa60C`Asserts that this MetaItem is a name-value pair.ChHandle of the optional shared object file for native \xe2\x80\xa6ChThe location of the shared object files to load when \xe2\x80\xa601CcImplements calling functions from a native library.FmReturns <code>true</code> if <code>local</code> is <code>NeedsDrop</code> at the given <code>Location</code>.FdIf <code>ty.needs_drop(...)</code> returns <code>true</code>, then <code>ty</code> is definitely \xe2\x80\xa6CkCheck whether a type has (potentially) non-trivial drop \xe2\x80\xa6CkDefault initial permission of the root of a new tree at \xe2\x80\xa6EjCreate a new box type, <code>Box&lt;T&gt;</code>, for the given inner type <code>T</code>.0DcCreates a new, filled bitset with a given <code>domain_size</code>.0CeDefault initial permission of a reborrowed shared \xe2\x80\xa6DgCreate a new <code>Value</code> for which we have no information at \xe2\x80\xa6CmReturns a new cursor that takes ownership of and inspects \xe2\x80\xa6CeCreate a reference type with a fresh region variable.DhGives the next index that will be assigned when <code>push</code> is \xe2\x80\xa6ClReturns a new span representing the next character after \xe2\x80\xa6BfReturn a value from <code>0..n</code>.DhMaps <code>n</code> to a label that will be used in the rendered output.F`Maps <code>n</code> to one of the graphviz <code>shape</code> names. If <code>None</code> is \xe2\x80\xa6CkThe stack of nodes that we are visiting as part of the DFS.DhMaps <code>n</code> to a style that will be used in the rendered output.ClStores the types for various nodes in the AST. Note that \xe2\x80\xa60DdThe normalized form of <code>raw</code>, stored here for efficiency.ChClimb the tree to get the tag of a distant ancestor. \xe2\x80\xa6AmTotal number of point indicesDbInvoked when the node with dfn <code>dfn</code> does not get a \xe2\x80\xa6CbIf Some(T), a type autoderef reported an error on.00000FeReturn <code>Some(..)</code> with the <code>DefId</code> of this <code>Res</code> if it has a ID, \xe2\x80\xa6ClEnsures a value is in the entry by inserting the default \xe2\x80\xa6ClObligations which resulted in an overflow in fulfillment \xe2\x80\xa6CjMetadata about which bytes have been allocated on each \xe2\x80\xa6EdReturns the <code>DefId</code> of the <code>panic_impl</code> lang item if it is \xe2\x80\xa6EdReturns the <code>DefId</code> of the <code>panic_info</code> lang item if it is \xe2\x80\xa6CcSpan of the parameter which declares this lifetime.CkMaps from a scope ID to the enclosing scope id; this is \xe2\x80\xa6CmWhen we specialize, we remember which row of the original \xe2\x80\xa6CgParses the arguments from the given list of tokens, \xe2\x80\xa6AgBodies are of the form:CjUse this for any boolean option that has a static default.DjParse an expression. On error, emit it, advancing to <code>Eof</code>, \xe2\x80\xa6AeParses an expression.BcParse the <code>--json</code> flag.C`<em>Only</em> parse attributes with this symbol.0CgParses a statement. This stops just before trailing \xe2\x80\xa6CmTakes a <code>tokenstream::TokenTree</code> and returns a \xe2\x80\xa6CgHow many passes we have executed since starting the \xe2\x80\xa6CeType field of the pattern this node was created from.CkPeeks at the current position + 1, without incrementing \xe2\x80\xa6DmGiven an expression, peel all of casts (<code>&lt;expr&gt; as ...</code>, \xe2\x80\xa6ChThis pointer\xe2\x80\x99s current permission / future initial \xe2\x80\xa6ClTrack info about each place. Each place corresponds to a \xe2\x80\xa6BdGets the precedence of this operatorCkDetermines the effective precedence of a subexpression. \xe2\x80\xa6CmReturns the effective precedence of an expression for the \xe2\x80\xa6ClFor each struct with outlive bounds, maps to a vector of \xe2\x80\xa6ClA list of all obligations that have been registered with \xe2\x80\xa60FfReturns <code>&quot;&quot;</code> (empty string) or <code>&quot;mut &quot;</code> depending on the \xe2\x80\xa6000000ClThis is the types of the fields of a coroutine which are \xe2\x80\xa60000AcThe previous token.AfPretty-prints an item.G`Print the permission with the format <code> Res</code>/<code> Re*</code>/<code> Act</code>/<code> Frz</code>/\xe2\x80\xa6BaDisplay the contents of the tree.AaDisplay the tree.Dc<code>.place.projection</code> from <code>mir::VarDebugInfo</code>.CmThis file implements \xe2\x80\x9cplace projections\xe2\x80\x9d; basically a \xe2\x80\xa6Cfprojection out of a place (access a field, deref a \xe2\x80\xa6CjWhere in the composite user variable this fragment is, \xe2\x80\xa6111Dewhether the function has a <code>#[rustc_promotable]</code> attribute000CnMaps from byte addresses to extra provenance data for each \xe2\x80\xa6AkReturns the provenance map.1CnGive each borrow and pointer a different provenance, so we \xe2\x80\xa6CbHandles \xe2\x80\x98FnPtrToPtr\xe2\x80\x99 and \xe2\x80\x98PtrToPtr\xe2\x80\x99 casts.DbAdds a <code>,</code> to the type representation only if it is \xe2\x80\xa6BnPush a component onto the front of the buffer.DkWe push <code>GenericArg</code>s on the stack in reverse order so as to \xe2\x80\xa6EeAdds <code>m</code> as a named match for the <code>metavar_idx</code>-th metavar. \xe2\x80\xa6CkPush a scope onto the stack. You can then build code in \xe2\x80\xa6DjReturns the span of the qself of this <code>QPath</code>. For example, \xe2\x80\xa6CjRecording individual query cache hits as \xe2\x80\x9cinstant\xe2\x80\x9d \xe2\x80\xa6CiThe mode that trait queries run in, which informs our \xe2\x80\xa60E`Quote a <code>Span</code> into a <code>TokenStream</code>. This is needed to \xe2\x80\xa6CiRead a sequence of bytes until the first null terminator.CjA map of EpollEventInstance that will be returned when \xe2\x80\xa6ChRecords a single argument within the current generic \xe2\x80\xa6CjUpdates <code>self</code> to account for a foreign access.CmDirectory into which should the LLVM optimization remarks \xe2\x80\xa6AjRemoves UTF-8 BOM, if any.DhLook at the <code>Result</code> wrapped inside of this. Must only be \xe2\x80\xa6CnPrints the ICE message, including query stack, but without \xe2\x80\xa6DjReport an error or note (depending on the <code>error</code> argument) \xe2\x80\xa6CmFinds the appropriate Integer type and signedness for the \xe2\x80\xa6BjThe place to store the resume argument in.0CcWhere to move the resume argument after resumption.BoManages a pool of addresses that can be reused.BdLocals that are assigned that value.BbMain method for rendering a crate.DiThe optional <code>phase_change</code> is applied after executing all \xe2\x80\xa6AmLints, aka compiler warnings.BnSource positions and related helper functions.BnPseudo-stack, really a ring too. Holds the \xe2\x80\xa6CiThe final inferred values of the region variables; we \xe2\x80\xa60DgCreates a \xe2\x80\x9cfork-join\xe2\x80\x9d scope <code>s</code> with FIFO order, and \xe2\x80\xa60CjCreates a scope that executes within this thread-pool. \xe2\x80\xa6CgSpan of the scrutinee of the match (the matched value).0AfSpan of the scrutinee.1ClMap of function symbol name to the first-seen hir id for \xe2\x80\xa6ChSelects the first arm whose predicate evaluates to true.BbAll the self types that may apply.C`The data that we will serialize and deserialize.FaGet the <code>name</code>d comdat from <code>llmod</code> and assign it to <code>llglobal</code>.BfSet whether the text is dimmed or not.BjSet whether the text is italicized or not.ClReturns whether this provenance is derived from a shared \xe2\x80\xa6CmReturns the resulting index when this value is moved into \xe2\x80\xa6000CkAbbreviated name of the permission (uniformly 3 letters \xe2\x80\xa6CkThe region that should be shorter, but we can\xe2\x80\x99t prove it.ClReturns the largest signed value that can be represented \xe2\x80\xa6CmReturns the smallest signed value that can be represented \xe2\x80\xa6Dj<code>-Z instrument-xray=skip-entry</code>, do not instrument function \xe2\x80\xa6ClFor more information on the arguments see the socketpair \xe2\x80\xa6AoThe byte length of this source.ChTypes for tracking pieces of source code within a crate.CkThe session\xe2\x80\x99s source map, if there is one. This field \xe2\x80\xa6DkThis module contains utilities that work with the <code>SourceMap</code>\xe2\x80\xa6CnReturns the span pointing to the closing delimiter of this \xe2\x80\xa6D`If true, use verbose debugging for <code>proc_macro::Span</code>CgLinks supernodes to each other, gradually forming a \xe2\x80\xa6DfAdds a new child diagnostics message to <code>self</code> with the \xe2\x80\xa6BiAppends a labeled span to the diagnostic.BhThe column of the end of rightmost span.CnFires off a task into the Rayon threadpool in the \xe2\x80\x9cstatic\xe2\x80\xa6DjSpawns a job into the fork-join scope <code>self</code>. This job will \xe2\x80\xa61CnSpawns an asynchronous task in this thread-pool. This task \xe2\x80\xa6DkSpecialize this pattern with a constructor. <code>other_ctor</code> can \xe2\x80\xa60ClDoes specialization: given a constructor, this takes the \xe2\x80\xa6ClGiven a constructor for the current place, we return one \xe2\x80\xa6DiIf the place has validity given by <code>self</code> and we read that \xe2\x80\xa6CmLogic and data structures related to impl specialization, \xe2\x80\xa6CmMark an argument local (which must be a tuple) as getting \xe2\x80\xa6CnMark an argument (which must be a tuple) as getting passed \xe2\x80\xa60ClCompares via an ordering that will not change if modules \xe2\x80\xa60000BiSets the stack size of the worker threadsDbDeprecated in favor of <code>ThreadPoolBuilder::stack_size</code>.BmThe stack size for the created worker threadsBhGets the value that was specified by \xe2\x80\xa6EhIf the <code>Certainty</code> was <code>Maybe</code>, then keep track of whether the \xe2\x80\xa60BnIs this increment/decrement its own statement?Bn1-based starting line of the source code span.0BaList of statements in this block.CnATOMIC STORE IMPL in the paper (except we don\xe2\x80\x99t need the \xe2\x80\xa6CeThe intersection of a source flags value with the \xe2\x80\xa6000000000000000000000000000BiThe pattern that the constant lowered to.BhReturns the successors of the given SCC.0CgGets the successors for <code>source</code> as a slice.Ajgradually built suggestionClA text snippet used to completely replace any use of the \xe2\x80\xa60BfSuggest <code>lo..=max</code> instead.BfSuggest <code>lo..=gap</code> instead.AkExtra free-form suggestion.CeMaps each node to the supernode that contains it, \xe2\x80\xa60EcReturns the <code>DefId</code> of the <code>sync</code> lang item if it is defined.CgThis module implements tagged pointers. In order to \xe2\x80\xa6ChThis is used to generate the actual filename of this \xe2\x80\xa6AkFlag parsed technical value0CnFunctionality for terminators and helper types that appear \xe2\x80\xa6AhAccessor for terminator.AjTerminator for this block.ClTimestamp of first loads from this store element by each \xe2\x80\xa6CnReturn registered tool attributes with the given attribute \xe2\x80\xa600BoRetrieve information about this implementation.BkThis can do Macro-By-Example transcription.CjTransformation of permissions that occurred because of \xe2\x80\xa6CiThis module controls how each permission individually \xe2\x80\xa6BlTrims the leading whitespace from the range.DjReturns <code>Some(span)</code>, where the start is trimmed by the end \xe2\x80\xa6DdRemoves try operators (<code>?</code>s) that appear in the given \xe2\x80\xa6CnIn some cases, attributes are only valid on functions, but \xe2\x80\xa6BmAttempt to inline a definition into this AST.DgAttempts to parse the string representation of a <code>value</code> \xe2\x80\xa6ChFetches the value, and applies a function to it that \xe2\x80\xa6CiThis pass type-checks the MIR to ensure it is not broken.DjType checks the given <code>mir</code> in the context of the inference \xe2\x80\xa6mident of selfAjType Names for Debug Info.EcReturns the <code>GenericParamDef</code> associated with this <code>ParamTy</code>.CfThe hash set that actually holds all the type size \xe2\x80\xa6BmType constraints that we check after solving.0CgThe current context in case we\xe2\x80\x99re evaluating in a \xe2\x80\xa6000DjExtract <code>ty::TypingMode</code> of this inference context to get a \xe2\x80\xa60EgAllows to modify <code>Self</code> to enable or disable the <code>ui_testing</code> \xe2\x80\xa6DhIf true, will normalize line numbers with <code>LL</code> to prevent \xe2\x80\xa6BfUnwrap types that are guaranteed a \xe2\x80\xa6EeAdds the bits from row <code>read</code> to the bits from row <code>write</code>, and0BgThe remaining unresolved path segments.EgCoerces <code>src</code> to <code>dst_ty</code>. <code>src_ty</code> must be a pointer.BkReturns the underlying list of suggestions.DjFor at least some <code>QPath::TypeRelative</code>, the path segment\xe2\x80\x99\xe2\x80\xa6EhThe value found at <code>place</code> is used, depending on <code>mode</code>. Where \xe2\x80\xa6BmMatch exhaustiveness and redundancy algorithmBjWhether to enforce the validity invariant.BjDetermine if validity checking is enabled.01BkUser-provided option value (before parsing)0CmGets the span of the value literal, as string, when using \xe2\x80\xa6CkAn iterator visiting all values mutably in arbitrary order.0000AjHirId of the root variableAbHirId of the upvarEcReturns the span of <code>self</code>, in the case of a <code>ClosureUse</code> \xe2\x80\xa6BjReturns the origin for the given variable.DdReturns the origin that was given when <code>vid</code> was created.CcThe scope that contains any new variables declared.DfThis is equivalent to <code>CanonicalVarValues</code>, but using a \xe2\x80\xa60DiUnlike <code>EvalCtxt::var_values</code>, we append a new generic arg \xe2\x80\xa61ClComputes the visibility of the provided <code>def_id</code>.000000CfReturns the visibility of the current item. If the \xe2\x80\xa6CkBy default all documented items are public, but you can \xe2\x80\xa6DkWe sometimes have <code>args</code> within an rvalue, or within a call. \xe2\x80\xa6ClFor closures, we first visit the parameters and then the \xe2\x80\xa6CmVisits the top-level item and (optionally) nested items / \xe2\x80\xa6EaVisit a nested chain of <code>&amp;&amp;</code>. Used for if-let chains. This \xe2\x80\xa6CdMust be called exactly once for each node in the \xe2\x80\xa6DhThe entry point for visiting. To visit a value <code>t</code> with a \xe2\x80\xa60000CkIf the register is a vector register then return its index.ClWait until the latch is set. Try to keep busy by popping \xe2\x80\xa6DjIndicates that the value of <code>blk</code> will be consumed, meaning \xe2\x80\xa6CmWalk the pattern in left-to-right order, short circuiting \xe2\x80\xa6BjTraversal logic; should not be overloaded.0ChThe span of the width formatting flag (for diagnostics).nAdd the extra.CjReturns <code>self</code> with replaced <code>start</code>DfConvert the given <code>src</code> source code into HTML by adding \xe2\x80\xa6BmWrite a graphviz DOT node for the given node.CgWrite a 0 of the appropriate size to <code>dest</code>.mFormat a pathCjThe type of operation that the write index represents, \xe2\x80\xa6CaWrite up to <code>N</code> bytes to this encoder.0BaCreates an interned zst constant.ClCause of an access: either a real access or one inserted \xe2\x80\xa6AgA single memory access.BeThe memory touched by a given access.CcThe accessed pointer did not have proper alignment.0DgFailed to add <code>FluentResource</code> to <code>FluentBundle</code>.DgSeparate from <code>ClauseKind::Projection</code> which is used for \xe2\x80\xa600000AiData for an aliased type.BhThe value will be aligned in the center.AbParse #[align(N)].BhThe <code>alloc_layout</code> lang item.CkThe type of extra parameters passed in when creating an \xe2\x80\xa60CcA reference to some allocation that was already \xe2\x80\xa60CnA tuple, closure, or univariant which cannot be coerced to \xe2\x80\xa6AoAn accumulator for annotations.CkAn anonymous associated type from an RPITIT. The symbol \xe2\x80\xa6AcLLVMRustArchiveKindDgHelper trait that allows <code>arena_cache</code> queries to return \xe2\x80\xa6Dc<code>ArmHasGuard</code> is a wrapper around a boolean flag. It \xe2\x80\xa6ClA fragment of AST that can be produced by a single macro \xe2\x80\xa6BiThe <code>async_fn_once</code> lang item.BoValid atomic read-write orderings, alias of \xe2\x80\xa60CjA wrapper type to ensure that the parser handles outer \xe2\x80\xa6CmStores the tokens for an attribute target, along with its \xe2\x80\xa6EgHolds the <code>AttrsTarget</code> for an AST node. The <code>AttrsTarget</code> is \xe2\x80\xa6CmStores the attributes for an attribute target, along with \xe2\x80\xa6AoStruct, Enum and Union DepNodesCnOn Windows, BRIGHT_BLUE is hard to read on black. Use cyan \xe2\x80\xa6BjThe way we represent values to the backendCdWe are about to start dumping the given basic block.EfThe mode of a binding (<code>mut</code>, <code>ref mut</code>, etc). Used for both \xe2\x80\xa60BiThe <code>|=</code> operator (bitwise or)BhThe <code>bitor_assign</code> lang item.1CjMarks its enclosing basic block with an ID that can be \xe2\x80\xa6CmThe code snippets built up for derived code are sometimes \xe2\x80\xa6BmKeeps track of what the thread is blocked on.0BoBuilds a monomorphic body for a given instance.DiA reference type: <code>&amp;i32</code>, <code>&amp;&#39;a mut Foo</code>D`<code>&amp;&#39;a mut String</code>, <code>&amp;str</code>, etc.CmRegion variables created when instantiating a binder with \xe2\x80\xa60D`Look for <code>break</code> expressions within any arbitrary \xe2\x80\xa6CkA builtin impl generated by the compiler. When adding a \xe2\x80\xa600000000ElCRT objects (e.g. on <code>windows-gnu</code>, <code>musl</code>, <code>wasi</code> targets)DhPart of <code>MinCaptureInformationMap</code>; describes the capture \xe2\x80\xa60BdHow a local is captured by a closureCeA closure can be modeled as a struct that looks like:0000CkRepresents the various closure traits in the language. This000ChAssociates an ordinary executable code span with its \xe2\x80\xa6CnThe frontend has finished generating something (backend IR \xe2\x80\xa6BnDoing codegen, i.e. MIR-to-LLVM-IR conversion.BmRepresents <code>#[rustc_coinductive]</code>.0CjA path with at least one coinductive step. Such cycles \xe2\x80\xa6000CkLint level was set by a command-line flag. The provided \xe2\x80\xa6BhWhether to stop or continue compilation.0DjVisitor to check for invalid use of <code>ExprKind::Let</code> that can\xe2\x80\xa6CmWhether the value needs to be dropped depends on its drop \xe2\x80\xa6BmRepresents <code>#[rustc_confusables]</code>.0CmConstants must be equal. The first component is the const \xe2\x80\xa600000CkUninhabited when a const value is non-zero. This occurs \xe2\x80\xa60000BgInitializer for a const or static item.CkA value can be decomposed into a constructor applied to \xe2\x80\xa6CiThis struct contains the information that needs to be \xe2\x80\xa6CjVerify that the callee body is compatible with the caller.CkThe count is specified by the argument with the given name.DfThe count is specified by a star (like in <code>{:.*}</code>) that \xe2\x80\xa6CjMust match the layout of <code>LLVMRustCounterKind</code>.ClPart of a node\xe2\x80\x99s counter expression, which is a sum of \xe2\x80\xa6AjSerialized crate metadata.CkA map from external crate numbers (as decoded from some \xe2\x80\xa6CeReason that a crate is being sourced as a dependency.CkWhere a crate came from on the local filesystem. One of \xe2\x80\xa6BnRun the proc-macro code on a different thread.CnTo build constraints, we visit one item (type, trait) at a \xe2\x80\xa6C`Spawns a thread with a user\xe2\x80\x99s custom callback.Dg<code>#[rustc_deallocator]</code>: a hint to LLVM that the function \xe2\x80\xa6C`Apply remappings to printed compiler diagnosticsCnSize of the domain representable by this type, e.g. 64 for \xe2\x80\xa6CnThe <code>drop_bounds</code> lint checks for generics with \xe2\x80\xa6CkThe current state of the proof tree builder, at most placesCgA declaration is an abstraction of hir::LetStmt and \xe2\x80\xa6C`Custom spans inserted into the source. Eg \xe2\x80\x93\xe2\x80\xa6Df<code>DefLocation</code> represents the location of a definition - \xe2\x80\xa6CmNew variants should only be added in synchronization with \xe2\x80\xa6EgA <code>DefPathHash</code> is a fixed-size representation of a <code>DefPath</code> \xe2\x80\xa60BjThe fingerprint is actually a DefPathHash.1C`Item defaultness. For details see the RFC #2532.CnThe definition table containing node definitions. It holds \xe2\x80\xa6CiDuring ast lowering, no lints can be emitted. That is \xe2\x80\xa6CeA fixed-size bitset type with a dense representation.CeThis enum serves as an index into arrays built by \xe2\x80\xa6BfRepresents <code>#[deprecated]</code>.0CaA message describing the deprecation of this itemCjInformation about the deprecation of an <code>Item</code>.BhThe <code>deref_target</code> lang item.CfNormally, markdown link warnings point only at the \xe2\x80\xa6C`Scope of destructors for temporaries of node-id.AnName of a diagnostic argument.0CnAbstraction over a message in a diagnostic to support both \xe2\x80\xa60CnOnly digit-letter confusion (e.g., \xe2\x80\x9c0\xe2\x80\x9d vs \xe2\x80\x9cO\xe2\x80\x9d, \xe2\x80\x9c1\xe2\x80\xa6CjExtracted information from the tree, in a form that is \xe2\x80\xa6DdA portion of documentation, extracted from a <code>#[doc]</code> \xe2\x80\xa6BiThe <code>drop_in_place</code> lang item.DhSubset of <code>DropNode</code> used for reverse lookup in a hash table.Ec<code>Dst</code> is larger than <code>Src</code>, and the excess bytes were not \xe2\x80\xa6CkFill-in macro expansion result, to allow compilation to \xe2\x80\xa6BhThe <code>dyn_metadata</code> lang item.DdSimilar to <code>Binder</code> except that it tracks early bound \xe2\x80\xa6000DgThe result of <code>eat_or_separator</code>. We want to distinguish \xe2\x80\xa6A`The 2015 edition0mEdition 2015.lEdition 201510A`The 2018 edition0mEdition 2018.lEdition 201810A`The 2021 edition0mEdition 2021.lEdition 202110A`The 2024 edition0mEdition 2024.000ClA pass that seeks to optimize unnecessary moves of large \xe2\x80\xa6BdAn equality predicate (unsupported).0BgA type must exactly equal another type.CkErrors and warnings that can occur during string, char, \xe2\x80\xa6BcFor use in JSON.parse(\xe2\x80\x98{\xe2\x80\xa6}\xe2\x80\x99).BbExecute step on the active thread.CjThe type for a closure that gets invoked when a thread \xe2\x80\xa6CjError returned from <code>TokenStream::expand_expr</code>.CkWhen type-checking an expression, we propagate downward \xe2\x80\xa6DaWhat signature do we <em>expect</em> the closure to have from \xe2\x80\xa6CmSignifies that the compiler died with an explicit call to \xe2\x80\xa6BlThe context an expressions value is used in.B`The node which consumes a value.E`An <code>extern crate</code> item, with the optional <em>original</em> crate \xe2\x80\xa6EdAn <code>extern crate</code> item, with optional <em>original</em> crate name if \xe2\x80\xa6CjA crate imported via the <code>extern crate</code> syntax.0DiSimilar to <code>Note</code>, but used in cases where compilation has \xe2\x80\xa6CfA terminator for blocks that only take one path in \xe2\x80\xa60DiIn some cases, <code>hir::ConstArg</code>s that are being used in the \xe2\x80\xa6AbAccess of a field.CiDescribes how the fields of a type are located in memory.ChDescribes how the fields of a type are shaped in memory.Dd<code>FileEncoder</code> encodes data to file via fixed-size buffer.BmEnum representing the existing float lengths.BjCore error type for Fluent runtime system.DdThe <code>FluentValue</code> enum represents values which can be \xe2\x80\xa6BdParsing configuration for functions.BdThe definition of a single footnote.EcUsed to differentiate between <code>for</code> loops and <code>for await</code> \xe2\x80\xa6Aofor _ in x {} calls iter.next()BhThe <code>format_count</code> lang item.CnDerived obligation refined to point at a specific argument \xe2\x80\xa600BgRepresents <code>#[fundamental]</code>.0AlA thread waiting on a futex.ClThe memory kind to use for copied global memory (held in \xe2\x80\xa60CiThe \xe2\x80\x9cgeneralizer\xe2\x80\x9d is used when handling inference \xe2\x80\xa6CnThe generic arguments and associated item constraints of a \xe2\x80\xa60CgList of generic arguments that are gonna be used to \xe2\x80\xa60AlA list of generic arguments.CkA set of generic arguments provided to a path segment, e.g.CjInhabited if some generic type is inhabited. These are \xe2\x80\xa60000BkThe <code>global_alloc_ty</code> lang item.CkAn allocation in the global (tcx-managed) memory can be \xe2\x80\xa6CnAn allocation in the rustc_public\xe2\x80\x99s IR global memory can \xe2\x80\xa6CdWe need interior mutable access to the global state.ClGlobal data-race detection state, contains the currently \xe2\x80\xa6BiDoes this type have any coroutines in it?000DhErrors that can occur when constructing a <code>Handle</code> from a \xe2\x80\xa6AmLiteral starts with \xe2\x80\x9c0x\xe2\x80\x9d.CmHistory formatted for use by <code>src/diagnostics.rs</code>.ClYes, all the \xe2\x80\x9cleaf fields\xe2\x80\x9d of this struct are passed \xe2\x80\xa60CjThis type is needed in case we want to render links on \xe2\x80\xa6CmUsed to detect a missing <code>=&gt;</code> in a match guard.DkDerived obligation (i.e. <code>where</code> clause) on an user-provided \xe2\x80\xa600CjIndicates that this node is a member of whatever cycle \xe2\x80\xa6DaWhether to call <code>ptrace::cont()</code> immediately. Used \xe2\x80\xa6ClThe MIR represents an inline const. The signature has no \xe2\x80\xa6CeAn inline constant, e.g. <code>const { 1 + 2 }</code>00CnHelper to check if given type has inner mutability such as \xe2\x80\xa6BnMiri was interrupted by a Ctrl+C from the user0CkThe compiler got an interrupt signal (a user ran out of \xe2\x80\xa60AlCompilation was interrupted.BiStores a set of intervals on the indices.DgConverts a value of a type into a <code>DiagArg</code> (typically a \xe2\x80\xa60BlUsing a non-boolean <code>u8</code> as bool.0CdUsing a non-character <code>u32</code> as character.0BbInvalid metadata in a wide pointer0CkWhether a value can be extracted into a const. Used for \xe2\x80\xa600Cfwhat we\xe2\x80\x99re in, like a function, method, closure etc.DfAn <code>ItemLocalId</code> uniquely identifies something within a \xe2\x80\xa6CkInformation about an external (not defined in the local \xe2\x80\xa6CiThe token can join with the following token to form a \xe2\x80\xa6AkImpl <code>DepNode</code>s.CjItem definitions in the currently-compiled crate would \xe2\x80\xa60CdContext for lint checking outside of type inference.0AoThe layout of a type in memory.BnResolution for a lifetime appearing in a type.CkAn iterator over the lines of a string, paired with the \xe2\x80\xa6BmA line comment, e.g. <code>// comment</code>.BbCharacter is within a line commentCgThis enum allows us to store two different kinds of \xe2\x80\xa6BhRepresents <code>#[link_ordinal]</code>.0BgRepresents <code>#[link_section]</code>0Bo<code>#[link_section = &quot;name&quot;]</code>BnA concrete graph implementation that supports:CkUsed to avoid depending on <code>rustc_middle</code> in \xe2\x80\xa6CkEnum representing the literal types supported by the lexer.BaThe file was present and invalid.C`Whether a load returned the latest value or not.DiStripped-down version of <code>MemoryCellClocks</code> for the clocks \xe2\x80\xa6CfA unique ID associated with a macro invocation and \xe2\x80\xa6CnAn index into a function\xe2\x80\x99s list of global file IDs. That \xe2\x80\xa6BoHints at the original code for a let statement.CmA map that cross references each local with the locations \xe2\x80\xa6CjIf we had formatted the given node, then we would have \xe2\x80\xa6EeThe <code>map_unit_fn</code> lint checks for <code>Iterator::map</code> receive a \xe2\x80\xa6C`Maximum value that the eventfd counter can hold.DdThe <code>missing_abi</code> lint detects cases where the ABI is \xe2\x80\xa60CiThe properties of the target machine being compiled into.BbRepresent the size of a component.CkStop execution for a machine-controlled reason. This is \xe2\x80\xa60BhRepresents <code>#[macro_escape]</code>.0Al<code>#[macro_export]</code>CmHints at the original code for a <code>match _ { .. }</code>.AnFinds the max universe present0BhThe <code>maybe_uninit</code> lang item.AiA literal in a meta item.0Cfe.g., <code>$var:expr</code>. Only appears on the LHS.CfA meta-variable expression inside <code>${...}</code>.CgA meta-variable expression, for expansions based on \xe2\x80\xa6DfAnnoyingly similar to <code>NonterminalKind</code>, but the slight \xe2\x80\xa6AcThe machine itself.0CnThe lint is from a tool. Either the lint does not exist in \xe2\x80\xa60BhThe generics are not attached to a type.DhA bitset with a mixed representation, using <code>DenseBitSet</code> \xe2\x80\xa6BkMaps each module to the corresponding file.CmGather the LocalDefId for each item-like within a module, \xe2\x80\xa6Dh<code>#[no_builtins]</code>: indicates that disable implicit builtin \xe2\x80\xa6CnA function that returns an empty list of generic parameter \xe2\x80\xa6ClType of a non-atomic write operation: allocating memory, \xe2\x80\xa6CkAll name bindings are unique and allocated on a same arena,CmThe backend has finished compiling a CGU, which now needs \xe2\x80\xa6CcThe caller is expected to jump to the return block.0CcThe caller is expected to jump to the unwind block.0CnThe nested goals of each stack entry and the path from the \xe2\x80\xa6DhA call to <code>probe</code> while proving the current goal. This is \xe2\x80\xa600000000BeData given to the transition functionDi<code>feature(staged_api)</code> is off. Deprecation versions outside \xe2\x80\xa60CfA noop tracker that is used in the hot path of the \xe2\x80\xa6ClUninhabited if within a certain module. This occurs when \xe2\x80\xa60000CiProvides an interface to incremental compilation data \xe2\x80\xa6CdDefault behavior to use in out-of-memory situations.n<code>[</code>0AaPrerendered json.CmUse tree-based collections to cheaply get a deterministic \xe2\x80\xa6CkWhat kind of overlap check are we doing \xe2\x80\x93 this exists \xe2\x80\xa6000DjA call to a <code>panic()</code> lang item where the first argument is \xe2\x80\xa6DeHelper type to display either <code>foo</code> or <code>(foo)</code>.ClEverything you need to know about a name\xe2\x80\x99s location to \xe2\x80\xa6Ad<code>( ... )</code>0AjOutput of a parse functionCfRepresents the possible results of an attempted parse.DaA token range within a <code>Parser</code>\xe2\x80\x99s full token stream.CoRepresents <code>#[rustc_pass_by_value]</code> (used by the \xe2\x80\xa60ClDenotes whether the context for the set of already bound \xe2\x80\xa6CmA segment of a path: an identifier, an optional lifetime, \xe2\x80\xa60BaPath directly to crate-info file.D`Extracts <code>path = &quot;foo.rs&quot;</code> from attributes.BeSeveral arguments should be reordered0BhThe <code>phantom_data</code> lang item.Ck\xe2\x80\x9cUniversal\xe2\x80\x9d instantiation of a higher-ranked region \xe2\x80\xa6CnA placeholder const - universally quantified higher-ranked \xe2\x80\xa6CnA placeholder type, used during higher ranked subtyping to \xe2\x80\xa6CkThe \xe2\x80\x9cplaceholder index\xe2\x80\x9d fully defines a placeholder \xe2\x80\xa621213212121CkEncodes extra information we have about a pointer. Note \xe2\x80\xa6CmThe kind of pointer and associated metadata (thin, length \xe2\x80\xa6CeHow pointers are represented in a given address spaceBcThe <code>Pending</code> lang item.CgBeginning in this phase, the following variants are \xe2\x80\xa6CgBeginning with this phase, the following variant is \xe2\x80\xa610BbPrint all passes scheduled by LLVMChA thing that we can project into, and that has a layout.0CnThis temp was part of an rvalue which got extracted during \xe2\x80\xa6GmGets the metadata <code>M</code> from a <code>*const</code>/<code>*mut</code>/<code>&amp;</code>/<code>&amp;mut</code> to \xe2\x80\xa60BkThe result of evaluating a canonical query.00CmIndicates the state of a query for a given key in a query \xe2\x80\xa6111Cj\xe2\x80\x9cQuery type ops\xe2\x80\x9d are type ops that are implemented \xe2\x80\xa6Dg<code>#[rustc_reallocator]</code>: a hint to LLVM that the function \xe2\x80\xa6C`Limit types of a range (inclusive or exclusive).EaA raw lifetime, e.g. <code>&#39;r#foo</code>. In edition &lt; 2021 it will be \xe2\x80\xa6CjLate-bound function parameters are represented using a \xe2\x80\xa600000CaKind of access to a value: read or write (For \xe2\x80\xa6E`Reborrow a <code>Pin&lt;&amp;mut T&gt;</code> or <code>Pin&lt;&amp;T&gt;</code>.EcTake a pinned reference and reborrow as a <code>Pin&lt;&amp;mut T&gt;</code> or \xe2\x80\xa6CbReference used in a guard expression to ensure \xe2\x80\xa6CeState for tracking recursive validation of references0AiAny other lifetime error.CfThis struct brings together a constraint set and a \xe2\x80\xa6DiDescribes why a <code>ReifyShim</code> was created. This is needed to \xe2\x80\xa60CaRepresents the repr options provided by the user.BkRepresentation options provided by the userCnFor two-phase borrows, we distinguish a reservation (which \xe2\x80\xa6Cj<code>#[rustc_reservation_impl] impl Trait for Type</code>0000Cjrepresents: a local mutable reference that has not yet \xe2\x80\xa6ClWhen checking patterns containing paths, we need to know \xe2\x80\xa6CaPolicy on whether to recurse into fields to retag0Bf<code>return</code> with an expression00CnAn always-invalid ABI that\xe2\x80\x99s used to test \xe2\x80\x9cthis ABI is \xe2\x80\xa60CnTracks the \xe2\x80\x9cminimum universe\xe2\x80\x9d for each SCC, along with \xe2\x80\xa6DhThe <code>Self</code> type, as used somewhere other than within a trait.00000000CcThe <code>Self</code> type, as used within a trait.00000000DkCollect all the paths that reference <code>Self</code>. Used to suggest \xe2\x80\xa6CjThe state that is shared across the concurrent threads \xe2\x80\xa6BkControls merging of cross-crate informationBgRepresents <code>#[should_panic]</code>0BjType has a <code>Drop</code> implantation.CkIn-memory cache for queries whose key type only has one \xe2\x80\xa60CgUsed by proc macros for representing lifetimes, not \xe2\x80\xa6CeTrack which blocks of code are to be skipped when \xe2\x80\xa6BeSize of a <code>[T]</code> is too big0CmThis trait is used to allow decoder specific encodings of \xe2\x80\xa6CmThis trait is used to allow encoder specific encodings of \xe2\x80\xa6BnRust release in which a feature is stabilized.0AkStart of a multiline stringCmDynamic library with bundled libc (\xe2\x80\x9cstatically linked\xe2\x80\x9d\xe2\x80\xa6BcSee <code>StorageLive</code> above.AlEnding a storage live range.1Eh<code>StorageLive</code> and <code>StorageDead</code> statements mark the live range \xe2\x80\xa6AnStarting a storage live range.1AdA field of a struct.0CbRepresents the help messages seen on a diagnostic.BbExtracts just the first paragraph.CfSuper traits of a trait. E.g., <code>trait A: B</code>CnMarker representing that an error occurred during creation \xe2\x80\xa6BbContains the original source code.BbMax value for the thread counters.DiA thread local which contains the identifier of <code>REGISTRY</code> \xe2\x80\xa6CkThis is the parser for fenced codeblocks attributes. It \xe2\x80\xa6CfEither a target tuple string or a path to a JSON file.BgThe <code>termination</code> lang item.BaDocumentation test failure modes.CjContext for lowering HIR to THIR for a single function \xe2\x80\xa6DeGeneralized trait for spawning a thread in the <code>Registry</code>.AfThe state of a thread.CmReplace returns with jumps to thunk, without emitting the \xe2\x80\xa6EeA <code>TokenStream</code> cursor that produces <code>Token</code>s. It\xe2\x80\x99s a bit \xe2\x80\xa6DkA <code>TokenStream</code> is an abstract sequence of tokens, organized \xe2\x80\xa6CiThe main type provided by this crate, representing an \xe2\x80\xa6BgRepresents <code>#[track_caller]</code>0EfA trait object type <code>Bound1 + Bound2 + Bound3</code> where <code>Bound</code> \xe2\x80\xa6BlTrait bounds in trait object type. E.g., \xe2\x80\xa61ClIdentifier produced by a transparent expansion is always \xe2\x80\xa6Ae`#[repr(transparent)]ClGeneric parameters are pretty much just bound variables, \xe2\x80\xa6000CkTree borrows, as implemented in borrow_tracker/tree_borrows0BbData corresponding to Tree BorrowsDfInternal contents of <code>Tree</code> with the minimum of mutable \xe2\x80\xa6DcA tuple struct/variant pattern (<code>Variant(x, y, .., z)</code>).DhA tuple struct/variant pattern <code>Variant(x, y, .., z)</code>. If \xe2\x80\xa6CePaths in tuple struct patterns <code>Path(..)</code>.CmThe layout of a type, alongside the type itself. Provides \xe2\x80\xa60C`The layout of a type, alongside the type itself.CmThe MIR type checker. Visits the MIR and enforces all the \xe2\x80\xa6CbA helper for building type related errors. The \xe2\x80\xa6CkThis trait is implemented for every visiting traversal. \xe2\x80\xa60000EeThe <code>unsafe_code</code> lint catches usage of <code>unsafe</code> code and otherDe<code>#[used(linker)]</code>: indicates that neither LLVM nor the \xe2\x80\xa6CeThe argument type for the \xe2\x80\x9cunblock\xe2\x80\x9d callback, \xe2\x80\xa60DkSame as IMPORT_NAME_UNDECORATE Prefix (e.g., the leading <code>_</code> \xe2\x80\xa6CmAn unnormalized const item such as an anon const or assoc \xe2\x80\xa600CmAn unevaluated mir constant which is not part of the type \xe2\x80\xa60111ChWe know we try to create an uninhabited enum from an \xe2\x80\xa6oLLVMUnnamedAddrCaIndicates a terminator that can never be reached.BnTriggers undefined behavior if unwind happens.AnUnreachable code was executed.021BhThe <code>unsafe_unpin</code> lang item.BoThe applicability of the suggestion is unknown.C`Deprecation version is unspecified but optional.01DhThe library kind wasn\xe2\x80\x99t specified, <code>Dylib</code> is currently \xe2\x80\xa6BbNo <code>-C lto</code> flag passedAaUnspecified valueCjFree-form case. Only for errors that are never caught! \xe2\x80\xa6CnThe program did something the interpreter does not support \xe2\x80\xa610CiPart of <code>use</code> item to the right of its prefix.BiImplSource identifying a particular impl.0000BjA part of a page that isn\xe2\x80\x99t a rust item.CfVector clock metadata for a logical memory allocation.ChThis datastructure is used to represent the value of \xe2\x80\xa60ChFields and constructor ids of enum variants and structs.ChFields and constructor IDs of enum variants and structs.EfThe kind of an <code>Enum</code> <code>Variant</code> and the data specific to it, \xe2\x80\xa6CkThe ID for the single DW_TAG_variant_part nested inside \xe2\x80\xa6CcA parsed <code>Vec</code> initialization expressionEcDescribes the things that some <code>GenericKind</code> value <code>G</code> is \xe2\x80\xa60AoA where-clause in a definition.ClRepresents a clause that comes from a specific item. The \xe2\x80\xa600CjA \xe2\x80\x9cwork product\xe2\x80\x9d is an intermediate result that we \xe2\x80\xa600CkHolds worker local values for each possible thread in a \xe2\x80\xa60CjHolds worker-locals values for each thread in a thread \xe2\x80\xa60CkContains needed information for doctest to be correctly \xe2\x80\xa6CfThe Writeback context. This visitor walks the HIR, \xe2\x80\xa6CkThe yield kind that caused an <code>ExprKind::Yield</code>.CnReturns <code>true</code> if all nodes always pass the filter.0DiDetermines whether a given access on <code>range</code> overlaps with \xe2\x80\xa6CdBlocks the current thread until a token is acquired.CmAdds the given element to the value for the given region. \xe2\x80\xa6BkAdd the extern entry to the extern prelude.BnAdd a subdiagnostic to an existing diagnostic.0DcCreates a string version of the <code>expr</code> that includes \xe2\x80\xa6BdAny adjustments applied to the type.BnReturns whether this definition is a C string.0BaReturns whether this ADT is simd.0CjPost processing hook for cleanup and dumping output to \xe2\x80\xa6CmReturns a slice with all possible jump targets (including \xe2\x80\xa6DaAll possible targets including the <code>otherwise</code> target.CfFree-starting constructor for less syntactic overhead.0CiAllocates a slice of objects that are copied into the \xe2\x80\xa6DeUsed internally by <code>allocate</code> to abstract over some logic.DhGiven a linked list starting at <code>source_list</code> and another \xe2\x80\xa6CnThis higher-order macro declares a list of types which can \xe2\x80\xa60BaLike <code>Symbol::as_str</code>.DhCompile <code>expr</code>, yielding a compile-time constant. Assumes \xe2\x80\xa6AmSee docs in build/expr/mod.rsAlTypes that must be asserted.BmThe ascriptions to set up in this sub-branch.CmAssignments to each local. This defines whether the local \xe2\x80\xa6ChStores the assigned values for assignments where the \xe2\x80\xa6CnReturn all DepNode labels that should be asserted for this \xe2\x80\xa6DjWhen we used to capture <code>x</code> in its entirety, we implemented \xe2\x80\xa6CgA pointer to the content of the file we are formatting.EdReturns the <code>DefId</code> of the <code>bitor</code> lang item if it is defined.CdA list of thread ids blocked on this epoll instance.BfPresent if branch coverage is enabled.DeDrops that happen on the <code>break</code>/<code>return</code> path.DnSets up the drops for breaking from <code>block</code> to <code>target</code>.CaBuilds all inherent implementations of an ADT \xe2\x80\xa6CcBuilds the search index from the collected metadataCiThe necessary custom <code>panic!(...)</code> expression.AdByte string literal.BjWidth of c_int type. Defaults to \xe2\x80\x9c32\xe2\x80\x9d.AnThe node of the function call.00BfWhere this call came from in HIR/THIR.0DeReturns the span of the <em>caller</em> of the current operation, \xe2\x80\xa6DnRecoverReturnSign::Yes allows for recovering <code>fn foo() =&gt; u8</code>\xe2\x80\xa6FeReturns <code>true</code> if <code>self</code> cannot name some names from <code>other</code> \xe2\x80\x93 \xe2\x80\xa6000EhHere, <code>place</code> is the <code>PlaceWithHirId</code> being matched and pat is \xe2\x80\xa6BjTests if a cfg-pattern matches the cfg set0CjThe version of the rustc process, possibly including a \xe2\x80\xa60BeRepeat a character a number of times.DnChecks if the <code>#[align]</code> attributes on <code>item</code> are valid.CmWe do not allow all binary operations in abstract consts, \xe2\x80\xa6BbPerforms lint checking on a crate.0CnChecks the crate for usage of weak lang items, returning a \xe2\x80\xa6Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6000000DdChecks if <code>#[naked]</code> is applied to a function definition.CbPerform a checked left shift on the integral type.CcPerform a checked right shift on the integral type.DfA child node was write-accessed: <code>Reserved</code> must become \xe2\x80\xa6CmIncrease the index until it is inside or one past the end \xe2\x80\xa6EdReturns the <code>DefId</code> of the <code>clone</code> lang item if it is defined.ChRetrieve the closure signature for the given generic \xe2\x80\xa60BkThe (0-based) column offset when displayed.CmA bool flag for each basic block indicating whether it is \xe2\x80\xa6BkUtility functions for comparison operators.CkIt is ok if the returned path doesn\xe2\x80\x99t exist or is not \xe2\x80\xa60CjPass using one or more consecutive values of the given \xe2\x80\xa6EhReturns the <code>GenericParamDef</code> associated with this <code>ParamConst</code>\xe2\x80\xa6CkGenerate an uninitialized value (matching uninitialized \xe2\x80\xa60DaStores the data about each <code>R0 member of [R1..Rn]</code> \xe2\x80\xa6CdThe outlives constraints computed by the type-check.0CfThe associated item constraints for this path segment.CnCode to gather up constraints. Constraint construction and \xe2\x80\xa6FhConstraints of the form <code>A &lt;= B</code>, where either <code>A</code> or <code>B</code> can be \xe2\x80\xa60CcAny region constraints from performing the type op.DgAssociated type or constant bindings (e.g. <code>Item=i32</code> or \xe2\x80\xa6DkAs explained in <code>crate::usefulness</code>, values and patterns are \xe2\x80\xa6CgOptionally consumes the specified character. If the \xe2\x80\xa6ClThese from impls are used to create the JSON types which \xe2\x80\xa6DaMake a copy of the given fn_arg. Any <code>InPlace</code> are \xe2\x80\xa6CdExtra state that is only available when coverage \xe2\x80\xa6CdExtra per-CGU codegen state needed when coverage \xe2\x80\xa6DaIt\xe2\x80\x99s different from <code>crate_name</code> in main Diagnostic.ClThe crate config requested for the session, which may be \xe2\x80\xa600CbCreate an LLVM Attribute with no associated value.CcCreate an LLVM Attribute with these memory effects.CdObject files providing support for basic runtime \xe2\x80\xa6DjReturn the <code>LocalDefId</code> of this variant\xe2\x80\x99s constructor, if \xe2\x80\xa6DhReturn the <code>HirId</code> of this variant\xe2\x80\x99s constructor, if it \xe2\x80\xa6DjA reference to the current <code>GlobalCtxt</code> which we pass on to \xe2\x80\xa6BjGet the current location within the Frame.ClIf this is a \xe2\x80\x9ccustom coerce\xe2\x80\x9d impl, then what kind of \xe2\x80\xa6DfIn some cases (e.g. a <code>match</code> expression where all arms \xe2\x80\xa6CgLook for query cycles by doing a depth first search \xe2\x80\xa6CaData layout specification for the current target.0AlData layout to pass to LLVM.CaReturns an extended string tuple for this target.AiDeclare a C ABI function.CkReturns whether the impl or associated function has the \xe2\x80\xa6CkGets the defaultness of the associated item. To get the \xe2\x80\xa6111111CkReturns the \xe2\x80\x9cdefining type\xe2\x80\x9d of the current MIR; see \xe2\x80\xa6CgThe \xe2\x80\x9cdefining\xe2\x80\x9d type for this function, with all \xe2\x80\xa6CmContains the definition for every region variable. Region \xe2\x80\xa60CgFor each definition, we track the following data. A \xe2\x80\xa6DeEnsures that an error is printed. See <code>Level::DelayedBug</code>.AoThe macro\xe2\x80\x99s deprecation info.CgInformation about the item\xe2\x80\x99s deprecation, if present.CmReturns the deref chain of a type, starting with the type \xe2\x80\xa6D`Returns the chain of places behind <code>DerefTemp</code> localsEdReturns the <code>DefId</code> of the <code>deref</code> lang item if it is defined.CnReady or in-progress results of resolving paths inside the \xe2\x80\xa6lFor tracing.ChA short description of the target including platform \xe2\x80\xa6BhWhere the returned value will be written0CfClippy wrappers around rustc\xe2\x80\x99s diagnostic functions.AkBorrow checker diagnostics.C`Diagnostics related methods for <code>Ty</code>.ClNumber of \xe2\x80\x9cdirect\xe2\x80\x9d uses of each local, ie. uses that \xe2\x80\xa6CjDebugging code to test fingerprints computed for query \xe2\x80\xa6CjDiscard the error information in this result. Only use \xe2\x80\xa6AeGets the domain size.CiCreates a full drop ladder, consisting of 2 connected \xe2\x80\xa6CmCreate a lazy debug printer for a list of allocations and \xe2\x80\xa6BoDefinitions of various DWARF-related constants.CgIf the next token is the given keyword, eats it and \xe2\x80\xa6CjResolve the value of the EF_AVR_ARCH field for AVR ELF \xe2\x80\xa60CjWhether to emit errors or delay them as a bug For most \xe2\x80\xa60CjRenders the given filename into its corresponding HTML \xe2\x80\xa6CfEncodes args using the Itanium C++ ABI with vendor \xe2\x80\xa6BdEncodes a node to the current graph.AiEnd the provided section.CmWrapper that calls queries in a special \xe2\x80\x9censure done\xe2\x80\x9d \xe2\x80\xa6CiCall the closure with the given parameters set as the \xe2\x80\xa6ChRecords the current parent (if any) as the parent of \xe2\x80\xa6DfReturns the <code>PointIndex</code> for the first statement in the \xe2\x80\xa6CmEnvironment variables accessed during the build and their \xe2\x80\xa6CcHandler to add the required context to diagnostics.CmPer tree error cache. This is used to deduplicate errors, \xe2\x80\xa6CgWhether to allow the use of explicit error codes in \xe2\x80\xa6CeEscape tags in such a way that it is suitable for \xe2\x80\xa6Dg<code>true</code> if this lint should not be filtered out under any \xe2\x80\xa60CiAttempts to evaluate the expression without accessing \xe2\x80\xa6DgMaps local <code>DefId</code>s of exported types to fully qualified \xe2\x80\xa6CnWhether executables are available on this target. Defaults \xe2\x80\xa6DhExecutes <code>func</code> as a job, either aborting or executing as \xe2\x80\xa6DiParses this <code>TokenStream</code> as an expression and attempts to \xe2\x80\xa6Ccfile!(): expands to the current filename */ The \xe2\x80\xa6Bkline!(): expands to the current line numberDgExpands the value of the region represented with <code>b_vid</code> \xe2\x80\xa6CkThis will return the body of an item or panic if it\xe2\x80\x99s \xe2\x80\xa6CnThe expected namespace for the resolution, determined from \xe2\x80\xa6ClReturns the \xe2\x80\x9cexpected type\xe2\x80\x9d with which this coercion \xe2\x80\xa6AlAn explanation for the code.EdThe <code>#[export_name = &quot;...&quot;]</code> attribute, indicating a custom \xe2\x80\xa6ClTable of expression data, associating each expression ID \xe2\x80\xa6CkThe implementation of this function is kind of ugly. We \xe2\x80\xa6BhSpan of the <code>extern</code> keyword.CdThe list of external crates strings to link against.AnFunction to apply to each tag.CnInvoked by owning thread as it falls asleep sleep. Returns \xe2\x80\xa6DhCreates a false edge to <code>imaginary_target</code> and a real edge toCdPrint the report to a terminal using colours and \xe2\x80\xa6CnConstruct a diagnostic for a language feature error due to \xe2\x80\xa6BlSelects a valid store element in the buffer.AgThe name for debuginfo.0ClN.B., this is used only for better diagnostics, not name \xe2\x80\xa6k(ind, size)AnQuery the existence of a file.ClThis module defines a generic file format that allows to \xe2\x80\xa6CcLoad files from sources other than the file system.DeFinds the crates called <code>name</code>, may be multiple due to \xe2\x80\xa6CjTry to find a crate or crates if multiple crates exist \xe2\x80\xa6BaFind a crate with the given name.0BlFinds the index containing the given offset.CmFinds the position of the allocation containing the given \xe2\x80\xa6AcThe leftmost child.DiThis is an exclusive range that looks like <code>lo..max</code> (i.e. \xe2\x80\xa6DiThis is an exclusive range that looks like <code>lo..gap</code> (i.e. \xe2\x80\xa6BdThe count of non-variadic arguments.0CnTemporaries with fixed indexes. Used so that if-let guards \xe2\x80\xa6EdAssign <code>TOP</code> to the discriminant of <code>place</code> and all places \xe2\x80\xa6DhWrite all queued tags and add them to the <code>unclosed_tags</code> \xe2\x80\xa6CaThe span of the argument block <code>|...|</code>0EeReturns the <code>DefId</code> of the <code>fn_ptr_addr</code> lang item if it is \xe2\x80\xa6CnThe span of the function\xe2\x80\x99s signature, if available. Must \xe2\x80\xa6DbReturns <code>false</code> if this place is not used in a closure.CnRecursively builds a match pair tree for the given pattern \xe2\x80\xa6BlPermission for the frozen part of the range.CnCreates a new IndexVec with n copies of the <code>elem</code>.0Bcsee docs for <code>to_packed</code>CkA key function: determine the permissions to grant at a \xe2\x80\xa6CmDetermine NewPermission of the reference from the type of \xe2\x80\xa6BmConstructs a <code>Tree</code> from a struct.DgThe <code>edition</code> closure is used to get the edition for the \xe2\x80\xa6BjConverts a <code>Symbol</code> to a level.0Cicreate an AbiMap according to arbitrary fields on the \xe2\x80\xa6D`Given that one <code>-</code> was eaten, eat the rest of the \xe2\x80\xa6A`The legacy case.CiRun a garbage collector for BorTags every N basic blocks.000DlReturns the <em>generics</em> of the definition given by <code>DefId</code>.000000CkTry to get an environment variable from the interpreted \xe2\x80\xa6EgGiven a <code>HirId</code>, return the <code>HirId</code> of the enclosing function \xe2\x80\xa6DhGet the id\xe2\x80\x99s of all items that are <code>pub use</code>d in the crate.BmIterates over the symbols in the object file.DjBased on the specified <code>CargoFmtStrategy</code>, returns a set of \xe2\x80\xa6ClAdjust this context for resolution in a scope created by \xe2\x80\xa6AnImplement global constructors.AhJump to the given block.DiReport a descriptive error when <code>new</code> could not be granted \xe2\x80\xa6DhThis function is where we handle <code>hir::Path</code> elements and \xe2\x80\xa6DiReturns true if <code>self</code> has made any changes since snapshot \xe2\x80\xa6CnHas this diagnostic context printed any diagnostics? (I.e. \xe2\x80\xa6BoTests if a variant subtag is present in the \xe2\x80\xa60CkHashes a span in a stable way. We can\xe2\x80\x99t directly hash \xe2\x80\xa6BhChecks if the given crate/module exists.EfThe <code>HirId</code> of the current scope, which would be the <code>HirId</code> \xe2\x80\xa6DgHygienically compares a use-site name (<code>use_name</code>) for a \xe2\x80\xa6CmCreates a new suffixed integer literal with the specified \xe2\x80\xa6CiAs we cannot yet emit lints in this crate and have to \xe2\x80\xa6CmReturns the list of condition expressions and the list of \xe2\x80\xa6DlBehave as if no edges exist from <code>source</code> to <code>target</code>.CiExtract the scalar value from the result of reading a \xe2\x80\xa6EnThe <code>DefId</code> of the <code>impl</code> that gave rise to the <code>derived</code> \xe2\x80\xa600Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6000000Bkassociated types in impl blocks for traits.00BoTrue if a snapshot has started, false otherwiseDiIf <code>Some</code>, enable incremental compilation, using the given \xe2\x80\xa600AoIndentation for the last child.DiReturns the indentation before <code>span</code> if there are nothing \xe2\x80\xa6BhThe statement\xe2\x80\x99s block\xe2\x80\x99s indentation.EdReturns the <code>DefId</code> of the <code>index</code> lang item if it is defined.CnThis allows tools to enable rust logging without having to \xe2\x80\xa60CgInitialize the logger with the given values for the \xe2\x80\xa6Bg<code>let pat: ty = &lt;INIT&gt;</code>CeGet LLVM attribute for the provided inline heuristic.ChSome items contain others such as structs (for their \xe2\x80\xa6AiExtracts the inner range.BnPolonius input facts. Populated when using \xe2\x80\xa6CjSame as HashMap::insert, but it may panic if there\xe2\x80\x99s \xe2\x80\xa6EbAttempts to insert the <code>id</code> to <code>level_src</code> map entry. If \xe2\x80\xa6DeIndicates that <code>key</code> was normalized to <code>value</code>.0CmGet the instance type with generic instantiations applied \xe2\x80\xa60CnThis module contains code to instantiate new values into a \xe2\x80\xa6CkInstantiate the wrapped value, replacing each canonical \xe2\x80\xa600ClInstantiates <code>vid</code> with the type <code>ty</code>.CgReplaces generic types with its corresponding predicate22AmImplementation of InternalCx.DjRemap the \xe2\x80\x9cmember region\xe2\x80\x9d key using <code>map_fn</code>, producing \xe2\x80\xa6Bmoptionally get a CanonAbi, even if DeprecatedCjReturns the items of this set in stable sort order (as \xe2\x80\xa6ClReturns the entries of this map in stable sort order (as \xe2\x80\xa6CbConverts the <code>FluentValue</code> to a string.CkCheck if the location has been accessed, i.e. if it has \xe2\x80\xa6EaReturns <code>true</code> if the given <code>Expr</code> has been coerced before.DeChecks if this is a <code>T::Name</code> path for an associated type.0CgChecks if the given function kind is an async function.DjReturns <code>true</code> if this visibility is at least as accessible \xe2\x80\xa6FaReturns <code>true</code> if the token is the identifier <code>true</code> or <code>false</code>.EcReturns <code>true</code> if the symbol is <code>true</code> or <code>false</code>.BfTypes that indicate some form of breakDkReturns <code>true</code> if the binary operator takes its arguments by \xe2\x80\xa6AnAssignOps are always by value.DiReturns <code>true</code> if the unary operator takes its argument by \xe2\x80\xa6210DkChecks if <code>id</code> has a <code>#[cfg(test)]</code> attribute appliedEbChecks whether this is a <code>const fn</code>. Returns <code>false</code> for \xe2\x80\xa6ClTrait selection queries. These are best used by invoking \xe2\x80\xa6000000DeCheck if <code>self</code> is the terminal state of a pointer (is \xe2\x80\xa6CnReturns whether the target spec has self-contained linking \xe2\x80\xa6CgReturns true if all targets (including the fallback \xe2\x80\xa6CkIt is only looking at the variant, not the variant content.BcSee <code>Level::Reexported</code>.EgReturns <code>true</code> if this is a <code>Field</code> projection with the given \xe2\x80\xa6HfReturns <code>true</code> if <code>id</code> is a <code>DefId</code> of <code>Fn</code>, <code>FnMut</code> or <code>FnOnce</code> \xe2\x80\xa6DjReturns <code>true</code> if <code>size</code> completely fills the range.DjTrue if <code>c</code> is valid as a first character of an identifier. \xe2\x80\xa6DjReturns <code>true</code> if this represents the generic parameters of \xe2\x80\xa600EnReturns <code>true</code> if this <code>Place</code> contains a <code>Deref</code> projection.DkReturns <code>true</code> if the target of this projection may refer to \xe2\x80\xa61CeReturns <code>true</code> if the token is a lifetime.ChWhether the target toolchain is like AIX\xe2\x80\x99s. Linker \xe2\x80\xa6Co<code>true</code> if we are parsing a metavariable or a repeat.EkReturns <code>true</code> for <code>mod foo;</code>, false for <code>mod foo { .. }</code>.EaWhether this is a negative impl (e.g. <code>!Sized</code> or <code>!Send</code>).DhReturns <code>true</code> if we know for sure that the given type is \xe2\x80\xa6BgWhether this fd is non-blocking or not.ClChecks if the given expression is a null pointer (modulo \xe2\x80\xa6CgAll transitions created through normal means (using \xe2\x80\xa6DiDetermines whether <code>self</code> is a relevant transition for the \xe2\x80\xa6ClIndicates whether this is a reported error. We currently \xe2\x80\xa6DkReturns <code>true</code> if this pass must be run (i.e. it is required \xe2\x80\xa6CjChecks if the given resolved path is used in the given \xe2\x80\xa6DiReturns <code>true</code> if the token is either a special identifier \xe2\x80\xa6CkIf true, this edge in the spantree has been reversed an \xe2\x80\xa6CnCheck if expression is an integer literal that can be used \xe2\x80\xa6DkIf <code>true</code>, this module is not part of the public API, but it \xe2\x80\xa6CgReturns <code>true</code> if this literal has a suffix.CoChecks if the given <code>QPath</code> belongs to a type alias.DkReturns whether this <code>-C linker-flavor</code> option is one of the \xe2\x80\xa6CnWhat should Miri do when an op requires communicating with \xe2\x80\xa6CgAction for an op requiring communication with the host.01DaReturns the (elaborated) <em>bounds</em> on the associated or \xe2\x80\xa6000000DeReturns the <code>LocalDefId</code> of the overarching item whose \xe2\x80\xa6DmThe <code>DefId</code> of the <code>TraitItem</code> for the associated type.00CoInvokes <code>f</code> on all direct fields of <code>ty</code>.BjConnector for a child other than the last.A`The join status.CmMark that the active thread tries to join the thread with \xe2\x80\xa6ClThe end column of a span label, including the span. Doesn\xe2\x80\xa6CnReturns the maximum (last) element present in the set from \xe2\x80\xa6CeA length of trailing whitespaces on the current line.BiThe line number in the formatted version.CjPerforms the linkage portion of the compilation phase. \xe2\x80\xa6EhOptional link script applied to <code>dylib</code> and <code>executable</code> crate \xe2\x80\xa6ChLints that were emitted by the resolver and early lints.CkMap of registered lint groups to what lints they expand to.0DhReturns an iterator of all the points where <code>region</code> is live.BiUnversioned target tuple to pass to LLVM.CnLoads a config by checking the client-supplied options and \xe2\x80\xa60CfCall this function whenever you need to load a vtable.AjAccess to the local crate.BfGet information about the local crate.AgDeclarations of locals.BmThis is only used to compute the type for \xe2\x80\xa6BkGet an iterator for all local declarations.CcNames of local (user) variables (extracted from \xe2\x80\xa6CnReturns the scope that we should use as the lifetime of an \xe2\x80\xa6CnRead from a local of the current frame. Convenience method \xe2\x80\xa6CjReturns the address of the buffer where the locals are \xe2\x80\xa6CkThis acquires the lock assuming synchronization is in a \xe2\x80\xa6EdEffective logical environment used by <code>env!</code>/<code>option_env!</code> \xe2\x80\xa600ClFinds the line containing the given position. The return \xe2\x80\xa6DjIf the corresponding <code>SourceFile</code> is empty, does not return \xe2\x80\xa6CdResolves a def path like <code>std::vec::Vec</code>.CjThe region <code>&#39;x</code> that the type must outlive.CmLower a function type from the HIR to our internal notion \xe2\x80\xa6CfChecks that meta-variables in macro definition are \xe2\x80\xa6BfThe ident of the macro we\xe2\x80\x99re parsingCgThis module contains types and functions to support \xe2\x80\xa6De<code>true</code> if macro was defined with <code>macro_rules</code>.DjWhether the macro was defined via <code>macro_rules!</code> as opposed \xe2\x80\xa6B`<code>-Zmacro-stats</code> data.CmConverts the span into its start line and column, and end \xe2\x80\xa6BoExtract output directory and file from matches.CiThis function takes the place where the result of the \xe2\x80\xa60ClConvenience method to transform suggestion into a return \xe2\x80\xa6CgTo match the pattern, all of these must be satisfied\xe2\x80\xa6CmFor the candidate to match, all of these must be satisfied\xe2\x80\xa6CjWhether the parser is allowed to recover from broken code.ClAdds parentheses to any expression that might need them. \xe2\x80\xa6EbGet the <code>DefId</code> of the method call for the given <code>Deref</code>/\xe2\x80\xa6CjCreate a THIR expression for the given HIR expression. \xe2\x80\xa6CfRenders a module (should not handle recursing into \xe2\x80\xa6DiThis implements a single query, <code>check_mono_fn</code>, that gets \xe2\x80\xa6FjReturns <code>&quot;&quot;</code> (empty string) or <code>&quot;mutably &quot;</code> depending on the \xe2\x80\xa6000000AoThe \xe2\x80\x9ccurrent virtual time\xe2\x80\x9d.DgParser for the <code>-l</code> command-line option, which links the \xe2\x80\xa6AjCreate a new closure type.DfCreate a new <code>Value::Address</code> distinct from all the others.BeCounter to generate different values.ChThis is inbounds of the type of the niche field (not \xe2\x80\xa6CkWhether library functions call lowering/optimization is \xe2\x80\xa6DhThe <code>#[no_sanitize(...)]</code> attribute. Indicates sanitizers \xe2\x80\xa6DjIndices into <code>edge_targets</code> that signify a start of list of \xe2\x80\xa6CjThe state of each node; used during walk to record the \xe2\x80\xa6CfSets the number of threads to be used in the rayon \xe2\x80\xa6DcDeprecated in favor of <code>ThreadPoolBuilder::num_threads</code>.CkThe number of threads in the rayon thread pool. If zero \xe2\x80\xa6ChThe number of threads receiving the broadcast in the \xe2\x80\xa6BhNumber of type variables created so far.0CjCode that handles \xe2\x80\x9ctype-outlives\xe2\x80\x9d constraints like \xe2\x80\xa60DbReturns the set of obligations needed to make <code>arg</code> \xe2\x80\xa6DiMutate all keys with the given function <code>f</code>. This mutation \xe2\x80\xa6CmIf dynamic linking is available, whether only cdylibs are \xe2\x80\xa6BaWe are only looking at one module0CjThis function converts an interpreter value into a MIR \xe2\x80\xa6CkIf an explicit type was provided for this variable binding,EeReturns the <code>DefId</code> of the <code>Option</code> lang item if it is defined.EjDefaults to <code>Self::or</code>, but guarantees <code>(lhs &amp; rhs) == 0</code> so \xe2\x80\xa60CjYou should return first the key that should be used as \xe2\x80\xa60000DdWas the origin of the <code>span</code> from a scrutinee expression?DkInformation about the <code>Span</code>, if it came from an expression, \xe2\x80\xa600CmReturns the span itself if it doesn\xe2\x80\x99t come from a macro \xe2\x80\xa6DfAnything bound by <code>outer_index</code> or \xe2\x80\x9cabove\xe2\x80\x9d is escaping.CnReturns the path where dataflow results should be written, \xe2\x80\xa6ClGets the output path where a compilation artifact of the \xe2\x80\xa6DjThe index of the generic parameter being used (e.g. <code>0</code> for \xe2\x80\xa60000000000EcIf <code>true</code>, then this trait had the <code>#[rustc_paren_sugar]</code> \xe2\x80\xa6CiReturns the generic parameters of the closure\xe2\x80\x99s parent.CkReturns the generic parameters of the coroutine\xe2\x80\x99s parent.BdThis is the args of the typeck root.0021000CjReturns the generic parameters of the inline const\xe2\x80\x99s \xe2\x80\xa63211111132111B`The parent trait had this cause.0BkThe obligation introduced by this argument.110110AgThe parent of this nodeC`Parses a block. No inner attributes are allowed.EcParses reference binding mode (<code>ref</code>, <code>ref mut</code>, or nothing).BeParses the <code>--color</code> flag.ChParse a meta-variable <code>count</code> expression: \xe2\x80\xa6CeParses the depth used by index(depth) and len(depth).AgParses an generic identDjSimilar version of <code>markdown_links</code> from rustdoc. This will \xe2\x80\xa6BdParses a local variable declaration.CjExtracts read_rendered_cci and write_rendered_cci from \xe2\x80\xa6DkParses a qualified path. Assumes that the leading <code>&lt;</code> has \xe2\x80\xa6DcThis is used to parse inside a CSS <code>{}</code> block. If we \xe2\x80\xa6CiPermissionPriv is ordered by the reflexive transitive \xe2\x80\xa6ClIf part of the link resolved, this has the <code>Res</code>.EfReturns <code>true</code> if the pattern is a <code>PatWild</code>, or is an ident \xe2\x80\xa6DhIf <code>maybe_path</code> is a path node which resolves to an item, \xe2\x80\xa6Ec<code>path_is_var(path, var)</code> the root path <code>path</code> starting in \xe2\x80\xa60CjRemoves blocks around an expression, only if the block \xe2\x80\xa6CjA span representing the scrutinee expression, with all \xe2\x80\xa600CmEvery place can be read from, so we can turn them into an \xe2\x80\xa6Eg<code>placeholder(origin, loan)</code> describes a placeholder <code>origin</code>, \xe2\x80\xa6AgThe placeholder region.1ClLooks up a value by a JSON Pointer and returns a mutable \xe2\x80\xa6DaRetrieves the original raw pointer from <code>self.packed</code>.CkAttempts to satisfy the obligation. If successful, this \xe2\x80\xa6CmRequires you to pass an input filename and reader so that \xe2\x80\xa60CbStack of blocks-in-progress being flushed by printCjWhether or not this crate should be consider a private \xe2\x80\xa6Di<code>Some(true)</code> if the dependency is private or its parent is \xe2\x80\xa6CkReturns the current value for the given key. If the key hasCnA list of proc macro LocalDefIds, written out in the order \xe2\x80\xa60BnHow this place is derived from the base place.0Ckprojections are made from a base-place and a projection \xe2\x80\xa6BnYields all the provenances stored in this map.AnTest if this pointer equals 0.DhPush <code>stream</code> onto the end of the stream, possibly gluing \xe2\x80\xa6C`Used to prevent queries from calling too deeply.0ClA list of tags that have been requested to be opened via \xe2\x80\xa6CnReturns whether this allocation has provenance overlapping \xe2\x80\xa6DiConvert a scalar into a structured <code>Handle</code>. If the handle \xe2\x80\xa6Dh<code>range</code> is relative to this allocation reference, not the \xe2\x80\xa6AjRead a scalar from a placeB`Reads a <em>non-ZST</em> scalar.CmTimestamps of the last SC fence performed by each thread, \xe2\x80\xa6CmThe clock-vector of the timestamp of the last atomic read \xe2\x80\xa6BiThe target normal control flow will take.000DkTransform from generic args for a child of <code>source_ancestor</code> \xe2\x80\xa60CeConverts a register class to an LLVM constraint code.CjReleases a jobserver token back to the original jobserver.CnEither partial, full, or off. Full RELRO makes the dynamic \xe2\x80\xa6CgPulls a single mark off of the syntax context. This \xe2\x80\xa6CnRemoves operations on ZST places, and convert ZST operands \xe2\x80\xa6EgRenders directed graph <code>g</code> into the writer <code>w</code> in DOT syntax. \xe2\x80\xa6Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6000000ClResolves all of the filenames in this local file mapping \xe2\x80\xa6ClCreates a new span with the same line/column information \xe2\x80\xa6DjThe offset of <code>rest</code> from the start of the value. Currently \xe2\x80\xa6CdWhere to continue when returning from this function.Cc<code>return_cont</code> of the popped stack frame.10C`Span of the return type. Useful for diagnostics.ClRewrite an inline mod. The given shape is used to format \xe2\x80\xa6BeRunning size of stream \xe2\x80\x9c\xe2\x80\xa6right\xe2\x80\x9dCnUpdate the memory cell data-race tracking for atomic store \xe2\x80\xa60DfRollback (undo) the changes made to <code>storage</code> since the \xe2\x80\xa6CnReverses all changes since the last snapshot. Also removes \xe2\x80\xa6CgRun the core interpreter loop. Returns only when an \xe2\x80\xa6C`The arena, a fast but limited type of allocator.BnThis crates defines the type inference engine.AeLow-level Rust lexer.AjThe main parser interface.CmProvides an expectation for an rvalue expression given an \xe2\x80\xa6CkSaved files associated with this CGU. In each key/value \xe2\x80\xa600CfReturns the provenance that should be used henceforth.DcThe psABI size for a <code>Scalar</code> or <code>ScalarPair</code>CnMaps SCC indices to their metadata, including offsets into \xe2\x80\xa6CkFor each node, what is the SCC index of the SCC to which itDkFor each SCC, the range of <code>universal_regions</code> that use that \xe2\x80\xa6CmReturns a list of groups where elements in each group are \xe2\x80\xa6DeSets <code>self</code> as the worker thread index for the current \xe2\x80\xa6BgSet whether the text is intense or not.CnSets the message in <code>self</code> to <code>message</code>.ClReturns the resulting index when this value is moved out \xe2\x80\xa6000DeReturns <code>true</code> if any of the output types require linking.BjIf false, strip <code>#[test]</code> nodesCjWhether we should run doctests instead of generating docs.EfTruncates <code>value</code> to <code>self</code> bits and then sign-extends it to \xe2\x80\xa6BlComputing the size and alignment of a value.EdReturns the <code>DefId</code> of the <code>sized</code> lang item if it is defined.DnReturns the value contained inside of this <code>for&lt;&#39;a&gt;</code>. \xe2\x80\xa6CgSkips the binder and returns the \xe2\x80\x9cbound\xe2\x80\x9d value. \xe2\x80\xa61010CbSkip the smallest prefix containing NUMBER slashesFaMakes an <code>OwnedSlice</code> out of an <code>owner</code> and a <code>slicer</code> function.DgConverts a span to a code snippet. Returns <code>None</code> if not \xe2\x80\xa6BcComputes cost for the given source.CnReturns the source info associated with <code>location</code>.CnSource info corresponding to the local in the original MIR \xe2\x80\xa6DbThe <em>syntactic</em> (i.e., not visibility) source scope the \xe2\x80\xa6CiSource info of the user variable, including the scope \xe2\x80\xa62CkThe source location where this local variable was declared.CeGiven a span and the current source scope, make a \xe2\x80\xa6DgThe <code>Span</code> where drop obligation was incurred (typically \xe2\x80\xa633BaReturn the span for a definition.000000AoReference span for definitions.CmReturns the source text behind a span. This preserves the \xe2\x80\xa6CkReturns the strings to highlight. We always ensure that \xe2\x80\xa60CkLabels all the given spans with the provided label. See \xe2\x80\xa6CeSupernode at the other end of this spantree edge. \xe2\x80\xa6Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6000000D`Is <code>specializing_impl_def_id</code> a specialization of \xe2\x80\xa6DgIndex of <code>R1</code> in <code>choice_regions</code> vector from \xe2\x80\xa6CnStart a panic in the interpreter with the given message as \xe2\x80\xa6ClReturns a new span representing just the first character \xe2\x80\xa6DhExecutes a job by changing the <code>ImplicitCtxt</code> to point to the0CcChecks whether the first segments match the givens.DcThe place of the state of a <code>#[loop_match]</code>, which a \xe2\x80\xa6CjThe identifier of the vector index, corresponding to a \xe2\x80\xa6DgSlice of the source text spanning from <code>start</code> up to but \xe2\x80\xa6CgAdditional CSS files to be added to the generated docs.De<code>subset_base(origin1, origin2, point)</code> when we require \xe2\x80\xa60CnInsert the provided suffix into a filename just before the \xe2\x80\xa6DcThe original, decorated name if <code>name</code> is not decorated.DkThe <code>symbol_name</code> query provides the symbol name for calling \xe2\x80\xa6000000ChSynchronization vector for acquire-release semantics \xe2\x80\xa6CkMapping from tags to keys. The key obtained can then be \xe2\x80\xa600BlReturn information about the target machine.ClThe span of the syntactical component this attribute was \xe2\x80\xa6CfReturns the provenance that should be used henceforth.EeReturns the <code>DefId</code> of the <code>termination</code> lang item if it is \xe2\x80\xa6CfThe mapping of a given thread to associated thread \xe2\x80\xa6CaGet the name of the current thread if it was set.AcName of the thread.CmSets a closure which takes a thread index and returns the \xe2\x80\xa6DcDeprecated in favor of <code>ThreadPoolBuilder::thread_name</code>.CcContains support for user-managed thread pools, \xe2\x80\xa6ClConverts a <code>PointIndex</code> back to a location. O(1).CjCreate a <code>TokenTree::Token</code> with alone spacing.CnCreate a token stream containing a single token with alone \xe2\x80\xa6CjCreate a <code>TokenTree::Token</code> with joint spacing.mToken StreamsBhTracked access to environment variables.BjThe list of traits declared in this crate.DfDealing with trait goals, i.e. <code>T: Trait&lt;&#39;a, U&gt;</code>.CnTrait impl data. FIXME: Used only from queries and can use \xe2\x80\xa6C`The list of trait implementations in this crate.CkTruncates this list of generic args to have at most the \xe2\x80\xa60CdAcquires a token from this jobserver client in a \xe2\x80\xa6DkRetrieve the value stored for a place index, or <code>None</code> if it \xe2\x80\xa6DiRetrieve the slice length stored for a place, or <code>None</code> if \xe2\x80\xa6DiResolves a <code>(def_id, args)</code> pair to an (optional) instance \xe2\x80\xa6CcAttempts to extract the raw bits from the constant.CmTry to convert this ScalarInt to the raw underlying bits. \xe2\x80\xa6FdConverts the <code>ScalarInt</code> to <code>bool</code>. Panics if the <code>size</code> of the \xe2\x80\xa6EeReturns the <code>DefId</code> of the <code>tuple_trait</code> lang item if it is \xe2\x80\xa6EoPrints <code>{f: t}</code> or <code>{f as t}</code> depending on the <code>cast</code> argument0CfThe mode of this inference context, see the struct \xe2\x80\xa6CkThe typing mode of the currently visited node. Use this \xe2\x80\xa6CmCreates a new suffixed integer literal with the specified \xe2\x80\xa6CnGet the maximum value of uint_ty. It is platform-dependent \xe2\x80\xa6EgPerforms <code>which</code> operation on each component of <code>op</code>, storing \xe2\x80\xa6EgPerforms <code>which</code> operation on the first component of <code>op</code> and \xe2\x80\xa6DhUngate the last span under the given <code>feature</code>. Panics if \xe2\x80\xa6BdIs this type known to be uninhabted?CeA <code>Tree</code> representing an uninhabited type.CgUnions a key and a value without the possibility of \xe2\x80\xa6DiThe <code>gettid</code>-like function for Unix platforms that take no \xe2\x80\xa6EdReturns the <code>DefId</code> of the <code>unpin</code> lang item if it is defined.ClAll branches after the first wildcard, including further \xe2\x80\xa6BoCreate a type representing an unsigned integer.CkPoints where the current variable is \xe2\x80\x9cuse live\xe2\x80\x9d \xe2\x80\x93 \xe2\x80\xa6Ch[query description - consider adding a doc-comment!] \xe2\x80\xa6000000CmThe range that represents valid values. The range must be \xe2\x80\xa6BjUse <code>ty::ValTree::zst</code> instead.DkWe store a <code>ValueIndex</code> if and only if the placed is tracked \xe2\x80\xa6EhMaps <code>HirId</code>s of variable bindings to the <code>Local</code>s created for \xe2\x80\xa6ClAdd a subdiagnostic to the use of the captured variable, \xe2\x80\xa6Eg<code>var_used_at(var, point)</code> when the variable <code>var</code> is used for \xe2\x80\xa60CnMapping of a given vector index to the current thread that \xe2\x80\xa6CiReturns a version string such as \xe2\x80\x9c1.46.0 (04488afe3 \xe2\x80\xa6CnAll possible values for a constant parameter already exist \xe2\x80\xa6CgThis is the main entrypoint of <code>DocVisitor</code>.CiCreates a map that maps a file name to the module in AST.CgCalled each time we recurse down to a field of a \xe2\x80\x9c\xe2\x80\xa60CmVisits the given value as a union. No automatic recursion \xe2\x80\xa60CnVisits the given value, dispatching as appropriate to more \xe2\x80\xa60CjReturns a reference to the set of nodes that have been \xe2\x80\xa6BhWalk the pattern in left-to-right order.0ClImplementation of C++11-consistent weak memory emulation \xe2\x80\xa6BhWhether weak memory emulation is enabledD`Creates a <code>LinkSelfContainedDefault</code> enabling the \xe2\x80\xa6DfAvoid if possible, <code>Span::with_parent</code> should be preferred.BlThe (potentially remapped) working directory00DfHelper for calls where <code>FileEncoder::write_with</code> always \xe2\x80\xa6DeHelper for calls where <code>MemEncoder::write_with</code> always \xe2\x80\xa6CnHelper function to write a sequence of bytes with an added \xe2\x80\xa6CjWrite graphviz DOT edges with labels between the given \xe2\x80\xa6CnAfter we print the main statement, we sometimes dump extra \xe2\x80\xa6BoShared path buffer recycled by all calls to \xe2\x80\xa6CcCooperatively yields execution to local Rayon work.00DaLike <code>Add</code>, but with UB on overflow.  (Integers only.)0ClAn identifier that specifies the address space that some \xe2\x80\xa60BkThe value will take on a default alignment.CnSometimes an ABI requires small integers to be extended to \xe2\x80\xa6B`Attributes owned by a HIR owner.DkWe generate one of these structs for each <code>#[autodiff(...)]</code> \xe2\x80\xa6BlA desugared <code>&lt;expr&gt;.await</code>.0CgBinary operation traits like <code>LangItem::Add</code>DiA function pointer: <code>extern &quot;ABI&quot; fn(...) -&gt; ...</code>CnThis node is currently being walked as part of our DFS. It \xe2\x80\xa6BnThe <code>&amp;=</code> operator (bitwise and)BiThe <code>bitand_assign</code> lang item.1BjThe <code>^=</code> operator (bitwise xor)BiThe <code>bitxor_assign</code> lang item.1CgA block comment, e.g. <code>/* block comment */</code>.CfCharacter inside a block comment, with the integer \xe2\x80\xa6BoRegions created by <code>&amp;</code> operator.0DcMust match the layout of <code>LLVMRustCoverageBranchRegion</code>.CiAn implicit dereference before matching, such as when \xe2\x80\xa6DjThe different settings that the <code>-Z cf-protection</code> flag can \xe2\x80\xa6FaThe <code>HirId</code> corresponding to <code>CRATE_NODE_ID</code> and <code>CRATE_DEF_ID</code>.EgThis struct is used to wrap the <code>cache</code> and <code>tcx</code> in order to \xe2\x80\xa6ClA decoder that can read from the incremental compilation \xe2\x80\xa6ClAn encoder that can write to the incremental compilation \xe2\x80\xa6BhContains the function type if available.0EhA call to an <code>#[unstable]</code> const fn, <code>#[rustc_const_unstable]</code> \xe2\x80\xa6CnA visitor that determines locals in a MIR body that can be \xe2\x80\xa6CmFIXME(-Znext-solver): This or public because it is shared \xe2\x80\xa600CfTraverse <code>cfg_if!</code> macro and fetch modules.DdUsed as an input to <code>TyCtxt::uses_unique_generic_params</code>.AdLLVMRustChecksumKindC`Strings provided as crate attributes in the CLI.n<code>]</code>0BhStores span information about a closure.ChDistinguish between functional part of code and commentsAkThe test failed to compile.CeProvides direct access to rustc\xe2\x80\x99s internal queries.CmA marker type confirming that the supervisor has received \xe2\x80\xa6AjSee <code>ConstArg</code>.CaThe kind of an item that requires const-checking.DgFilter only the <code>[const]</code> bounds, which are lowered into \xe2\x80\xa6BjThe <code>const_param_ty</code> lang item.CkWe are inside of the type of a const parameter. Can\xe2\x80\x99t \xe2\x80\xa6CjThis rib forbids usage of generic parameters inside of \xe2\x80\xa6CfThe result of the <code>mir_const_qualif</code> query.0CkWe\xe2\x80\x99re in a constant item. Can\xe2\x80\x99t refer to dynamic stuff.CnA CopyForDeref is equivalent to a read from a place at the \xe2\x80\xa60CmA CopyForDeref is equivalent to a read from a place. When \xe2\x80\xa60DhThe value is dependent on a constant defined in <code>core</code> crate.ChThe count is implied and cannot be explicitly specified.CjThe count is specified by the argument at the given index.BmThe accessed pointer is neither of the above.CgA span of source code coordinates to be embedded in \xe2\x80\xa6CnIntermediate coverage metadata for a single function, used \xe2\x80\xa6CkA trait that can be used to retrieve a definition\xe2\x80\x99s type.ClVirtual module that denotes resolution in current scope. \xe2\x80\xa6DjThis is the highest value a <code>DepKind</code> can have. It\xe2\x80\x99s used \xe2\x80\xa60BiWe use this to create a forever-red node.0CmAmount of padding we need to add to the edge list data so \xe2\x80\xa6EbOwning pointer to a <code>DIBuilder&lt;&#39;ll&gt;</code> that will dispose of \xe2\x80\xa6CaCreates <code>DefId</code>s for nodes in the AST.EhImplemented to visit all <code>DefId</code>s in a type. Visiting <code>DefId</code>s \xe2\x80\xa6FbThe <code>DefPathTable</code> maps <code>DefIndex</code>es to <code>DefKey</code>s and vice versa.ClIn-memory cache for queries whose keys aren\xe2\x80\x99t suitable \xe2\x80\xa60C`Spawns a thread in the \xe2\x80\x9cnormal\xe2\x80\x9d way with \xe2\x80\xa6CkA mapping of all required dependencies for a particular \xe2\x80\xa6CnSuggestion results for handling closure args dereferencing \xe2\x80\xa6CbDeref pattern, written <code>box P</code> for now.DgDeref patterns (enabled by the <code>deref_patterns</code> feature) \xe2\x80\xa60CjSingle-segment custom attribute registered by a derive \xe2\x80\xa6DeSimplified version of <code>FluentValue</code> that can implement \xe2\x80\xa60CmDual and Duplicated (and their Only variants) are getting \xe2\x80\xa6DhThe <code>discriminant_type</code> lang item. The associated item of \xe2\x80\xa6CnComputes the discriminant of the place, returning it as an \xe2\x80\xa60B`Discriminant of the given value.11DgThe value that distinguishes a variant in an <code>Enum</code> from \xe2\x80\xa6CfThe self type does not get to the receiver type by \xe2\x80\xa6CcWhich drop flags to affect/check with an operation.EaRequired for <code>visit_node</code> obtained an owned <code>Node</code> from \xe2\x80\xa6BiDuplicates of this attribute are allowed.0CcRegular dynamic library (\xe2\x80\x9cdynamically linked\xe2\x80\x9d).CnExit status code used for compilation failures and invalid \xe2\x80\xa60CmExit status code used for successful compilation and help \xe2\x80\xa60CjContext for lint checking of the AST, after expansion, \xe2\x80\xa60CmPreviously accepted code that will become an error in the \xe2\x80\xa6CcDescribes how to elaborate an obligation into a \xe2\x80\xa600000CiHACK: This is used to recover the NodeId of an elided \xe2\x80\xa6CkMatching variants of the enum: variant index, ast::Variant,CkOnly assemble candidates from the environment and alias \xe2\x80\xa6ClA convenient helper for unification values which must be \xe2\x80\xa6CgThe error has already been handled by const evaluation.0CjWe want use of immutable upvars to cause a \xe2\x80\x9cwrite to \xe2\x80\xa6FdUsed by various <code>Parser</code> methods such as <code>check</code> and <code>eat</code>. The \xe2\x80\xa6CgResult of an expansion that may need to be retried. \xe2\x80\xa6BiRepresents <code>#[export_stable]</code>.0CjID of a coverage-counter expression. Values ascend from 0.C`Memory for extern statics. This memory may leak.0BgAccessing an unsupported extern static.0Cn<code>impl Trait</code> is unstably accepted in this position.CeStores a file\xe2\x80\x99s metadata in order to avoid code \xe2\x80\xa6DkA visitor that collects all <code>#[rustc_clean]</code> attributes from \xe2\x80\xa6CmA fixed-sized bitset type represented by an integer type. \xe2\x80\xa6BjThe <code>fn_once_output</code> lang item.DbPrint the RTN type as an impl trait, i.e. <code>impl Sized</code>.0CnWhether or not we should force collection of tokens for an \xe2\x80\xa6DiA <code>force-warn</code> lint warning about the code being compiled. \xe2\x80\xa6CgReports on any issues that occurred during a run of \xe2\x80\xa6CkLike std::fmt::Arguments this is a string that has been \xe2\x80\xa6DjLike <code>FreshTy</code>, but as a replacement for <code>FloatVar</code>.0000CnCheck region parameters from a function definition. Allows \xe2\x80\xa6BiThe <code>future_output</code> lang item.EfUsed to differentiate between <code>async {}</code> blocks and <code>gen {}</code> \xe2\x80\xa6BiEither a trait bound or a lifetime bound.CmAn index into the CGU\xe2\x80\x99s overall list of file paths. The \xe2\x80\xa6ChDoes this have any <code>ConstKind::Bound</code> consts?000CdDoes this value have <code>InferConst::Fresh</code>?000BmDoes this have <code>ConstKind::Infer</code>?000BmDoes this have <code>ConstKind::Param</code>?000C`Does this have any <code>ReBound</code> regions?000BbDoes this have <code>ReVar</code>?000BiDoes this have <code>ReEarlyParam</code>?000BlDoes this have any <code>Bound</code> types?000AhDoes this value have \xe2\x80\xa6000BbDoes this have <code>Infer</code>?000BbDoes this have <code>Param</code>?000DbLook for <code>ErrorGuaranteed</code> deeply within structs\xe2\x80\x99 \xe2\x80\xa6CkThe actual safety specified in syntax. We may treat its \xe2\x80\xa6CeMake headings links with anchor IDs and build up TOC.DfStructure returned from <code>Client::into_helper_thread</code> to \xe2\x80\xa6CnA context which can lower type-system entities from the HIR\xe2\x80\xa6DkHandles the writing of <code>HumanReadableErrorType::Default</code> and \xe2\x80\xa6BkThe most general type to print identifiers.BnComputing common supertype in an if expression00EbAn <code>if let</code> or <code>match</code> expression. Useful for lints that \xe2\x80\xa6DfLint for potential change in program semantics of <code>if let</code>sD`Represents various kinds of content within an <code>impl</code>.CmThis stripper discards all impls which reference stripped \xe2\x80\xa6ChThis is the implicit state of rustc. It contains the \xe2\x80\xa60EdInferred type of a <code>self</code> or <code>&amp;self</code> argument in a method.FlBinding for a <code>self</code>/<code>&amp;self</code>/<code>&amp;mut self</code> binding where the type \xe2\x80\xa6CeInitializations can be from an argument or from a \xe2\x80\xa6CjInline assembly symbol operands get their own AST node \xe2\x80\xa6DfWe are inside a <code>sym</code> inline assembly operand. Can only \xe2\x80\xa6ClUse inline option for LLVM versions later than specified \xe2\x80\xa6A`LLVMIntPredicateCnThe result type used by the interpreter. This is a newtype \xe2\x80\xa60ClHelper trait for indexing operations with a custom index \xe2\x80\xa60CmThe constant references mutable or external memory, so it \xe2\x80\xa60ChAn identifier that is invalid because it contains emoji.CjIs an increment or decrement expression its own statement?CiBoolean flag used to indicate if this search is for a \xe2\x80\xa6B`The <code>next</code> lang item.CmSignals that represent that we have a bug, and our prompt \xe2\x80\xa6AkImpl <code>DepNode</code>s.CgDisallows capturing late-bound vars from parent scopes.AjAn AST-based derive macro.CcLine has exceeded character limit (found, maximum).CnAll linkers have some kinds of command line interfaces and \xe2\x80\xa6ChTranslating this is kind of useless. We don\xe2\x80\x99t pass \xe2\x80\xa6DjA <code>RawList</code> without the unsized tail. This type is used for \xe2\x80\xa6CcType of the float literal based on provided suffix.B`Character is within a raw stringAmLoading the dep graph failed.0CkThe values of all the environment variables that matter \xe2\x80\xa6DhThe <code>missing_docs</code> lint detects missing documentation for \xe2\x80\xa6BiThe <code>manually_drop</code> lang item.ClThe anonymous region corresponds to a reference that was \xe2\x80\xa6CmMaybe there was a typo where a comma was forgotten before \xe2\x80\xa6CnThis is used to avoid TempDir being dropped on error paths \xe2\x80\xa6CkA univariant, the last field of which may be coerced to \xe2\x80\xa6DdInformation required for the sound usage of a <code>MemPlace</code>.0AhWe are accessing memory.0CmThe meta item kind, containing the data after the initial \xe2\x80\xa6Ale.g., <code>$x: expr</code>.ClA reference to the raw binary version of crate metadata. \xe2\x80\xa6C`layout size of this type (used in vtable header)A`LLVMMetadataTypeAjA rustc InterpCx for Miri.0BgInformation about a misaligned pointer.0DdModule-specific configuration for <code>optimize_and_codegen</code>.BmAuxiliary info about a <code>MonoItem</code>.EcA <code>MonotonicVec</code> is a <code>Vec</code> which can only be grown. Once \xe2\x80\xa6DaLike <code>Mul</code>, but with UB on overflow.  (Integers only.)0CjAnnotation marking the last character of a fully shown \xe2\x80\xa6Di<code>#[rustc_nounwind]</code>: An indicator that function will never \xe2\x80\xa6DdContains a mapping of <code>MacroRulesNormalizedIdent</code>s to \xe2\x80\xa6CmThe backend has finished compiling a CGU, which now needs \xe2\x80\xa6CfOverride this type to control which nested HIR are \xe2\x80\xa6CmSpecifies what nested things a visitor wants to visit. By \xe2\x80\xa6BoAdditional static data referred to by a static.CjThis describes that formatting should process the next \xe2\x80\xa6DmThe string was not terminated, e.g. <code>r###&quot;abcde&quot;##</code>. \xe2\x80\xa6CjEnd result of allocating physical counters and counter \xe2\x80\xa6CiData representing a view of some underlying graph, in \xe2\x80\xa60CkA trivial attribute \xe2\x80\x9cmacro\xe2\x80\x9d that does nothing, only \xe2\x80\xa6DbAn attribute that is <em>not</em> implemented via macro. E.g., \xe2\x80\xa600000000CmUsed by the new solver to normalize an alias. This always \xe2\x80\xa6CiThis should only be used inside of the new solver for \xe2\x80\xa600DjUnlike other goals, <code>NormalizesTo</code> goals act like functions \xe2\x80\xa6212121AjThe item is not supported.0CmConstant that can be added to add one inactive thread. An \xe2\x80\xa6CfConstant that can be added to add one sleeping thread.CiConfigures what to do when when the same attribute is \xe2\x80\xa6CnOpen a reparse point as a regular file - this is basically \xe2\x80\xa6CgHelper struct to query object file information from \xe2\x80\xa6CnThe representation of a Rust value. The enum variant is in \xe2\x80\xa6BdThe <code>Ordering</code> lang item.CiThis trait allows us to have two different Outcome types:CcInformation pertinent to an overlapping impl error.0CcThe <code>panic_const_div_by_zero</code> lang item.CnThe type for a panic handling closure. Note that this same \xe2\x80\xa6CcThe <code>panic_const_rem_by_zero</code> lang item.CnSpecifies the enforced ordering for generic parameters. In \xe2\x80\xa6CkHIR node coupled with its parent\xe2\x80\x99s id in the same HIR \xe2\x80\xa6CnFor patterns flagged for migration during HIR typeck, this \xe2\x80\xa6Da<code>PlaceBuilder</code> is used to create places during MIR \xe2\x80\xa6BdInformation about a place\xe2\x80\x99s usage.ClThis statement exists to preserve a trace of a scrutinee \xe2\x80\xa6AgPlaceMention statement.1BiThe <code>pointee_sized</code> lang item.BiThe <code>pointee_trait</code> lang item.CiDetails of a pointer check, the condition on which we \xe2\x80\xa6CaAfter analysis, mostly during codegen and MIR \xe2\x80\xa600CfRuns at the beginning of \xe2\x80\x9canalysis to runtime\xe2\x80\x9d \xe2\x80\xa6111CjFound an applicable method, but it is not visible. The \xe2\x80\xa6DgA projection <code>&lt;Type as Trait&gt;::AssocType</code>. Can get \xe2\x80\xa60000BeA <code>MirPass</code> for promotion.CiContext necessary to answer the question \xe2\x80\x9cAre these \xe2\x80\xa6AdPattern replacementsCfThe name of rustc\xe2\x80\x99s own place to organize libraries.CjA region parameter; for example <code>&#39;a</code> in \xe2\x80\xa600000DiWhether or not to recover a <code>:</code> when parsing patterns that \xe2\x80\xa60DdWhether or not to recover a <code>,</code> when parsing or-patterns.0BbTrait for decoding to a reference.CdA collection of errors encountered during region \xe2\x80\xa6CgFolds over the substructure of a type, visiting its \xe2\x80\xa60CfFolds through bound vars and placeholders, naming them111CkStores the full values for a set of regions (in contrast toCcIf a remapped path is available, only embed the \xe2\x80\xa6C`The fields or variants have irreconcilable reprs0CaStructs, enums, unions and type aliases, e.g. \xe2\x80\xa6BcRestrictions applied while parsing.DkData returned by <code>Machine::after_stack_pop</code>, and consumed by \xe2\x80\xa60BcSee <code>MirPhase::Runtime</code>.0Ed<code>RvalueScopes</code> is a mapping from sub-expressions to <em>extended</em> \xe2\x80\xa60CgThe size of the vector clock to store inline. Clock \xe2\x80\xa6ClA byte that cannot occur in UTF8 sequences. Used to mark \xe2\x80\xa6DjIs <code>self</code> allowed semantically as the first parameter in an \xe2\x80\xa6nShared borrow.Ck<code>static</code> items must have <code>Sync</code> type.00DiLike <code>Shl</code>, but is UB if the RHS &gt;= LHS::BITS or RHS &lt; 00Bg&amp;&amp;, || \xe2\x80\x93 cannot be overridden11BmA type was too large for the target platform.0DkThe size of a type exceeds <code>TargetDataLayout::obj_size_bound</code>\xe2\x80\xa6mOverflow sizeChType size \xe2\x80\x9cskeleton\xe2\x80\x9d, i.e., the only information \xe2\x80\xa6ClResult of breaking a string so it fits in a line and the \xe2\x80\xa6ClType used to hash an ast element. This is different from \xe2\x80\xa60EcSpecial case tactic for <code>format!()</code>, <code>write!()</code> style macros.AjStable 128-bits Sip HasherCjReturn type of <code>InterpCx::pop_stack_frame_raw</code>.0CmThe first character of a comment, there is only one for a \xe2\x80\xa6BdInformation needed to begin tracing.CjThe type for a closure that gets invoked when a thread \xe2\x80\xa6AjFields for a static methodAke.g., <code>fn foo()</code>00CbStatically linked position-independent executable.CdA static method where <code>Self</code> is a struct.CmAttempt to use \xe2\x80\x93emit with a mode which is not currently \xe2\x80\xa6BhDescribes the layout of a piece of text.C`An item that has been stripped by a rustdoc passCiWhen reporting ambiguity errors, we sometimes want to \xe2\x80\xa6DaLike <code>Sub</code>, but with UB on overflow.  (Integers only.)0CkRepresents a single <code>printf</code>-style substitution.CjSee the docs on <code>CodeSuggestion::substitutions</code>CnAll the data about the data structure/method being derived \xe2\x80\xa6c\xe2\x80\xa6BlNumber of bits used for the thread counters.Di<code>#[thread_local]</code>: indicates a static is actually a thread \xe2\x80\xa6Da<code>#[track_caller]</code>: allow access to the caller locationCkHelper for constructing a table\xe2\x80\x99s serialization (also \xe2\x80\xa6DlWrap HTML tables into <code>&lt;div&gt;</code> to prevent having the doc \xe2\x80\xa6CnTarget-specific options that get set in <code>cfg(...)</code>.CcTemporary lifetime information for THIR expressionsCmThe first pass over the crate simply builds up the set of \xe2\x80\xa6DeArguments to <code>Builder::then_else_break_inner</code> that are \xe2\x80\xa6CdThe clock to use for the timeout you are asking for.0AoSection with attached timestampCkThis type is used as a conveniency to prevent having to \xe2\x80\xa6BkA bitset type designed specifically for \xe2\x80\xa6CgAn IPC request sent by the child process to the parent.BbWe recovered from a trailing vert.Fd<code>Src</code> is transmutable into <code>Dst</code>, if <code>src</code> is transmutable into \xe2\x80\xa6CgA property of a macro expansion that determines how \xe2\x80\xa6Bi#[feature(trivial_bounds)] is not enabled00DfAssociate some local constants with the <code>&#39;tcx</code> lifetimeFaDerives <code>TypeFoldable</code> for the annotated <code>struct</code> or <code>enum</code> (\xe2\x80\xa6ChThis trait is implemented for every type that can be \xe2\x80\xa6101000BdThe output from performing a type opAl<code>where T: &#39;r</code>DhThe <code>TypeOutlives</code> struct has the job of \xe2\x80\x9clowering\xe2\x80\x9d a \xe2\x80\xa6111011DgEnforce that <code>a</code> is equal to or a subtype of <code>b</code>.CbA nested goal required to prove that types are \xe2\x80\xa600000000FaType-related paths (e.g., <code>&lt;T&gt;::default</code> or <code>&lt;T&gt;::Output</code>). \xe2\x80\xa6CeA unique identifier for anything that we create a \xe2\x80\xa6BjWhat operation a universe was created for.BjAny other combination of assignments/uses.")
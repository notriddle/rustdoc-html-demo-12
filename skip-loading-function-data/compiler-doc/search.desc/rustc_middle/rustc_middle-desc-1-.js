searchState.loadedDescShard("rustc_middle", 1, "Represents how a <code>CastKind::PointerCoercion</code> was constructed.\nInstructs the const eval interpreter to increment a …\nConstants are already semantically values, and remain …\nThese indices are generated by slice patterns. Easiest to …\nThese indices are generated by slice patterns. Easiest to …\nNo action is to be taken. Continue unwinding.\nReturns whether we should perform contract-checking at …\nCreates a value by loading the given place.\nA CopyForDeref is equivalent to a read from a place at the …\nDenotes a call to the intrinsic function …\nIndicates the end of dropping a coroutine.\nCarries control-flow-sensitive information injected by …\nA shared (deep) borrow. Data must be immutable and is …\nA “normal” retag.\nDeinitializes the place.\nComputes the discriminant of the place, returning it as an …\nThe <code>/</code> operator (division)\n“Downcast” to a variant of an enum or a coroutine.\n“Downcast” to a variant of an enum or a coroutine.\nThe behavior of this statement differs significantly …\nThe <code>==</code> operator (equality)\nAn immutable, aliasable borrow that is discarded after …\nCreates a raw pointer to a place that will only be used to …\nWhen executed at runtime, this is a nop.\nThe <code>FakeReadCause</code> describes the type of pattern why a …\nA block where control flow only ever takes one real path, …\nA terminator for blocks that only take one path in …\nA field (e.g., <code>f</code> in <code>_1.f</code>) is one variant of <code>ProjectionElem</code>…\nA field (e.g., <code>f</code> in <code>_1.f</code>) is one variant of <code>ProjectionElem</code>…\nThe initial retag of arguments when entering a function.\nA fake read injected into a match guard to ensure that the …\nCurrently, index expressions overloaded through the <code>Index</code> …\nOfficially, the semantics of\nA fake read injected into a match guard to ensure that the …\nFake read of the scrutinee of a <code>match</code> or destructuring <code>let</code> …\nThe <code>&gt;=</code> operator (greater than or equal to)\nBlock has one successor; we continue execution there.\nThe <code>&gt;</code> operator (greater than)\nThe coercion was automatically inserted by the compiler.\nWe were already cleaning up for an ongoing unwind, and a …\nIndex into a slice/array.\nIndex into a slice/array.\nIn addition to the semantic changes, beginning with this …\nBlock ends with an inline assembly block. This is a …\nThe macro that an inline assembly block was created by\nDenotes a call to an intrinsic that does not require an …\nThe <code>&lt;=</code> operator (less than or equal to)\nYields the length of the place, as a <code>usize</code>.\nThe <code>&lt;</code> operator (less than)\nThis was from comparison generated by a match, used by …\nRepresents the “flavors” of MIR.\nOther types of desugaring that did not come from the HIR, …\nCreates a value by performing loading the place, just like …\nThe <code>*</code> operator (multiplication)\nLike <code>Mul</code>, but with UB on overflow.  (Integers only.)\nLike <code>Mul</code>, but returns <code>(T, bool)</code> of both the wrapped result …\nData is mutable and not aliasable.\nThe <code>naked_asm!</code> macro\nThe <code>!=</code> operator (not equal to)\nThe <code>-</code> operator for negation\nNo-op. Useful for deleting instructions without affecting …\nNormal function call, no special source\nThe <code>!</code> operator for logical inversion\nComputes a value as described by the operation.\nThe <code>ptr.offset</code> operator\nReturns the offset of a field\nLike an explicit cast from an opaque type to a concrete …\nLike an explicit cast from an opaque type to a concrete …\nAn operand in MIR represents a “value” in Rust, the …\nThis came from something such as <code>a &gt; b</code> or <code>a + b</code>. In THIR, …\nPlaces roughly correspond to a “location in memory.” …\nAlias for projections as they appear in places, where the …\nThis statement exists to preserve a trace of a scrutinee …\nPointer related casts that are done by coercions. Note …\nAn exposing pointer to address cast. A cast between a …\nAn address-to-pointer cast that picks up an exposed …\nBeginning in this phase, the following variants are …\nBeginning with this phase, the following variant is …\nGets the metadata <code>M</code> from a <code>*const</code>/<code>*mut</code>/<code>&amp;</code>/<code>&amp;mut</code> to …\nRetagging raw pointers.\nCreates a raw pointer with the indicated mutability to the …\nConstruct a raw pointer from the data pointer and metadata.\nCreates a reference of the indicated kind to the place.\nThe <code>%</code> operator (modulus)\nCreates an array where each element is the value of the …\nRetag references in the given place, ensuring they got …\nDescribes what kind of retag is to be performed.\nReturns from the function.\nThe “runtime MIR” dialect, used for CTFE, …\nSee <code>MirPhase::Runtime</code>.\nThe various kinds of rvalues that can appear in MIR.\nWrite the discriminant for a variant to the enum Place.\nA shared shallow borrow. The immediately borrowed place …\nTransmutes a <code>*mut u8</code> into shallow-initialized <code>Box&lt;T&gt;</code>.\nData must be immutable and is aliasable.\nThe <code>&lt;&lt;</code> operator (shift left)\nLike <code>Shl</code>, but is UB if the RHS &gt;= LHS::BITS or RHS &lt; 0\nThe <code>&gt;&gt;</code> operator (shift right)\nLike <code>Shl</code>, but is UB if the RHS &gt;= LHS::BITS or RHS &lt; 0\nReturns the size of a value of that type\nThe various kinds of statements that can appear in MIR.\nSee <code>StorageLive</code> above.\n<code>StorageLive</code> and <code>StorageDead</code> statements mark the live range …\nThe <code>-</code> operator (subtraction)\nLike <code>Sub</code>, but with UB on overflow.  (Integers only.)\nLike <code>Sub</code>, but returns <code>(T, bool)</code> of both the wrapped result …\nThese indices are generated by slice patterns.\nThese indices are generated by slice patterns.\nA <code>Subtype(T)</code> projection is applied to any …\nA <code>Subtype(T)</code> projection is applied to any …\nSwitches based on the computed value.\nTail call.\nTerminates the execution if unwind happens.\nThe various kinds of terminators, representing ways of …\nCreates a pointer/reference to the given thread local.\nReinterpret the bits of the input as a different type.\nRetag preparing for a two-phase borrow.\nThis borrow arose from method-call auto-ref. (i.e., …\nReturns whether we should perform some UB-checking at …\nExactly like <code>BinaryOp</code>, but less operands.\nIndicates a terminator that can never be reached.\nTriggers undefined behavior if unwind happens.\nAction to be taken when a stack unwind happens.\nIndicates that the landing pad is finished and that the …\nIndicates that the landing pad is finished and that the …\nThe reason we are terminating the process during unwinding.\nA transmute from an unsafe binder to the type that it …\nA transmute from an unsafe binder to the type that it …\nUse of value, generating a clone function call\nYields the operand unchanged\nWraps a value in an unsafe binder.\nMarks a suspend point.\nAdds a new target to the switch. Panics if you add an …\nReturns a slice with all possible jump targets (including …\nReturns a slice with all considered values (not including …\nA short representation of this used for MIR printing.\nInverse of <code>SwitchTargets::static_if</code>.\nNumber of elements to copy from src to dest, not bytes.\nFormat the diagnostic message for use in a lint (e.g. when …\nFormat the message arguments for the <code>assert(cond, msg..)</code> …\nGets the (dialect, phase) index of the current <code>MirPhase</code>. …\nReturns true if all targets (including the fallback …\nReturns true if this an overflow checking assertion …\nReturns an iterator over the switch targets.\nReturns a simple string representation of a <code>TerminatorKind</code> …\nCreates switch targets from an iterator of values and …\nReturns the fallback target that is jumped to when none of …\nGet the lang item that is invoked to print a static …\nprojection out of a place (access a field, deref a …\nBuilds a switch targets definition that jumps to <code>then</code> if …\nLike <code>SwitchTargets::target_for_value</code>, but returning the …\nFinds the <code>BasicBlock</code> to which this <code>SwitchInt</code> will branch …\nPossible branch targets. The last element of this vector …\nOptional user-given type: for something like …\nPossible values. For each value, the location to branch to …\nThis represents the index into the <code>targets</code> array in …\nCounting backwards from end? This is always false when …\nWhether <code>to</code> counts from the start or end of the array/slice.\nThe thing being indexed must be at least this long – …\nindex or -index (in Python terms), depending on from_end\nCounting backwards from end? This is always false when …\nWhether <code>to</code> counts from the start or end of the array/slice.\nThe thing being indexed must be at least this long – …\nindex or -index (in Python terms), depending on from_end\nPlace to drop\nReason for backward incompatibility\nArguments the function is called with. These are owned by …\nArguments the function is called with. These are owned by …\nMacro used to create this inline asm: one of <code>asm!</code> or …\nPrepared async future local (for async drop)\nWhere this call came from in HIR/THIR.\nWhere the returned value will be written\nThe discriminant value being tested.\nCleanup to be done if the coroutine is dropped at this …\nCleanup to be done if the coroutine is dropped at this …\nThis <code>Span</code> is the span of the function, without the dot and …\nThis <code>Span</code> is the span of the function, without the dot and …\nThe function that’s being called.\nThe function that’s being called.\nA block control flow could conceptually jump to, but won’…\nSource spans for each line of the inline assembly code. …\nThe operands for the inline assembly, as <code>Operand</code>s or <code>Place</code>…\nMiscellaneous options for the inline assembly.\nThe target normal control flow will take.\nThe target normal control flow will take.\nWhere to resume to.\nThe place to store the resume argument in.\nWhere to go after this call returns. If none, the call …\nValid targets for the inline assembly. The first element …\nThe template for the inline assembly, with placeholders.\nAction to be taken if the call unwinds.\nThe imaginary cleanup block link. This particular path …\nAction to be taken if the inline assembly unwinds. This is …\nThe value to return.\nSpecial action for <code>Yield</code>, <code>Call</code> and <code>InlineAsm</code> terminators.\nList of places that are written to after a successful …\nFor terminators that have two successors, like <code>assert</code> with …\nFor terminators that have no successor, like <code>return</code>.\nFor terminators that have a single successor, like <code>goto</code>, …\nSpecial edge for <code>SwitchInt</code>.\nThe cleanup block, if it exists.\nPostorder traversal of a graph.\nPreorder traversal of a graph.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nA non-empty <code>extra</code> allows for a precise calculation of the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTraversal of a <code>Body</code> that tries to avoid unreachable blocks …\n<code>MonoReachable</code> internally accumulates a <code>DenseBitSet</code> of …\nPostorder traversal of a graph.\nPreorder traversal of a graph.\nReturns an iterator over all basic blocks reachable from …\nReturns a <code>DenseBitSet</code> containing all basic blocks …\nReverse postorder traversal of a graph.\nUser type annotation assertions for NLL.\nOutput operand of an inline assembly block.\nA <code>BackwardIncompatibleDropHint</code> statement, meant for …\nMutable borrow.\nDestination of a call.\nConsumed as part of an operand.\nAppears on <code>Deinit</code>\nBeing dropped.\nA fake borrow. FIXME: do we need to distinguish shallow …\nBeing inspected in some way, like loading a len.\nA type found at some location.\nConsumed as part of an operand.\nPlaceMention statement.\nUsed as base for another place, e.g., <code>x</code> in <code>x.y</code>. Will not …\nUsed as base for another place, e.g., <code>x</code> in <code>x.y</code>. Could …\n<code>&amp;raw const</code>.\n<code>&amp;raw mut</code>.\nRetagging, a “Stacked Borrows” shadow state operation\nThe return type of the function.\nAppears on <code>SetDiscriminant</code>\nShared borrow.\nEnding a storage live range.\nStarting a storage live range.\nAppears as LHS of an assignment.\nExtra information passed to <code>visit_ty</code> and friends to give …\nThe inferred type of a user type annotation.\nThe data of a user variable, for debug info.\nDestination of a yield.\nThe variance of a place in the given context.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if this place context represents an …\nReturns <code>true</code> if this place context represents a borrow, …\nReturns <code>true</code> if this place context represents a drop.\nReturns <code>true</code> if this place context represents a use that …\nReturns <code>true</code> if this place context represents an …\nReturns <code>true</code> if this place context represents a storage …\nReturns <code>true</code> if this place context represents a use.\nThis is called for every constant in the MIR body and …\nThis is called for every constant in the MIR body and …\nThe index of the local variable we are visiting.\nThe source location where this local variable was declared.\nThe type of in-memory cache to use for queries with this …\nThe <code>Key</code> trait controls what types can legally be used as …\nPlaceholder for <code>CrateNum</code>’s “local” counterpart\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nA list of types where the ADT requires async drop if and …\nA list of types where the ADT requires async drop if and …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nA list of types where the ADT requires drop if and only if …\nA list of types where the ADT requires drop if and only if …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nA list of types where the ADT requires drop if and only if …\nA list of types where the ADT requires drop if and only if …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nReturns all diagnostic items defined in all crates.\nReturns all diagnostic items defined in all crates.\nReturn all <code>impl</code> blocks in the current crate.\nReturn all <code>impl</code> blocks in the current crate.\n[query description - consider adding a doc-comment!] alloc …\n[query description - consider adding a doc-comment!] alloc …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nThe root query triggering all analysis passes like typeck …\nThe root query triggering all analysis passes like typeck …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nGiven an instance of this key, what crate is it referring …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nMaps from a trait/impl item to the trait/impl item “…\nMaps from a trait/impl item to the trait/impl item “…\nMaps from an impl/trait or struct/variant <code>DefId</code> to a list …\nMaps from an impl/trait or struct/variant <code>DefId</code> to a list …\nCollects the associated items defined on a trait or impl.\nCollects the associated items defined on a trait or impl.\nGiven the <code>item_def_id</code> of a trait or impl, return a mapping …\nGiven the <code>item_def_id</code> of a trait or impl, return a mapping …\nReturns the types assumed to be well formed while “inside…\nReturns the types assumed to be well formed while “inside…\nWe need to store the assumed_wf_types for an RPITIT so …\nWe need to store the assumed_wf_types for an RPITIT so …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nReturns the attributes on the item at <code>def_id</code>.\nReturns the attributes on the item at <code>def_id</code>.\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nThis query checks the fulfillment of collected lint …\nThis query checks the fulfillment of collected lint …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nChecks the attributes in the module.\nChecks the attributes in the module.\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nChecks for uses of unstable APIs in the module.\nChecks for uses of unstable APIs in the module.\nPerform monomorphization-time checking on this item. This …\nPerform monomorphization-time checking on this item. This …\nUsed in case <code>mir_borrowck</code> fails to prove an obligation. We …\nUsed in case <code>mir_borrowck</code> fails to prove an obligation. We …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nChecks well-formedness of tail calls (<code>become f()</code>).\nChecks well-formedness of tail calls (<code>become f()</code>).\nUnsafety-check this <code>LocalDefId</code>.\nUnsafety-check this <code>LocalDefId</code>.\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nUnsafety-check this <code>LocalDefId</code>.\nUnsafety-check this <code>LocalDefId</code>.\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nLint against <code>extern fn</code> declarations having incompatible …\nLint against <code>extern fn</code> declarations having incompatible …\nReturns names of captured upvars for closures and …\nReturns names of captured upvars for closures and …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nReturns the <code>CodegenFnAttrs</code> for the item at <code>def_id</code>.\nReturns the <code>CodegenFnAttrs</code> for the item at <code>def_id</code>.\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nCaches <code>CoerceUnsized</code> kinds for impls on custom types.\nCaches <code>CoerceUnsized</code> kinds for impls on custom types.\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nThis takes the def-id of an associated item from a impl of …\nThis takes the def-id of an associated item from a impl of …\nCompute the conditions that need to hold for a …\nCompute the conditions that need to hold for a …\nReturns the <em>default</em> of the const pararameter given by <code>DefId</code>…\nReturns the <em>default</em> of the const pararameter given by <code>DefId</code>…\nReturns the constness of the function-like definition …\nReturns the constness of the function-like definition …\nThe body of the coroutine, modified to take its upvars by …\nThe body of the coroutine, modified to take its upvars by …\n[query description - consider adding a doc-comment!] Given …\n[query description - consider adding a doc-comment!] Given …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nReturns <code>Some(coroutine_kind)</code> if the node pointed to by …\nReturns <code>Some(coroutine_kind)</code> if the node pointed to by …\nChecks for the nearest <code>#[coverage(off)]</code> or <code>#[coverage(on)]</code> …\nChecks for the nearest <code>#[coverage(off)]</code> or <code>#[coverage(on)]</code> …\nScans through a function’s MIR after MIR optimizations, …\nScans through a function’s MIR after MIR optimizations, …\nGets the paths where the crate came from in the file …\nGets the paths where the crate came from in the file …\n[query description - consider adding a doc-comment!] the …\n[query description - consider adding a doc-comment!] the …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nGets the hash for the host proc macro. Used to support -Z …\nGets the hash for the host proc macro. Used to support -Z …\nCollects all incoherent impls for the given crate and type.\nCollects all incoherent impls for the given crate and type.\nGets a complete map from all types to their inherent impls.\nGets a complete map from all types to their inherent impls.\nChecks all types in the crate for overlap in their …\nChecks all types in the crate for overlap in their …\nChecks all types in the crate for overlap in their …\nChecks all types in the crate for overlap in their …\nGets the name of the crate.\nGets the name of the crate.\nGets a map with the variances of every item in the local …\nGets a map with the variances of every item in the local …\nAll available crates in the graph, including those that …\nAll available crates in the graph, including those that …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nReturns the debugger visualizers defined for this crate. …\nReturns the debugger visualizers defined for this crate. …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nUsed to detect when ADT def ids are used as keys in a …\nGets the span for the identifier of the definition.\nGets the span for the identifier of the definition.\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nGets the span for the definition.\nGets the span for the definition.\nReturns whether the field corresponding to the <code>DefId</code> has a …\nReturns whether the field corresponding to the <code>DefId</code> has a …\nIn the event that a cycle occurs, if no explicit span has …\nReturns whether the impl or associated function has the …\nReturns whether the impl or associated function has the …\nReturns the lang items defined in another crate by loading …\nReturns the lang items defined in another crate by loading …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nDestructures array, ADT or tuple constants into the …\nDestructures array, ADT or tuple constants into the …\nPerforms an HIR-based well-formed check on the item with …\nPerforms an HIR-based well-formed check on the item with …\nReturns the diagnostic items defined in a crate.\nReturns the diagnostic items defined in a crate.\nChecks for the nearest <code>#[sanitize(xyz = &quot;off&quot;)]</code> or …\nChecks for the nearest <code>#[sanitize(xyz = &quot;off&quot;)]</code> or …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nDo not call this query directly: invoke …\nDo not call this query directly: invoke …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nPerforms part of the privacy check and computes effective …\nPerforms part of the privacy check and computes effective …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nIdentifies the entry-point (e.g., the <code>main</code> function) for a …\nIdentifies the entry-point (e.g., the <code>main</code> function) for a …\nTracked access to environment variables.\nTracked access to environment variables.\nErases regions from <code>ty</code> to yield a new type. Normally you …\nErases regions from <code>ty</code> to yield a new type. Normally you …\nEvaluate a static’s initializer, returning the …\nEvaluate a static’s initializer, returning the …\nEvaluates a constant and returns the computed allocation.\nEvaluates a constant and returns the computed allocation.\nEvaluates const items or anonymous constants into a …\nEvaluates const items or anonymous constants into a …\nEvaluate a constant and convert it to a type level …\nEvaluate a constant and convert it to a type level …\nDo not call this query directly: invoke …\nDo not call this query directly: invoke …\nCompute the const bounds that are implied for a …\nCompute the const bounds that are implied for a …\nThe predicates of the trait that are implied during …\nThe predicates of the trait that are implied during …\nReturns the explicitly user-written <em>bounds</em> on the …\nReturns the explicitly user-written <em>bounds</em> on the …\nReturns the explicitly user-written <em>bounds</em> that share the …\nReturns the explicitly user-written <em>bounds</em> that share the …\nReturns the explicitly user-written <em>predicates</em> of the …\nReturns the explicitly user-written <em>predicates</em> of the …\nReturns the explicitly user-written <em>super-predicates</em> of …\nReturns the explicitly user-written <em>super-predicates</em> of …\nThe Ident is the name of an associated type.The query …\nThe Ident is the name of an associated type.The query …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nThe list of generic symbols exported from the given crate.\nThe list of generic symbols exported from the given crate.\nThe list of non-generic symbols exported from the given …\nThe list of non-generic symbols exported from the given …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nGets the extra data to put in each output filename for a …\nGets the extra data to put in each output filename for a …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nCompute a <code>FnAbi</code> suitable for indirect calls, i.e. to <code>fn</code> …\nCompute a <code>FnAbi</code> suitable for indirect calls, i.e. to <code>fn</code> …\nCompute a <code>FnAbi</code> suitable for declaring/defining an <code>fn</code> …\nCompute a <code>FnAbi</code> suitable for declaring/defining an <code>fn</code> …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nComputes the signature of the function.\nComputes the signature of the function.\nReturns a list of all <code>extern</code> blocks of a crate.\nReturns a list of all <code>extern</code> blocks of a crate.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the <em>generics</em> of the definition given by <code>DefId</code>.\nReturns the <em>generics</em> of the definition given by <code>DefId</code>.\n[query description - consider adding a doc-comment!] check …\n[query description - consider adding a doc-comment!] check …\nReturns the lang items defined in another crate by loading …\nReturns the lang items defined in another crate by loading …\nThe list of backend features computed from CLI flags (…\nThe list of backend features computed from CLI flags (…\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nQuery backing <code>Ty::has_significant_drop_raw</code>.\nQuery backing <code>Ty::has_significant_drop_raw</code>.\nQuery backing <code>Ty::is_structural_eq_shallow</code>.\nQuery backing <code>Ty::is_structural_eq_shallow</code>.\nGives access to the HIR attributes inside the HIR owner <code>key</code>…\nGives access to the HIR attributes inside the HIR owner <code>key</code>…\nRepresents crate as a whole (as distinct from the …\nRepresents crate as a whole (as distinct from the …\nAll items in the crate.\nAll items in the crate.\nThe items in a module.\nThe items in a module.\nGives access to the HIR node’s parent for the HIR owner …\nGives access to the HIR node’s parent for the HIR owner …\nMaps from associated items on a trait to the corresponding …\nMaps from associated items on a trait to the corresponding …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nGiven an <code>impl_def_id</code>, return true if the self type is …\nGiven an <code>impl_def_id</code>, return true if the self type is …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nGiven an <code>impl_id</code>, return the trait it implements along …\nGiven an <code>impl_id</code>, return the trait it implements along …\nGiven a crate and a trait, look up all impls of that trait …\nGiven a crate and a trait, look up all impls of that trait …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nGets a map with the inferred outlives-predicates of every …\nGets a map with the inferred outlives-predicates of every …\nReturns the <em>inferred outlives-predicates</em> of the item given …\nReturns the <em>inferred outlives-predicates</em> of the item given …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nDo not call this query directly: invoke …\nDo not call this query directly: invoke …\nMaps a <code>DefId</code> of a type to a list of its inherent impls. …\nMaps a <code>DefId</code> of a type to a list of its inherent impls. …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether the function is an intrinsic\nWhether the function is an intrinsic\nQuery backing <code>Ty::is_async_drop</code>.\nQuery backing <code>Ty::is_async_drop</code>.\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nTrait selection queries. These are best used by invoking …\nTrait selection queries. These are best used by invoking …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nDetermines whether an item is annotated with <code>#[doc(hidden)]</code>…\nDetermines whether an item is annotated with <code>#[doc(hidden)]</code>…\nDetermines whether an item is annotated with …\nDetermines whether an item is annotated with …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nQuery backing <code>Ty::is_freeze</code>.\nQuery backing <code>Ty::is_freeze</code>.\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nReturns whether or not the crate with CrateNum ‘cnum’ …\nReturns whether or not the crate with CrateNum ‘cnum’ …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nReturns <code>true</code> if calls to the function may be promoted.\nReturns <code>true</code> if calls to the function may be promoted.\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nQuery backing <code>Ty::is_sized</code>.\nQuery backing <code>Ty::is_sized</code>.\nQuery backing <code>Ty::is_unpin</code>.\nQuery backing <code>Ty::is_unpin</code>.\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nTrait selection queries. These are best used by invoking …\nTrait selection queries. These are best used by invoking …\nReturns the (elaborated) <em>bounds</em> on the associated or …\nReturns the (elaborated) <em>bounds</em> on the associated or …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nIf the key is a <code>DefId</code> or <code>DefId</code>–equivalent, return that …\nDefines the set of legal keys that can be used in queries.\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nComputes the layout of a type. Note that this implicitly …\nComputes the layout of a type. Note that this implicitly …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nPerforms lint checking for the module.\nPerforms lint checking for the module.\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nReturns a list of types which (a) have a potentially …\nReturns a list of types which (a) have a potentially …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nReturn the live symbols in the crate for dead code check.\nReturn the live symbols in the crate for dead code check.\nReturns HIR ID for the given <code>LocalDefId</code>.\nReturns HIR ID for the given <code>LocalDefId</code>.\nReturn all <code>impl</code> blocks of the given trait in the current …\nReturn all <code>impl</code> blocks of the given trait in the current …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nBorrow-checks the given typeck root, e.g. functions, …\nBorrow-checks the given typeck root, e.g. functions, …\nBuild the MIR for a given <code>DefId</code> and prepare it for const …\nBuild the MIR for a given <code>DefId</code> and prepare it for const …\nReturn the set of (transitive) callees that may result in …\nReturn the set of (transitive) callees that may result in …\nMaps DefId’s that have an associated <code>mir::Body</code> to the …\nMaps DefId’s that have an associated <code>mir::Body</code> to the …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nObtain all the calls into other local functions\nObtain all the calls into other local functions\nSet of all the <code>DefId</code>s in this crate that have MIR …\nSet of all the <code>DefId</code>s in this crate that have MIR …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nGenerates a MIR body for the shim.\nGenerates a MIR body for the shim.\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nLook up all native libraries this crate depends on. These …\nLook up all native libraries this crate depends on. These …\nGet the corresponding native library from the …\nGet the corresponding native library from the …\nQuery backing <code>Ty::needs_async_drop</code>.\nQuery backing <code>Ty::needs_async_drop</code>.\nQuery backing <code>Ty::needs_drop</code>.\nQuery backing <code>Ty::needs_drop</code>.\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nDo not call this query directly: Invoke <code>normalize</code> instead.\nDo not call this query directly: Invoke <code>normalize</code> instead.\nDo not call this query directly: Invoke <code>normalize</code> instead.\nDo not call this query directly: Invoke <code>normalize</code> instead.\nDo not call this query directly: Invoke <code>normalize</code> instead.\nDo not call this query directly: Invoke <code>normalize</code> instead.\nGets the number of definitions in a foreign crate.\nGets the number of definitions in a foreign crate.\nReturns the <em>default lifetime</em> to be used if a trait object …\nReturns the <em>default lifetime</em> to be used if a trait object …\nFor an opaque type, return the list of (captured lifetime, …\nFor an opaque type, return the list of (captured lifetime, …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nGives access to lints emitted during ast lowering.\nGives access to lints emitted during ast lowering.\nGives access to the HIR nodes and bodies inside <code>key</code> if it…\nGives access to the HIR nodes and bodies inside <code>key</code> if it…\nMIR after our optimization passes have run. This is MIR …\nMIR after our optimization passes have run. This is MIR …\nChecks whether all impls in the crate pass the overlap …\nChecks whether all impls in the crate pass the overlap …\nReturn the filenames where output artefacts shall be …\nReturn the filenames where output artefacts shall be …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nGets the ParameterEnvironment for a given item; this …\nGets the ParameterEnvironment for a given item; this …\nSet of param indexes for type params that are in the type…\nSet of param indexes for type params that are in the type…\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nReturns the (elaborated) <em>predicates</em> of the definition …\nReturns the (elaborated) <em>predicates</em> of the definition …\nFinds the <code>rustc_proc_macro_decls</code> item of a crate.\nFinds the <code>rustc_proc_macro_decls</code> item of a crate.\nThe <code>DefId</code> is the <code>DefId</code> of the containing MIR body. …\nThe <code>DefId</code> is the <code>DefId</code> of the containing MIR body. …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nPer-body <code>region::ScopeTree</code>. The <code>DefId</code> should be the owner …\nPer-body <code>region::ScopeTree</code>. The <code>DefId</code> should be the owner …\nCollects the list of all tools registered using …\nCollects the list of all tools registered using …\nGets the rendered value of the specified constant or …\nGets the rendered value of the specified constant or …\nGets the rendered precise capturing args for an opaque for …\nGets the rendered precise capturing args for an opaque for …\nChecks whether a type is representable or infinitely sized\nChecks whether a type is representable or infinitely sized\nAn implementation detail for the <code>representability</code> query\nAn implementation detail for the <code>representability</code> query\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nDoes lifetime resolution on items. Importantly, we can’t …\nDoes lifetime resolution on items. Importantly, we can’t …\nAttempt to resolve the given <code>DefId</code> to an <code>Instance</code>, for the …\nAttempt to resolve the given <code>DefId</code> to an <code>Instance</code>, for the …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nReturns the Rust target features for the current target. …\nReturns the Rust target features for the current target. …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nBuilds the set of functions that should be skipped for the …\nBuilds the set of functions that should be skipped for the …\nReturn the span for a definition.\nReturn the span for a definition.\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nMapping from feature name to feature name based on the …\nMapping from feature name to feature name based on the …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nGet all item paths that were stripped by a <code>#[cfg]</code> in a …\nGet all item paths that were stripped by a <code>#[cfg]</code> in a …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nThe <code>symbol_name</code> query provides the symbol name for calling …\nThe <code>symbol_name</code> query provides the symbol name for calling …\nComputes the tag (if any) for a given type and variant.\nComputes the tag (if any) for a given type and variant.\nTry to build an abstract representation of the given …\nTry to build an abstract representation of the given …\nFetch the THIR for a given body. The THIR body gets stolen …\nFetch the THIR for a given body. The THIR body gets stolen …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nReturns the explicitly user-written <em>predicates and bounds</em> …\nReturns the explicitly user-written <em>predicates and bounds</em> …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nGiven a trait <code>trait_id</code>, return all known <code>impl</code> blocks.\nGiven a trait <code>trait_id</code>, return all known <code>impl</code> blocks.\nA list of all traits in a crate, used by rustdoc and error …\nA list of all traits in a crate, used by rustdoc and error …\nThis exists purely for testing the interactions between …\nThis exists purely for testing the interactions between …\nCollects the “trimmed”, shortest accessible paths to …\nCollects the “trimmed”, shortest accessible paths to …\nDo not call this query directly: invoke …\nDo not call this query directly: invoke …\nGets the span for the type of the definition. Panics if it …\nGets the span for the type of the definition. Panics if it …\nReturns whether the type alias given by <code>DefId</code> is lazy.\nReturns whether the type alias given by <code>DefId</code> is lazy.\nReturns the <em>type</em> of the definition given by <code>DefId</code>.\nReturns the <em>type</em> of the definition given by <code>DefId</code>.\nReturns the <em>hidden type</em> of the opaque type given by <code>DefId</code> …\nReturns the <em>hidden type</em> of the opaque type given by <code>DefId</code> …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nDo not call this query directly: part of the <code>Eq</code> type-op\nDo not call this query directly: part of the <code>Eq</code> type-op\nDo not call this query directly: part of the <code>Normalize</code> …\nDo not call this query directly: part of the <code>Normalize</code> …\nDo not call this query directly: part of the <code>Normalize</code> …\nDo not call this query directly: part of the <code>Normalize</code> …\nDo not call this query directly: part of the <code>Normalize</code> …\nDo not call this query directly: part of the <code>Normalize</code> …\nDo not call this query directly: part of the <code>Normalize</code> …\nDo not call this query directly: part of the <code>Normalize</code> …\nDo not call this query directly: part of the <code>ProvePredicate</code>…\nDo not call this query directly: part of the <code>ProvePredicate</code>…\nTo avoid cycles within the predicates of a single item we …\nTo avoid cycles within the predicates of a single item we …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nLike <code>param_env</code>, but returns the <code>ParamEnv</code> after all opaque …\nLike <code>param_env</code>, but returns the <code>ParamEnv</code> after all opaque …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nReturns the upstream crate that exports async-drop-glue for\nReturns the upstream crate that exports async-drop-glue for\nReturns the upstream crate that exports drop-glue for the …\nReturns the upstream crate that exports drop-glue for the …\nThe entire set of monomorphizations the local crate can …\nThe entire set of monomorphizations the local crate can …\nReturns the set of upstream monomorphizations available …\nReturns the set of upstream monomorphizations available …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nConverts a type-level constant value into a MIR constant …\nConverts a type-level constant value into a MIR constant …\nReturns the (inferred) variances of the item given by <code>DefId</code>…\nReturns the (inferred) variances of the item given by <code>DefId</code>…\nComputes the visibility of the provided <code>def_id</code>.\nComputes the visibility of the provided <code>def_id</code>.\nThe visible parent map is a map from every item to a …\nThe visible parent map is a map from every item to a …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nType that is stored in the arena.\nHelper trait that allows <code>arena_cache</code> queries to return …\nType that is returned by the query provider.\nTakes a provided value, and allocates it in the arena (if …\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nRestores an erased value.\nThe type of in-memory cache to use for queries with this …\nThe <code>Key</code> trait controls what types can legally be used as …\nPlaceholder for <code>CrateNum</code>’s “local” counterpart\nGiven an instance of this key, what crate is it referring …\nUsed to detect when ADT def ids are used as keys in a …\nIn the event that a cycle occurs, if no explicit span has …\nIf the key is a <code>DefId</code> or <code>DefId</code>–equivalent, return that …\nA decoder that can read from the incremental compilation …\nAn encoder that can write to the incremental compilation …\nProvides an interface to incremental compilation data …\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nExecute all cache promotions and release the serialized …\nEncode something with additional information that allows …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLoads a <code>QuerySideEffect</code> created during the previous …\nReturn whether the cached query result can be decoded.\nCreates a new <code>OnDiskCache</code> instance from the serialized …\nStores a <code>QuerySideEffect</code> emitted during the current …\nReturns the cached query result if there is something in …\nAn analogue of the <code>Into</code> trait that’s intended only for …\nA value uniquely identifying an active query job.\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nA list of types where the ADT requires async drop if and …\nA list of types where the ADT requires async drop if and …\nA list of types where the ADT requires async drop if and …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nA list of types where the ADT requires drop if and only if …\nA list of types where the ADT requires drop if and only if …\nA list of types where the ADT requires drop if and only if …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nA list of types where the ADT requires drop if and only if …\nA list of types where the ADT requires drop if and only if …\nA list of types where the ADT requires drop if and only if …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nReturns all diagnostic items defined in all crates.\nReturns all diagnostic items defined in all crates.\nReturns all diagnostic items defined in all crates.\nReturn all <code>impl</code> blocks in the current crate.\nReturn all <code>impl</code> blocks in the current crate.\nReturn all <code>impl</code> blocks in the current crate.\n[query description - consider adding a doc-comment!] alloc …\n[query description - consider adding a doc-comment!] alloc …\n[query description - consider adding a doc-comment!] alloc …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nThe root query triggering all analysis passes like typeck …\nThe root query triggering all analysis passes like typeck …\nThe root query triggering all analysis passes like typeck …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nMaps from a trait/impl item to the trait/impl item “…\nMaps from a trait/impl item to the trait/impl item “…\nMaps from a trait/impl item to the trait/impl item “…\nMaps from an impl/trait or struct/variant <code>DefId</code> to a list …\nMaps from an impl/trait or struct/variant <code>DefId</code> to a list …\nMaps from an impl/trait or struct/variant <code>DefId</code> to a list …\nCollects the associated items defined on a trait or impl.\nCollects the associated items defined on a trait or impl.\nCollects the associated items defined on a trait or impl.\nGiven the <code>item_def_id</code> of a trait or impl, return a mapping …\nGiven the <code>item_def_id</code> of a trait or impl, return a mapping …\nGiven the <code>item_def_id</code> of a trait or impl, return a mapping …\nReturns the types assumed to be well formed while “inside…\nReturns the types assumed to be well formed while “inside…\nReturns the types assumed to be well formed while “inside…\nWe need to store the assumed_wf_types for an RPITIT so …\nWe need to store the assumed_wf_types for an RPITIT so …\nWe need to store the assumed_wf_types for an RPITIT so …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nReturns the attributes on the item at <code>def_id</code>.\nReturns the attributes on the item at <code>def_id</code>.\nReturns the attributes on the item at <code>def_id</code>.\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nThis query checks the fulfillment of collected lint …\nThis query checks the fulfillment of collected lint …\nThis query checks the fulfillment of collected lint …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nChecks the attributes in the module.\nChecks the attributes in the module.\nChecks the attributes in the module.\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nChecks for uses of unstable APIs in the module.\nChecks for uses of unstable APIs in the module.\nChecks for uses of unstable APIs in the module.\nPerform monomorphization-time checking on this item. This …\nPerform monomorphization-time checking on this item. This …\nPerform monomorphization-time checking on this item. This …\nUsed in case <code>mir_borrowck</code> fails to prove an obligation. We …\nUsed in case <code>mir_borrowck</code> fails to prove an obligation. We …\nUsed in case <code>mir_borrowck</code> fails to prove an obligation. We …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nChecks well-formedness of tail calls (<code>become f()</code>).\nChecks well-formedness of tail calls (<code>become f()</code>).\nChecks well-formedness of tail calls (<code>become f()</code>).\nUnsafety-check this <code>LocalDefId</code>.\nUnsafety-check this <code>LocalDefId</code>.\nUnsafety-check this <code>LocalDefId</code>.\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nUnsafety-check this <code>LocalDefId</code>.\nUnsafety-check this <code>LocalDefId</code>.\nUnsafety-check this <code>LocalDefId</code>.\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nLint against <code>extern fn</code> declarations having incompatible …\nLint against <code>extern fn</code> declarations having incompatible …\nLint against <code>extern fn</code> declarations having incompatible …\nReturns names of captured upvars for closures and …\nReturns names of captured upvars for closures and …\nReturns names of captured upvars for closures and …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nReturns the <code>CodegenFnAttrs</code> for the item at <code>def_id</code>.\nReturns the <code>CodegenFnAttrs</code> for the item at <code>def_id</code>.\nReturns the <code>CodegenFnAttrs</code> for the item at <code>def_id</code>.\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nCaches <code>CoerceUnsized</code> kinds for impls on custom types.\nCaches <code>CoerceUnsized</code> kinds for impls on custom types.\nCaches <code>CoerceUnsized</code> kinds for impls on custom types.\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nThis takes the def-id of an associated item from a impl of …\nThis takes the def-id of an associated item from a impl of …\nThis takes the def-id of an associated item from a impl of …\nCompute the conditions that need to hold for a …\nCompute the conditions that need to hold for a …\nCompute the conditions that need to hold for a …\nReturns the <em>default</em> of the const pararameter given by <code>DefId</code>…\nReturns the <em>default</em> of the const pararameter given by <code>DefId</code>…\nReturns the <em>default</em> of the const pararameter given by <code>DefId</code>…\nReturns the constness of the function-like definition …\nReturns the constness of the function-like definition …\nReturns the constness of the function-like definition …\nThe body of the coroutine, modified to take its upvars by …\nThe body of the coroutine, modified to take its upvars by …\nThe body of the coroutine, modified to take its upvars by …\n[query description - consider adding a doc-comment!] Given …\n[query description - consider adding a doc-comment!] Given …\n[query description - consider adding a doc-comment!] Given …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nReturns <code>Some(coroutine_kind)</code> if the node pointed to by …\nReturns <code>Some(coroutine_kind)</code> if the node pointed to by …\nReturns <code>Some(coroutine_kind)</code> if the node pointed to by …\nChecks for the nearest <code>#[coverage(off)]</code> or <code>#[coverage(on)]</code> …\nChecks for the nearest <code>#[coverage(off)]</code> or <code>#[coverage(on)]</code> …\nChecks for the nearest <code>#[coverage(off)]</code> or <code>#[coverage(on)]</code> …\nScans through a function’s MIR after MIR optimizations, …\nScans through a function’s MIR after MIR optimizations, …\nScans through a function’s MIR after MIR optimizations, …\nGets the paths where the crate came from in the file …\nGets the paths where the crate came from in the file …\nGets the paths where the crate came from in the file …\n[query description - consider adding a doc-comment!] the …\n[query description - consider adding a doc-comment!] the …\n[query description - consider adding a doc-comment!] the …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nGets the hash for the host proc macro. Used to support -Z …\nGets the hash for the host proc macro. Used to support -Z …\nGets the hash for the host proc macro. Used to support -Z …\nCollects all incoherent impls for the given crate and type.\nCollects all incoherent impls for the given crate and type.\nCollects all incoherent impls for the given crate and type.\nGets a complete map from all types to their inherent impls.\nGets a complete map from all types to their inherent impls.\nGets a complete map from all types to their inherent impls.\nChecks all types in the crate for overlap in their …\nChecks all types in the crate for overlap in their …\nChecks all types in the crate for overlap in their …\nChecks all types in the crate for overlap in their …\nChecks all types in the crate for overlap in their …\nChecks all types in the crate for overlap in their …\nGets the name of the crate.\nGets the name of the crate.\nGets the name of the crate.\nGets a map with the variances of every item in the local …\nGets a map with the variances of every item in the local …\nGets a map with the variances of every item in the local …\nAll available crates in the graph, including those that …\nAll available crates in the graph, including those that …\nAll available crates in the graph, including those that …\nCreate a new definition within the incr. comp. engine.\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nReturns the debugger visualizers defined for this crate. …\nReturns the debugger visualizers defined for this crate. …\nReturns the debugger visualizers defined for this crate. …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nGets the span for the identifier of the definition.\nGets the span for the identifier of the definition.\nGets the span for the identifier of the definition.\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nGets the span for the definition.\nGets the span for the definition.\nGets the span for the definition.\nReturns whether the field corresponding to the <code>DefId</code> has a …\nReturns whether the field corresponding to the <code>DefId</code> has a …\nReturns whether the field corresponding to the <code>DefId</code> has a …\nReturns whether the impl or associated function has the …\nReturns whether the impl or associated function has the …\nReturns whether the impl or associated function has the …\nReturns the lang items defined in another crate by loading …\nReturns the lang items defined in another crate by loading …\nReturns the lang items defined in another crate by loading …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nDestructures array, ADT or tuple constants into the …\nDestructures array, ADT or tuple constants into the …\nDestructures array, ADT or tuple constants into the …\nPerforms an HIR-based well-formed check on the item with …\nPerforms an HIR-based well-formed check on the item with …\nPerforms an HIR-based well-formed check on the item with …\nReturns the diagnostic items defined in a crate.\nReturns the diagnostic items defined in a crate.\nReturns the diagnostic items defined in a crate.\nChecks for the nearest <code>#[sanitize(xyz = &quot;off&quot;)]</code> or …\nChecks for the nearest <code>#[sanitize(xyz = &quot;off&quot;)]</code> or …\nChecks for the nearest <code>#[sanitize(xyz = &quot;off&quot;)]</code> or …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nDo not call this query directly: invoke …\nDo not call this query directly: invoke …\nDo not call this query directly: invoke …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nPerforms part of the privacy check and computes effective …\nPerforms part of the privacy check and computes effective …\nPerforms part of the privacy check and computes effective …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nIdentifies the entry-point (e.g., the <code>main</code> function) for a …\nIdentifies the entry-point (e.g., the <code>main</code> function) for a …\nIdentifies the entry-point (e.g., the <code>main</code> function) for a …\nTracked access to environment variables.\nTracked access to environment variables.\nTracked access to environment variables.\nErases regions from <code>ty</code> to yield a new type. Normally you …\nErases regions from <code>ty</code> to yield a new type. Normally you …\nErases regions from <code>ty</code> to yield a new type. Normally you …\nEvaluate a static’s initializer, returning the …\nEvaluate a static’s initializer, returning the …\nEvaluate a static’s initializer, returning the …\nEvaluates a constant and returns the computed allocation.\nEvaluates a constant and returns the computed allocation.\nEvaluates a constant and returns the computed allocation.\nEvaluates const items or anonymous constants into a …\nEvaluates const items or anonymous constants into a …\nEvaluates const items or anonymous constants into a …\nEvaluate a constant and convert it to a type level …\nEvaluate a constant and convert it to a type level …\nEvaluate a constant and convert it to a type level …\nDo not call this query directly: invoke …\nDo not call this query directly: invoke …\nDo not call this query directly: invoke …\nCompute the const bounds that are implied for a …\nCompute the const bounds that are implied for a …\nCompute the const bounds that are implied for a …\nThe predicates of the trait that are implied during …\nThe predicates of the trait that are implied during …\nThe predicates of the trait that are implied during …\nReturns the explicitly user-written <em>bounds</em> on the …\nReturns the explicitly user-written <em>bounds</em> on the …\nReturns the explicitly user-written <em>bounds</em> on the …\nReturns the explicitly user-written <em>bounds</em> that share the …\nReturns the explicitly user-written <em>bounds</em> that share the …\nReturns the explicitly user-written <em>bounds</em> that share the …\nReturns the explicitly user-written <em>predicates</em> of the …\nReturns the explicitly user-written <em>predicates</em> of the …\nReturns the explicitly user-written <em>predicates</em> of the …\nReturns the explicitly user-written <em>super-predicates</em> of …\nReturns the explicitly user-written <em>super-predicates</em> of …\nReturns the explicitly user-written <em>super-predicates</em> of …\nThe Ident is the name of an associated type.The query …\nThe Ident is the name of an associated type.The query …\nThe Ident is the name of an associated type.The query …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nThe list of generic symbols exported from the given crate.\nThe list of generic symbols exported from the given crate.\nThe list of generic symbols exported from the given crate.\nThe list of non-generic symbols exported from the given …\nThe list of non-generic symbols exported from the given …\nThe list of non-generic symbols exported from the given …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nGets the extra data to put in each output filename for a …\nGets the extra data to put in each output filename for a …\nGets the extra data to put in each output filename for a …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nCompute a <code>FnAbi</code> suitable for indirect calls, i.e. to <code>fn</code> …\nCompute a <code>FnAbi</code> suitable for indirect calls, i.e. to <code>fn</code> …\nCompute a <code>FnAbi</code> suitable for indirect calls, i.e. to <code>fn</code> …\nCompute a <code>FnAbi</code> suitable for declaring/defining an <code>fn</code> …\nCompute a <code>FnAbi</code> suitable for declaring/defining an <code>fn</code> …\nCompute a <code>FnAbi</code> suitable for declaring/defining an <code>fn</code> …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nComputes the signature of the function.\nComputes the signature of the function.\nComputes the signature of the function.\nReturns a list of all <code>extern</code> blocks of a crate.\nReturns a list of all <code>extern</code> blocks of a crate.\nReturns a list of all <code>extern</code> blocks of a crate.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the <em>generics</em> of the definition given by <code>DefId</code>.\nReturns the <em>generics</em> of the definition given by <code>DefId</code>.\nReturns the <em>generics</em> of the definition given by <code>DefId</code>.\n[query description - consider adding a doc-comment!] check …\n[query description - consider adding a doc-comment!] check …\n[query description - consider adding a doc-comment!] check …\nReturns the lang items defined in another crate by loading …\nReturns the lang items defined in another crate by loading …\nReturns the lang items defined in another crate by loading …\nThe list of backend features computed from CLI flags (…\nThe list of backend features computed from CLI flags (…\nThe list of backend features computed from CLI flags (…\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nQuery backing <code>Ty::has_significant_drop_raw</code>.\nQuery backing <code>Ty::has_significant_drop_raw</code>.\nQuery backing <code>Ty::has_significant_drop_raw</code>.\nQuery backing <code>Ty::is_structural_eq_shallow</code>.\nQuery backing <code>Ty::is_structural_eq_shallow</code>.\nQuery backing <code>Ty::is_structural_eq_shallow</code>.\nGives access to the HIR attributes inside the HIR owner <code>key</code>…\nGives access to the HIR attributes inside the HIR owner <code>key</code>…\nGives access to the HIR attributes inside the HIR owner <code>key</code>…\nRepresents crate as a whole (as distinct from the …\nRepresents crate as a whole (as distinct from the …\nRepresents crate as a whole (as distinct from the …\nAll items in the crate.\nAll items in the crate.\nAll items in the crate.\nThe items in a module.\nThe items in a module.\nThe items in a module.\nGives access to the HIR node’s parent for the HIR owner …\nGives access to the HIR node’s parent for the HIR owner …\nGives access to the HIR node’s parent for the HIR owner …\nMaps from associated items on a trait to the corresponding …\nMaps from associated items on a trait to the corresponding …\nMaps from associated items on a trait to the corresponding …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nGiven an <code>impl_def_id</code>, return true if the self type is …\nGiven an <code>impl_def_id</code>, return true if the self type is …\nGiven an <code>impl_def_id</code>, return true if the self type is …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nGiven an <code>impl_id</code>, return the trait it implements along …\nGiven an <code>impl_id</code>, return the trait it implements along …\nGiven an <code>impl_id</code>, return the trait it implements along …\nGiven a crate and a trait, look up all impls of that trait …\nGiven a crate and a trait, look up all impls of that trait …\nGiven a crate and a trait, look up all impls of that trait …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nGets a map with the inferred outlives-predicates of every …\nGets a map with the inferred outlives-predicates of every …\nGets a map with the inferred outlives-predicates of every …\nReturns the <em>inferred outlives-predicates</em> of the item given …\nReturns the <em>inferred outlives-predicates</em> of the item given …\nReturns the <em>inferred outlives-predicates</em> of the item given …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nDo not call this query directly: invoke …\nDo not call this query directly: invoke …\nDo not call this query directly: invoke …\nMaps a <code>DefId</code> of a type to a list of its inherent impls. …\nMaps a <code>DefId</code> of a type to a list of its inherent impls. …\nMaps a <code>DefId</code> of a type to a list of its inherent impls. …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether the function is an intrinsic\nWhether the function is an intrinsic\nWhether the function is an intrinsic\nQuery backing <code>Ty::is_async_drop</code>.\nQuery backing <code>Ty::is_async_drop</code>.\nQuery backing <code>Ty::is_async_drop</code>.\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nTrait selection queries. These are best used by invoking …\nTrait selection queries. These are best used by invoking …\nTrait selection queries. These are best used by invoking …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nDetermines whether an item is annotated with <code>#[doc(hidden)]</code>…\nDetermines whether an item is annotated with <code>#[doc(hidden)]</code>…\nDetermines whether an item is annotated with <code>#[doc(hidden)]</code>…\nDetermines whether an item is annotated with …\nDetermines whether an item is annotated with …\nDetermines whether an item is annotated with …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nQuery backing <code>Ty::is_freeze</code>.\nQuery backing <code>Ty::is_freeze</code>.\nQuery backing <code>Ty::is_freeze</code>.\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nReturns whether or not the crate with CrateNum ‘cnum’ …\nReturns whether or not the crate with CrateNum ‘cnum’ …\nReturns whether or not the crate with CrateNum ‘cnum’ …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nReturns <code>true</code> if calls to the function may be promoted.\nReturns <code>true</code> if calls to the function may be promoted.\nReturns <code>true</code> if calls to the function may be promoted.\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nQuery backing <code>Ty::is_sized</code>.\nQuery backing <code>Ty::is_sized</code>.\nQuery backing <code>Ty::is_sized</code>.\nQuery backing <code>Ty::is_unpin</code>.\nQuery backing <code>Ty::is_unpin</code>.\nQuery backing <code>Ty::is_unpin</code>.\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nTrait selection queries. These are best used by invoking …\nTrait selection queries. These are best used by invoking …\nTrait selection queries. These are best used by invoking …\nReturns the (elaborated) <em>bounds</em> on the associated or …\nReturns the (elaborated) <em>bounds</em> on the associated or …\nReturns the (elaborated) <em>bounds</em> on the associated or …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nComputes the layout of a type. Note that this implicitly …\nComputes the layout of a type. Note that this implicitly …\nComputes the layout of a type. Note that this implicitly …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nPerforms lint checking for the module.\nPerforms lint checking for the module.\nPerforms lint checking for the module.\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nReturns a list of types which (a) have a potentially …\nReturns a list of types which (a) have a potentially …\nReturns a list of types which (a) have a potentially …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nReturn the live symbols in the crate for dead code check.\nReturn the live symbols in the crate for dead code check.\nReturn the live symbols in the crate for dead code check.\nReturns HIR ID for the given <code>LocalDefId</code>.\nReturns HIR ID for the given <code>LocalDefId</code>.\nReturns HIR ID for the given <code>LocalDefId</code>.\nIf <code>separate_provide_extern</code>, then the key can be projected …\nReturn all <code>impl</code> blocks of the given trait in the current …\nReturn all <code>impl</code> blocks of the given trait in the current …\nReturn all <code>impl</code> blocks of the given trait in the current …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nBorrow-checks the given typeck root, e.g. functions, …\nBorrow-checks the given typeck root, e.g. functions, …\nBorrow-checks the given typeck root, e.g. functions, …\nBuild the MIR for a given <code>DefId</code> and prepare it for const …\nBuild the MIR for a given <code>DefId</code> and prepare it for const …\nBuild the MIR for a given <code>DefId</code> and prepare it for const …\nReturn the set of (transitive) callees that may result in …\nReturn the set of (transitive) callees that may result in …\nReturn the set of (transitive) callees that may result in …\nMaps DefId’s that have an associated <code>mir::Body</code> to the …\nMaps DefId’s that have an associated <code>mir::Body</code> to the …\nMaps DefId’s that have an associated <code>mir::Body</code> to the …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nObtain all the calls into other local functions\nObtain all the calls into other local functions\nObtain all the calls into other local functions\nSet of all the <code>DefId</code>s in this crate that have MIR …\nSet of all the <code>DefId</code>s in this crate that have MIR …\nSet of all the <code>DefId</code>s in this crate that have MIR …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nGenerates a MIR body for the shim.\nGenerates a MIR body for the shim.\nGenerates a MIR body for the shim.\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nLook up all native libraries this crate depends on. These …\nLook up all native libraries this crate depends on. These …\nLook up all native libraries this crate depends on. These …\nGet the corresponding native library from the …\nGet the corresponding native library from the …\nGet the corresponding native library from the …\nQuery backing <code>Ty::needs_async_drop</code>.\nQuery backing <code>Ty::needs_async_drop</code>.\nQuery backing <code>Ty::needs_async_drop</code>.\nQuery backing <code>Ty::needs_drop</code>.\nQuery backing <code>Ty::needs_drop</code>.\nQuery backing <code>Ty::needs_drop</code>.\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nDo not call this query directly: Invoke <code>normalize</code> instead.\nDo not call this query directly: Invoke <code>normalize</code> instead.\nDo not call this query directly: Invoke <code>normalize</code> instead.\nDo not call this query directly: Invoke <code>normalize</code> instead.\nDo not call this query directly: Invoke <code>normalize</code> instead.\nDo not call this query directly: Invoke <code>normalize</code> instead.\nDo not call this query directly: Invoke <code>normalize</code> instead.\nDo not call this query directly: Invoke <code>normalize</code> instead.\nDo not call this query directly: Invoke <code>normalize</code> instead.\nGets the number of definitions in a foreign crate.\nGets the number of definitions in a foreign crate.\nGets the number of definitions in a foreign crate.\nReturns the <em>default lifetime</em> to be used if a trait object …\nReturns the <em>default lifetime</em> to be used if a trait object …\nReturns the <em>default lifetime</em> to be used if a trait object …\nThis provides access to the incremental compilation …\nFor an opaque type, return the list of (captured lifetime, …\nFor an opaque type, return the list of (captured lifetime, …\nFor an opaque type, return the list of (captured lifetime, …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nGives access to lints emitted during ast lowering.\nGives access to lints emitted during ast lowering.\nGives access to lints emitted during ast lowering.\nGives access to the HIR nodes and bodies inside <code>key</code> if it…\nGives access to the HIR nodes and bodies inside <code>key</code> if it…\nGives access to the HIR nodes and bodies inside <code>key</code> if it…\nMIR after our optimization passes have run. This is MIR …\nMIR after our optimization passes have run. This is MIR …\nMIR after our optimization passes have run. This is MIR …\nChecks whether all impls in the crate pass the overlap …\nChecks whether all impls in the crate pass the overlap …\nChecks whether all impls in the crate pass the overlap …\nReturn the filenames where output artefacts shall be …\nReturn the filenames where output artefacts shall be …\nReturn the filenames where output artefacts shall be …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nGets the ParameterEnvironment for a given item; this …\nGets the ParameterEnvironment for a given item; this …\nGets the ParameterEnvironment for a given item; this …\nSet of param indexes for type params that are in the type…\nSet of param indexes for type params that are in the type…\nSet of param indexes for type params that are in the type…\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nReturns the (elaborated) <em>predicates</em> of the definition …\nReturns the (elaborated) <em>predicates</em> of the definition …\nReturns the (elaborated) <em>predicates</em> of the definition …\nFinds the <code>rustc_proc_macro_decls</code> item of a crate.\nFinds the <code>rustc_proc_macro_decls</code> item of a crate.\nFinds the <code>rustc_proc_macro_decls</code> item of a crate.\nThe <code>DefId</code> is the <code>DefId</code> of the containing MIR body. …\nThe <code>DefId</code> is the <code>DefId</code> of the containing MIR body. …\nThe <code>DefId</code> is the <code>DefId</code> of the containing MIR body. …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nPer-body <code>region::ScopeTree</code>. The <code>DefId</code> should be the owner …\nPer-body <code>region::ScopeTree</code>. The <code>DefId</code> should be the owner …\nPer-body <code>region::ScopeTree</code>. The <code>DefId</code> should be the owner …\nCollects the list of all tools registered using …\nCollects the list of all tools registered using …\nCollects the list of all tools registered using …\nGets the rendered value of the specified constant or …\nGets the rendered value of the specified constant or …\nGets the rendered value of the specified constant or …\nGets the rendered precise capturing args for an opaque for …\nGets the rendered precise capturing args for an opaque for …\nGets the rendered precise capturing args for an opaque for …\nChecks whether a type is representable or infinitely sized\nChecks whether a type is representable or infinitely sized\nChecks whether a type is representable or infinitely sized\nAn implementation detail for the <code>representability</code> query\nAn implementation detail for the <code>representability</code> query\nAn implementation detail for the <code>representability</code> query\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nDoes lifetime resolution on items. Importantly, we can’t …\nDoes lifetime resolution on items. Importantly, we can’t …\nDoes lifetime resolution on items. Importantly, we can’t …\nAttempt to resolve the given <code>DefId</code> to an <code>Instance</code>, for the …\nAttempt to resolve the given <code>DefId</code> to an <code>Instance</code>, for the …\nAttempt to resolve the given <code>DefId</code> to an <code>Instance</code>, for the …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nReturns the Rust target features for the current target. …\nReturns the Rust target features for the current target. …\nReturns the Rust target features for the current target. …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nBuilds the set of functions that should be skipped for the …\nBuilds the set of functions that should be skipped for the …\nBuilds the set of functions that should be skipped for the …\nReturn the span for a definition.\nReturn the span for a definition.\nReturn the span for a definition.\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nMapping from feature name to feature name based on the …\nMapping from feature name to feature name based on the …\nMapping from feature name to feature name based on the …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nGet all item paths that were stripped by a <code>#[cfg]</code> in a …\nGet all item paths that were stripped by a <code>#[cfg]</code> in a …\nGet all item paths that were stripped by a <code>#[cfg]</code> in a …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nThe <code>symbol_name</code> query provides the symbol name for calling …\nThe <code>symbol_name</code> query provides the symbol name for calling …\nThe <code>symbol_name</code> query provides the symbol name for calling …\nComputes the tag (if any) for a given type and variant.\nComputes the tag (if any) for a given type and variant.\nComputes the tag (if any) for a given type and variant.\nTry to build an abstract representation of the given …\nTry to build an abstract representation of the given …\nTry to build an abstract representation of the given …\nFetch the THIR for a given body. The THIR body gets stolen …\nFetch the THIR for a given body. The THIR body gets stolen …\nFetch the THIR for a given body. The THIR body gets stolen …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nReturns the explicitly user-written <em>predicates and bounds</em> …\nReturns the explicitly user-written <em>predicates and bounds</em> …\nReturns the explicitly user-written <em>predicates and bounds</em> …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nGiven a trait <code>trait_id</code>, return all known <code>impl</code> blocks.\nGiven a trait <code>trait_id</code>, return all known <code>impl</code> blocks.\nGiven a trait <code>trait_id</code>, return all known <code>impl</code> blocks.\nA list of all traits in a crate, used by rustdoc and error …\nA list of all traits in a crate, used by rustdoc and error …\nA list of all traits in a crate, used by rustdoc and error …\nThis exists purely for testing the interactions between …\nThis exists purely for testing the interactions between …\nThis exists purely for testing the interactions between …\nCollects the “trimmed”, shortest accessible paths to …\nCollects the “trimmed”, shortest accessible paths to …\nCollects the “trimmed”, shortest accessible paths to …\nDo not call this query directly: invoke …\nDo not call this query directly: invoke …\nDo not call this query directly: invoke …\nGets the span for the type of the definition. Panics if it …\nGets the span for the type of the definition. Panics if it …\nGets the span for the type of the definition. Panics if it …\nReturns whether the type alias given by <code>DefId</code> is lazy.\nReturns whether the type alias given by <code>DefId</code> is lazy.\nReturns whether the type alias given by <code>DefId</code> is lazy.\nReturns the <em>type</em> of the definition given by <code>DefId</code>.\nReturns the <em>type</em> of the definition given by <code>DefId</code>.\nReturns the <em>type</em> of the definition given by <code>DefId</code>.\nReturns the <em>hidden type</em> of the opaque type given by <code>DefId</code> …\nReturns the <em>hidden type</em> of the opaque type given by <code>DefId</code> …\nReturns the <em>hidden type</em> of the opaque type given by <code>DefId</code> …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nDo not call this query directly: part of the <code>Eq</code> type-op\nDo not call this query directly: part of the <code>Eq</code> type-op\nDo not call this query directly: part of the <code>Eq</code> type-op\nDo not call this query directly: part of the <code>Normalize</code> …\nDo not call this query directly: part of the <code>Normalize</code> …\nDo not call this query directly: part of the <code>Normalize</code> …\nDo not call this query directly: part of the <code>Normalize</code> …\nDo not call this query directly: part of the <code>Normalize</code> …\nDo not call this query directly: part of the <code>Normalize</code> …\nDo not call this query directly: part of the <code>Normalize</code> …\nDo not call this query directly: part of the <code>Normalize</code> …\nDo not call this query directly: part of the <code>Normalize</code> …\nDo not call this query directly: part of the <code>Normalize</code> …\nDo not call this query directly: part of the <code>Normalize</code> …\nDo not call this query directly: part of the <code>Normalize</code> …\nDo not call this query directly: part of the <code>ProvePredicate</code>…\nDo not call this query directly: part of the <code>ProvePredicate</code>…\nDo not call this query directly: part of the <code>ProvePredicate</code>…\nTo avoid cycles within the predicates of a single item we …\nTo avoid cycles within the predicates of a single item we …\nTo avoid cycles within the predicates of a single item we …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nLike <code>param_env</code>, but returns the <code>ParamEnv</code> after all opaque …\nLike <code>param_env</code>, but returns the <code>ParamEnv</code> after all opaque …\nLike <code>param_env</code>, but returns the <code>ParamEnv</code> after all opaque …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nReturns the upstream crate that exports async-drop-glue for\nReturns the upstream crate that exports async-drop-glue for\nReturns the upstream crate that exports async-drop-glue for\nReturns the upstream crate that exports drop-glue for the …\nReturns the upstream crate that exports drop-glue for the …\nReturns the upstream crate that exports drop-glue for the …\nThe entire set of monomorphizations the local crate can …\nThe entire set of monomorphizations the local crate can …\nThe entire set of monomorphizations the local crate can …\nReturns the set of upstream monomorphizations available …\nReturns the set of upstream monomorphizations available …\nReturns the set of upstream monomorphizations available …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nConverts a type-level constant value into a MIR constant …\nConverts a type-level constant value into a MIR constant …\nConverts a type-level constant value into a MIR constant …\nReturns the (inferred) variances of the item given by <code>DefId</code>…\nReturns the (inferred) variances of the item given by <code>DefId</code>…\nReturns the (inferred) variances of the item given by <code>DefId</code>…\nComputes the visibility of the provided <code>def_id</code>.\nComputes the visibility of the provided <code>def_id</code>.\nComputes the visibility of the provided <code>def_id</code>.\nThe visible parent map is a map from every item to a …\nThe visible parent map is a map from every item to a …\nThe visible parent map is a map from every item to a …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\n[query description - consider adding a doc-comment!] …\nAn analogue of the <code>Into</code> trait that’s intended only for …\nNo value.\nNo value.\nThis type alias specifies the type returned from query …\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nContains the error value\nContains the error value\nContains the success value\nContains the success value\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nNo value.\nNo value.\nThis type alias specifies the type returned from query …\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nContains the error value\nContains the error value\nContains the success value\nContains the success value\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nContains the error value\nContains the error value\nContains the success value\nContains the success value\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nNo value.\nNo value.\nThis type alias specifies the type returned from query …\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nNo value.\nNo value.\nThis type alias specifies the type returned from query …\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nNo value.\nNo value.\nThis type alias specifies the type returned from query …\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\n<code>feature(generic_const_exprs)</code> anon consts are allowed to …\n<code>feature(generic_const_exprs)</code> anon consts are allowed to …\nstable <code>min_const_generics</code> anon consts are not allowed to …\nstable <code>min_const_generics</code> anon consts are not allowed to …\nanon consts outside of the type system, e.g. enum …\nanon consts outside of the type system, e.g. enum …\nThis type alias specifies the type returned from query …\nanon consts used as the length of a repeat expr are …\nanon consts used as the length of a repeat expr are …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nIf this is an item in an impl of a trait then this is the …\nIf this is an item in an impl of a trait then this is the …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\n<code>-Copt-level=3</code> / <code>-O</code>\n<code>-Copt-level=3</code> / <code>-O</code>\n<code>-Copt-level=1</code>\n<code>-Copt-level=1</code>\n<code>-Copt-level=2</code>\n<code>-Copt-level=2</code>\n<code>-Copt-level=0</code>\n<code>-Copt-level=0</code>\nThis type alias specifies the type returned from query …\n<code>-Copt-level=s</code>\n<code>-Copt-level=s</code>\n<code>-Copt-level=z</code>\n<code>-Copt-level=z</code>\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nContains the error value\nContains the error value\nContains the success value\nContains the success value\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nNo value.\nNo value.\nThis type alias specifies the type returned from query …\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nContains the error value\nContains the error value\nContains the success value\nContains the success value\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nContains the error value\nContains the error value\nContains the success value\nContains the success value\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nContains the error value\nContains the error value\nContains the success value\nContains the success value\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nContains the error value\nContains the error value\nContains the success value\nContains the success value\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nContains the error value\nContains the error value\nContains the success value\nContains the success value\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nContains the error value\nContains the error value\nContains the success value\nContains the success value\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nContains the error value\nContains the error value\nContains the success value\nContains the success value\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nContains the error value\nContains the error value\nContains the success value\nContains the success value\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nContains the error value\nContains the error value\nContains the success value\nContains the success value\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nContains the error value\nContains the error value\nContains the success value\nContains the success value\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nContains the error value\nContains the error value\nContains the success value\nContains the success value\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nNo value.\nNo value.\nThis type alias specifies the type returned from query …\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\n…\n…\n<code>core::future::async_drop::async_drop_in_place::&lt;&#39;_, T&gt;</code>.\n<code>core::future::async_drop::async_drop_in_place::&lt;&#39;_, T&gt;</code>.\nCompiler-generated <code>&lt;T as Clone&gt;::clone</code> implementation.\nCompiler-generated <code>&lt;T as Clone&gt;::clone</code> implementation.\n<code>&lt;[FnMut/Fn closure] as FnOnce&gt;::call_once</code>.\n<code>&lt;[FnMut/Fn closure] as FnOnce&gt;::call_once</code>.\n<code>&lt;[FnMut/Fn coroutine-closure] as FnOnce&gt;::call_once</code>\n<code>&lt;[FnMut/Fn coroutine-closure] as FnOnce&gt;::call_once</code>\n<code>core::ptr::drop_in_place::&lt;T&gt;</code>.\n<code>core::ptr::drop_in_place::&lt;T&gt;</code>.\nCompiler-generated <code>&lt;T as FnPtr&gt;::addr</code> implementation.\nCompiler-generated <code>&lt;T as FnPtr&gt;::addr</code> implementation.\n<code>&lt;fn() as FnTrait&gt;::call_*</code> (generated <code>FnTrait</code> …\n<code>&lt;fn() as FnTrait&gt;::call_*</code> (generated <code>FnTrait</code> …\nProxy shim for async drop of future (def_id, proxy_cor_ty, …\nProxy shim for async drop of future (def_id, proxy_cor_ty, …\nAn intrinsic <code>fn</code> item (with<code>#[rustc_intrinsic]</code>).\nAn intrinsic <code>fn</code> item (with<code>#[rustc_intrinsic]</code>).\nA user-defined callable item.\nA user-defined callable item.\nNo value.\nThis type alias specifies the type returned from query …\n<code>fn()</code> pointer where the function itself cannot be turned …\n<code>fn()</code> pointer where the function itself cannot be turned …\nSome value of type <code>T</code>.\nCompiler-generated accessor for thread locals which …\nCompiler-generated accessor for thread locals which …\n<code>&lt;T as Trait&gt;::method</code> where <code>method</code> receives unsizeable …\n<code>&lt;T as Trait&gt;::method</code> where <code>method</code> receives unsizeable …\nDynamic dispatch to <code>&lt;dyn Trait as Trait&gt;::fn</code>.\nDynamic dispatch to <code>&lt;dyn Trait as Trait&gt;::fn</code>.\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nNo value.\nNo value.\nThis type alias specifies the type returned from query …\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nContains the error value\nContains the error value\nContains the success value\nContains the success value\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nContains the error value\nContains the error value\nContains the success value\nContains the success value\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nThis type alias specifies the type returned from query …\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nNo value.\nNo value.\nThis type alias specifies the type returned from query …\nSome value of type <code>T</code>.\nSome value of type <code>T</code>.\nThis function takes <code>ProvidedValue</code> and coverts it to an …\nAnonymous constant, e.g. the <code>1 + 2</code> in <code>[u8; 1 + 2]</code>.\nAnonymous constant, e.g. the <code>1 + 2</code> in <code>[u8; 1 + 2]</code>.\nAssociated constant: <code>trait MyTrait { const ASSOC: usize; }</code>\nAssociated constant: <code>trait MyTrait { const ASSOC: usize; }</code>\nAssociated function: <code>impl MyStruct { fn associated() {} }</code> …\nAssociated function: <code>impl MyStruct { fn associated() {} }</code> …\nAssociated type: <code>trait MyTrait { type Assoc; }</code>\nAssociated type: <code>trait MyTrait { type Assoc; }</code>\nA closure, coroutine, or coroutine-closure.\nA closure, coroutine, or coroutine-closure.\nConstant generic parameter: …\nConstant generic parameter: …\nRefers to the struct or enum variant’s constructor.\nRefers to the struct or enum variant’s constructor.\nA field in a struct, enum or union. e.g.\nA field in a struct, enum or union. e.g.\nAn <code>extern</code> block.\nAn <code>extern</code> block.\nType from an <code>extern</code> block.\nType from an <code>extern</code> block.\nA use of <code>global_asm!</code>.\nA use of <code>global_asm!</code>.\nAn inline constant, e.g. <code>const { 1 + 2 }</code>\nAn inline constant, e.g. <code>const { 1 + 2 }</code>\nLifetime parameter: the <code>&#39;a</code> in <code>struct Foo&lt;&#39;a&gt; { ... }</code>\nLifetime parameter: the <code>&#39;a</code> in <code>struct Foo&lt;&#39;a&gt; { ... }</code>\nOpaque type, aka <code>impl Trait</code>.\nOpaque type, aka <code>impl Trait</code>.\nThis type alias specifies the type returned from query …\nRefers to the struct itself, [<code>DefKind::Ctor</code>] refers to its …\nRefers to the struct itself, [<code>DefKind::Ctor</code>] refers to its …\nThe definition of a synthetic coroutine body created by …\nThe definition of a synthetic coroutine body created by …\nTrait alias: <code>trait IntIterator = Iterator&lt;Item = i32&gt;;</code>\nTrait alias: <code>trait IntIterator = Iterator&lt;Item = i32&gt;;</code>\nType alias: <code>type Foo = Bar;</code>\nType alias: <code>type Foo = Bar;</code>\nType parameter: the <code>T</code> in <code>struct Vec&lt;T&gt; { ... }</code>\nType parameter: the <code>T</code> in <code>struct Vec&lt;T&gt; { ... }</code>\nRefers to the variant itself, [<code>DefKind::Ctor</code>] refers to …\nRefers to the variant itself, [<code>DefKind::Ctor</code>] refers to …\nThis function takes <code>ProvidedValue</code> and coverts it to an …")
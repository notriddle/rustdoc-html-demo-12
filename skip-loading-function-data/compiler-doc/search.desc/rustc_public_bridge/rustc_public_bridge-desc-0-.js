searchState.loadedDescShard("rustc_public_bridge", 0, "Crate that implements what will become the rustc side of …\nA trait defining types that are used to emulate …\nA container which is used for TLS.\nSimilar to rustc’s <code>FxIndexMap</code>, <code>IndexMap</code> with extra …\nInternal memory allocator implementation for rustc_public.\nDefines a set of traits that is used for abstracting …\nLogic required to produce a monomorphic body.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nImplementation of CompilerCtxt.\nIterate over the definitions of the given crate.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates an <code>Allocation</code> only from information within the …\nBuilds a monomorphic body for a given instance.\nBuild a monomorphic body for a given instance based on the …\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nProvides direct access to rustc’s internal queries.\nDiscriminant for a given variant index of AdtDef.\nReturns if the ADT is a box.\nReturns whether this definition is a C string.\nReturns whether this ADT is simd.\nReturns the kind of a given algebraic data type.\nReturns the representation options for this ADT.\nThe number of variants in this ADT.\nRetrieve all items of the local crate that have a MIR …\nGet all tool attributes of a definition.\nGet all associated items of a definition.\nGet the resulting type of binary operation.\nRetrieve the closure signature for the given generic …\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nDiscriminant for a given variand index and args of a …\nRetrieve all functions defined in this crate.\nRetrieve all static items defined in this crate.\nReturns the <code>kind</code> of given <code>DefId</code>.\nReturns the name of given <code>DefId</code>.\nReturns the type of given crate item.\nReturns the type of given definition instantiated with the …\nTry to evaluate an instance into a constant.\nEvaluate a static’s initializer.\nEvaluate constant as a target usize.\nRetrieve a list of all external crates.\nFind a crate with the given name.\nGet the ABI of a function pointer.\nRetrieve the function signature for the given generic …\nReturns the kind of a given foreign item.\nReturns the argument unchanged.\nReturn filename from given <code>Span</code>, for diagnostic purposes.\nReturn lines corresponding to this <code>Span</code>.\nRetrieve global allocation for the given allocation ID.\nCheck whether the body of a function is available.\nA set of traits that define a stable interface to rustc’…\nImplementation of CompilerCtxt.\nGet an instance ABI.\nGet the instantiation types.\nGet the body of an Instance which is already monomorphized.\nGet the instance.\nReturn whether the instance as a body available.\nGet the instance mangled name.\nRetrieve the instance name for diagnostic messages.\nGet the instance type with generic instantiations applied …\nCalls <code>U::from(self)</code>.\nRetrieve the intrinsic definition if the item corresponds …\nRetrieve the plain function name of an intrinsic.\nCheck if this is an empty DropGlue shim.\nReturns whether this is a foreign item.\nReturn whether the item has a body defined by the user.\nRetrieve the body of a function. This function will panic …\nConvert a non-generic crate item into an instance. This …\nCreate a new box type, <code>Box&lt;T&gt;</code>, for the given inner type <code>T</code>.\nCreate a new constant that represents the given boolean …\nCreate a new constant that represents the given string …\nCreate a new type from the given kind.\nItem requires monomorphization.\nResolve instance for a closure with the requested type.\nResolve an instance for drop_in_place for the given type.\nResolve instance for a function pointer.\nResolve an instance from the given function definition and …\nGet the discriminant Ty for this Ty if there’s one.\n<code>Span</code> of an item.\nReturns printable, human readable form of <code>Span</code>.\nReturn registered tool attributes with the given attribute …\nObtain the kind of a type.\nGet the layout of a type.\nObtain the representation of a type.\nGet the resulting type of unary operation.\nThe name of a variant.\nRetrieve the id for the virtual table.")
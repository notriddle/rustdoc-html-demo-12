searchState.loadedDescShard("clippy_config", 0, "Clippy lint configuration\nLint: ABSOLUTE_PATHS.\nLint: ABSOLUTE_PATHS.\nLint: UNDOCUMENTED_UNSAFE_BLOCKS.\nLint: UNDOCUMENTED_UNSAFE_BLOCKS.\nLint: MODULO_ARITHMETIC.\nLint: DBG_MACRO.\nLint: EXPECT_USED.\nLint: UNINLINED_FORMAT_ARGS.\nLint: UNNECESSARY_RAW_STRING_HASHES.\nLint: PANIC.\nLint: PRINT_STDOUT, PRINT_STDERR.\nLint: MODULE_INCEPTION.\nLint: RENAMED_FUNCTION_PARAMS.\nLint: UNWRAP_USED.\nLint: USELESS_VEC.\nLint: PATH_ENDS_WITH_EXT.\nLint: MULTIPLE_CRATE_VERSIONS.\nLint: MIN_IDENT_CHARS.\nLint: MODULE_NAME_REPETITIONS.\nLint: DISALLOWED_SCRIPT_IDENTS.\nLint: WILDCARD_IMPORTS.\nLint: ARITHMETIC_SIDE_EFFECTS.\nLint: ARITHMETIC_SIDE_EFFECTS.\nLint: ARITHMETIC_SIDE_EFFECTS.\nLint: LARGE_STACK_ARRAYS, LARGE_CONST_ARRAYS.\nLint: ENUM_VARIANT_NAMES, LARGE_TYPES_PASSED_BY_VALUE, …\nLint: AWAIT_HOLDING_INVALID_TYPE.\nDEPRECATED LINT: BLACKLISTED_NAME.\nLint: CARGO_COMMON_METADATA.\nLint: MISSING_SAFETY_DOC, UNNECESSARY_SAFETY_DOC, …\nLint: COGNITIVE_COMPLEXITY.\nDEPRECATED LINT: CYCLOMATIC_COMPLEXITY.\nLint: DISALLOWED_MACROS.\nLint: DISALLOWED_METHODS.\nLint: DISALLOWED_NAMES.\nLint: DISALLOWED_TYPES.\nLint: DOC_MARKDOWN.\nLint: NON_SEND_FIELDS_IN_SEND_TY.\nLint: EXPLICIT_ITER_LOOP.\nLint: MISSING_ENFORCED_IMPORT_RENAMES.\nLint: ENUM_VARIANT_NAMES.\nLint: LARGE_ENUM_VARIANT.\nLint: EXCESSIVE_NESTING.\nLint: LARGE_FUTURES.\nLint: MUTABLE_KEY_TYPE, IFS_SAME_COND, …\nLint: RESULT_LARGE_ERR.\nLint: DECIMAL_LITERAL_REPRESENTATION.\nSearch for the configuration file.\nLint: MANUAL_LET_ELSE.\nLint: FN_PARAMS_EXCESSIVE_BOOLS.\nLint: LARGE_INCLUDE_FILE.\nLint: STRUCT_EXCESSIVE_BOOLS.\nLint: INDEX_REFUTABLE_SLICE.\nLint: TYPE_REPETITION_IN_BOUNDS.\nLint: MIN_IDENT_CHARS.\nLint: MISSING_DOCS_IN_PRIVATE_ITEMS.\nLint: MANUAL_SPLIT_ONCE, MANUAL_STR_REPEAT, …\nLint: LARGE_TYPES_PASSED_BY_VALUE.\nLint: PUB_UNDERSCORE_FIELDS.\nLint: SEMICOLON_INSIDE_BLOCK.\nLint: SEMICOLON_OUTSIDE_BLOCK.\nLint: MANY_SINGLE_CHAR_NAMES.\nLint: LARGE_STACK_FRAMES.\nLint: NONSTANDARD_MACRO_BRACES.\nLint: STRUCT_FIELD_NAMES.\nLint: INDEXING_SLICING.\nLint: BOXED_LOCAL, USELESS_VEC.\nLint: TOO_MANY_ARGUMENTS.\nLint: TOO_MANY_LINES.\nLint: TRIVIALLY_COPY_PASS_BY_REF.\nLint: TYPE_COMPLEXITY.\nLint: UNNECESSARY_BOX_RETURNS.\nLint: UNREADABLE_LITERAL.\nLint: UPPER_CASE_ACRONYMS.\nLint: VEC_BOX.\nLint: VERBOSE_BIT_MASK.\nLint: WILDCARD_IMPORTS.\nLint: MACRO_METAVARS_IN_UNSAFE.\nClippy lint configuration\nConf with parse errors\nLint: ABSOLUTE_PATHS.\nLint: ABSOLUTE_PATHS.\nLint: UNDOCUMENTED_UNSAFE_BLOCKS.\nLint: UNDOCUMENTED_UNSAFE_BLOCKS.\nLint: MODULO_ARITHMETIC.\nLint: DBG_MACRO.\nLint: EXPECT_USED.\nLint: UNINLINED_FORMAT_ARGS.\nLint: UNNECESSARY_RAW_STRING_HASHES.\nLint: PANIC.\nLint: PRINT_STDOUT, PRINT_STDERR.\nLint: MODULE_INCEPTION.\nLint: RENAMED_FUNCTION_PARAMS.\nLint: UNWRAP_USED.\nLint: USELESS_VEC.\nLint: PATH_ENDS_WITH_EXT.\nLint: MULTIPLE_CRATE_VERSIONS.\nLint: MIN_IDENT_CHARS.\nLint: MODULE_NAME_REPETITIONS.\nLint: DISALLOWED_SCRIPT_IDENTS.\nLint: WILDCARD_IMPORTS.\nLint: ARITHMETIC_SIDE_EFFECTS.\nLint: ARITHMETIC_SIDE_EFFECTS.\nLint: ARITHMETIC_SIDE_EFFECTS.\nLint: LARGE_STACK_ARRAYS, LARGE_CONST_ARRAYS.\nLint: ENUM_VARIANT_NAMES, LARGE_TYPES_PASSED_BY_VALUE, …\nLint: AWAIT_HOLDING_INVALID_TYPE.\nDEPRECATED LINT: BLACKLISTED_NAME.\nLint: CARGO_COMMON_METADATA.\nLint: MISSING_SAFETY_DOC, UNNECESSARY_SAFETY_DOC, …\nLint: COGNITIVE_COMPLEXITY.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nDEPRECATED LINT: CYCLOMATIC_COMPLEXITY.\nLint: DISALLOWED_MACROS.\nLint: DISALLOWED_METHODS.\nLint: DISALLOWED_NAMES.\nLint: DISALLOWED_TYPES.\nLint: DOC_MARKDOWN.\nLint: NON_SEND_FIELDS_IN_SEND_TY.\nLint: EXPLICIT_ITER_LOOP.\nLint: MISSING_ENFORCED_IMPORT_RENAMES.\nLint: ENUM_VARIANT_NAMES.\nLint: LARGE_ENUM_VARIANT.\nLint: EXCESSIVE_NESTING.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nLint: LARGE_FUTURES.\nLint: MUTABLE_KEY_TYPE, IFS_SAME_COND, …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLint: RESULT_LARGE_ERR.\nLint: DECIMAL_LITERAL_REPRESENTATION.\nSearch for the configuration file.\nLint: MANUAL_LET_ELSE.\nLint: FN_PARAMS_EXCESSIVE_BOOLS.\nLint: LARGE_INCLUDE_FILE.\nLint: STRUCT_EXCESSIVE_BOOLS.\nLint: INDEX_REFUTABLE_SLICE.\nLint: TYPE_REPETITION_IN_BOUNDS.\nLint: MIN_IDENT_CHARS.\nLint: MISSING_DOCS_IN_PRIVATE_ITEMS.\nLint: MANUAL_SPLIT_ONCE, MANUAL_STR_REPEAT, …\nLint: LARGE_TYPES_PASSED_BY_VALUE.\nLint: PUB_UNDERSCORE_FIELDS.\nLint: SEMICOLON_INSIDE_BLOCK.\nLint: SEMICOLON_OUTSIDE_BLOCK.\nLint: MANY_SINGLE_CHAR_NAMES.\nLint: LARGE_STACK_FRAMES.\nLint: NONSTANDARD_MACRO_BRACES.\nLint: STRUCT_FIELD_NAMES.\nLint: INDEXING_SLICING.\nLint: BOXED_LOCAL, USELESS_VEC.\nLint: TOO_MANY_ARGUMENTS.\nLint: TOO_MANY_LINES.\nLint: TRIVIALLY_COPY_PASS_BY_REF.\nLint: TYPE_COMPLEXITY.\nLint: UNNECESSARY_BOX_RETURNS.\nLint: UNREADABLE_LITERAL.\nLint: UPPER_CASE_ACRONYMS.\nLint: VEC_BOX.\nLint: VERBOSE_BIT_MASK.\nLint: WILDCARD_IMPORTS.\nLint: MACRO_METAVARS_IN_UNSAFE.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis parses the field documentation of the config struct.\nTransforms a given <code>snake_case_string</code> to a tasty …\nTracks the current MSRV from <code>clippy.toml</code>, <code>Cargo.toml</code> or …\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nEquivalent to <code>f(&amp;iter.collect::&lt;Vec&lt;_&gt;&gt;())</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.")